/// <reference path="android-declarations.d.ts"/>

declare module android {
	export module support {
		export module customtabs {
			export class ICustomTabsCallback {
				public static class: java.lang.Class<android.support.customtabs.ICustomTabsCallback>;
				/**
				 * Constructs a new instance of the android.support.customtabs.ICustomTabsCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onNavigationEvent(param0: number, param1: android.os.Bundle): void; extraCallback(param0: string, param1: android.os.Bundle): void; onMessageChannelReady(param0: android.os.Bundle): void; onPostMessage(param0: string, param1: android.os.Bundle): void; onRelationshipValidationResult(param0: number, param1: android.net.Uri, param2: boolean, param3: android.os.Bundle): void });
				public constructor();
				public onRelationshipValidationResult(param0: number, param1: android.net.Uri, param2: boolean, param3: android.os.Bundle): void;
				public onNavigationEvent(param0: number, param1: android.os.Bundle): void;
				public extraCallback(param0: string, param1: android.os.Bundle): void;
				public onMessageChannelReady(param0: android.os.Bundle): void;
				public onPostMessage(param0: string, param1: android.os.Bundle): void;
			}
			export module ICustomTabsCallback {
				export abstract class Stub implements android.support.customtabs.ICustomTabsCallback {
					public static class: java.lang.Class<android.support.customtabs.ICustomTabsCallback.Stub>;
					public onRelationshipValidationResult(param0: number, param1: android.net.Uri, param2: boolean, param3: android.os.Bundle): void;
					public constructor();
					public onPostMessage(param0: string, param1: android.os.Bundle): void;
					public onTransact(param0: number, param1: android.os.Parcel, param2: android.os.Parcel, param3: number): boolean;
					public static asInterface(param0: android.os.IBinder): android.support.customtabs.ICustomTabsCallback;
					public onNavigationEvent(param0: number, param1: android.os.Bundle): void;
					public extraCallback(param0: string, param1: android.os.Bundle): void;
					public asBinder(): android.os.IBinder;
					public onMessageChannelReady(param0: android.os.Bundle): void;
				}
				export module Stub {
					export class Proxy extends android.support.customtabs.ICustomTabsCallback {
						public static class: java.lang.Class<android.support.customtabs.ICustomTabsCallback.Stub.Proxy>;
						public getInterfaceDescriptor(): string;
						public onNavigationEvent(param0: number, param1: android.os.Bundle): void;
						public extraCallback(param0: string, param1: android.os.Bundle): void;
						public asBinder(): android.os.IBinder;
						public onMessageChannelReady(param0: android.os.Bundle): void;
						public onPostMessage(param0: string, param1: android.os.Bundle): void;
						public onRelationshipValidationResult(param0: number, param1: android.net.Uri, param2: boolean, param3: android.os.Bundle): void;
					}
				}
			}
		}
	}
}

declare module android {
	export module support {
		export module customtabs {
			export class ICustomTabsService {
				public static class: java.lang.Class<android.support.customtabs.ICustomTabsService>;
				/**
				 * Constructs a new instance of the android.support.customtabs.ICustomTabsService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					warmup(param0: number): boolean;
					newSession(param0: android.support.customtabs.ICustomTabsCallback): boolean;
					mayLaunchUrl(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri, param2: android.os.Bundle, param3: java.util.List<android.os.Bundle>): boolean;
					extraCommand(param0: string, param1: android.os.Bundle): android.os.Bundle;
					updateVisuals(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): boolean;
					requestPostMessageChannel(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri): boolean;
					postMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): number;
					validateRelationship(param0: android.support.customtabs.ICustomTabsCallback, param1: number, param2: android.net.Uri, param3: android.os.Bundle): boolean;
				});
				public constructor();
				public warmup(param0: number): boolean;
				public validateRelationship(param0: android.support.customtabs.ICustomTabsCallback, param1: number, param2: android.net.Uri, param3: android.os.Bundle): boolean;
				public extraCommand(param0: string, param1: android.os.Bundle): android.os.Bundle;
				public newSession(param0: android.support.customtabs.ICustomTabsCallback): boolean;
				public requestPostMessageChannel(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri): boolean;
				public postMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): number;
				public updateVisuals(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): boolean;
				public mayLaunchUrl(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri, param2: android.os.Bundle, param3: java.util.List<android.os.Bundle>): boolean;
			}
			export module ICustomTabsService {
				export abstract class Stub implements android.support.customtabs.ICustomTabsService {
					public static class: java.lang.Class<android.support.customtabs.ICustomTabsService.Stub>;
					public newSession(param0: android.support.customtabs.ICustomTabsCallback): boolean;
					public mayLaunchUrl(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri, param2: android.os.Bundle, param3: java.util.List<android.os.Bundle>): boolean;
					public validateRelationship(param0: android.support.customtabs.ICustomTabsCallback, param1: number, param2: android.net.Uri, param3: android.os.Bundle): boolean;
					public constructor();
					public static asInterface(param0: android.os.IBinder): android.support.customtabs.ICustomTabsService;
					public requestPostMessageChannel(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri): boolean;
					public postMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): number;
					public updateVisuals(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): boolean;
					public onTransact(param0: number, param1: android.os.Parcel, param2: android.os.Parcel, param3: number): boolean;
					public warmup(param0: number): boolean;
					public extraCommand(param0: string, param1: android.os.Bundle): android.os.Bundle;
					public asBinder(): android.os.IBinder;
				}
				export module Stub {
					export class Proxy extends android.support.customtabs.ICustomTabsService {
						public static class: java.lang.Class<android.support.customtabs.ICustomTabsService.Stub.Proxy>;
						public updateVisuals(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): boolean;
						public getInterfaceDescriptor(): string;
						public newSession(param0: android.support.customtabs.ICustomTabsCallback): boolean;
						public mayLaunchUrl(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri, param2: android.os.Bundle, param3: java.util.List<android.os.Bundle>): boolean;
						public requestPostMessageChannel(param0: android.support.customtabs.ICustomTabsCallback, param1: android.net.Uri): boolean;
						public asBinder(): android.os.IBinder;
						public validateRelationship(param0: android.support.customtabs.ICustomTabsCallback, param1: number, param2: android.net.Uri, param3: android.os.Bundle): boolean;
						public warmup(param0: number): boolean;
						public postMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): number;
						public extraCommand(param0: string, param1: android.os.Bundle): android.os.Bundle;
					}
				}
			}
		}
	}
}

declare module android {
	export module support {
		export module customtabs {
			export class IPostMessageService {
				public static class: java.lang.Class<android.support.customtabs.IPostMessageService>;
				/**
				 * Constructs a new instance of the android.support.customtabs.IPostMessageService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onMessageChannelReady(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): void; onPostMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): void });
				public constructor();
				public onPostMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): void;
				public onMessageChannelReady(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): void;
			}
			export module IPostMessageService {
				export abstract class Stub implements android.support.customtabs.IPostMessageService {
					public static class: java.lang.Class<android.support.customtabs.IPostMessageService.Stub>;
					public onMessageChannelReady(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): void;
					public onPostMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): void;
					public constructor();
					public onTransact(param0: number, param1: android.os.Parcel, param2: android.os.Parcel, param3: number): boolean;
					public asBinder(): android.os.IBinder;
					public static asInterface(param0: android.os.IBinder): android.support.customtabs.IPostMessageService;
				}
				export module Stub {
					export class Proxy extends android.support.customtabs.IPostMessageService {
						public static class: java.lang.Class<android.support.customtabs.IPostMessageService.Stub.Proxy>;
						public getInterfaceDescriptor(): string;
						public onMessageChannelReady(param0: android.support.customtabs.ICustomTabsCallback, param1: android.os.Bundle): void;
						public onPostMessage(param0: android.support.customtabs.ICustomTabsCallback, param1: string, param2: android.os.Bundle): void;
						public asBinder(): android.os.IBinder;
					}
				}
			}
		}
	}
}

declare module android {
	export module support {
		export module v4 {
			export module app {
				export class INotificationSideChannel {
					public static class: java.lang.Class<android.support.v4.app.INotificationSideChannel>;
					/**
					 * Constructs a new instance of the android.support.v4.app.INotificationSideChannel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { notify(param0: string, param1: number, param2: string, param3: android.app.Notification): void; cancel(param0: string, param1: number, param2: string): void; cancelAll(param0: string): void });
					public constructor();
					public notify(param0: string, param1: number, param2: string, param3: android.app.Notification): void;
					public cancelAll(param0: string): void;
					public cancel(param0: string, param1: number, param2: string): void;
				}
				export module INotificationSideChannel {
					export abstract class Stub implements android.support.v4.app.INotificationSideChannel {
						public static class: java.lang.Class<android.support.v4.app.INotificationSideChannel.Stub>;
						public constructor();
						public static asInterface(param0: android.os.IBinder): android.support.v4.app.INotificationSideChannel;
						public asBinder(): android.os.IBinder;
						public onTransact(param0: number, param1: android.os.Parcel, param2: android.os.Parcel, param3: number): boolean;
						public notify(param0: string, param1: number, param2: string, param3: android.app.Notification): void;
						public cancelAll(param0: string): void;
						public cancel(param0: string, param1: number, param2: string): void;
					}
					export module Stub {
						export class Proxy extends android.support.v4.app.INotificationSideChannel {
							public static class: java.lang.Class<android.support.v4.app.INotificationSideChannel.Stub.Proxy>;
							public getInterfaceDescriptor(): string;
							public asBinder(): android.os.IBinder;
							public cancel(param0: string, param1: number, param2: string): void;
							public cancelAll(param0: string): void;
							public notify(param0: string, param1: number, param2: string, param3: android.app.Notification): void;
						}
					}
				}
			}
		}
	}
}

declare module android {
	export module support {
		export module v4 {
			export module graphics {
				export module drawable {
					export class IconCompatParcelizer extends androidx.core.graphics.drawable.IconCompatParcelizer {
						public static class: java.lang.Class<android.support.v4.graphics.drawable.IconCompatParcelizer>;
						public constructor();
						public static read(param0: androidx.versionedparcelable.VersionedParcel): androidx.core.graphics.drawable.IconCompat;
						public static write(param0: androidx.core.graphics.drawable.IconCompat, param1: androidx.versionedparcelable.VersionedParcel): void;
					}
				}
			}
		}
	}
}

declare module android {
	export module support {
		export module v4 {
			export module os {
				export class IResultReceiver {
					public static class: java.lang.Class<android.support.v4.os.IResultReceiver>;
					/**
					 * Constructs a new instance of the android.support.v4.os.IResultReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { send(param0: number, param1: android.os.Bundle): void });
					public constructor();
					public send(param0: number, param1: android.os.Bundle): void;
				}
				export module IResultReceiver {
					export abstract class Stub implements android.support.v4.os.IResultReceiver {
						public static class: java.lang.Class<android.support.v4.os.IResultReceiver.Stub>;
						public constructor();
						public static asInterface(param0: android.os.IBinder): android.support.v4.os.IResultReceiver;
						public asBinder(): android.os.IBinder;
						public onTransact(param0: number, param1: android.os.Parcel, param2: android.os.Parcel, param3: number): boolean;
						public send(param0: number, param1: android.os.Bundle): void;
					}
					export module Stub {
						export class Proxy extends android.support.v4.os.IResultReceiver {
							public static class: java.lang.Class<android.support.v4.os.IResultReceiver.Stub.Proxy>;
							public getInterfaceDescriptor(): string;
							public send(param0: number, param1: android.os.Bundle): void;
							public asBinder(): android.os.IBinder;
						}
					}
				}
			}
		}
	}
}

declare module android {
	export module support {
		export module v4 {
			export module os {
				export class ResultReceiver {
					public static class: java.lang.Class<android.support.v4.os.ResultReceiver>;
					public static CREATOR: android.os.Parcelable.Creator<android.support.v4.os.ResultReceiver>;
					public constructor(param0: android.os.Handler);
					public onReceiveResult(param0: number, param1: android.os.Bundle): void;
					public send(param0: number, param1: android.os.Bundle): void;
					public describeContents(): number;
					public writeToParcel(param0: android.os.Parcel, param1: number): void;
				}
				export module ResultReceiver {
					export class MyResultReceiver extends android.support.v4.os.IResultReceiver.Stub {
						public static class: java.lang.Class<android.support.v4.os.ResultReceiver.MyResultReceiver>;
						public send(param0: number, param1: android.os.Bundle): void;
					}
					export class MyRunnable {
						public static class: java.lang.Class<android.support.v4.os.ResultReceiver.MyRunnable>;
						public run(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module annotation {
		export class AnimRes {
			public static class: java.lang.Class<androidx.annotation.AnimRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.AnimRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class AnimatorRes {
			public static class: java.lang.Class<androidx.annotation.AnimatorRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.AnimatorRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class AnyRes {
			public static class: java.lang.Class<androidx.annotation.AnyRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.AnyRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class AnyThread {
			public static class: java.lang.Class<androidx.annotation.AnyThread>;
			/**
			 * Constructs a new instance of the androidx.annotation.AnyThread interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class ArrayRes {
			public static class: java.lang.Class<androidx.annotation.ArrayRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.ArrayRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class AttrRes {
			public static class: java.lang.Class<androidx.annotation.AttrRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.AttrRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class BinderThread {
			public static class: java.lang.Class<androidx.annotation.BinderThread>;
			/**
			 * Constructs a new instance of the androidx.annotation.BinderThread interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class BoolRes {
			public static class: java.lang.Class<androidx.annotation.BoolRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.BoolRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class CallSuper {
			public static class: java.lang.Class<androidx.annotation.CallSuper>;
			/**
			 * Constructs a new instance of the androidx.annotation.CallSuper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class CheckResult {
			public static class: java.lang.Class<androidx.annotation.CheckResult>;
			/**
			 * Constructs a new instance of the androidx.annotation.CheckResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { suggest(): string });
			public constructor();
			public suggest(): string;
		}
	}
}

declare module androidx {
	export module annotation {
		export class ColorInt {
			public static class: java.lang.Class<androidx.annotation.ColorInt>;
			/**
			 * Constructs a new instance of the androidx.annotation.ColorInt interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class ColorLong {
			public static class: java.lang.Class<androidx.annotation.ColorLong>;
			/**
			 * Constructs a new instance of the androidx.annotation.ColorLong interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class ColorRes {
			public static class: java.lang.Class<androidx.annotation.ColorRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.ColorRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class DimenRes {
			public static class: java.lang.Class<androidx.annotation.DimenRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.DimenRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class Dimension {
			public static class: java.lang.Class<androidx.annotation.Dimension>;
			/**
			 * Constructs a new instance of the androidx.annotation.Dimension interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { unit(): number });
			public constructor();
			public static PX: number;
			public static SP: number;
			public static DP: number;
			public unit(): number;
		}
	}
}

declare module androidx {
	export module annotation {
		export class DrawableRes {
			public static class: java.lang.Class<androidx.annotation.DrawableRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.DrawableRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class FloatRange {
			public static class: java.lang.Class<androidx.annotation.FloatRange>;
			/**
			 * Constructs a new instance of the androidx.annotation.FloatRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { from(): number; to(): number; fromInclusive(): boolean; toInclusive(): boolean });
			public constructor();
			public to(): number;
			public toInclusive(): boolean;
			public fromInclusive(): boolean;
			public from(): number;
		}
	}
}

declare module androidx {
	export module annotation {
		export class FontRes {
			public static class: java.lang.Class<androidx.annotation.FontRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.FontRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class FractionRes {
			public static class: java.lang.Class<androidx.annotation.FractionRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.FractionRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class GuardedBy {
			public static class: java.lang.Class<androidx.annotation.GuardedBy>;
			/**
			 * Constructs a new instance of the androidx.annotation.GuardedBy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): string });
			public constructor();
			public value(): string;
		}
	}
}

declare module androidx {
	export module annotation {
		export class HalfFloat {
			public static class: java.lang.Class<androidx.annotation.HalfFloat>;
			/**
			 * Constructs a new instance of the androidx.annotation.HalfFloat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class IdRes {
			public static class: java.lang.Class<androidx.annotation.IdRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.IdRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class IntDef {
			public static class: java.lang.Class<androidx.annotation.IntDef>;
			/**
			 * Constructs a new instance of the androidx.annotation.IntDef interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): native.Array<number>; flag(): boolean });
			public constructor();
			public value(): native.Array<number>;
			public flag(): boolean;
		}
	}
}

declare module androidx {
	export module annotation {
		export class IntRange {
			public static class: java.lang.Class<androidx.annotation.IntRange>;
			/**
			 * Constructs a new instance of the androidx.annotation.IntRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { from(): number; to(): number });
			public constructor();
			public to(): number;
			public from(): number;
		}
	}
}

declare module androidx {
	export module annotation {
		export class IntegerRes {
			public static class: java.lang.Class<androidx.annotation.IntegerRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.IntegerRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class InterpolatorRes {
			public static class: java.lang.Class<androidx.annotation.InterpolatorRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.InterpolatorRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class Keep {
			public static class: java.lang.Class<androidx.annotation.Keep>;
			/**
			 * Constructs a new instance of the androidx.annotation.Keep interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class LayoutRes {
			public static class: java.lang.Class<androidx.annotation.LayoutRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.LayoutRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class LongDef {
			public static class: java.lang.Class<androidx.annotation.LongDef>;
			/**
			 * Constructs a new instance of the androidx.annotation.LongDef interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): native.Array<number>; flag(): boolean });
			public constructor();
			public value(): native.Array<number>;
			public flag(): boolean;
		}
	}
}

declare module androidx {
	export module annotation {
		export class MainThread {
			public static class: java.lang.Class<androidx.annotation.MainThread>;
			/**
			 * Constructs a new instance of the androidx.annotation.MainThread interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class MenuRes {
			public static class: java.lang.Class<androidx.annotation.MenuRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.MenuRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class NavigationRes {
			public static class: java.lang.Class<androidx.annotation.NavigationRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.NavigationRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class NonNull {
			public static class: java.lang.Class<androidx.annotation.NonNull>;
			/**
			 * Constructs a new instance of the androidx.annotation.NonNull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class Nullable {
			public static class: java.lang.Class<androidx.annotation.Nullable>;
			/**
			 * Constructs a new instance of the androidx.annotation.Nullable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class PluralsRes {
			public static class: java.lang.Class<androidx.annotation.PluralsRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.PluralsRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class Px {
			public static class: java.lang.Class<androidx.annotation.Px>;
			/**
			 * Constructs a new instance of the androidx.annotation.Px interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class RawRes {
			public static class: java.lang.Class<androidx.annotation.RawRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.RawRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class RequiresApi {
			public static class: java.lang.Class<androidx.annotation.RequiresApi>;
			/**
			 * Constructs a new instance of the androidx.annotation.RequiresApi interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): number; api(): number });
			public constructor();
			public api(): number;
			public value(): number;
		}
	}
}

declare module androidx {
	export module annotation {
		export class RequiresFeature {
			public static class: java.lang.Class<androidx.annotation.RequiresFeature>;
			/**
			 * Constructs a new instance of the androidx.annotation.RequiresFeature interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { name(): string; enforcement(): string });
			public constructor();
			public name(): string;
			public enforcement(): string;
		}
	}
}

declare module androidx {
	export module annotation {
		export class RequiresPermission {
			public static class: java.lang.Class<androidx.annotation.RequiresPermission>;
			/**
			 * Constructs a new instance of the androidx.annotation.RequiresPermission interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): string; allOf(): native.Array<string>; anyOf(): native.Array<string>; conditional(): boolean });
			public constructor();
			public anyOf(): native.Array<string>;
			public conditional(): boolean;
			public value(): string;
			public allOf(): native.Array<string>;
		}
		export module RequiresPermission {
			export class Read {
				public static class: java.lang.Class<androidx.annotation.RequiresPermission.Read>;
				/**
				 * Constructs a new instance of the androidx.annotation.RequiresPermission$Read interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { value(): androidx.annotation.RequiresPermission });
				public constructor();
				public value(): androidx.annotation.RequiresPermission;
			}
			export class Write {
				public static class: java.lang.Class<androidx.annotation.RequiresPermission.Write>;
				/**
				 * Constructs a new instance of the androidx.annotation.RequiresPermission$Write interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { value(): androidx.annotation.RequiresPermission });
				public constructor();
				public value(): androidx.annotation.RequiresPermission;
			}
		}
	}
}

declare module androidx {
	export module annotation {
		export class RestrictTo {
			public static class: java.lang.Class<androidx.annotation.RestrictTo>;
			/**
			 * Constructs a new instance of the androidx.annotation.RestrictTo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): native.Array<androidx.annotation.RestrictTo.Scope> });
			public constructor();
			public value(): native.Array<androidx.annotation.RestrictTo.Scope>;
		}
		export module RestrictTo {
			export class Scope {
				public static class: java.lang.Class<androidx.annotation.RestrictTo.Scope>;
				public static LIBRARY: androidx.annotation.RestrictTo.Scope;
				public static LIBRARY_GROUP: androidx.annotation.RestrictTo.Scope;
				public static GROUP_ID: androidx.annotation.RestrictTo.Scope;
				public static TESTS: androidx.annotation.RestrictTo.Scope;
				public static SUBCLASSES: androidx.annotation.RestrictTo.Scope;
				public static values(): native.Array<androidx.annotation.RestrictTo.Scope>;
				public static valueOf(param0: string): androidx.annotation.RestrictTo.Scope;
			}
		}
	}
}

declare module androidx {
	export module annotation {
		export class Size {
			public static class: java.lang.Class<androidx.annotation.Size>;
			/**
			 * Constructs a new instance of the androidx.annotation.Size interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): number; min(): number; max(): number; multiple(): number });
			public constructor();
			public min(): number;
			public value(): number;
			public multiple(): number;
			public max(): number;
		}
	}
}

declare module androidx {
	export module annotation {
		export class StringDef {
			public static class: java.lang.Class<androidx.annotation.StringDef>;
			/**
			 * Constructs a new instance of the androidx.annotation.StringDef interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): native.Array<string> });
			public constructor();
			public value(): native.Array<string>;
		}
	}
}

declare module androidx {
	export module annotation {
		export class StringRes {
			public static class: java.lang.Class<androidx.annotation.StringRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.StringRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class StyleRes {
			public static class: java.lang.Class<androidx.annotation.StyleRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.StyleRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class StyleableRes {
			public static class: java.lang.Class<androidx.annotation.StyleableRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.StyleableRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class TransitionRes {
			public static class: java.lang.Class<androidx.annotation.TransitionRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.TransitionRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class UiThread {
			public static class: java.lang.Class<androidx.annotation.UiThread>;
			/**
			 * Constructs a new instance of the androidx.annotation.UiThread interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class VisibleForTesting {
			public static class: java.lang.Class<androidx.annotation.VisibleForTesting>;
			/**
			 * Constructs a new instance of the androidx.annotation.VisibleForTesting interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { otherwise(): number });
			public constructor();
			public static PROTECTED: number;
			public static NONE: number;
			public static PRIVATE: number;
			public static PACKAGE_PRIVATE: number;
			public otherwise(): number;
		}
	}
}

declare module androidx {
	export module annotation {
		export class WorkerThread {
			public static class: java.lang.Class<androidx.annotation.WorkerThread>;
			/**
			 * Constructs a new instance of the androidx.annotation.WorkerThread interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module annotation {
		export class XmlRes {
			public static class: java.lang.Class<androidx.annotation.XmlRes>;
			/**
			 * Constructs a new instance of the androidx.annotation.XmlRes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export abstract class ActionBar {
				public static class: java.lang.Class<androidx.appcompat.app.ActionBar>;
				public static NAVIGATION_MODE_STANDARD: number;
				public static NAVIGATION_MODE_LIST: number;
				public static NAVIGATION_MODE_TABS: number;
				public static DISPLAY_USE_LOGO: number;
				public static DISPLAY_SHOW_HOME: number;
				public static DISPLAY_HOME_AS_UP: number;
				public static DISPLAY_SHOW_TITLE: number;
				public static DISPLAY_SHOW_CUSTOM: number;
				/** @deprecated */
				public setNavigationMode(param0: number): void;
				public getHeight(): number;
				public setShowHideAnimationEnabled(param0: boolean): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number, param2: boolean): void;
				public onMenuKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public setIcon(param0: number): void;
				public setTitle(param0: string): void;
				public constructor();
				/** @deprecated */
				public removeTabAt(param0: number): void;
				public show(): void;
				public setDisplayShowHomeEnabled(param0: boolean): void;
				/** @deprecated */
				public getNavigationItemCount(): number;
				public isShowing(): boolean;
				public setHideOnContentScrollEnabled(param0: boolean): void;
				public setTitle(param0: number): void;
				public setCustomView(param0: number): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setStackedBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number): void;
				/** @deprecated */
				public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: androidx.appcompat.app.ActionBar.OnNavigationListener): void;
				public setDefaultDisplayHomeAsUpEnabled(param0: boolean): void;
				public setWindowTitle(param0: string): void;
				public setCustomView(param0: globalAndroid.view.View): void;
				public getThemedContext(): globalAndroid.content.Context;
				public setDisplayOptions(param0: number): void;
				public invalidateOptionsMenu(): boolean;
				public setDisplayUseLogoEnabled(param0: boolean): void;
				public dispatchMenuVisibilityChanged(param0: boolean): void;
				public setHideOffset(param0: number): void;
				public setCustomView(param0: globalAndroid.view.View, param1: androidx.appcompat.app.ActionBar.LayoutParams): void;
				public setHomeActionContentDescription(param0: string): void;
				public addOnMenuVisibilityListener(param0: androidx.appcompat.app.ActionBar.OnMenuVisibilityListener): void;
				/** @deprecated */
				public getTabAt(param0: number): androidx.appcompat.app.ActionBar.Tab;
				public setSubtitle(param0: string): void;
				/** @deprecated */
				public getSelectedTab(): androidx.appcompat.app.ActionBar.Tab;
				public openOptionsMenu(): boolean;
				public setLogo(param0: number): void;
				public getElevation(): number;
				public onKeyShortcut(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				/** @deprecated */
				public getSelectedNavigationIndex(): number;
				public getSubtitle(): string;
				/** @deprecated */
				public removeTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setSubtitle(param0: number): void;
				public setHomeButtonEnabled(param0: boolean): void;
				public setHomeAsUpIndicator(param0: number): void;
				public setElevation(param0: number): void;
				public startActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
				public removeOnMenuVisibilityListener(param0: androidx.appcompat.app.ActionBar.OnMenuVisibilityListener): void;
				public isHideOnContentScrollEnabled(): boolean;
				public getHideOffset(): number;
				public getCustomView(): globalAndroid.view.View;
				/** @deprecated */
				public getNavigationMode(): number;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: boolean): void;
				public getDisplayOptions(): number;
				/** @deprecated */
				public getTabCount(): number;
				public closeOptionsMenu(): boolean;
				public setDisplayHomeAsUpEnabled(param0: boolean): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setDisplayShowCustomEnabled(param0: boolean): void;
				public setHomeActionContentDescription(param0: number): void;
				public setDisplayShowTitleEnabled(param0: boolean): void;
				public setSplitBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public collapseActionView(): boolean;
				/** @deprecated */
				public removeAllTabs(): void;
				public isTitleTruncated(): boolean;
				public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public selectTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public getTitle(): string;
				/** @deprecated */
				public setSelectedNavigationItem(param0: number): void;
				public hide(): void;
				/** @deprecated */
				public newTab(): androidx.appcompat.app.ActionBar.Tab;
				public setDisplayOptions(param0: number, param1: number): void;
			}
			export module ActionBar {
				export class DisplayOptions {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.DisplayOptions>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBar$DisplayOptions interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.LayoutParams>;
					public gravity: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.appcompat.app.ActionBar.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: number, param1: number, param2: number);
					public constructor(param0: number);
					public constructor(param0: number, param1: number);
				}
				export class NavigationMode {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.NavigationMode>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBar$NavigationMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class OnMenuVisibilityListener {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.OnMenuVisibilityListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBar$OnMenuVisibilityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onMenuVisibilityChanged(param0: boolean): void });
					public constructor();
					public onMenuVisibilityChanged(param0: boolean): void;
				}
				export class OnNavigationListener {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.OnNavigationListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBar$OnNavigationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onNavigationItemSelected(param0: number, param1: number): boolean });
					public constructor();
					public onNavigationItemSelected(param0: number, param1: number): boolean;
				}
				export abstract class Tab {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.Tab>;
					public static INVALID_POSITION: number;
					public setTabListener(param0: androidx.appcompat.app.ActionBar.TabListener): androidx.appcompat.app.ActionBar.Tab;
					public setText(param0: string): androidx.appcompat.app.ActionBar.Tab;
					public getCustomView(): globalAndroid.view.View;
					public getText(): string;
					public setText(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public getTag(): any;
					public setIcon(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.app.ActionBar.Tab;
					public getIcon(): globalAndroid.graphics.drawable.Drawable;
					public setTag(param0: any): androidx.appcompat.app.ActionBar.Tab;
					public select(): void;
					public getContentDescription(): string;
					public setCustomView(param0: globalAndroid.view.View): androidx.appcompat.app.ActionBar.Tab;
					public setCustomView(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public constructor();
					public setContentDescription(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public setContentDescription(param0: string): androidx.appcompat.app.ActionBar.Tab;
					public getPosition(): number;
				}
				export class TabListener {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBar.TabListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBar$TabListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onTabSelected(param0: androidx.appcompat.app.ActionBar.Tab, param1: androidx.fragment.app.FragmentTransaction): void; onTabUnselected(param0: androidx.appcompat.app.ActionBar.Tab, param1: androidx.fragment.app.FragmentTransaction): void; onTabReselected(param0: androidx.appcompat.app.ActionBar.Tab, param1: androidx.fragment.app.FragmentTransaction): void });
					public constructor();
					public onTabReselected(param0: androidx.appcompat.app.ActionBar.Tab, param1: androidx.fragment.app.FragmentTransaction): void;
					public onTabUnselected(param0: androidx.appcompat.app.ActionBar.Tab, param1: androidx.fragment.app.FragmentTransaction): void;
					public onTabSelected(param0: androidx.appcompat.app.ActionBar.Tab, param1: androidx.fragment.app.FragmentTransaction): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class ActionBarDrawerToggle extends androidx.drawerlayout.widget.DrawerLayout.DrawerListener {
				public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggle>;
				public setDrawerIndicatorEnabled(param0: boolean): void;
				public isDrawerSlideAnimationEnabled(): boolean;
				public setDrawerArrowDrawable(param0: androidx.appcompat.graphics.drawable.DrawerArrowDrawable): void;
				public constructor(param0: globalAndroid.app.Activity, param1: androidx.drawerlayout.widget.DrawerLayout, param2: androidx.appcompat.widget.Toolbar, param3: number, param4: number);
				public isDrawerIndicatorEnabled(): boolean;
				public getToolbarNavigationClickListener(): globalAndroid.view.View.OnClickListener;
				public syncState(): void;
				public onDrawerStateChanged(param0: number): void;
				public onDrawerOpened(param0: globalAndroid.view.View): void;
				public constructor(param0: globalAndroid.app.Activity, param1: androidx.drawerlayout.widget.DrawerLayout, param2: number, param3: number);
				public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public onDrawerSlide(param0: globalAndroid.view.View, param1: number): void;
				public setToolbarNavigationClickListener(param0: globalAndroid.view.View.OnClickListener): void;
				public getDrawerArrowDrawable(): androidx.appcompat.graphics.drawable.DrawerArrowDrawable;
				public onDrawerClosed(param0: globalAndroid.view.View): void;
				public setDrawerSlideAnimationEnabled(param0: boolean): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setHomeAsUpIndicator(param0: number): void;
			}
			export module ActionBarDrawerToggle {
				export class Delegate {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggle.Delegate>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBarDrawerToggle$Delegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void; setActionBarDescription(param0: number): void; getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable; getActionBarThemedContext(): globalAndroid.content.Context; isNavigationVisible(): boolean });
					public constructor();
					public setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
					public getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable;
					public isNavigationVisible(): boolean;
					public setActionBarDescription(param0: number): void;
					public getActionBarThemedContext(): globalAndroid.content.Context;
				}
				export class DelegateProvider {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggle.DelegateProvider>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getDrawerToggleDelegate(): androidx.appcompat.app.ActionBarDrawerToggle.Delegate });
					public constructor();
					public getDrawerToggleDelegate(): androidx.appcompat.app.ActionBarDrawerToggle.Delegate;
				}
				export class FrameworkActionBarDelegate extends androidx.appcompat.app.ActionBarDrawerToggle.Delegate {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate>;
					public setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
					public getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable;
					public isNavigationVisible(): boolean;
					public getActionBarThemedContext(): globalAndroid.content.Context;
					public setActionBarDescription(param0: number): void;
				}
				export class ToolbarCompatDelegate extends androidx.appcompat.app.ActionBarDrawerToggle.Delegate {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggle.ToolbarCompatDelegate>;
					public setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
					public getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable;
					public isNavigationVisible(): boolean;
					public setActionBarDescription(param0: number): void;
					public getActionBarThemedContext(): globalAndroid.content.Context;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class ActionBarDrawerToggleHoneycomb {
				public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggleHoneycomb>;
				public static setActionBarDescription(param0: androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.SetIndicatorInfo, param1: globalAndroid.app.Activity, param2: number): androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.SetIndicatorInfo;
				public static getThemeUpIndicator(param0: globalAndroid.app.Activity): globalAndroid.graphics.drawable.Drawable;
				public static setActionBarUpIndicator(param0: androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.SetIndicatorInfo, param1: globalAndroid.app.Activity, param2: globalAndroid.graphics.drawable.Drawable, param3: number): androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.SetIndicatorInfo;
			}
			export module ActionBarDrawerToggleHoneycomb {
				export class SetIndicatorInfo {
					public static class: java.lang.Class<androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.SetIndicatorInfo>;
					public setHomeAsUpIndicator: java.lang.reflect.Method;
					public setHomeActionContentDescription: java.lang.reflect.Method;
					public upIndicatorView: globalAndroid.widget.ImageView;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AlertController {
				public static class: java.lang.Class<androidx.appcompat.app.AlertController>;
				public setView(param0: number): void;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public getListView(): globalAndroid.widget.ListView;
				public setView(param0: globalAndroid.view.View): void;
				public setIcon(param0: number): void;
				public getButton(param0: number): globalAndroid.widget.Button;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getIconAttributeResId(param0: number): number;
				public setTitle(param0: string): void;
				public setButtonPanelLayoutHint(param0: number): void;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public setButton(param0: number, param1: string, param2: globalAndroid.content.DialogInterface.OnClickListener, param3: globalAndroid.os.Message, param4: globalAndroid.graphics.drawable.Drawable): void;
				public installContent(): void;
				public setView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.app.AppCompatDialog, param2: globalAndroid.view.Window);
				public setCustomTitle(param0: globalAndroid.view.View): void;
				public setMessage(param0: string): void;
			}
			export module AlertController {
				export class AlertParams {
					public static class: java.lang.Class<androidx.appcompat.app.AlertController.AlertParams>;
					public mContext: globalAndroid.content.Context;
					public mInflater: globalAndroid.view.LayoutInflater;
					public mIconId: number;
					public mIcon: globalAndroid.graphics.drawable.Drawable;
					public mIconAttrId: number;
					public mTitle: string;
					public mCustomTitleView: globalAndroid.view.View;
					public mMessage: string;
					public mPositiveButtonText: string;
					public mPositiveButtonIcon: globalAndroid.graphics.drawable.Drawable;
					public mPositiveButtonListener: globalAndroid.content.DialogInterface.OnClickListener;
					public mNegativeButtonText: string;
					public mNegativeButtonIcon: globalAndroid.graphics.drawable.Drawable;
					public mNegativeButtonListener: globalAndroid.content.DialogInterface.OnClickListener;
					public mNeutralButtonText: string;
					public mNeutralButtonIcon: globalAndroid.graphics.drawable.Drawable;
					public mNeutralButtonListener: globalAndroid.content.DialogInterface.OnClickListener;
					public mCancelable: boolean;
					public mOnCancelListener: globalAndroid.content.DialogInterface.OnCancelListener;
					public mOnDismissListener: globalAndroid.content.DialogInterface.OnDismissListener;
					public mOnKeyListener: globalAndroid.content.DialogInterface.OnKeyListener;
					public mItems: native.Array<string>;
					public mAdapter: globalAndroid.widget.ListAdapter;
					public mOnClickListener: globalAndroid.content.DialogInterface.OnClickListener;
					public mViewLayoutResId: number;
					public mView: globalAndroid.view.View;
					public mViewSpacingLeft: number;
					public mViewSpacingTop: number;
					public mViewSpacingRight: number;
					public mViewSpacingBottom: number;
					public mViewSpacingSpecified: boolean;
					public mCheckedItems: native.Array<boolean>;
					public mIsMultiChoice: boolean;
					public mIsSingleChoice: boolean;
					public mCheckedItem: number;
					public mOnCheckboxClickListener: globalAndroid.content.DialogInterface.OnMultiChoiceClickListener;
					public mCursor: globalAndroid.database.Cursor;
					public mLabelColumn: string;
					public mIsCheckedColumn: string;
					public mForceInverseBackground: boolean;
					public mOnItemSelectedListener: globalAndroid.widget.AdapterView.OnItemSelectedListener;
					public mOnPrepareListViewListener: androidx.appcompat.app.AlertController.AlertParams.OnPrepareListViewListener;
					public mRecycleOnMeasure: boolean;
					public constructor(param0: globalAndroid.content.Context);
					public apply(param0: androidx.appcompat.app.AlertController): void;
				}
				export module AlertParams {
					export class OnPrepareListViewListener {
						public static class: java.lang.Class<androidx.appcompat.app.AlertController.AlertParams.OnPrepareListViewListener>;
						/**
						 * Constructs a new instance of the androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onPrepareListView(param0: globalAndroid.widget.ListView): void });
						public constructor();
						public onPrepareListView(param0: globalAndroid.widget.ListView): void;
					}
				}
				export class ButtonHandler {
					public static class: java.lang.Class<androidx.appcompat.app.AlertController.ButtonHandler>;
					public constructor(param0: globalAndroid.content.DialogInterface);
					public handleMessage(param0: globalAndroid.os.Message): void;
				}
				export class CheckedItemAdapter extends globalAndroid.widget.ArrayAdapter<string> {
					public static class: java.lang.Class<androidx.appcompat.app.AlertController.CheckedItemAdapter>;
					public hasStableIds(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: native.Array<string>);
					public getItemId(param0: number): number;
				}
				export class RecycleListView {
					public static class: java.lang.Class<androidx.appcompat.app.AlertController.RecycleListView>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setHasDecor(param0: boolean, param1: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AlertDialog extends androidx.appcompat.app.AppCompatDialog {
				public static class: java.lang.Class<androidx.appcompat.app.AlertDialog>;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onWindowStartingSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
				public getListView(): globalAndroid.widget.ListView;
				public setView(param0: globalAndroid.view.View): void;
				public onSupportActionModeStarted(param0: androidx.appcompat.view.ActionMode): void;
				public getButton(param0: number): globalAndroid.widget.Button;
				public setIcon(param0: number): void;
				public setButton(param0: number, param1: string, param2: globalAndroid.os.Message): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTitle(param0: string): void;
				public setIconAttribute(param0: number): void;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public setTitle(param0: number): void;
				public setButton(param0: number, param1: string, param2: globalAndroid.content.DialogInterface.OnClickListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: number);
				public setView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public setCustomTitle(param0: globalAndroid.view.View): void;
				public setMessage(param0: string): void;
				public setButton(param0: number, param1: string, param2: globalAndroid.graphics.drawable.Drawable, param3: globalAndroid.content.DialogInterface.OnClickListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: boolean, param2: globalAndroid.content.DialogInterface.OnCancelListener);
				public onSupportActionModeFinished(param0: androidx.appcompat.view.ActionMode): void;
			}
			export module AlertDialog {
				export class Builder {
					public static class: java.lang.Class<androidx.appcompat.app.AlertDialog.Builder>;
					public setMultiChoiceItems(param0: number, param1: native.Array<boolean>, param2: globalAndroid.content.DialogInterface.OnMultiChoiceClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setSingleChoiceItems(param0: number, param1: number, param2: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public constructor(param0: globalAndroid.content.Context, param1: number);
					public setNegativeButtonIcon(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.app.AlertDialog.Builder;
					public setItems(param0: number, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setCursor(param0: globalAndroid.database.Cursor, param1: globalAndroid.content.DialogInterface.OnClickListener, param2: string): androidx.appcompat.app.AlertDialog.Builder;
					public setItems(param0: native.Array<string>, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setPositiveButton(param0: number, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setOnCancelListener(param0: globalAndroid.content.DialogInterface.OnCancelListener): androidx.appcompat.app.AlertDialog.Builder;
					public setMultiChoiceItems(param0: globalAndroid.database.Cursor, param1: string, param2: string, param3: globalAndroid.content.DialogInterface.OnMultiChoiceClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setMessage(param0: number): androidx.appcompat.app.AlertDialog.Builder;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.app.AlertDialog.Builder;
					public setNegativeButton(param0: number, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setSingleChoiceItems(param0: globalAndroid.widget.ListAdapter, param1: number, param2: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setTitle(param0: number): androidx.appcompat.app.AlertDialog.Builder;
					public setCustomTitle(param0: globalAndroid.view.View): androidx.appcompat.app.AlertDialog.Builder;
					public setPositiveButtonIcon(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.app.AlertDialog.Builder;
					public setMessage(param0: string): androidx.appcompat.app.AlertDialog.Builder;
					public setPositiveButton(param0: string, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setView(param0: number): androidx.appcompat.app.AlertDialog.Builder;
					public setCancelable(param0: boolean): androidx.appcompat.app.AlertDialog.Builder;
					public setIconAttribute(param0: number): androidx.appcompat.app.AlertDialog.Builder;
					public setAdapter(param0: globalAndroid.widget.ListAdapter, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public getContext(): globalAndroid.content.Context;
					public setSingleChoiceItems(param0: native.Array<string>, param1: number, param2: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setNegativeButton(param0: string, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setNeutralButton(param0: number, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setOnItemSelectedListener(param0: globalAndroid.widget.AdapterView.OnItemSelectedListener): androidx.appcompat.app.AlertDialog.Builder;
					/** @deprecated */
					public setView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): androidx.appcompat.app.AlertDialog.Builder;
					public setNeutralButton(param0: string, param1: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setSingleChoiceItems(param0: globalAndroid.database.Cursor, param1: number, param2: string, param3: globalAndroid.content.DialogInterface.OnClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setMultiChoiceItems(param0: native.Array<string>, param1: native.Array<boolean>, param2: globalAndroid.content.DialogInterface.OnMultiChoiceClickListener): androidx.appcompat.app.AlertDialog.Builder;
					public setOnDismissListener(param0: globalAndroid.content.DialogInterface.OnDismissListener): androidx.appcompat.app.AlertDialog.Builder;
					public setOnKeyListener(param0: globalAndroid.content.DialogInterface.OnKeyListener): androidx.appcompat.app.AlertDialog.Builder;
					public setNeutralButtonIcon(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.app.AlertDialog.Builder;
					public setTitle(param0: string): androidx.appcompat.app.AlertDialog.Builder;
					public show(): androidx.appcompat.app.AlertDialog;
					public create(): androidx.appcompat.app.AlertDialog;
					/** @deprecated */
					public setInverseBackgroundForced(param0: boolean): androidx.appcompat.app.AlertDialog.Builder;
					public constructor(param0: globalAndroid.content.Context);
					public setIcon(param0: number): androidx.appcompat.app.AlertDialog.Builder;
					public setRecycleOnMeasureEnabled(param0: boolean): androidx.appcompat.app.AlertDialog.Builder;
					public setView(param0: globalAndroid.view.View): androidx.appcompat.app.AlertDialog.Builder;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AppCompatActivity extends androidx.fragment.app.FragmentActivity implements androidx.appcompat.app.AppCompatCallback, androidx.core.app.TaskStackBuilder.SupportParentable, androidx.appcompat.app.ActionBarDrawerToggle.DelegateProvider {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatActivity>;
				public onSupportNavigateUp(): boolean;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				/** @deprecated */
				public setSupportProgressBarIndeterminate(param0: boolean): void;
				/** @deprecated */
				public supportInvalidateOptionsMenu(): void;
				public findViewById(param0: number): globalAndroid.view.View;
				public onSupportActionModeStarted(param0: androidx.appcompat.view.ActionMode): void;
				public setContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public constructor();
				public openOptionsMenu(): void;
				/** @deprecated */
				public setSupportProgress(param0: number): void;
				public onPostCreate(param0: globalAndroid.os.Bundle): void;
				public supportNavigateUpTo(param0: globalAndroid.content.Intent): void;
				public supportInvalidateOptionsMenu(): void;
				public onContentChanged(): void;
				public validateRequestPermissionsRequestCode(param0: number): void;
				public onPostResume(): void;
				public onStart(): void;
				public onPanelClosed(param0: number, param1: globalAndroid.view.Menu): void;
				public onTitleChanged(param0: string, param1: number): void;
				public onPrepareSupportNavigateUpTaskStack(param0: androidx.core.app.TaskStackBuilder): void;
				public supportRequestWindowFeature(param0: number): boolean;
				public getSupportActionBar(): androidx.appcompat.app.ActionBar;
				public setSupportActionBar(param0: androidx.appcompat.widget.Toolbar): void;
				public invalidateOptionsMenu(): void;
				public getViewModelStore(): androidx.lifecycle.ViewModelStore;
				public setTheme(param0: number): void;
				/** @deprecated */
				public setSupportProgressBarVisibility(param0: boolean): void;
				public onMenuItemSelected(param0: number, param1: globalAndroid.view.MenuItem): boolean;
				public supportShouldUpRecreateTask(param0: globalAndroid.content.Intent): boolean;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public closeOptionsMenu(): void;
				public onCreateSupportNavigateUpTaskStack(param0: androidx.core.app.TaskStackBuilder): void;
				public getDelegate(): androidx.appcompat.app.AppCompatDelegate;
				public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				public onMenuOpened(param0: number, param1: globalAndroid.view.Menu): boolean;
				public addContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public onStop(): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				/** @deprecated */
				public onSupportContentChanged(): void;
				public onSupportActionModeFinished(param0: androidx.appcompat.view.ActionMode): void;
				public getSupportParentActivityIntent(): globalAndroid.content.Intent;
				public getDrawerToggleDelegate(): androidx.appcompat.app.ActionBarDrawerToggle.Delegate;
				public getResources(): globalAndroid.content.res.Resources;
				public onWindowStartingSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
				public setContentView(param0: number): void;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				/** @deprecated */
				public setSupportProgressBarIndeterminateVisibility(param0: boolean): void;
				public setContentView(param0: globalAndroid.view.View): void;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public onDestroy(): void;
				public startSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AppCompatCallback {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatCallback>;
				/**
				 * Constructs a new instance of the androidx.appcompat.app.AppCompatCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onSupportActionModeStarted(param0: androidx.appcompat.view.ActionMode): void; onSupportActionModeFinished(param0: androidx.appcompat.view.ActionMode): void; onWindowStartingSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode });
				public constructor();
				public onWindowStartingSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
				public onSupportActionModeStarted(param0: androidx.appcompat.view.ActionMode): void;
				public onSupportActionModeFinished(param0: androidx.appcompat.view.ActionMode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export abstract class AppCompatDelegate {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegate>;
				public static MODE_NIGHT_NO: number;
				public static MODE_NIGHT_YES: number;
				public static MODE_NIGHT_AUTO: number;
				public static MODE_NIGHT_FOLLOW_SYSTEM: number;
				public static FEATURE_SUPPORT_ACTION_BAR: number;
				public static FEATURE_SUPPORT_ACTION_BAR_OVERLAY: number;
				public static FEATURE_ACTION_MODE_OVERLAY: number;
				public static create(param0: globalAndroid.content.Context, param1: globalAndroid.view.Window, param2: androidx.appcompat.app.AppCompatCallback): androidx.appcompat.app.AppCompatDelegate;
				public setSupportActionBar(param0: androidx.appcompat.widget.Toolbar): void;
				public invalidateOptionsMenu(): void;
				public requestWindowFeature(param0: number): boolean;
				public setHandleNativeActionModesEnabled(param0: boolean): void;
				public static isCompatVectorFromResourcesEnabled(): boolean;
				public static getDefaultNightMode(): number;
				public findViewById(param0: number): globalAndroid.view.View;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public isHandleNativeActionModesEnabled(): boolean;
				public setContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public setTitle(param0: string): void;
				public static create(param0: globalAndroid.app.Activity, param1: androidx.appcompat.app.AppCompatCallback): androidx.appcompat.app.AppCompatDelegate;
				public static setCompatVectorFromResourcesEnabled(param0: boolean): void;
				public addContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public applyDayNight(): boolean;
				public hasWindowFeature(param0: number): boolean;
				public onStop(): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public setLocalNightMode(param0: number): void;
				public getDrawerToggleDelegate(): androidx.appcompat.app.ActionBarDrawerToggle.Delegate;
				public onPostCreate(param0: globalAndroid.os.Bundle): void;
				public setContentView(param0: number): void;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				public createView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public setContentView(param0: globalAndroid.view.View): void;
				public installViewFactory(): void;
				public static create(param0: globalAndroid.app.Dialog, param1: androidx.appcompat.app.AppCompatCallback): androidx.appcompat.app.AppCompatDelegate;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onStart(): void;
				public onPostResume(): void;
				public getSupportActionBar(): androidx.appcompat.app.ActionBar;
				public onDestroy(): void;
				public static setDefaultNightMode(param0: number): void;
				public startSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
			}
			export module AppCompatDelegate {
				export class NightMode {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegate.NightMode>;
					/**
					 * Constructs a new instance of the androidx.appcompat.app.AppCompatDelegate$NightMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AppCompatDelegateImpl extends androidx.appcompat.app.AppCompatDelegate implements androidx.appcompat.view.menu.MenuBuilder.Callback {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl>;
				public setSupportActionBar(param0: androidx.appcompat.widget.Toolbar): void;
				public invalidateOptionsMenu(): void;
				public requestWindowFeature(param0: number): boolean;
				public onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
				public setHandleNativeActionModesEnabled(param0: boolean): void;
				public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public findViewById(param0: number): globalAndroid.view.View;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public isHandleNativeActionModesEnabled(): boolean;
				public setContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public setTitle(param0: string): void;
				public onCreateView(param0: string, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public addContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public applyDayNight(): boolean;
				public hasWindowFeature(param0: number): boolean;
				public onStop(): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public setLocalNightMode(param0: number): void;
				public getDrawerToggleDelegate(): androidx.appcompat.app.ActionBarDrawerToggle.Delegate;
				public onPostCreate(param0: globalAndroid.os.Bundle): void;
				public getPanelState(param0: number, param1: boolean): androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState;
				public setContentView(param0: number): void;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				public createView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public setContentView(param0: globalAndroid.view.View): void;
				public onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void;
				public installViewFactory(): void;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onStart(): void;
				public onPostResume(): void;
				public getSupportActionBar(): androidx.appcompat.app.ActionBar;
				public onDestroy(): void;
				public startSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
			}
			export module AppCompatDelegateImpl {
				export class ActionBarDrawableToggleImpl extends androidx.appcompat.app.ActionBarDrawerToggle.Delegate {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.ActionBarDrawableToggleImpl>;
					public setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
					public getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable;
					public isNavigationVisible(): boolean;
					public getActionBarThemedContext(): globalAndroid.content.Context;
					public setActionBarDescription(param0: number): void;
				}
				export class ActionMenuPresenterCallback extends androidx.appcompat.view.menu.MenuPresenter.Callback {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.ActionMenuPresenterCallback>;
					public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				}
				export class ActionModeCallbackWrapperV9 extends androidx.appcompat.view.ActionMode.Callback {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.ActionModeCallbackWrapperV9>;
					public onPrepareActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onDestroyActionMode(param0: androidx.appcompat.view.ActionMode): void;
					public constructor(param0: androidx.appcompat.app.AppCompatDelegateImpl, param1: androidx.appcompat.view.ActionMode.Callback);
					public onCreateActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onActionItemClicked(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.MenuItem): boolean;
				}
				export class AppCompatWindowCallback extends androidx.appcompat.view.WindowCallbackWrapper {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.AppCompatWindowCallback>;
					public onPanelClosed(param0: number, param1: globalAndroid.view.Menu): void;
					public onProvideKeyboardShortcuts(param0: java.util.List<any>, param1: globalAndroid.view.Menu, param2: number): void;
					public onCreatePanelMenu(param0: number, param1: globalAndroid.view.Menu): boolean;
					public onPreparePanel(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.Menu): boolean;
					public onMenuOpened(param0: number, param1: globalAndroid.view.Menu): boolean;
					public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback, param1: number): globalAndroid.view.ActionMode;
					public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
					public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
					public dispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
					public onContentChanged(): void;
				}
				export class AutoNightModeManager {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.AutoNightModeManager>;
				}
				export class ListMenuDecorView extends androidx.appcompat.widget.ContentFrameLayout {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.ListMenuDecorView>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
					public setBackgroundResource(param0: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public constructor(param0: androidx.appcompat.app.AppCompatDelegateImpl, param1: globalAndroid.content.Context);
					public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				}
				export class PanelFeatureState {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState>;
					public qwertyMode: boolean;
					public hasPanelItems(): boolean;
					public clearMenuPresenters(): void;
				}
				export module PanelFeatureState {
					export class SavedState {
						public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState.SavedState>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState.SavedState>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					}
				}
				export class PanelMenuPresenterCallback extends androidx.appcompat.view.menu.MenuPresenter.Callback {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatDelegateImpl.PanelMenuPresenterCallback>;
					public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AppCompatDialog implements androidx.appcompat.app.AppCompatCallback {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatDialog>;
				public invalidateOptionsMenu(): void;
				public onWindowStartingSupportActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
				public setContentView(param0: number): void;
				public findViewById(param0: number): globalAndroid.view.View;
				public onSupportActionModeStarted(param0: androidx.appcompat.view.ActionMode): void;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public setContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public setTitle(param0: string): void;
				public setContentView(param0: globalAndroid.view.View): void;
				public getDelegate(): androidx.appcompat.app.AppCompatDelegate;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public constructor(param0: globalAndroid.content.Context);
				public setTitle(param0: number): void;
				public addContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public constructor(param0: globalAndroid.content.Context, param1: number);
				public supportRequestWindowFeature(param0: number): boolean;
				public getSupportActionBar(): androidx.appcompat.app.ActionBar;
				public onStop(): void;
				public constructor(param0: globalAndroid.content.Context, param1: boolean, param2: globalAndroid.content.DialogInterface.OnCancelListener);
				public onSupportActionModeFinished(param0: androidx.appcompat.view.ActionMode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AppCompatDialogFragment extends androidx.fragment.app.DialogFragment {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatDialogFragment>;
				public getViewModelStore(): androidx.lifecycle.ViewModelStore;
				public setupDialog(param0: globalAndroid.app.Dialog, param1: number): void;
				public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class AppCompatViewInflater {
				public static class: java.lang.Class<androidx.appcompat.app.AppCompatViewInflater>;
				public createImageView(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatImageView;
				public createEditText(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatEditText;
				public createCheckedTextView(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatCheckedTextView;
				public createImageButton(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatImageButton;
				public createAutoCompleteTextView(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatAutoCompleteTextView;
				public constructor();
				public createRadioButton(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatRadioButton;
				public createCheckBox(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatCheckBox;
				public createSpinner(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatSpinner;
				public createTextView(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatTextView;
				public createButton(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatButton;
				public createSeekBar(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatSeekBar;
				public createView(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public createRatingBar(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatRatingBar;
				public createMultiAutoCompleteTextView(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView;
			}
			export module AppCompatViewInflater {
				export class DeclaredOnClickListener {
					public static class: java.lang.Class<androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener>;
					public onClick(param0: globalAndroid.view.View): void;
					public constructor(param0: globalAndroid.view.View, param1: string);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class NavItemSelectedListener {
				public static class: java.lang.Class<androidx.appcompat.app.NavItemSelectedListener>;
				public onNothingSelected(param0: globalAndroid.widget.AdapterView<any>): void;
				public onItemSelected(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public constructor(param0: androidx.appcompat.app.ActionBar.OnNavigationListener);
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class ResourcesFlusher {
				public static class: java.lang.Class<androidx.appcompat.app.ResourcesFlusher>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class ToolbarActionBar extends androidx.appcompat.app.ActionBar {
				public static class: java.lang.Class<androidx.appcompat.app.ToolbarActionBar>;
				/** @deprecated */
				public setNavigationMode(param0: number): void;
				public getHeight(): number;
				public setShowHideAnimationEnabled(param0: boolean): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number, param2: boolean): void;
				public onMenuKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public setIcon(param0: number): void;
				public setTitle(param0: string): void;
				/** @deprecated */
				public removeTabAt(param0: number): void;
				public show(): void;
				public getWrappedWindowCallback(): globalAndroid.view.Window.Callback;
				public setDisplayShowHomeEnabled(param0: boolean): void;
				/** @deprecated */
				public getNavigationItemCount(): number;
				public isShowing(): boolean;
				public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: androidx.appcompat.app.ActionBar.OnNavigationListener): void;
				public setTitle(param0: number): void;
				public setCustomView(param0: number): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setStackedBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number): void;
				/** @deprecated */
				public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: androidx.appcompat.app.ActionBar.OnNavigationListener): void;
				public setDefaultDisplayHomeAsUpEnabled(param0: boolean): void;
				public newTab(): androidx.appcompat.app.ActionBar.Tab;
				public setWindowTitle(param0: string): void;
				public setCustomView(param0: globalAndroid.view.View): void;
				public getThemedContext(): globalAndroid.content.Context;
				public setDisplayOptions(param0: number): void;
				public invalidateOptionsMenu(): boolean;
				public setDisplayUseLogoEnabled(param0: boolean): void;
				public dispatchMenuVisibilityChanged(param0: boolean): void;
				public setCustomView(param0: globalAndroid.view.View, param1: androidx.appcompat.app.ActionBar.LayoutParams): void;
				public setHomeActionContentDescription(param0: string): void;
				public addOnMenuVisibilityListener(param0: androidx.appcompat.app.ActionBar.OnMenuVisibilityListener): void;
				/** @deprecated */
				public getTabAt(param0: number): androidx.appcompat.app.ActionBar.Tab;
				public getSelectedTab(): androidx.appcompat.app.ActionBar.Tab;
				public setSubtitle(param0: string): void;
				/** @deprecated */
				public getSelectedTab(): androidx.appcompat.app.ActionBar.Tab;
				public openOptionsMenu(): boolean;
				public setLogo(param0: number): void;
				public getElevation(): number;
				public onKeyShortcut(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				/** @deprecated */
				public getSelectedNavigationIndex(): number;
				public getSubtitle(): string;
				/** @deprecated */
				public removeTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setSubtitle(param0: number): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number): void;
				public removeTabAt(param0: number): void;
				public removeAllTabs(): void;
				public setHomeButtonEnabled(param0: boolean): void;
				public setHomeAsUpIndicator(param0: number): void;
				public setElevation(param0: number): void;
				public removeOnMenuVisibilityListener(param0: androidx.appcompat.app.ActionBar.OnMenuVisibilityListener): void;
				public getNavigationMode(): number;
				public getCustomView(): globalAndroid.view.View;
				/** @deprecated */
				public getNavigationMode(): number;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: boolean): void;
				public removeTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public getDisplayOptions(): number;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				/** @deprecated */
				public getTabCount(): number;
				public getTabAt(param0: number): androidx.appcompat.app.ActionBar.Tab;
				public getSelectedNavigationIndex(): number;
				public closeOptionsMenu(): boolean;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public setDisplayHomeAsUpEnabled(param0: boolean): void;
				public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getTabCount(): number;
				public setHomeActionContentDescription(param0: number): void;
				public setDisplayShowCustomEnabled(param0: boolean): void;
				public setSplitBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public requestFocus(): boolean;
				public setDisplayShowTitleEnabled(param0: boolean): void;
				public collapseActionView(): boolean;
				public getNavigationItemCount(): number;
				/** @deprecated */
				public removeAllTabs(): void;
				public isTitleTruncated(): boolean;
				public setSelectedNavigationItem(param0: number): void;
				public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public selectTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public getTitle(): string;
				/** @deprecated */
				public setSelectedNavigationItem(param0: number): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number, param2: boolean): void;
				public hide(): void;
				public selectTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setNavigationMode(param0: number): void;
				/** @deprecated */
				public newTab(): androidx.appcompat.app.ActionBar.Tab;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: boolean): void;
				public setDisplayOptions(param0: number, param1: number): void;
			}
			export module ToolbarActionBar {
				export class ActionMenuPresenterCallback extends androidx.appcompat.view.menu.MenuPresenter.Callback {
					public static class: java.lang.Class<androidx.appcompat.app.ToolbarActionBar.ActionMenuPresenterCallback>;
					public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				}
				export class MenuBuilderCallback extends androidx.appcompat.view.menu.MenuBuilder.Callback {
					public static class: java.lang.Class<androidx.appcompat.app.ToolbarActionBar.MenuBuilderCallback>;
					public onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
				}
				export class ToolbarCallbackWrapper extends androidx.appcompat.view.WindowCallbackWrapper {
					public static class: java.lang.Class<androidx.appcompat.app.ToolbarActionBar.ToolbarCallbackWrapper>;
					public onPreparePanel(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.Menu): boolean;
					public onCreatePanelView(param0: number): globalAndroid.view.View;
					public constructor(param0: globalAndroid.view.Window.Callback);
					public constructor(param0: androidx.appcompat.app.ToolbarActionBar, param1: globalAndroid.view.Window.Callback);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class TwilightCalculator {
				public static class: java.lang.Class<androidx.appcompat.app.TwilightCalculator>;
				public static DAY: number;
				public static NIGHT: number;
				public sunset: number;
				public sunrise: number;
				public state: number;
				public calculateTwilight(param0: number, param1: number, param2: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class TwilightManager {
				public static class: java.lang.Class<androidx.appcompat.app.TwilightManager>;
			}
			export module TwilightManager {
				export class TwilightState {
					public static class: java.lang.Class<androidx.appcompat.app.TwilightManager.TwilightState>;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module app {
			export class WindowDecorActionBar extends androidx.appcompat.app.ActionBar implements androidx.appcompat.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback {
				public static class: java.lang.Class<androidx.appcompat.app.WindowDecorActionBar>;
				/** @deprecated */
				public setNavigationMode(param0: number): void;
				public getHeight(): number;
				public onContentScrollStopped(): void;
				public showForSystem(): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number, param2: boolean): void;
				public setIcon(param0: number): void;
				public setTitle(param0: string): void;
				/** @deprecated */
				public removeTabAt(param0: number): void;
				public show(): void;
				public setDisplayShowHomeEnabled(param0: boolean): void;
				public enableContentAnimations(param0: boolean): void;
				/** @deprecated */
				public getNavigationItemCount(): number;
				public setHideOnContentScrollEnabled(param0: boolean): void;
				public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: androidx.appcompat.app.ActionBar.OnNavigationListener): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setStackedBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number): void;
				public setDefaultDisplayHomeAsUpEnabled(param0: boolean): void;
				public setDisplayOptions(param0: number): void;
				public setDisplayUseLogoEnabled(param0: boolean): void;
				public dispatchMenuVisibilityChanged(param0: boolean): void;
				public setHideOffset(param0: number): void;
				public animateToMode(param0: boolean): void;
				public addOnMenuVisibilityListener(param0: androidx.appcompat.app.ActionBar.OnMenuVisibilityListener): void;
				/** @deprecated */
				public getTabAt(param0: number): androidx.appcompat.app.ActionBar.Tab;
				public setSubtitle(param0: string): void;
				public getElevation(): number;
				public setLogo(param0: number): void;
				public getSubtitle(): string;
				public removeAllTabs(): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number): void;
				public onContentScrollStarted(): void;
				public setHomeAsUpIndicator(param0: number): void;
				public removeOnMenuVisibilityListener(param0: androidx.appcompat.app.ActionBar.OnMenuVisibilityListener): void;
				public doHide(param0: boolean): void;
				public getHideOffset(): number;
				public getCustomView(): globalAndroid.view.View;
				/** @deprecated */
				public getNavigationMode(): number;
				public getSelectedNavigationIndex(): number;
				public setDisplayHomeAsUpEnabled(param0: boolean): void;
				public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
				public constructor(param0: globalAndroid.view.View);
				public setDisplayShowTitleEnabled(param0: boolean): void;
				public setSplitBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public isTitleTruncated(): boolean;
				public setSelectedNavigationItem(param0: number): void;
				/** @deprecated */
				public selectTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public getTitle(): string;
				public hasIcon(): boolean;
				/** @deprecated */
				public setSelectedNavigationItem(param0: number): void;
				public hide(): void;
				public selectTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public setNavigationMode(param0: number): void;
				/** @deprecated */
				public newTab(): androidx.appcompat.app.ActionBar.Tab;
				public setDisplayOptions(param0: number, param1: number): void;
				public hasLogo(): boolean;
				public setShowHideAnimationEnabled(param0: boolean): void;
				public constructor();
				public isShowing(): boolean;
				public setTitle(param0: number): void;
				public setCustomView(param0: number): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: androidx.appcompat.app.ActionBar.OnNavigationListener): void;
				public newTab(): androidx.appcompat.app.ActionBar.Tab;
				public setWindowTitle(param0: string): void;
				public setCustomView(param0: globalAndroid.view.View): void;
				public getThemedContext(): globalAndroid.content.Context;
				public setCustomView(param0: globalAndroid.view.View, param1: androidx.appcompat.app.ActionBar.LayoutParams): void;
				public setHomeActionContentDescription(param0: string): void;
				public getSelectedTab(): androidx.appcompat.app.ActionBar.Tab;
				public onWindowVisibilityChanged(param0: number): void;
				/** @deprecated */
				public getSelectedTab(): androidx.appcompat.app.ActionBar.Tab;
				public doShow(param0: boolean): void;
				public onKeyShortcut(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				/** @deprecated */
				public removeTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				/** @deprecated */
				public getSelectedNavigationIndex(): number;
				public setSubtitle(param0: number): void;
				public removeTabAt(param0: number): void;
				public setHomeButtonEnabled(param0: boolean): void;
				public constructor(param0: globalAndroid.app.Activity, param1: boolean);
				public setElevation(param0: number): void;
				public startActionMode(param0: androidx.appcompat.view.ActionMode.Callback): androidx.appcompat.view.ActionMode;
				public getNavigationMode(): number;
				public isHideOnContentScrollEnabled(): boolean;
				/** @deprecated */
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: boolean): void;
				public removeTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				public getDisplayOptions(): number;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
				/** @deprecated */
				public getTabCount(): number;
				public getTabAt(param0: number): androidx.appcompat.app.ActionBar.Tab;
				public constructor(param0: globalAndroid.app.Dialog);
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public getTabCount(): number;
				public setDisplayShowCustomEnabled(param0: boolean): void;
				public setHomeActionContentDescription(param0: number): void;
				public requestFocus(): boolean;
				public collapseActionView(): boolean;
				public hideForSystem(): void;
				public getNavigationItemCount(): number;
				/** @deprecated */
				public removeAllTabs(): void;
				public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number, param2: boolean): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: boolean): void;
			}
			export module WindowDecorActionBar {
				export class ActionModeImpl extends androidx.appcompat.view.ActionMode implements androidx.appcompat.view.menu.MenuBuilder.Callback {
					public static class: java.lang.Class<androidx.appcompat.app.WindowDecorActionBar.ActionModeImpl>;
					public getTitle(): string;
					public getMenuInflater(): globalAndroid.view.MenuInflater;
					public getCustomView(): globalAndroid.view.View;
					public getMenu(): globalAndroid.view.Menu;
					public dispatchOnCreate(): boolean;
					public setTitle(param0: string): void;
					public finish(): void;
					public onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public setSubtitle(param0: number): void;
					public setTitle(param0: number): void;
					public onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public constructor();
					public setSubtitle(param0: string): void;
					public isTitleOptional(): boolean;
					public constructor(param0: androidx.appcompat.app.WindowDecorActionBar, param1: globalAndroid.content.Context, param2: androidx.appcompat.view.ActionMode.Callback);
					public getSubtitle(): string;
					public onCloseSubMenu(param0: androidx.appcompat.view.menu.SubMenuBuilder): void;
					public setCustomView(param0: globalAndroid.view.View): void;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public setTitleOptionalHint(param0: boolean): void;
					public invalidate(): void;
				}
				export class TabImpl extends androidx.appcompat.app.ActionBar.Tab {
					public static class: java.lang.Class<androidx.appcompat.app.WindowDecorActionBar.TabImpl>;
					public setTabListener(param0: androidx.appcompat.app.ActionBar.TabListener): androidx.appcompat.app.ActionBar.Tab;
					public getCustomView(): globalAndroid.view.View;
					public setText(param0: string): androidx.appcompat.app.ActionBar.Tab;
					public getTag(): any;
					public getText(): string;
					public setText(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public setIcon(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.app.ActionBar.Tab;
					public setTag(param0: any): androidx.appcompat.app.ActionBar.Tab;
					public getIcon(): globalAndroid.graphics.drawable.Drawable;
					public select(): void;
					public setPosition(param0: number): void;
					public getContentDescription(): string;
					public setCustomView(param0: globalAndroid.view.View): androidx.appcompat.app.ActionBar.Tab;
					public setCustomView(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public getCallback(): androidx.appcompat.app.ActionBar.TabListener;
					public constructor();
					public constructor(param0: androidx.appcompat.app.WindowDecorActionBar);
					public setContentDescription(param0: number): androidx.appcompat.app.ActionBar.Tab;
					public setContentDescription(param0: string): androidx.appcompat.app.ActionBar.Tab;
					public getPosition(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module content {
			export module res {
				export class AppCompatResources {
					public static class: java.lang.Class<androidx.appcompat.content.res.AppCompatResources>;
					public static getColorStateList(param0: globalAndroid.content.Context, param1: number): globalAndroid.content.res.ColorStateList;
					public static getDrawable(param0: globalAndroid.content.Context, param1: number): globalAndroid.graphics.drawable.Drawable;
				}
				export module AppCompatResources {
					export class ColorStateListCacheEntry {
						public static class: java.lang.Class<androidx.appcompat.content.res.AppCompatResources.ColorStateListCacheEntry>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module graphics {
			export module drawable {
				export class AnimatedStateListDrawableCompat extends androidx.appcompat.graphics.drawable.StateListDrawable {
					public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat>;
					public addTransition(param0: number, param1: number, param2: globalAndroid.graphics.drawable.Drawable, param3: boolean): void;
					public static createFromXmlInner(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: org.xmlpull.v1.XmlPullParser, param3: globalAndroid.util.AttributeSet, param4: globalAndroid.content.res.Resources.Theme): androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;
					public jumpToCurrentState(): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public isStateful(): boolean;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public addState(param0: native.Array<number>, param1: globalAndroid.graphics.drawable.Drawable, param2: number): void;
					public inflate(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: org.xmlpull.v1.XmlPullParser, param3: globalAndroid.util.AttributeSet, param4: globalAndroid.content.res.Resources.Theme): void;
					public constructor();
					public setVisible(param0: boolean, param1: boolean): boolean;
					public setConstantState(param0: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState): void;
					public static create(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.content.res.Resources.Theme): androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;
					public addState(param0: native.Array<number>, param1: globalAndroid.graphics.drawable.Drawable): void;
				}
				export module AnimatedStateListDrawableCompat {
					export class AnimatableTransition extends androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.Transition {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimatableTransition>;
						public start(): void;
						public stop(): void;
					}
					export class AnimatedStateListState extends androidx.appcompat.graphics.drawable.StateListDrawable.StateListState {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState>;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
					export class AnimatedVectorDrawableTransition extends androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.Transition {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedVectorDrawableTransition>;
						public start(): void;
						public stop(): void;
					}
					export class AnimationDrawableTransition extends androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.Transition {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition>;
						public start(): void;
						public reverse(): void;
						public canReverse(): boolean;
						public stop(): void;
					}
					export class FrameInterpolator {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator>;
						public getInterpolation(param0: number): number;
					}
					export abstract class Transition {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.Transition>;
						public start(): void;
						public reverse(): void;
						public canReverse(): boolean;
						public stop(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module graphics {
			export module drawable {
				export class DrawableContainer {
					public static class: java.lang.Class<androidx.appcompat.graphics.drawable.DrawableContainer>;
					public getMinimumWidth(): number;
					public setDither(param0: boolean): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public isStateful(): boolean;
					public onLevelChange(param0: number): boolean;
					public getIntrinsicWidth(): number;
					public setHotspotBounds(param0: number, param1: number, param2: number, param3: number): void;
					public setHotspot(param0: number, param1: number): void;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public getChangingConfigurations(): number;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public getHotspotBounds(param0: globalAndroid.graphics.Rect): void;
					public setEnterFadeDuration(param0: number): void;
					public getMinimumHeight(): number;
					public onLayoutDirectionChanged(param0: number): boolean;
					public canApplyTheme(): boolean;
					public setAutoMirrored(param0: boolean): void;
					public getOpacity(): number;
					public getAlpha(): number;
					public jumpToCurrentState(): void;
					public getIntrinsicHeight(): number;
					public getConstantState(): globalAndroid.graphics.drawable.Drawable.ConstantState;
					public getCurrent(): globalAndroid.graphics.drawable.Drawable;
					public setAlpha(param0: number): void;
					public setExitFadeDuration(param0: number): void;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public isAutoMirrored(): boolean;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
					public getOutline(param0: any): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public setConstantState(param0: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState): void;
				}
				export module DrawableContainer {
					export class BlockInvalidateCallback {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.DrawableContainer.BlockInvalidateCallback>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public unwrap(): globalAndroid.graphics.drawable.Drawable.Callback;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public wrap(param0: globalAndroid.graphics.drawable.Drawable.Callback): androidx.appcompat.graphics.drawable.DrawableContainer.BlockInvalidateCallback;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					}
					export abstract class DrawableContainerState {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState>;
						public getConstantMinimumHeight(): number;
						public getChangingConfigurations(): number;
						public getChildCount(): number;
						public getExitFadeDuration(): number;
						public getChild(param0: number): globalAndroid.graphics.drawable.Drawable;
						public computeConstantSize(): void;
						public getConstantHeight(): number;
						public setExitFadeDuration(param0: number): void;
						public getOpacity(): number;
						public addChild(param0: globalAndroid.graphics.drawable.Drawable): number;
						public growArray(param0: number, param1: number): void;
						public getConstantWidth(): number;
						public setVariablePadding(param0: boolean): void;
						public canConstantState(): boolean;
						public isStateful(): boolean;
						public getConstantPadding(): globalAndroid.graphics.Rect;
						public isConstantSize(): boolean;
						public canApplyTheme(): boolean;
						public setEnterFadeDuration(param0: number): void;
						public setConstantSize(param0: boolean): void;
						public getConstantMinimumWidth(): number;
						public getEnterFadeDuration(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module graphics {
			export module drawable {
				export class DrawableWrapper {
					public static class: java.lang.Class<androidx.appcompat.graphics.drawable.DrawableWrapper>;
					public getMinimumWidth(): number;
					public setDither(param0: boolean): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public isStateful(): boolean;
					public onLevelChange(param0: number): boolean;
					public getIntrinsicWidth(): number;
					public setHotspotBounds(param0: number, param1: number, param2: number, param3: number): void;
					public setWrappedDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setHotspot(param0: number, param1: number): void;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public getChangingConfigurations(): number;
					public setFilterBitmap(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public getState(): native.Array<number>;
					public getMinimumHeight(): number;
					public getWrappedDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setAutoMirrored(param0: boolean): void;
					public setTint(param0: number): void;
					public setChangingConfigurations(param0: number): void;
					public getOpacity(): number;
					public jumpToCurrentState(): void;
					public getTransparentRegion(): globalAndroid.graphics.Region;
					public getIntrinsicHeight(): number;
					public getCurrent(): globalAndroid.graphics.drawable.Drawable;
					public setAlpha(param0: number): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setState(param0: native.Array<number>): boolean;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public isAutoMirrored(): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module graphics {
			export module drawable {
				export class DrawerArrowDrawable {
					public static class: java.lang.Class<androidx.appcompat.graphics.drawable.DrawerArrowDrawable>;
					public static ARROW_DIRECTION_LEFT: number;
					public static ARROW_DIRECTION_RIGHT: number;
					public static ARROW_DIRECTION_START: number;
					public static ARROW_DIRECTION_END: number;
					public getArrowShaftLength(): number;
					public getDirection(): number;
					public setBarThickness(param0: number): void;
					public getGapSize(): number;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public getIntrinsicWidth(): number;
					public setVerticalMirror(param0: boolean): void;
					public setSpinEnabled(param0: boolean): void;
					public setGapSize(param0: number): void;
					public setArrowHeadLength(param0: number): void;
					public getBarThickness(): number;
					public setDirection(param0: number): void;
					public getOpacity(): number;
					public setArrowShaftLength(param0: number): void;
					public setColor(param0: number): void;
					public getColor(): number;
					public getBarLength(): number;
					public getIntrinsicHeight(): number;
					public getArrowHeadLength(): number;
					public setAlpha(param0: number): void;
					public setProgress(param0: number): void;
					public getPaint(): globalAndroid.graphics.Paint;
					public constructor(param0: globalAndroid.content.Context);
					public getProgress(): number;
					public isSpinEnabled(): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setBarLength(param0: number): void;
				}
				export module DrawerArrowDrawable {
					export class ArrowDirection {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.DrawerArrowDrawable.ArrowDirection>;
						/**
						 * Constructs a new instance of the androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module graphics {
			export module drawable {
				export class StateListDrawable extends androidx.appcompat.graphics.drawable.DrawableContainer {
					public static class: java.lang.Class<androidx.appcompat.graphics.drawable.StateListDrawable>;
					public inflate(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: org.xmlpull.v1.XmlPullParser, param3: globalAndroid.util.AttributeSet, param4: globalAndroid.content.res.Resources.Theme): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
					public isStateful(): boolean;
					public setConstantState(param0: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState): void;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public addState(param0: native.Array<number>, param1: globalAndroid.graphics.drawable.Drawable): void;
				}
				export module StateListDrawable {
					export class StateListState extends androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState {
						public static class: java.lang.Class<androidx.appcompat.graphics.drawable.StateListDrawable.StateListState>;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
						public growArray(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module text {
			export class AllCapsTransformationMethod {
				public static class: java.lang.Class<androidx.appcompat.text.AllCapsTransformationMethod>;
				public getTransformation(param0: string, param1: globalAndroid.view.View): string;
				public constructor(param0: globalAndroid.content.Context);
				public onFocusChanged(param0: globalAndroid.view.View, param1: string, param2: boolean, param3: number, param4: globalAndroid.graphics.Rect): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class ActionBarPolicy {
				public static class: java.lang.Class<androidx.appcompat.view.ActionBarPolicy>;
				public showsOverflowMenuButton(): boolean;
				public enableHomeButtonByDefault(): boolean;
				public getStackedTabMaxWidth(): number;
				public hasEmbeddedTabs(): boolean;
				public getMaxActionButtons(): number;
				public static get(param0: globalAndroid.content.Context): androidx.appcompat.view.ActionBarPolicy;
				public getEmbeddedMenuWidthLimit(): number;
				public getTabContainerHeight(): number;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export abstract class ActionMode {
				public static class: java.lang.Class<androidx.appcompat.view.ActionMode>;
				public isUiFocusable(): boolean;
				public finish(): void;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public getCustomView(): globalAndroid.view.View;
				public setTitle(param0: string): void;
				public getMenu(): globalAndroid.view.Menu;
				public getTitle(): string;
				public constructor();
				public isTitleOptional(): boolean;
				public setSubtitle(param0: string): void;
				public setTitle(param0: number): void;
				public invalidate(): void;
				public setTitleOptionalHint(param0: boolean): void;
				public getTag(): any;
				public getSubtitle(): string;
				public setSubtitle(param0: number): void;
				public getTitleOptionalHint(): boolean;
				public setTag(param0: any): void;
				public setCustomView(param0: globalAndroid.view.View): void;
			}
			export module ActionMode {
				export class Callback {
					public static class: java.lang.Class<androidx.appcompat.view.ActionMode.Callback>;
					/**
					 * Constructs a new instance of the androidx.appcompat.view.ActionMode$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onCreateActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean; onPrepareActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean; onActionItemClicked(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.MenuItem): boolean; onDestroyActionMode(param0: androidx.appcompat.view.ActionMode): void });
					public constructor();
					public onPrepareActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onDestroyActionMode(param0: androidx.appcompat.view.ActionMode): void;
					public onCreateActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onActionItemClicked(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.MenuItem): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class CollapsibleActionView {
				public static class: java.lang.Class<androidx.appcompat.view.CollapsibleActionView>;
				/**
				 * Constructs a new instance of the androidx.appcompat.view.CollapsibleActionView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onActionViewExpanded(): void; onActionViewCollapsed(): void });
				public constructor();
				public onActionViewExpanded(): void;
				public onActionViewCollapsed(): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class ContextThemeWrapper {
				public static class: java.lang.Class<androidx.appcompat.view.ContextThemeWrapper>;
				public applyOverrideConfiguration(param0: globalAndroid.content.res.Configuration): void;
				public onApplyThemeResource(param0: globalAndroid.content.res.Resources.Theme, param1: number, param2: boolean): void;
				public setTheme(param0: number): void;
				public getThemeResId(): number;
				public getSystemService(param0: string): any;
				public getResources(): globalAndroid.content.res.Resources;
				public constructor(param0: globalAndroid.content.Context, param1: number);
				public attachBaseContext(param0: globalAndroid.content.Context): void;
				public getTheme(): globalAndroid.content.res.Resources.Theme;
				public getAssets(): globalAndroid.content.res.AssetManager;
				public constructor();
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources.Theme);
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class StandaloneActionMode extends androidx.appcompat.view.ActionMode implements androidx.appcompat.view.menu.MenuBuilder.Callback {
				public static class: java.lang.Class<androidx.appcompat.view.StandaloneActionMode>;
				public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
				public isUiFocusable(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.widget.ActionBarContextView, param2: androidx.appcompat.view.ActionMode.Callback, param3: boolean);
				public onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
				public finish(): void;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public getCustomView(): globalAndroid.view.View;
				public setTitle(param0: string): void;
				public getMenu(): globalAndroid.view.Menu;
				public getTitle(): string;
				public constructor();
				public isTitleOptional(): boolean;
				public setSubtitle(param0: string): void;
				public onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void;
				public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				public setTitle(param0: number): void;
				public invalidate(): void;
				public setTitleOptionalHint(param0: boolean): void;
				public getSubtitle(): string;
				public setSubtitle(param0: number): void;
				public onCloseSubMenu(param0: androidx.appcompat.view.menu.SubMenuBuilder): void;
				public setCustomView(param0: globalAndroid.view.View): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class SupportActionModeWrapper {
				public static class: java.lang.Class<androidx.appcompat.view.SupportActionModeWrapper>;
				public finish(): void;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public getCustomView(): globalAndroid.view.View;
				public setTitle(param0: string): void;
				public getMenu(): globalAndroid.view.Menu;
				public getTitle(): string;
				public isTitleOptional(): boolean;
				public setSubtitle(param0: string): void;
				public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.ActionMode);
				public setTitle(param0: number): void;
				public invalidate(): void;
				public setTitleOptionalHint(param0: boolean): void;
				public getTag(): any;
				public getSubtitle(): string;
				public setSubtitle(param0: number): void;
				public getTitleOptionalHint(): boolean;
				public setTag(param0: any): void;
				public setCustomView(param0: globalAndroid.view.View): void;
			}
			export module SupportActionModeWrapper {
				export class CallbackWrapper extends androidx.appcompat.view.ActionMode.Callback {
					public static class: java.lang.Class<androidx.appcompat.view.SupportActionModeWrapper.CallbackWrapper>;
					public onPrepareActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onDestroyActionMode(param0: androidx.appcompat.view.ActionMode): void;
					public onCreateActionMode(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onActionItemClicked(param0: androidx.appcompat.view.ActionMode, param1: globalAndroid.view.MenuItem): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.ActionMode.Callback);
					public getActionModeWrapper(param0: androidx.appcompat.view.ActionMode): globalAndroid.view.ActionMode;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class SupportMenuInflater {
				public static class: java.lang.Class<androidx.appcompat.view.SupportMenuInflater>;
				public constructor(param0: globalAndroid.content.Context);
				public inflate(param0: number, param1: globalAndroid.view.Menu): void;
			}
			export module SupportMenuInflater {
				export class InflatedOnMenuItemClickListener {
					public static class: java.lang.Class<androidx.appcompat.view.SupportMenuInflater.InflatedOnMenuItemClickListener>;
					public constructor(param0: any, param1: string);
					public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
				}
				export class MenuState {
					public static class: java.lang.Class<androidx.appcompat.view.SupportMenuInflater.MenuState>;
					public constructor(param0: androidx.appcompat.view.SupportMenuInflater, param1: globalAndroid.view.Menu);
					public resetGroup(): void;
					public hasAddedItem(): boolean;
					public readItem(param0: globalAndroid.util.AttributeSet): void;
					public addSubMenuItem(): globalAndroid.view.SubMenu;
					public readGroup(param0: globalAndroid.util.AttributeSet): void;
					public addItem(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class ViewPropertyAnimatorCompatSet {
				public static class: java.lang.Class<androidx.appcompat.view.ViewPropertyAnimatorCompatSet>;
				public setInterpolator(param0: globalAndroid.view.animation.Interpolator): androidx.appcompat.view.ViewPropertyAnimatorCompatSet;
				public play(param0: androidx.core.view.ViewPropertyAnimatorCompat): androidx.appcompat.view.ViewPropertyAnimatorCompatSet;
				public setListener(param0: androidx.core.view.ViewPropertyAnimatorListener): androidx.appcompat.view.ViewPropertyAnimatorCompatSet;
				public start(): void;
				public playSequentially(param0: androidx.core.view.ViewPropertyAnimatorCompat, param1: androidx.core.view.ViewPropertyAnimatorCompat): androidx.appcompat.view.ViewPropertyAnimatorCompatSet;
				public cancel(): void;
				public setDuration(param0: number): androidx.appcompat.view.ViewPropertyAnimatorCompatSet;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export class WindowCallbackWrapper {
				public static class: java.lang.Class<androidx.appcompat.view.WindowCallbackWrapper>;
				public onMenuItemSelected(param0: number, param1: globalAndroid.view.MenuItem): boolean;
				public onCreatePanelMenu(param0: number, param1: globalAndroid.view.Menu): boolean;
				public dispatchTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback, param1: number): globalAndroid.view.ActionMode;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public onActionModeFinished(param0: globalAndroid.view.ActionMode): void;
				public dispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onMenuOpened(param0: number, param1: globalAndroid.view.Menu): boolean;
				public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
				public onPreparePanel(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.Menu): boolean;
				public onActionModeStarted(param0: globalAndroid.view.ActionMode): void;
				public onPointerCaptureChanged(param0: boolean): void;
				public onSearchRequested(param0: any): boolean;
				public dispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public onProvideKeyboardShortcuts(param0: java.util.List<any>, param1: globalAndroid.view.Menu, param2: number): void;
				public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onWindowAttributesChanged(param0: globalAndroid.view.WindowManager.LayoutParams): void;
				public onContentChanged(): void;
				public onCreatePanelView(param0: number): globalAndroid.view.View;
				public onPanelClosed(param0: number, param1: globalAndroid.view.Menu): void;
				public onDetachedFromWindow(): void;
				public onSearchRequested(): boolean;
				public onWindowFocusChanged(param0: boolean): void;
				public constructor(param0: globalAndroid.view.Window.Callback);
				public onAttachedToWindow(): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class ActionMenuItem extends androidx.core.internal.view.SupportMenuItem {
					public static class: java.lang.Class<androidx.appcompat.view.menu.ActionMenuItem>;
					public getTitle(): string;
					public setTitleCondensed(param0: string): globalAndroid.view.MenuItem;
					public setOnActionExpandListener(param0: globalAndroid.view.MenuItem.OnActionExpandListener): globalAndroid.view.MenuItem;
					public setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
					public getGroupId(): number;
					public hasSubMenu(): boolean;
					public setVisible(param0: boolean): globalAndroid.view.MenuItem;
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: number, param4: number, param5: string);
					public getContentDescription(): string;
					public setTooltipText(param0: string): androidx.core.internal.view.SupportMenuItem;
					public getTitleCondensed(): string;
					public setIntent(param0: globalAndroid.content.Intent): globalAndroid.view.MenuItem;
					public setEnabled(param0: boolean): globalAndroid.view.MenuItem;
					public isEnabled(): boolean;
					public setActionProvider(param0: globalAndroid.view.ActionProvider): globalAndroid.view.MenuItem;
					public setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
					public setExclusiveCheckable(param0: boolean): androidx.appcompat.view.menu.ActionMenuItem;
					public getSupportActionProvider(): androidx.core.view.ActionProvider;
					public setChecked(param0: boolean): globalAndroid.view.MenuItem;
					public getSubMenu(): globalAndroid.view.SubMenu;
					public getIntent(): globalAndroid.content.Intent;
					public setCheckable(param0: boolean): globalAndroid.view.MenuItem;
					public getMenuInfo(): globalAndroid.view.ContextMenu.ContextMenuInfo;
					public setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public invoke(): boolean;
					public getNumericModifiers(): number;
					public isVisible(): boolean;
					public setSupportActionProvider(param0: androidx.core.view.ActionProvider): androidx.core.internal.view.SupportMenuItem;
					public getAlphabeticModifiers(): number;
					public collapseActionView(): boolean;
					public getTooltipText(): string;
					public expandActionView(): boolean;
					public setTitle(param0: number): globalAndroid.view.MenuItem;
					public setActionView(param0: number): globalAndroid.view.MenuItem;
					public getNumericShortcut(): string;
					public isActionViewExpanded(): boolean;
					public getAlphabeticShortcut(): string;
					public setActionView(param0: number): androidx.core.internal.view.SupportMenuItem;
					public getIcon(): globalAndroid.graphics.drawable.Drawable;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.MenuItem;
					public setIcon(param0: number): globalAndroid.view.MenuItem;
					public setShowAsAction(param0: number): void;
					public getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public setAlphabeticShortcut(param0: string): globalAndroid.view.MenuItem;
					public setTitle(param0: string): globalAndroid.view.MenuItem;
					public getOrder(): number;
					public getActionProvider(): globalAndroid.view.ActionProvider;
					public isCheckable(): boolean;
					public setContentDescription(param0: string): androidx.core.internal.view.SupportMenuItem;
					public isChecked(): boolean;
					public getItemId(): number;
					public setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
					public setShortcut(param0: string, param1: string): globalAndroid.view.MenuItem;
					public getIconTintList(): globalAndroid.content.res.ColorStateList;
					public setOnMenuItemClickListener(param0: globalAndroid.view.MenuItem.OnMenuItemClickListener): globalAndroid.view.MenuItem;
					public setNumericShortcut(param0: string): globalAndroid.view.MenuItem;
					public setShowAsActionFlags(param0: number): androidx.core.internal.view.SupportMenuItem;
					public getActionView(): globalAndroid.view.View;
					public setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public setActionView(param0: globalAndroid.view.View): androidx.core.internal.view.SupportMenuItem;
					public setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
					public setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class ActionMenuItemView extends androidx.appcompat.widget.AppCompatTextView implements androidx.appcompat.view.menu.MenuView.ItemView, androidx.appcompat.widget.ActionMenuView.ActionMenuChildView {
					public static class: java.lang.Class<androidx.appcompat.view.menu.ActionMenuItemView>;
					public getItemData(): androidx.appcompat.view.menu.MenuItemImpl;
					public getAutoSizeTextAvailableSizes(): native.Array<number>;
					public setTitle(param0: string): void;
					public getAutoSizeStepGranularity(): number;
					public showsIcon(): boolean;
					public setAutoSizeTextTypeUniformWithPresetSizes(param0: native.Array<number>, param1: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public initialize(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: number): void;
					public prefersCondensedTitle(): boolean;
					public hasText(): boolean;
					public setCheckable(param0: boolean): void;
					public setPadding(param0: number, param1: number, param2: number, param3: number): void;
					public setChecked(param0: boolean): void;
					public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public setEnabled(param0: boolean): void;
					public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public onMeasure(param0: number, param1: number): void;
					public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
					public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public getAutoSizeTextType(): number;
					public setShortcut(param0: boolean, param1: string): void;
					public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setAutoSizeTextTypeWithDefaults(param0: number): void;
					public setItemInvoker(param0: androidx.appcompat.view.menu.MenuBuilder.ItemInvoker): void;
					public needsDividerAfter(): boolean;
					public constructor(param0: globalAndroid.content.Context);
					public setPopupCallback(param0: androidx.appcompat.view.menu.ActionMenuItemView.PopupCallback): void;
					public onClick(param0: globalAndroid.view.View): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public getAutoSizeMaxTextSize(): number;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setAutoSizeTextTypeUniformWithConfiguration(param0: number, param1: number, param2: number, param3: number): void;
					public setExpandedFormat(param0: boolean): void;
					public needsDividerBefore(): boolean;
					public getAutoSizeMinTextSize(): number;
				}
				export module ActionMenuItemView {
					export class ActionMenuItemForwardingListener extends androidx.appcompat.widget.ForwardingListener {
						public static class: java.lang.Class<androidx.appcompat.view.menu.ActionMenuItemView.ActionMenuItemForwardingListener>;
						public constructor(param0: globalAndroid.view.View);
						public onForwardingStarted(): boolean;
						public getPopup(): androidx.appcompat.view.menu.ShowableListMenu;
						public constructor(param0: androidx.appcompat.view.menu.ActionMenuItemView);
					}
					export abstract class PopupCallback {
						public static class: java.lang.Class<androidx.appcompat.view.menu.ActionMenuItemView.PopupCallback>;
						public constructor();
						public getPopup(): androidx.appcompat.view.menu.ShowableListMenu;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export abstract class BaseMenuPresenter extends androidx.appcompat.view.menu.MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.BaseMenuPresenter>;
					public mSystemContext: globalAndroid.content.Context;
					public mContext: globalAndroid.content.Context;
					public mMenu: androidx.appcompat.view.menu.MenuBuilder;
					public mSystemInflater: globalAndroid.view.LayoutInflater;
					public mInflater: globalAndroid.view.LayoutInflater;
					public mMenuView: androidx.appcompat.view.menu.MenuView;
					public addItemView(param0: globalAndroid.view.View, param1: number): void;
					public setId(param0: number): void;
					public createItemView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView.ItemView;
					public getId(): number;
					public updateMenuView(param0: boolean): void;
					public bindItemView(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: androidx.appcompat.view.menu.MenuView.ItemView): void;
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public shouldIncludeItem(param0: number, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public filterLeftoverView(param0: globalAndroid.view.ViewGroup, param1: number): boolean;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public getCallback(): androidx.appcompat.view.menu.MenuPresenter.Callback;
					public getItemView(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public flagActionItems(): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export abstract class BaseMenuWrapper<T> extends androidx.appcompat.view.menu.BaseWrapper<any> {
					public static class: java.lang.Class<androidx.appcompat.view.menu.BaseMenuWrapper<any>>;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class BaseWrapper<T> extends java.lang.Object {
					public static class: java.lang.Class<androidx.appcompat.view.menu.BaseWrapper<any>>;
					public getWrappedObject(): T;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class CascadingMenuPopup extends androidx.appcompat.view.menu.MenuPopup implements androidx.appcompat.view.menu.MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.CascadingMenuPopup>;
					public isShowing(): boolean;
					public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public onDismiss(): void;
					public setAnchorView(param0: globalAndroid.view.View): void;
					public setVerticalOffset(param0: number): void;
					public closeMenuOnSubMenuOpened(): boolean;
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public flagActionItems(): boolean;
					public show(): void;
					public setGravity(param0: number): void;
					public getListView(): globalAndroid.widget.ListView;
					public getId(): number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.View, param2: number, param3: number, param4: boolean);
					public updateMenuView(param0: boolean): void;
					public setHorizontalOffset(param0: number): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onKey(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public addMenu(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public setForceShowIcon(param0: boolean): void;
					public dismiss(): void;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public setShowTitle(param0: boolean): void;
				}
				export module CascadingMenuPopup {
					export class CascadingMenuInfo {
						public static class: java.lang.Class<androidx.appcompat.view.menu.CascadingMenuPopup.CascadingMenuInfo>;
						public window: androidx.appcompat.widget.MenuPopupWindow;
						public menu: androidx.appcompat.view.menu.MenuBuilder;
						public position: number;
						public constructor(param0: androidx.appcompat.widget.MenuPopupWindow, param1: androidx.appcompat.view.menu.MenuBuilder, param2: number);
						public getListView(): globalAndroid.widget.ListView;
					}
					export class HorizPosition {
						public static class: java.lang.Class<androidx.appcompat.view.menu.CascadingMenuPopup.HorizPosition>;
						/**
						 * Constructs a new instance of the androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class ExpandedMenuView implements androidx.appcompat.view.menu.MenuBuilder.ItemInvoker, androidx.appcompat.view.menu.MenuView {
					public static class: java.lang.Class<androidx.appcompat.view.menu.ExpandedMenuView>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public onDetachedFromWindow(): void;
					public onItemClick(param0: globalAndroid.widget.AdapterView, param1: globalAndroid.view.View, param2: number, param3: number): void;
					public initialize(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public invokeItem(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public getWindowAnimations(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class ListMenuItemView implements androidx.appcompat.view.menu.MenuView.ItemView {
					public static class: java.lang.Class<androidx.appcompat.view.menu.ListMenuItemView>;
					public setEnabled(param0: boolean): void;
					public getItemData(): androidx.appcompat.view.menu.MenuItemImpl;
					public onMeasure(param0: number, param1: number): void;
					public setTitle(param0: string): void;
					public setShortcut(param0: boolean, param1: string): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setGroupDividerEnabled(param0: boolean): void;
					public showsIcon(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public initialize(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: number): void;
					public prefersCondensedTitle(): boolean;
					public setCheckable(param0: boolean): void;
					public adjustListItemSelectionBounds(param0: globalAndroid.graphics.Rect): void;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
					public onFinishInflate(): void;
					public setForceShowIcon(param0: boolean): void;
					public setChecked(param0: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class ListMenuPresenter extends androidx.appcompat.view.menu.MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.ListMenuPresenter>;
					public static VIEWS_TAG: string;
					public setId(param0: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: number);
					public restoreHierarchyState(param0: globalAndroid.os.Bundle): void;
					public getId(): number;
					public updateMenuView(param0: boolean): void;
					public getAdapter(): globalAndroid.widget.ListAdapter;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public saveHierarchyState(param0: globalAndroid.os.Bundle): void;
					public setItemIndexOffset(param0: number): void;
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public constructor(param0: number, param1: number);
					public flagActionItems(): boolean;
				}
				export module ListMenuPresenter {
					export class MenuAdapter {
						public static class: java.lang.Class<androidx.appcompat.view.menu.ListMenuPresenter.MenuAdapter>;
						public constructor(param0: androidx.appcompat.view.menu.ListMenuPresenter);
						public notifyDataSetChanged(): void;
						public getItemId(param0: number): number;
						public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public getCount(): number;
						public getItem(param0: number): androidx.appcompat.view.menu.MenuItemImpl;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuAdapter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuAdapter>;
					public getForceShowIcon(): boolean;
					public getCount(): number;
					public constructor(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.LayoutInflater, param2: boolean, param3: number);
					public getItem(param0: number): androidx.appcompat.view.menu.MenuItemImpl;
					public setForceShowIcon(param0: boolean): void;
					public getItemId(param0: number): number;
					public notifyDataSetChanged(): void;
					public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					public getAdapterMenu(): androidx.appcompat.view.menu.MenuBuilder;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuBuilder extends androidx.core.internal.view.SupportMenu {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuBuilder>;
					public setGroupVisible(param0: number, param1: boolean): void;
					public setQwertyMode(param0: boolean): void;
					public findItemIndex(param0: number): number;
					public performIdentifierAction(param0: number, param1: number): boolean;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public add(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
					public size(): number;
					public setOverrideVisibleItems(param0: boolean): void;
					public startDispatchingItemsChanged(): void;
					public add(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.MenuItem;
					public isShortcutsVisible(): boolean;
					public addMenuPresenter(param0: androidx.appcompat.view.menu.MenuPresenter): void;
					public getNonActionItems(): java.util.ArrayList<androidx.appcompat.view.menu.MenuItemImpl>;
					public close(): void;
					public getContext(): globalAndroid.content.Context;
					public changeMenuMode(): void;
					public add(param0: string): globalAndroid.view.MenuItem;
					public stopDispatchingItemsChanged(): void;
					public setOptionalIconsVisible(param0: boolean): void;
					public getHeaderIcon(): globalAndroid.graphics.drawable.Drawable;
					public setShortcutsVisible(param0: boolean): void;
					public removeMenuPresenter(param0: androidx.appcompat.view.menu.MenuPresenter): void;
					public setDefaultShowAsAction(param0: number): androidx.appcompat.view.menu.MenuBuilder;
					public close(param0: boolean): void;
					public removeItemAt(param0: number): void;
					public setGroupEnabled(param0: number, param1: boolean): void;
					public restorePresenterStates(param0: globalAndroid.os.Bundle): void;
					public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public getVisibleItems(): java.util.ArrayList<androidx.appcompat.view.menu.MenuItemImpl>;
					public clearAll(): void;
					public setHeaderTitleInt(param0: number): androidx.appcompat.view.menu.MenuBuilder;
					public hasVisibleItems(): boolean;
					public findGroupIndex(param0: number, param1: number): number;
					public addInternal(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
					public add(param0: number): globalAndroid.view.MenuItem;
					public getActionViewStatesKey(): string;
					public getHeaderView(): globalAndroid.view.View;
					public setHeaderTitleInt(param0: string): androidx.appcompat.view.menu.MenuBuilder;
					public setGroupCheckable(param0: number, param1: boolean, param2: boolean): void;
					public restoreActionViewStates(param0: globalAndroid.os.Bundle): void;
					public setCurrentMenuInfo(param0: globalAndroid.view.ContextMenu.ContextMenuInfo): void;
					public setGroupDividerEnabled(param0: boolean): void;
					public addSubMenu(param0: number): globalAndroid.view.SubMenu;
					public performItemAction(param0: globalAndroid.view.MenuItem, param1: number): boolean;
					public getActionItems(): java.util.ArrayList<androidx.appcompat.view.menu.MenuItemImpl>;
					public getExpandedItem(): androidx.appcompat.view.menu.MenuItemImpl;
					public addIntentOptions(param0: number, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: native.Array<globalAndroid.content.Intent>, param5: globalAndroid.content.Intent, param6: number, param7: native.Array<globalAndroid.view.MenuItem>): number;
					public isGroupDividerEnabled(): boolean;
					public onItemsChanged(param0: boolean): void;
					public getRootMenu(): androidx.appcompat.view.menu.MenuBuilder;
					public performItemAction(param0: globalAndroid.view.MenuItem, param1: androidx.appcompat.view.menu.MenuPresenter, param2: number): boolean;
					public setHeaderViewInt(param0: globalAndroid.view.View): androidx.appcompat.view.menu.MenuBuilder;
					public clear(): void;
					public savePresenterStates(param0: globalAndroid.os.Bundle): void;
					public getItem(param0: number): globalAndroid.view.MenuItem;
					public flagActionItems(): void;
					public setHeaderIconInt(param0: number): androidx.appcompat.view.menu.MenuBuilder;
					public findItem(param0: number): globalAndroid.view.MenuItem;
					public getHeaderTitle(): string;
					public saveActionViewStates(param0: globalAndroid.os.Bundle): void;
					public addSubMenu(param0: string): globalAndroid.view.SubMenu;
					public addSubMenu(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.SubMenu;
					public setHeaderIconInt(param0: globalAndroid.graphics.drawable.Drawable): androidx.appcompat.view.menu.MenuBuilder;
					public performShortcut(param0: number, param1: globalAndroid.view.KeyEvent, param2: number): boolean;
					public clearHeader(): void;
					public removeGroup(param0: number): void;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public constructor(param0: globalAndroid.content.Context);
					public addMenuPresenter(param0: androidx.appcompat.view.menu.MenuPresenter, param1: globalAndroid.content.Context): void;
					public addSubMenu(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.SubMenu;
					public findGroupIndex(param0: number): number;
					public removeItem(param0: number): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
				}
				export module MenuBuilder {
					export class Callback {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuBuilder.Callback>;
						/**
						 * Constructs a new instance of the androidx.appcompat.view.menu.MenuBuilder$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean; onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void });
						public constructor();
						public onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
						public onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					}
					export class ItemInvoker {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuBuilder.ItemInvoker>;
						/**
						 * Constructs a new instance of the androidx.appcompat.view.menu.MenuBuilder$ItemInvoker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { invokeItem(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean });
						public constructor();
						public invokeItem(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuDialogHelper extends androidx.appcompat.view.menu.MenuPresenter.Callback {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuDialogHelper>;
					public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
					public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public show(param0: globalAndroid.os.IBinder): void;
					public onDismiss(param0: globalAndroid.content.DialogInterface): void;
					public onKey(param0: globalAndroid.content.DialogInterface, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public setPresenterCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public dismiss(): void;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public constructor(param0: androidx.appcompat.view.menu.MenuBuilder);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuHelper {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuHelper>;
					/**
					 * Constructs a new instance of the androidx.appcompat.view.menu.MenuHelper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setPresenterCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void; dismiss(): void });
					public constructor();
					public setPresenterCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public dismiss(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuItemImpl extends androidx.core.internal.view.SupportMenuItem {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemImpl>;
					public getTitle(): string;
					public setTitleCondensed(param0: string): globalAndroid.view.MenuItem;
					public setOnActionExpandListener(param0: globalAndroid.view.MenuItem.OnActionExpandListener): globalAndroid.view.MenuItem;
					public setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
					public getGroupId(): number;
					public hasSubMenu(): boolean;
					public setVisible(param0: boolean): globalAndroid.view.MenuItem;
					public getContentDescription(): string;
					public setTooltipText(param0: string): androidx.core.internal.view.SupportMenuItem;
					public setIntent(param0: globalAndroid.content.Intent): globalAndroid.view.MenuItem;
					public getTitleCondensed(): string;
					public setEnabled(param0: boolean): globalAndroid.view.MenuItem;
					public isEnabled(): boolean;
					public setActionProvider(param0: globalAndroid.view.ActionProvider): globalAndroid.view.MenuItem;
					public setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
					public setSubMenu(param0: androidx.appcompat.view.menu.SubMenuBuilder): void;
					public setActionViewExpanded(param0: boolean): void;
					public getSupportActionProvider(): androidx.core.view.ActionProvider;
					public setChecked(param0: boolean): globalAndroid.view.MenuItem;
					public getSubMenu(): globalAndroid.view.SubMenu;
					public getIntent(): globalAndroid.content.Intent;
					public requiresActionButton(): boolean;
					public setCheckable(param0: boolean): globalAndroid.view.MenuItem;
					public getMenuInfo(): globalAndroid.view.ContextMenu.ContextMenuInfo;
					public invoke(): boolean;
					public setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public getNumericModifiers(): number;
					public isVisible(): boolean;
					public setSupportActionProvider(param0: androidx.core.view.ActionProvider): androidx.core.internal.view.SupportMenuItem;
					public getAlphabeticModifiers(): number;
					public requestsActionButton(): boolean;
					public collapseActionView(): boolean;
					public getTooltipText(): string;
					public expandActionView(): boolean;
					public setExclusiveCheckable(param0: boolean): void;
					public actionFormatChanged(): void;
					public setCallback(param0: java.lang.Runnable): globalAndroid.view.MenuItem;
					public setTitle(param0: number): globalAndroid.view.MenuItem;
					public setActionView(param0: number): globalAndroid.view.MenuItem;
					public getNumericShortcut(): string;
					public isActionViewExpanded(): boolean;
					public getAlphabeticShortcut(): string;
					public setActionView(param0: number): androidx.core.internal.view.SupportMenuItem;
					public hasCollapsibleActionView(): boolean;
					public getIcon(): globalAndroid.graphics.drawable.Drawable;
					public isExclusiveCheckable(): boolean;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.MenuItem;
					public setIcon(param0: number): globalAndroid.view.MenuItem;
					public shouldShowIcon(): boolean;
					public setShowAsAction(param0: number): void;
					public getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public setAlphabeticShortcut(param0: string): globalAndroid.view.MenuItem;
					public toString(): string;
					public setTitle(param0: string): globalAndroid.view.MenuItem;
					public getOrder(): number;
					public getActionProvider(): globalAndroid.view.ActionProvider;
					public isCheckable(): boolean;
					public setContentDescription(param0: string): androidx.core.internal.view.SupportMenuItem;
					public isChecked(): boolean;
					public isActionButton(): boolean;
					public setIsActionButton(param0: boolean): void;
					public getItemId(): number;
					public setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
					public setShortcut(param0: string, param1: string): globalAndroid.view.MenuItem;
					public getIconTintList(): globalAndroid.content.res.ColorStateList;
					public getOrdering(): number;
					public setOnMenuItemClickListener(param0: globalAndroid.view.MenuItem.OnMenuItemClickListener): globalAndroid.view.MenuItem;
					public setNumericShortcut(param0: string): globalAndroid.view.MenuItem;
					public setShowAsActionFlags(param0: number): androidx.core.internal.view.SupportMenuItem;
					public getActionView(): globalAndroid.view.View;
					public setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public setActionView(param0: globalAndroid.view.View): androidx.core.internal.view.SupportMenuItem;
					public showsTextAsAction(): boolean;
					public setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
					public setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuItemWrapperICS extends androidx.appcompat.view.menu.BaseMenuWrapper<androidx.core.internal.view.SupportMenuItem> implements globalAndroid.view.MenuItem {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperICS>;
					public getTitle(): string;
					public setTitleCondensed(param0: string): globalAndroid.view.MenuItem;
					public setTooltipText(param0: string): globalAndroid.view.MenuItem;
					public setOnActionExpandListener(param0: globalAndroid.view.MenuItem.OnActionExpandListener): globalAndroid.view.MenuItem;
					public setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
					public getGroupId(): number;
					public setVisible(param0: boolean): globalAndroid.view.MenuItem;
					public hasSubMenu(): boolean;
					public getContentDescription(): string;
					public getTitleCondensed(): string;
					public setIntent(param0: globalAndroid.content.Intent): globalAndroid.view.MenuItem;
					public setEnabled(param0: boolean): globalAndroid.view.MenuItem;
					public isEnabled(): boolean;
					public setActionProvider(param0: globalAndroid.view.ActionProvider): globalAndroid.view.MenuItem;
					public setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
					public setChecked(param0: boolean): globalAndroid.view.MenuItem;
					public getSubMenu(): globalAndroid.view.SubMenu;
					public getIntent(): globalAndroid.content.Intent;
					public setCheckable(param0: boolean): globalAndroid.view.MenuItem;
					public getMenuInfo(): globalAndroid.view.ContextMenu.ContextMenuInfo;
					public setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public getNumericModifiers(): number;
					public isVisible(): boolean;
					public getAlphabeticModifiers(): number;
					public collapseActionView(): boolean;
					public getTooltipText(): string;
					public expandActionView(): boolean;
					public setExclusiveCheckable(param0: boolean): void;
					public setTitle(param0: number): globalAndroid.view.MenuItem;
					public setActionView(param0: number): globalAndroid.view.MenuItem;
					public getNumericShortcut(): string;
					public isActionViewExpanded(): boolean;
					public getAlphabeticShortcut(): string;
					public getIcon(): globalAndroid.graphics.drawable.Drawable;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.MenuItem;
					public setIcon(param0: number): globalAndroid.view.MenuItem;
					public setShowAsAction(param0: number): void;
					public getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public setAlphabeticShortcut(param0: string): globalAndroid.view.MenuItem;
					public setTitle(param0: string): globalAndroid.view.MenuItem;
					public getOrder(): number;
					public getActionProvider(): globalAndroid.view.ActionProvider;
					public isCheckable(): boolean;
					public isChecked(): boolean;
					public getItemId(): number;
					public setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
					public setShortcut(param0: string, param1: string): globalAndroid.view.MenuItem;
					public getIconTintList(): globalAndroid.content.res.ColorStateList;
					public setOnMenuItemClickListener(param0: globalAndroid.view.MenuItem.OnMenuItemClickListener): globalAndroid.view.MenuItem;
					public setNumericShortcut(param0: string): globalAndroid.view.MenuItem;
					public setContentDescription(param0: string): globalAndroid.view.MenuItem;
					public getActionView(): globalAndroid.view.View;
					public setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
					public setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
				}
				export module MenuItemWrapperICS {
					export class ActionProviderWrapper extends androidx.core.view.ActionProvider {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperICS.ActionProviderWrapper>;
						public onCreateActionView(): globalAndroid.view.View;
						public constructor(param0: globalAndroid.content.Context);
						public onPrepareSubMenu(param0: globalAndroid.view.SubMenu): void;
						public onPerformDefaultAction(): boolean;
						public constructor(param0: androidx.appcompat.view.menu.MenuItemWrapperICS, param1: globalAndroid.content.Context, param2: globalAndroid.view.ActionProvider);
						public onCreateActionView(param0: globalAndroid.view.MenuItem): globalAndroid.view.View;
						public hasSubMenu(): boolean;
					}
					export class CollapsibleActionViewWrapper implements androidx.appcompat.view.CollapsibleActionView {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperICS.CollapsibleActionViewWrapper>;
						public onActionViewExpanded(): void;
						public onActionViewCollapsed(): void;
					}
					export class OnActionExpandListenerWrapper extends androidx.appcompat.view.menu.BaseWrapper<globalAndroid.view.MenuItem.OnActionExpandListener> implements globalAndroid.view.MenuItem.OnActionExpandListener {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperICS.OnActionExpandListenerWrapper>;
						public onMenuItemActionExpand(param0: globalAndroid.view.MenuItem): boolean;
						public onMenuItemActionCollapse(param0: globalAndroid.view.MenuItem): boolean;
					}
					export class OnMenuItemClickListenerWrapper extends androidx.appcompat.view.menu.BaseWrapper<globalAndroid.view.MenuItem.OnMenuItemClickListener> implements globalAndroid.view.MenuItem.OnMenuItemClickListener {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperICS.OnMenuItemClickListenerWrapper>;
						public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuItemWrapperJB extends androidx.appcompat.view.menu.MenuItemWrapperICS {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperJB>;
				}
				export module MenuItemWrapperJB {
					export class ActionProviderWrapperJB extends androidx.appcompat.view.menu.MenuItemWrapperICS.ActionProviderWrapper {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuItemWrapperJB.ActionProviderWrapperJB>;
						public onCreateActionView(): globalAndroid.view.View;
						public constructor(param0: androidx.appcompat.view.menu.MenuItemWrapperJB, param1: globalAndroid.content.Context, param2: globalAndroid.view.ActionProvider);
						public overridesItemVisibility(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public setVisibilityListener(param0: androidx.core.view.ActionProvider.VisibilityListener): void;
						public refreshVisibility(): void;
						public isVisible(): boolean;
						public constructor(param0: androidx.appcompat.view.menu.MenuItemWrapperICS, param1: globalAndroid.content.Context, param2: globalAndroid.view.ActionProvider);
						public onCreateActionView(param0: globalAndroid.view.MenuItem): globalAndroid.view.View;
						public onActionProviderVisibilityChanged(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export abstract class MenuPopup implements androidx.appcompat.view.menu.ShowableListMenu, androidx.appcompat.view.menu.MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuPopup>;
					public isShowing(): boolean;
					public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
					public static toMenuAdapter(param0: globalAndroid.widget.ListAdapter): androidx.appcompat.view.menu.MenuAdapter;
					public setEpicenterBounds(param0: globalAndroid.graphics.Rect): void;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public setAnchorView(param0: globalAndroid.view.View): void;
					public setVerticalOffset(param0: number): void;
					public closeMenuOnSubMenuOpened(): boolean;
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public getEpicenterBounds(): globalAndroid.graphics.Rect;
					public flagActionItems(): boolean;
					public show(): void;
					public setGravity(param0: number): void;
					public getId(): number;
					public getListView(): globalAndroid.widget.ListView;
					public updateMenuView(param0: boolean): void;
					public static shouldPreserveIconSpacing(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public setHorizontalOffset(param0: number): void;
					public static measureIndividualMenuWidth(param0: globalAndroid.widget.ListAdapter, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.content.Context, param3: number): number;
					public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public addMenu(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public setForceShowIcon(param0: boolean): void;
					public dismiss(): void;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public setShowTitle(param0: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuPopupHelper extends androidx.appcompat.view.menu.MenuHelper {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuPopupHelper>;
					public getGravity(): number;
					public tryShow(): boolean;
					public show(): void;
					public getPopup(): androidx.appcompat.view.menu.MenuPopup;
					public isShowing(): boolean;
					public setGravity(param0: number): void;
					public getListView(): globalAndroid.widget.ListView;
					public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View);
					public show(param0: number, param1: number): void;
					public setPresenterCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public setAnchorView(param0: globalAndroid.view.View): void;
					public onDismiss(): void;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number, param5: number);
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder);
					public tryShow(param0: number, param1: number): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number);
					public setForceShowIcon(param0: boolean): void;
					public dismiss(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuPresenter>;
					/**
					 * Constructs a new instance of the androidx.appcompat.view.menu.MenuPresenter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
						getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
						updateMenuView(param0: boolean): void;
						setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
						onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
						onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
						flagActionItems(): boolean;
						expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
						collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
						getId(): number;
						onSaveInstanceState(): globalAndroid.os.Parcelable;
						onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					});
					public constructor();
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public getId(): number;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public updateMenuView(param0: boolean): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public flagActionItems(): boolean;
				}
				export module MenuPresenter {
					export class Callback {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuPresenter.Callback>;
						/**
						 * Constructs a new instance of the androidx.appcompat.view.menu.MenuPresenter$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void; onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean });
						public constructor();
						public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
						public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuView {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuView>;
					/**
					 * Constructs a new instance of the androidx.appcompat.view.menu.MenuView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { initialize(param0: androidx.appcompat.view.menu.MenuBuilder): void; getWindowAnimations(): number });
					public constructor();
					public initialize(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public getWindowAnimations(): number;
				}
				export module MenuView {
					export class ItemView {
						public static class: java.lang.Class<androidx.appcompat.view.menu.MenuView.ItemView>;
						/**
						 * Constructs a new instance of the androidx.appcompat.view.menu.MenuView$ItemView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { initialize(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: number): void; getItemData(): androidx.appcompat.view.menu.MenuItemImpl; setTitle(param0: string): void; setEnabled(param0: boolean): void; setCheckable(param0: boolean): void; setChecked(param0: boolean): void; setShortcut(param0: boolean, param1: string): void; setIcon(param0: globalAndroid.graphics.drawable.Drawable): void; prefersCondensedTitle(): boolean; showsIcon(): boolean });
						public constructor();
						public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setChecked(param0: boolean): void;
						public prefersCondensedTitle(): boolean;
						public setTitle(param0: string): void;
						public setShortcut(param0: boolean, param1: string): void;
						public getItemData(): androidx.appcompat.view.menu.MenuItemImpl;
						public showsIcon(): boolean;
						public setCheckable(param0: boolean): void;
						public initialize(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: number): void;
						public setEnabled(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuWrapperFactory {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuWrapperFactory>;
					public static wrapSupportMenu(param0: globalAndroid.content.Context, param1: androidx.core.internal.view.SupportMenu): globalAndroid.view.Menu;
					public static wrapSupportSubMenu(param0: globalAndroid.content.Context, param1: androidx.core.internal.view.SupportSubMenu): globalAndroid.view.SubMenu;
					public static wrapSupportMenuItem(param0: globalAndroid.content.Context, param1: androidx.core.internal.view.SupportMenuItem): globalAndroid.view.MenuItem;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class MenuWrapperICS extends androidx.appcompat.view.menu.BaseMenuWrapper<androidx.core.internal.view.SupportMenu> implements globalAndroid.view.Menu {
					public static class: java.lang.Class<androidx.appcompat.view.menu.MenuWrapperICS>;
					public findItem(param0: number): globalAndroid.view.MenuItem;
					public setGroupVisible(param0: number, param1: boolean): void;
					public addSubMenu(param0: string): globalAndroid.view.SubMenu;
					public setGroupCheckable(param0: number, param1: boolean, param2: boolean): void;
					public setQwertyMode(param0: boolean): void;
					public performIdentifierAction(param0: number, param1: number): boolean;
					public addSubMenu(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.SubMenu;
					public add(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
					public size(): number;
					public performShortcut(param0: number, param1: globalAndroid.view.KeyEvent, param2: number): boolean;
					public addSubMenu(param0: number): globalAndroid.view.SubMenu;
					public add(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.MenuItem;
					public removeGroup(param0: number): void;
					public addIntentOptions(param0: number, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: native.Array<globalAndroid.content.Intent>, param5: globalAndroid.content.Intent, param6: number, param7: native.Array<globalAndroid.view.MenuItem>): number;
					public setGroupEnabled(param0: number, param1: boolean): void;
					public addSubMenu(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.SubMenu;
					public clear(): void;
					public close(): void;
					public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public getItem(param0: number): globalAndroid.view.MenuItem;
					public add(param0: string): globalAndroid.view.MenuItem;
					public removeItem(param0: number): void;
					public hasVisibleItems(): boolean;
					public add(param0: number): globalAndroid.view.MenuItem;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class ShowableListMenu {
					public static class: java.lang.Class<androidx.appcompat.view.menu.ShowableListMenu>;
					/**
					 * Constructs a new instance of the androidx.appcompat.view.menu.ShowableListMenu interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { show(): void; dismiss(): void; isShowing(): boolean; getListView(): globalAndroid.widget.ListView });
					public constructor();
					public show(): void;
					public isShowing(): boolean;
					public getListView(): globalAndroid.widget.ListView;
					public dismiss(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class StandardMenuPopup extends androidx.appcompat.view.menu.MenuPopup implements androidx.appcompat.view.menu.MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.view.menu.StandardMenuPopup>;
					public isShowing(): boolean;
					public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public onDismiss(): void;
					public setAnchorView(param0: globalAndroid.view.View): void;
					public setVerticalOffset(param0: number): void;
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public flagActionItems(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: number, param4: number, param5: boolean);
					public show(): void;
					public setGravity(param0: number): void;
					public getListView(): globalAndroid.widget.ListView;
					public getId(): number;
					public updateMenuView(param0: boolean): void;
					public setHorizontalOffset(param0: number): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public onKey(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public addMenu(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public setForceShowIcon(param0: boolean): void;
					public dismiss(): void;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public setShowTitle(param0: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class SubMenuBuilder extends androidx.appcompat.view.menu.MenuBuilder {
					public static class: java.lang.Class<androidx.appcompat.view.menu.SubMenuBuilder>;
					public getActionViewStatesKey(): string;
					public setIcon(param0: number): globalAndroid.view.SubMenu;
					public setQwertyMode(param0: boolean): void;
					public isQwertyMode(): boolean;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public setShortcutsVisible(param0: boolean): void;
					public setGroupDividerEnabled(param0: boolean): void;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public constructor(param0: globalAndroid.content.Context);
					public getItem(): globalAndroid.view.MenuItem;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: androidx.appcompat.view.menu.MenuItemImpl);
					public getParentMenu(): globalAndroid.view.Menu;
					public isShortcutsVisible(): boolean;
					public getRootMenu(): androidx.appcompat.view.menu.MenuBuilder;
					public isGroupDividerEnabled(): boolean;
					public setHeaderIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.SubMenu;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.SubMenu;
					public getItem(param0: number): globalAndroid.view.MenuItem;
					public setHeaderView(param0: globalAndroid.view.View): globalAndroid.view.SubMenu;
					public setHeaderTitle(param0: string): globalAndroid.view.SubMenu;
					public setHeaderIcon(param0: number): globalAndroid.view.SubMenu;
					public setCallback(param0: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
					public setHeaderTitle(param0: number): globalAndroid.view.SubMenu;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module view {
			export module menu {
				export class SubMenuWrapperICS extends androidx.appcompat.view.menu.MenuWrapperICS {
					public static class: java.lang.Class<androidx.appcompat.view.menu.SubMenuWrapperICS>;
					public getItem(): globalAndroid.view.MenuItem;
					public setIcon(param0: number): globalAndroid.view.SubMenu;
					public setHeaderIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.SubMenu;
					public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.SubMenu;
					public getWrappedObject(): androidx.core.internal.view.SupportSubMenu;
					public getItem(param0: number): globalAndroid.view.MenuItem;
					public getWrappedObject(): any;
					public setHeaderView(param0: globalAndroid.view.View): globalAndroid.view.SubMenu;
					public setHeaderTitle(param0: string): globalAndroid.view.SubMenu;
					public clearHeader(): void;
					public setHeaderIcon(param0: number): globalAndroid.view.SubMenu;
					public setHeaderTitle(param0: number): globalAndroid.view.SubMenu;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export abstract class AbsActionBarView {
				public static class: java.lang.Class<androidx.appcompat.widget.AbsActionBarView>;
				public mVisAnimListener: androidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener;
				public mPopupContext: globalAndroid.content.Context;
				public mMenuView: androidx.appcompat.widget.ActionMenuView;
				public mActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter;
				public mContentHeight: number;
				public mVisibilityAnim: androidx.core.view.ViewPropertyAnimatorCompat;
				public showOverflowMenu(): boolean;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public animateToVisibility(param0: number): void;
				public isOverflowReserved(): boolean;
				public canShowOverflowMenu(): boolean;
				public positionChild(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: boolean): number;
				public setupAnimatorToVisibility(param0: number, param1: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setVisibility(param0: number): void;
				public isOverflowMenuShowing(): boolean;
				public static next(param0: number, param1: number, param2: boolean): number;
				public postShowOverflowMenu(): void;
				public hideOverflowMenu(): boolean;
				public setContentHeight(param0: number): void;
				public getAnimatedVisibility(): number;
				public isOverflowMenuShowPending(): boolean;
				public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getContentHeight(): number;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public dismissPopupMenus(): void;
				public measureChildView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number): number;
			}
			export module AbsActionBarView {
				export class VisibilityAnimListener extends androidx.core.view.ViewPropertyAnimatorListener {
					public static class: java.lang.Class<androidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener>;
					public withFinalVisibility(param0: androidx.core.view.ViewPropertyAnimatorCompat, param1: number): androidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener;
					public onAnimationCancel(param0: globalAndroid.view.View): void;
					public onAnimationStart(param0: globalAndroid.view.View): void;
					public onAnimationEnd(param0: globalAndroid.view.View): void;
					public constructor(param0: androidx.appcompat.widget.AbsActionBarView);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActionBarBackgroundDrawable {
				public static class: java.lang.Class<androidx.appcompat.widget.ActionBarBackgroundDrawable>;
				public constructor(param0: androidx.appcompat.widget.ActionBarContainer);
				public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public setAlpha(param0: number): void;
				public getOpacity(): number;
				public getOutline(param0: any): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActionBarContainer {
				public static class: java.lang.Class<androidx.appcompat.widget.ActionBarContainer>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public jumpDrawablesToCurrentState(): void;
				public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getTabContainer(): globalAndroid.view.View;
				public onFinishInflate(): void;
				public setPrimaryBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setVisibility(param0: number): void;
				public setSplitBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
				public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
				public constructor(param0: globalAndroid.content.Context);
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onMeasure(param0: number, param1: number): void;
				public setTabContainer(param0: androidx.appcompat.widget.ScrollingTabContainerView): void;
				public setTransitioning(param0: boolean): void;
				public setStackedBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
				public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActionBarContextView extends androidx.appcompat.widget.AbsActionBarView {
				public static class: java.lang.Class<androidx.appcompat.widget.ActionBarContextView>;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
				public killMode(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public showOverflowMenu(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public initForMode(param0: androidx.appcompat.view.ActionMode): void;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public setTitle(param0: string): void;
				public getTitle(): string;
				public isOverflowMenuShowing(): boolean;
				public hideOverflowMenu(): boolean;
				public isTitleOptional(): boolean;
				public setContentHeight(param0: number): void;
				public setSubtitle(param0: string): void;
				public constructor(param0: globalAndroid.content.Context);
				public onMeasure(param0: number, param1: number): void;
				public setTitleOptional(param0: boolean): void;
				public onDetachedFromWindow(): void;
				public getSubtitle(): string;
				public closeMode(): void;
				public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public setCustomView(param0: globalAndroid.view.View): void;
				public shouldDelayChildPressedState(): boolean;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActionBarOverlayLayout implements androidx.appcompat.widget.DecorContentParent, androidx.core.view.NestedScrollingParent {
				public static class: java.lang.Class<androidx.appcompat.widget.ActionBarOverlayLayout>;
				public generateDefaultLayoutParams(): androidx.appcompat.widget.ActionBarOverlayLayout.LayoutParams;
				public hasLogo(): boolean;
				public saveToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public showOverflowMenu(): boolean;
				public setActionBarHideOffset(param0: number): void;
				public getActionBarHideOffset(): number;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public setIcon(param0: number): void;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public setHideOnContentScrollEnabled(param0: boolean): void;
				public getNestedScrollAxes(): number;
				public setWindowTitle(param0: string): void;
				public setUiOptions(param0: number): void;
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onWindowVisibilityChanged(param0: number): void;
				public hideOverflowMenu(): boolean;
				public onDetachedFromWindow(): void;
				public setLogo(param0: number): void;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public setMenuPrepared(): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public initFeature(param0: number): void;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public isHideOnContentScrollEnabled(): boolean;
				public restoreToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
				public setOverlayMode(param0: boolean): void;
				public constructor(param0: globalAndroid.content.Context);
				public fitSystemWindows(param0: globalAndroid.graphics.Rect): boolean;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public setShowingForActionMode(param0: boolean): void;
				public isInOverlayMode(): boolean;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
				public setMenu(param0: globalAndroid.view.Menu, param1: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public dismissPopups(): void;
				public setHasNonEmbeddedTabs(param0: boolean): void;
				public onWindowSystemUiVisibilityChanged(param0: number): void;
				public canShowOverflowMenu(): boolean;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getTitle(): string;
				public hasIcon(): boolean;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.appcompat.widget.ActionBarOverlayLayout.LayoutParams;
				public isOverflowMenuShowing(): boolean;
				public setActionBarVisibilityCallback(param0: androidx.appcompat.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback): void;
				public onMeasure(param0: number, param1: number): void;
				public isOverflowMenuShowPending(): boolean;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public shouldDelayChildPressedState(): boolean;
			}
			export module ActionBarOverlayLayout {
				export class ActionBarVisibilityCallback {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onWindowVisibilityChanged(param0: number): void; showForSystem(): void; hideForSystem(): void; enableContentAnimations(param0: boolean): void; onContentScrollStarted(): void; onContentScrollStopped(): void });
					public constructor();
					public enableContentAnimations(param0: boolean): void;
					public onWindowVisibilityChanged(param0: number): void;
					public onContentScrollStarted(): void;
					public onContentScrollStopped(): void;
					public showForSystem(): void;
					public hideForSystem(): void;
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionBarOverlayLayout.LayoutParams>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActionMenuPresenter extends androidx.appcompat.view.menu.BaseMenuPresenter implements androidx.core.view.ActionProvider.SubUiVisibilityListener {
				public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter>;
				public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
				public shouldIncludeItem(param0: number, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
				public showOverflowMenu(): boolean;
				public getOverflowIcon(): globalAndroid.graphics.drawable.Drawable;
				public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
				public flagActionItems(): boolean;
				public setReserveOverflow(param0: boolean): void;
				public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
				public onSubUiVisibilityChanged(param0: boolean): void;
				public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public setWidthLimit(param0: number, param1: boolean): void;
				public dismissPopupMenus(): boolean;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public updateMenuView(param0: boolean): void;
				public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
				public getItemView(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public bindItemView(param0: androidx.appcompat.view.menu.MenuItemImpl, param1: androidx.appcompat.view.menu.MenuView.ItemView): void;
				public filterLeftoverView(param0: globalAndroid.view.ViewGroup, param1: number): boolean;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
				public getId(): number;
				public setExpandedActionViewsExclusive(param0: boolean): void;
				public isOverflowReserved(): boolean;
				public hideSubMenus(): boolean;
				public isOverflowMenuShowing(): boolean;
				public hideOverflowMenu(): boolean;
				public setItemLimit(param0: number): void;
				public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				public isOverflowMenuShowPending(): boolean;
				public setOverflowIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setMenuView(param0: androidx.appcompat.widget.ActionMenuView): void;
			}
			export module ActionMenuPresenter {
				export class ActionButtonSubmenu extends androidx.appcompat.view.menu.MenuPopupHelper {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.ActionButtonSubmenu>;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder);
					public constructor(param0: androidx.appcompat.widget.ActionMenuPresenter, param1: globalAndroid.content.Context, param2: androidx.appcompat.view.menu.SubMenuBuilder, param3: globalAndroid.view.View);
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number);
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View);
					public setPresenterCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public dismiss(): void;
					public onDismiss(): void;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number, param5: number);
				}
				export class ActionMenuPopupCallback extends androidx.appcompat.view.menu.ActionMenuItemView.PopupCallback {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.ActionMenuPopupCallback>;
					public getPopup(): androidx.appcompat.view.menu.ShowableListMenu;
				}
				export class OpenOverflowRunnable {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.OpenOverflowRunnable>;
					public constructor(param0: androidx.appcompat.widget.ActionMenuPresenter, param1: androidx.appcompat.widget.ActionMenuPresenter.OverflowPopup);
					public run(): void;
				}
				export class OverflowMenuButton extends androidx.appcompat.widget.AppCompatImageView implements androidx.appcompat.widget.ActionMenuView.ActionMenuChildView {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton>;
					public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public performClick(): boolean;
					public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
					public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public setFrame(param0: number, param1: number, param2: number, param3: number): boolean;
					public setSupportImageTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public getSupportImageTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public needsDividerAfter(): boolean;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setSupportImageTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public getSupportImageTintList(): globalAndroid.content.res.ColorStateList;
					public constructor(param0: androidx.appcompat.widget.ActionMenuPresenter, param1: globalAndroid.content.Context);
					public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public needsDividerBefore(): boolean;
				}
				export class OverflowPopup extends androidx.appcompat.view.menu.MenuPopupHelper {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.OverflowPopup>;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder);
					public constructor(param0: androidx.appcompat.widget.ActionMenuPresenter, param1: globalAndroid.content.Context, param2: androidx.appcompat.view.menu.MenuBuilder, param3: globalAndroid.view.View, param4: boolean);
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number);
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View);
					public setPresenterCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public dismiss(): void;
					public onDismiss(): void;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number, param5: number);
				}
				export class PopupPresenterCallback extends androidx.appcompat.view.menu.MenuPresenter.Callback {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.PopupPresenterCallback>;
					public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				}
				export class SavedState {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuPresenter.SavedState>;
					public openSubMenuId: number;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.appcompat.widget.ActionMenuPresenter.SavedState>;
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActionMenuView extends androidx.appcompat.widget.LinearLayoutCompat implements androidx.appcompat.view.menu.MenuBuilder.ItemInvoker, androidx.appcompat.view.menu.MenuView {
				public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuView>;
				public setOnMenuItemClickListener(param0: androidx.appcompat.widget.ActionMenuView.OnMenuItemClickListener): void;
				public initialize(param0: androidx.appcompat.view.menu.MenuBuilder): void;
				public generateOverflowButtonLayoutParams(): androidx.appcompat.widget.ActionMenuView.LayoutParams;
				public setPopupTheme(param0: number): void;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.appcompat.widget.ActionMenuView.LayoutParams;
				public generateDefaultLayoutParams(): androidx.appcompat.widget.LinearLayoutCompat.LayoutParams;
				public showOverflowMenu(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getOverflowIcon(): globalAndroid.graphics.drawable.Drawable;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public setOverflowReserved(param0: boolean): void;
				public peekMenu(): androidx.appcompat.view.menu.MenuBuilder;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public dismissPopupMenus(): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public generateDefaultLayoutParams(): androidx.appcompat.widget.ActionMenuView.LayoutParams;
				public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public setPresenter(param0: androidx.appcompat.widget.ActionMenuPresenter): void;
				public isOverflowReserved(): boolean;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.appcompat.widget.LinearLayoutCompat.LayoutParams;
				public setExpandedActionViewsExclusive(param0: boolean): void;
				public getMenu(): globalAndroid.view.Menu;
				public isOverflowMenuShowing(): boolean;
				public hideOverflowMenu(): boolean;
				public getWindowAnimations(): number;
				public setMenuCallbacks(param0: androidx.appcompat.view.menu.MenuPresenter.Callback, param1: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
				public onMeasure(param0: number, param1: number): void;
				public isOverflowMenuShowPending(): boolean;
				public hasSupportDividerBeforeChildAt(param0: number): boolean;
				public onDetachedFromWindow(): void;
				public getPopupTheme(): number;
				public invokeItem(param0: androidx.appcompat.view.menu.MenuItemImpl): boolean;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.appcompat.widget.ActionMenuView.LayoutParams;
				public setOverflowIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.appcompat.widget.LinearLayoutCompat.LayoutParams;
			}
			export module ActionMenuView {
				export class ActionMenuChildView {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuView.ActionMenuChildView>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ActionMenuView$ActionMenuChildView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { needsDividerBefore(): boolean; needsDividerAfter(): boolean });
					public constructor();
					public needsDividerBefore(): boolean;
					public needsDividerAfter(): boolean;
				}
				export class ActionMenuPresenterCallback extends androidx.appcompat.view.menu.MenuPresenter.Callback {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuView.ActionMenuPresenterCallback>;
					public onOpenSubMenu(param0: androidx.appcompat.view.menu.MenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
				}
				export class LayoutParams extends androidx.appcompat.widget.LinearLayoutCompat.LayoutParams {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuView.LayoutParams>;
					public isOverflowButton: boolean;
					public cellsUsed: number;
					public extraPixels: number;
					public expandable: boolean;
					public preventEdgeOffset: boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.appcompat.widget.LinearLayoutCompat.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: number, param1: number, param2: number);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public constructor(param0: androidx.appcompat.widget.ActionMenuView.LayoutParams);
					public constructor(param0: number, param1: number);
				}
				export class MenuBuilderCallback extends androidx.appcompat.view.menu.MenuBuilder.Callback {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuView.MenuBuilderCallback>;
					public onMenuModeChange(param0: androidx.appcompat.view.menu.MenuBuilder): void;
					public onMenuItemSelected(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
				}
				export class OnMenuItemClickListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ActionMenuView.OnMenuItemClickListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean });
					public constructor();
					public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActivityChooserModel {
				public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel>;
				public static DEFAULT_HISTORY_FILE_NAME: string;
				public static DEFAULT_HISTORY_MAX_LENGTH: number;
				public setDefaultActivity(param0: number): void;
				public getIntent(): globalAndroid.content.Intent;
				public getDefaultActivity(): globalAndroid.content.pm.ResolveInfo;
				public chooseActivity(param0: number): globalAndroid.content.Intent;
				public setOnChooseActivityListener(param0: androidx.appcompat.widget.ActivityChooserModel.OnChooseActivityListener): void;
				public static get(param0: globalAndroid.content.Context, param1: string): androidx.appcompat.widget.ActivityChooserModel;
				public getActivityIndex(param0: globalAndroid.content.pm.ResolveInfo): number;
				public getHistoryMaxSize(): number;
				public setActivitySorter(param0: androidx.appcompat.widget.ActivityChooserModel.ActivitySorter): void;
				public getHistorySize(): number;
				public setHistoryMaxSize(param0: number): void;
				public getActivity(param0: number): globalAndroid.content.pm.ResolveInfo;
				public getActivityCount(): number;
				public setIntent(param0: globalAndroid.content.Intent): void;
			}
			export module ActivityChooserModel {
				export class ActivityChooserModelClient {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.ActivityChooserModelClient>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setActivityChooserModel(param0: androidx.appcompat.widget.ActivityChooserModel): void });
					public constructor();
					public setActivityChooserModel(param0: androidx.appcompat.widget.ActivityChooserModel): void;
				}
				export class ActivityResolveInfo extends java.lang.Comparable<androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo> {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo>;
					public resolveInfo: globalAndroid.content.pm.ResolveInfo;
					public weight: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public compareTo(param0: androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo): number;
					public hashCode(): number;
					public constructor(param0: globalAndroid.content.pm.ResolveInfo);
				}
				export class ActivitySorter {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.ActivitySorter>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ActivityChooserModel$ActivitySorter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { sort(param0: globalAndroid.content.Intent, param1: java.util.List<androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo>, param2: java.util.List<androidx.appcompat.widget.ActivityChooserModel.HistoricalRecord>): void });
					public constructor();
					public sort(param0: globalAndroid.content.Intent, param1: java.util.List<androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo>, param2: java.util.List<androidx.appcompat.widget.ActivityChooserModel.HistoricalRecord>): void;
				}
				export class DefaultSorter extends androidx.appcompat.widget.ActivityChooserModel.ActivitySorter {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.DefaultSorter>;
					public sort(param0: globalAndroid.content.Intent, param1: java.util.List<androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo>, param2: java.util.List<androidx.appcompat.widget.ActivityChooserModel.HistoricalRecord>): void;
				}
				export class HistoricalRecord {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.HistoricalRecord>;
					public activity: globalAndroid.content.ComponentName;
					public time: number;
					public weight: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: globalAndroid.content.ComponentName, param1: number, param2: number);
					public hashCode(): number;
					public constructor(param0: string, param1: number, param2: number);
				}
				export class OnChooseActivityListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.OnChooseActivityListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onChooseActivity(param0: androidx.appcompat.widget.ActivityChooserModel, param1: globalAndroid.content.Intent): boolean });
					public constructor();
					public onChooseActivity(param0: androidx.appcompat.widget.ActivityChooserModel, param1: globalAndroid.content.Intent): boolean;
				}
				export class PersistHistoryAsyncTask extends globalAndroid.os.AsyncTask<any, java.lang.Void, java.lang.Void> {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserModel.PersistHistoryAsyncTask>;
					public doInBackground(param0: native.Array<any>): java.lang.Void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ActivityChooserView implements androidx.appcompat.widget.ActivityChooserModel.ActivityChooserModelClient {
				public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserView>;
				public isShowingPopup(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setExpandActivityOverflowButtonDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setInitialActivityCount(param0: number): void;
				public setDefaultActionButtonContentDescription(param0: number): void;
				public dismissPopup(): boolean;
				public getDataModel(): androidx.appcompat.widget.ActivityChooserModel;
				public constructor(param0: globalAndroid.content.Context);
				public onMeasure(param0: number, param1: number): void;
				public onDetachedFromWindow(): void;
				public setActivityChooserModel(param0: androidx.appcompat.widget.ActivityChooserModel): void;
				public setProvider(param0: androidx.core.view.ActionProvider): void;
				public setExpandActivityOverflowButtonContentDescription(param0: number): void;
				public onAttachedToWindow(): void;
				public showPopup(): boolean;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
			}
			export module ActivityChooserView {
				export class ActivityChooserViewAdapter {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserView.ActivityChooserViewAdapter>;
					public static MAX_ACTIVITY_COUNT_UNLIMITED: number;
					public static MAX_ACTIVITY_COUNT_DEFAULT: number;
					public setShowFooterView(param0: boolean): void;
					public getDefaultActivity(): globalAndroid.content.pm.ResolveInfo;
					public getViewTypeCount(): number;
					public getCount(): number;
					public getShowDefaultActivity(): boolean;
					public setMaxActivityCount(param0: number): void;
					public getActivityCount(): number;
					public measureContentWidth(): number;
					public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					public getDataModel(): androidx.appcompat.widget.ActivityChooserModel;
					public getItem(param0: number): any;
					public getHistorySize(): number;
					public setDataModel(param0: androidx.appcompat.widget.ActivityChooserModel): void;
					public getItemViewType(param0: number): number;
					public setShowDefaultActivity(param0: boolean, param1: boolean): void;
					public getItemId(param0: number): number;
				}
				export class Callbacks {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserView.Callbacks>;
					public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
					public onClick(param0: globalAndroid.view.View): void;
					public onLongClick(param0: globalAndroid.view.View): boolean;
					public onDismiss(): void;
				}
				export class InnerLayout {
					public static class: java.lang.Class<androidx.appcompat.widget.ActivityChooserView.InnerLayout>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AlertDialogLayout extends androidx.appcompat.widget.LinearLayoutCompat {
				public static class: java.lang.Class<androidx.appcompat.widget.AlertDialogLayout>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public onMeasure(param0: number, param1: number): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatAutoCompleteTextView implements androidx.core.view.TintableBackgroundView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatAutoCompleteTextView>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setDropDownBackgroundResource(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
				public constructor(param0: globalAndroid.content.Context);
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public setBackgroundResource(param0: number): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatBackgroundHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatBackgroundHelper>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatButton implements androidx.core.view.TintableBackgroundView, androidx.core.widget.AutoSizeableTextView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatButton>;
				public drawableStateChanged(): void;
				public setAutoSizeTextTypeWithDefaults(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setTextSize(param0: number, param1: number): void;
				public setAutoSizeTextTypeUniformWithPresetSizes(param0: native.Array<number>, param1: number): void;
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getAutoSizeStepGranularity(): number;
				public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public setAutoSizeTextTypeUniformWithConfiguration(param0: number, param1: number, param2: number, param3: number): void;
				public setSupportAllCaps(param0: boolean): void;
				public constructor(param0: globalAndroid.content.Context);
				public getAutoSizeTextAvailableSizes(): native.Array<number>;
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getAutoSizeTextType(): number;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public getAutoSizeMinTextSize(): number;
				public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
				public getAutoSizeMaxTextSize(): number;
				public setBackgroundResource(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatCheckBox implements androidx.core.widget.TintableCompoundButton {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatCheckBox>;
				public setButtonDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getCompoundPaddingLeft(): number;
				public getSupportButtonTintList(): globalAndroid.content.res.ColorStateList;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setSupportButtonTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getSupportButtonTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setButtonDrawable(param0: number): void;
				public setSupportButtonTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatCheckedTextView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatCheckedTextView>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
				public setTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
				public setCheckMarkDrawable(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatCompoundButtonHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatCompoundButtonHelper>;
			}
			export module AppCompatCompoundButtonHelper {
				export class DirectSetButtonDrawableInterface {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatCompoundButtonHelper.DirectSetButtonDrawableInterface>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setButtonDrawable(param0: globalAndroid.graphics.drawable.Drawable): void });
					public constructor();
					public setButtonDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatDrawableManager {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatDrawableManager>;
				public getDrawable(param0: globalAndroid.content.Context, param1: number): globalAndroid.graphics.drawable.Drawable;
				public static get(): androidx.appcompat.widget.AppCompatDrawableManager;
				public onConfigurationChanged(param0: globalAndroid.content.Context): void;
				public constructor();
				public static getPorterDuffColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.graphics.PorterDuffColorFilter;
			}
			export module AppCompatDrawableManager {
				export class AsldcInflateDelegate extends androidx.appcompat.widget.AppCompatDrawableManager.InflateDelegate {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatDrawableManager.AsldcInflateDelegate>;
					public createFromXmlInner(param0: globalAndroid.content.Context, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				}
				export class AvdcInflateDelegate extends androidx.appcompat.widget.AppCompatDrawableManager.InflateDelegate {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatDrawableManager.AvdcInflateDelegate>;
					public createFromXmlInner(param0: globalAndroid.content.Context, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				}
				export class ColorFilterLruCache extends androidx.collection.LruCache<java.lang.Integer, globalAndroid.graphics.PorterDuffColorFilter> {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatDrawableManager.ColorFilterLruCache>;
					public constructor(param0: number);
				}
				export class InflateDelegate {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatDrawableManager.InflateDelegate>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { createFromXmlInner(param0: globalAndroid.content.Context, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable });
					public constructor();
					public createFromXmlInner(param0: globalAndroid.content.Context, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				}
				export class VdcInflateDelegate extends androidx.appcompat.widget.AppCompatDrawableManager.InflateDelegate {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatDrawableManager.VdcInflateDelegate>;
					public createFromXmlInner(param0: globalAndroid.content.Context, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatEditText implements androidx.core.view.TintableBackgroundView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatEditText>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getText(): globalAndroid.text.Editable;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
				public constructor(param0: globalAndroid.content.Context);
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public setBackgroundResource(param0: number): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatHintHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatHintHelper>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatImageButton implements androidx.core.view.TintableBackgroundView, androidx.core.widget.TintableImageSourceView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatImageButton>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setImageDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public setImageBitmap(param0: globalAndroid.graphics.Bitmap): void;
				public getSupportImageTintList(): globalAndroid.content.res.ColorStateList;
				public setImageURI(param0: globalAndroid.net.Uri): void;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public getSupportImageTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public constructor(param0: globalAndroid.content.Context);
				public setImageResource(param0: number): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setBackgroundResource(param0: number): void;
				public setSupportImageTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportImageTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public hasOverlappingRendering(): boolean;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatImageHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatImageHelper>;
				public constructor(param0: globalAndroid.widget.ImageView);
				public setImageResource(param0: number): void;
				public loadFromAttributes(param0: globalAndroid.util.AttributeSet, param1: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatImageView implements androidx.core.view.TintableBackgroundView, androidx.core.widget.TintableImageSourceView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatImageView>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setImageDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public setImageBitmap(param0: globalAndroid.graphics.Bitmap): void;
				public getSupportImageTintList(): globalAndroid.content.res.ColorStateList;
				public setImageURI(param0: globalAndroid.net.Uri): void;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public getSupportImageTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public constructor(param0: globalAndroid.content.Context);
				public setImageResource(param0: number): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setBackgroundResource(param0: number): void;
				public setSupportImageTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportImageTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public hasOverlappingRendering(): boolean;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatMultiAutoCompleteTextView implements androidx.core.view.TintableBackgroundView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView>;
				public drawableStateChanged(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setDropDownBackgroundResource(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
				public constructor(param0: globalAndroid.content.Context);
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public setBackgroundResource(param0: number): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatPopupWindow {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatPopupWindow>;
				public showAsDropDown(param0: globalAndroid.view.View, param1: number, param2: number, param3: number): void;
				public update(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public showAsDropDown(param0: globalAndroid.view.View, param1: number, param2: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatProgressBarHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatProgressBarHelper>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatRadioButton implements androidx.core.widget.TintableCompoundButton {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatRadioButton>;
				public setButtonDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getCompoundPaddingLeft(): number;
				public getSupportButtonTintList(): globalAndroid.content.res.ColorStateList;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setSupportButtonTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getSupportButtonTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setButtonDrawable(param0: number): void;
				public setSupportButtonTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatRatingBar {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatRatingBar>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public onMeasure(param0: number, param1: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatSeekBar {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatSeekBar>;
				public drawableStateChanged(): void;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public jumpDrawablesToCurrentState(): void;
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatSeekBarHelper extends androidx.appcompat.widget.AppCompatProgressBarHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatSeekBarHelper>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatSpinner implements androidx.core.view.TintableBackgroundView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatSpinner>;
				public drawableStateChanged(): void;
				public getDropDownHorizontalOffset(): number;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setPopupBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public setAdapter(param0: globalAndroid.widget.SpinnerAdapter): void;
				public performClick(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: number);
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setDropDownVerticalOffset(param0: number): void;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public getPopupContext(): globalAndroid.content.Context;
				public getPrompt(): string;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number, param4: globalAndroid.content.res.Resources.Theme);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setDropDownHorizontalOffset(param0: number): void;
				public setPrompt(param0: string): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public setDropDownWidth(param0: number): void;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public getPopupBackground(): globalAndroid.graphics.drawable.Drawable;
				public getDropDownWidth(): number;
				public getDropDownVerticalOffset(): number;
				public onMeasure(param0: number, param1: number): void;
				public setPopupBackgroundResource(param0: number): void;
				public onDetachedFromWindow(): void;
				public setBackgroundResource(param0: number): void;
			}
			export module AppCompatSpinner {
				export class DropDownAdapter {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatSpinner.DropDownAdapter>;
					public registerDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
					public isEmpty(): boolean;
					public getCount(): number;
					public areAllItemsEnabled(): boolean;
					public getViewTypeCount(): number;
					public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					public getItem(param0: number): any;
					public hasStableIds(): boolean;
					public constructor(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.content.res.Resources.Theme);
					public unregisterDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
					public isEnabled(param0: number): boolean;
					public getItemViewType(param0: number): number;
					public getItemId(param0: number): number;
				}
				export class DropdownPopup extends androidx.appcompat.widget.ListPopupWindow {
					public static class: java.lang.Class<androidx.appcompat.widget.AppCompatSpinner.DropdownPopup>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public show(): void;
					public setPromptText(param0: string): void;
					public isShowing(): boolean;
					public getHintText(): string;
					public getListView(): globalAndroid.widget.ListView;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
					public constructor(param0: androidx.appcompat.widget.AppCompatSpinner, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet, param3: number);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setAdapter(param0: globalAndroid.widget.ListAdapter): void;
					public dismiss(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatTextHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatTextHelper>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatTextView implements androidx.core.view.TintableBackgroundView, androidx.core.widget.AutoSizeableTextView {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatTextView>;
				public drawableStateChanged(): void;
				public setAutoSizeTextTypeWithDefaults(param0: number): void;
				public getTextMetricsParamsCompat(): androidx.core.text.PrecomputedTextCompat.Params;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setTextSize(param0: number, param1: number): void;
				public setAutoSizeTextTypeUniformWithPresetSizes(param0: native.Array<number>, param1: number): void;
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getAutoSizeStepGranularity(): number;
				public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
				public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
				public getLastBaselineToBottomHeight(): number;
				public setAutoSizeTextTypeUniformWithConfiguration(param0: number, param1: number, param2: number, param3: number): void;
				public getFirstBaselineToTopHeight(): number;
				public setTextMetricsParamsCompat(param0: androidx.core.text.PrecomputedTextCompat.Params): void;
				public constructor(param0: globalAndroid.content.Context);
				public getAutoSizeTextAvailableSizes(): native.Array<number>;
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public setFirstBaselineToTopHeight(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getAutoSizeTextType(): number;
				public setPrecomputedText(param0: androidx.core.text.PrecomputedTextCompat): void;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public setTextFuture(param0: java.util.concurrent.Future<androidx.core.text.PrecomputedTextCompat>): void;
				public getAutoSizeMinTextSize(): number;
				public getText(): string;
				public onMeasure(param0: number, param1: number): void;
				public getAutoSizeMaxTextSize(): number;
				public setLineHeight(param0: number): void;
				public setLastBaselineToBottomHeight(param0: number): void;
				public setBackgroundResource(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class AppCompatTextViewAutoSizeHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ButtonBarLayout {
				public static class: java.lang.Class<androidx.appcompat.widget.ButtonBarLayout>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onMeasure(param0: number, param1: number): void;
				public getMinimumHeight(): number;
				public setAllowStacking(param0: boolean): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ContentFrameLayout {
				public static class: java.lang.Class<androidx.appcompat.widget.ContentFrameLayout>;
				public dispatchFitSystemWindows(param0: globalAndroid.graphics.Rect): void;
				public getFixedWidthMinor(): globalAndroid.util.TypedValue;
				public getFixedHeightMinor(): globalAndroid.util.TypedValue;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getMinWidthMinor(): globalAndroid.util.TypedValue;
				public constructor(param0: globalAndroid.content.Context);
				public setAttachListener(param0: androidx.appcompat.widget.ContentFrameLayout.OnAttachListener): void;
				public onMeasure(param0: number, param1: number): void;
				public getMinWidthMajor(): globalAndroid.util.TypedValue;
				public getFixedWidthMajor(): globalAndroid.util.TypedValue;
				public onDetachedFromWindow(): void;
				public getFixedHeightMajor(): globalAndroid.util.TypedValue;
				public onAttachedToWindow(): void;
				public setDecorPadding(param0: number, param1: number, param2: number, param3: number): void;
			}
			export module ContentFrameLayout {
				export class OnAttachListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ContentFrameLayout.OnAttachListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ContentFrameLayout$OnAttachListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onDetachedFromWindow(): void; onAttachedFromWindow(): void });
					public constructor();
					public onDetachedFromWindow(): void;
					public onAttachedFromWindow(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class DecorContentParent {
				public static class: java.lang.Class<androidx.appcompat.widget.DecorContentParent>;
				/**
				 * Constructs a new instance of the androidx.appcompat.widget.DecorContentParent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
					setWindowTitle(param0: string): void;
					getTitle(): string;
					initFeature(param0: number): void;
					setUiOptions(param0: number): void;
					hasIcon(): boolean;
					hasLogo(): boolean;
					setIcon(param0: number): void;
					setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
					setLogo(param0: number): void;
					canShowOverflowMenu(): boolean;
					isOverflowMenuShowing(): boolean;
					isOverflowMenuShowPending(): boolean;
					showOverflowMenu(): boolean;
					hideOverflowMenu(): boolean;
					setMenuPrepared(): void;
					setMenu(param0: globalAndroid.view.Menu, param1: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					saveToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
					restoreToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
					dismissPopups(): void;
				});
				public constructor();
				public hasLogo(): boolean;
				public saveToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public showOverflowMenu(): boolean;
				public setMenu(param0: globalAndroid.view.Menu, param1: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
				public dismissPopups(): void;
				public initFeature(param0: number): void;
				public canShowOverflowMenu(): boolean;
				public setIcon(param0: number): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public restoreToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public getTitle(): string;
				public hasIcon(): boolean;
				public isOverflowMenuShowing(): boolean;
				public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
				public hideOverflowMenu(): boolean;
				public isOverflowMenuShowPending(): boolean;
				public setLogo(param0: number): void;
				public setMenuPrepared(): void;
				public setWindowTitle(param0: string): void;
				public setUiOptions(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class DecorToolbar {
				public static class: java.lang.Class<androidx.appcompat.widget.DecorToolbar>;
				/**
				 * Constructs a new instance of the androidx.appcompat.widget.DecorToolbar interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getViewGroup(): globalAndroid.view.ViewGroup;
					getContext(): globalAndroid.content.Context;
					hasExpandedActionView(): boolean;
					collapseActionView(): void;
					setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
					setWindowTitle(param0: string): void;
					getTitle(): string;
					setTitle(param0: string): void;
					getSubtitle(): string;
					setSubtitle(param0: string): void;
					initProgress(): void;
					initIndeterminateProgress(): void;
					hasIcon(): boolean;
					hasLogo(): boolean;
					setIcon(param0: number): void;
					setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
					setLogo(param0: number): void;
					setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
					canShowOverflowMenu(): boolean;
					isOverflowMenuShowing(): boolean;
					isOverflowMenuShowPending(): boolean;
					showOverflowMenu(): boolean;
					hideOverflowMenu(): boolean;
					setMenuPrepared(): void;
					setMenu(param0: globalAndroid.view.Menu, param1: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					dismissPopupMenus(): void;
					getDisplayOptions(): number;
					setDisplayOptions(param0: number): void;
					setEmbeddedTabView(param0: androidx.appcompat.widget.ScrollingTabContainerView): void;
					hasEmbeddedTabs(): boolean;
					isTitleTruncated(): boolean;
					setCollapsible(param0: boolean): void;
					setHomeButtonEnabled(param0: boolean): void;
					getNavigationMode(): number;
					setNavigationMode(param0: number): void;
					setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
					setDropdownSelectedPosition(param0: number): void;
					getDropdownSelectedPosition(): number;
					getDropdownItemCount(): number;
					setCustomView(param0: globalAndroid.view.View): void;
					getCustomView(): globalAndroid.view.View;
					animateToVisibility(param0: number): void;
					setupAnimatorToVisibility(param0: number, param1: number): androidx.core.view.ViewPropertyAnimatorCompat;
					setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
					setNavigationIcon(param0: number): void;
					setNavigationContentDescription(param0: string): void;
					setNavigationContentDescription(param0: number): void;
					setDefaultNavigationContentDescription(param0: number): void;
					setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
					saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
					restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
					setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					getHeight(): number;
					setVisibility(param0: number): void;
					getVisibility(): number;
					setMenuCallbacks(param0: androidx.appcompat.view.menu.MenuPresenter.Callback, param1: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
					getMenu(): globalAndroid.view.Menu;
				});
				public constructor();
				public getHeight(): number;
				public hasLogo(): boolean;
				public showOverflowMenu(): boolean;
				public setIcon(param0: number): void;
				public setTitle(param0: string): void;
				public setDefaultNavigationContentDescription(param0: number): void;
				public setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getDropdownSelectedPosition(): number;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setWindowTitle(param0: string): void;
				public setCustomView(param0: globalAndroid.view.View): void;
				public setDisplayOptions(param0: number): void;
				public collapseActionView(): void;
				public getContext(): globalAndroid.content.Context;
				public setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public getMenu(): globalAndroid.view.Menu;
				public setupAnimatorToVisibility(param0: number, param1: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setNavigationContentDescription(param0: number): void;
				public setVisibility(param0: number): void;
				public hideOverflowMenu(): boolean;
				public setEmbeddedTabView(param0: androidx.appcompat.widget.ScrollingTabContainerView): void;
				public setSubtitle(param0: string): void;
				public initIndeterminateProgress(): void;
				public hasEmbeddedTabs(): boolean;
				public getVisibility(): number;
				public setNavigationContentDescription(param0: string): void;
				public saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public setLogo(param0: number): void;
				public getSubtitle(): string;
				public setMenuPrepared(): void;
				public setHomeButtonEnabled(param0: boolean): void;
				public initProgress(): void;
				public setCollapsible(param0: boolean): void;
				public getNavigationMode(): number;
				public animateToVisibility(param0: number): void;
				public getCustomView(): globalAndroid.view.View;
				public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
				public getDisplayOptions(): number;
				public dismissPopupMenus(): void;
				public setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
				public setMenu(param0: globalAndroid.view.Menu, param1: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
				public isTitleTruncated(): boolean;
				public getDropdownItemCount(): number;
				public setNavigationIcon(param0: number): void;
				public canShowOverflowMenu(): boolean;
				public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public hasExpandedActionView(): boolean;
				public getTitle(): string;
				public hasIcon(): boolean;
				public isOverflowMenuShowing(): boolean;
				public setMenuCallbacks(param0: androidx.appcompat.view.menu.MenuPresenter.Callback, param1: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
				public setNavigationMode(param0: number): void;
				public setDropdownSelectedPosition(param0: number): void;
				public isOverflowMenuShowPending(): boolean;
				public getViewGroup(): globalAndroid.view.ViewGroup;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class DialogTitle {
				public static class: java.lang.Class<androidx.appcompat.widget.DialogTitle>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public constructor(param0: globalAndroid.content.Context);
				public onMeasure(param0: number, param1: number): void;
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class DrawableUtils {
				public static class: java.lang.Class<androidx.appcompat.widget.DrawableUtils>;
				public static INSETS_NONE: globalAndroid.graphics.Rect;
				public static canSafelyMutateDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				public static getOpticalBounds(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.Rect;
				public static parseTintMode(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.graphics.PorterDuff.Mode;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class DropDownListView {
				public static class: java.lang.Class<androidx.appcompat.widget.DropDownListView>;
				public static INVALID_POSITION: number;
				public static NO_POSITION: number;
				public drawableStateChanged(): void;
				public hasFocus(): boolean;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
				public isInTouchMode(): boolean;
				public onForwardedEvent(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
				public setSelector(param0: globalAndroid.graphics.drawable.Drawable): void;
				public isFocused(): boolean;
				public hasWindowFocus(): boolean;
				public onDetachedFromWindow(): void;
				public lookForSelectablePosition(param0: number, param1: boolean): number;
				public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public measureHeightOfChildrenCompat(param0: number, param1: number, param2: number, param3: number, param4: number): number;
			}
			export module DropDownListView {
				export class GateKeeperDrawable extends androidx.appcompat.graphics.drawable.DrawableWrapper {
					public static class: java.lang.Class<androidx.appcompat.widget.DropDownListView.GateKeeperDrawable>;
					public setHotspot(param0: number, param1: number): void;
					public setState(param0: native.Array<number>): boolean;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setHotspotBounds(param0: number, param1: number, param2: number, param3: number): void;
				}
				export class ResolveHoverRunnable {
					public static class: java.lang.Class<androidx.appcompat.widget.DropDownListView.ResolveHoverRunnable>;
					public run(): void;
					public cancel(): void;
					public post(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class FitWindowsFrameLayout implements androidx.appcompat.widget.FitWindowsViewGroup {
				public static class: java.lang.Class<androidx.appcompat.widget.FitWindowsFrameLayout>;
				public setOnFitSystemWindowsListener(param0: androidx.appcompat.widget.FitWindowsViewGroup.OnFitSystemWindowsListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public fitSystemWindows(param0: globalAndroid.graphics.Rect): boolean;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class FitWindowsLinearLayout implements androidx.appcompat.widget.FitWindowsViewGroup {
				public static class: java.lang.Class<androidx.appcompat.widget.FitWindowsLinearLayout>;
				public setOnFitSystemWindowsListener(param0: androidx.appcompat.widget.FitWindowsViewGroup.OnFitSystemWindowsListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public fitSystemWindows(param0: globalAndroid.graphics.Rect): boolean;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class FitWindowsViewGroup {
				public static class: java.lang.Class<androidx.appcompat.widget.FitWindowsViewGroup>;
				/**
				 * Constructs a new instance of the androidx.appcompat.widget.FitWindowsViewGroup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setOnFitSystemWindowsListener(param0: androidx.appcompat.widget.FitWindowsViewGroup.OnFitSystemWindowsListener): void });
				public constructor();
				public setOnFitSystemWindowsListener(param0: androidx.appcompat.widget.FitWindowsViewGroup.OnFitSystemWindowsListener): void;
			}
			export module FitWindowsViewGroup {
				export class OnFitSystemWindowsListener {
					public static class: java.lang.Class<androidx.appcompat.widget.FitWindowsViewGroup.OnFitSystemWindowsListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onFitSystemWindows(param0: globalAndroid.graphics.Rect): void });
					public constructor();
					public onFitSystemWindows(param0: globalAndroid.graphics.Rect): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export abstract class ForwardingListener {
				public static class: java.lang.Class<androidx.appcompat.widget.ForwardingListener>;
				public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
				public getPopup(): androidx.appcompat.view.menu.ShowableListMenu;
				public onViewAttachedToWindow(param0: globalAndroid.view.View): void;
				public onForwardingStopped(): boolean;
				public onViewDetachedFromWindow(param0: globalAndroid.view.View): void;
				public onForwardingStarted(): boolean;
				public constructor(param0: globalAndroid.view.View);
			}
			export module ForwardingListener {
				export class DisallowIntercept {
					public static class: java.lang.Class<androidx.appcompat.widget.ForwardingListener.DisallowIntercept>;
					public run(): void;
				}
				export class TriggerLongPress {
					public static class: java.lang.Class<androidx.appcompat.widget.ForwardingListener.TriggerLongPress>;
					public run(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class LinearLayoutCompat {
				public static class: java.lang.Class<androidx.appcompat.widget.LinearLayoutCompat>;
				public static HORIZONTAL: number;
				public static VERTICAL: number;
				public static SHOW_DIVIDER_NONE: number;
				public static SHOW_DIVIDER_BEGINNING: number;
				public static SHOW_DIVIDER_MIDDLE: number;
				public static SHOW_DIVIDER_END: number;
				public generateDefaultLayoutParams(): androidx.appcompat.widget.LinearLayoutCompat.LayoutParams;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getDividerDrawable(): globalAndroid.graphics.drawable.Drawable;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public getOrientation(): number;
				public isBaselineAligned(): boolean;
				public isMeasureWithLargestChildEnabled(): boolean;
				public getGravity(): number;
				public setVerticalGravity(param0: number): void;
				public constructor(param0: globalAndroid.content.Context);
				public getShowDividers(): number;
				public setBaselineAlignedChildIndex(param0: number): void;
				public setBaselineAligned(param0: boolean): void;
				public setGravity(param0: number): void;
				public setHorizontalGravity(param0: number): void;
				public setWeightSum(param0: number): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public getDividerWidth(): number;
				public getDividerPadding(): number;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setDividerPadding(param0: number): void;
				public getBaselineAlignedChildIndex(): number;
				public setOrientation(param0: number): void;
				public setMeasureWithLargestChildEnabled(param0: boolean): void;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.appcompat.widget.LinearLayoutCompat.LayoutParams;
				public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public onMeasure(param0: number, param1: number): void;
				public getWeightSum(): number;
				public setShowDividers(param0: number): void;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.appcompat.widget.LinearLayoutCompat.LayoutParams;
				public setDividerDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public shouldDelayChildPressedState(): boolean;
				public getBaseline(): number;
				public hasDividerBeforeChildAt(param0: number): boolean;
			}
			export module LinearLayoutCompat {
				export class DividerMode {
					public static class: java.lang.Class<androidx.appcompat.widget.LinearLayoutCompat.DividerMode>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.LinearLayoutCompat$DividerMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.appcompat.widget.LinearLayoutCompat.LayoutParams>;
					public weight: number;
					public gravity: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.appcompat.widget.LinearLayoutCompat.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: number, param1: number, param2: number);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public constructor(param0: number, param1: number);
				}
				export class OrientationMode {
					public static class: java.lang.Class<androidx.appcompat.widget.LinearLayoutCompat.OrientationMode>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.LinearLayoutCompat$OrientationMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ListPopupWindow extends androidx.appcompat.view.menu.ShowableListMenu {
				public static class: java.lang.Class<androidx.appcompat.widget.ListPopupWindow>;
				public static POSITION_PROMPT_ABOVE: number;
				public static POSITION_PROMPT_BELOW: number;
				public static MATCH_PARENT: number;
				public static WRAP_CONTENT: number;
				public static INPUT_METHOD_FROM_FOCUSABLE: number;
				public static INPUT_METHOD_NEEDED: number;
				public static INPUT_METHOD_NOT_NEEDED: number;
				public setListSelector(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setHeight(param0: number): void;
				public setDropDownAlwaysVisible(param0: boolean): void;
				public getHeight(): number;
				public getSelectedItem(): any;
				public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public createDragToOpenListener(param0: globalAndroid.view.View): globalAndroid.view.View.OnTouchListener;
				public setOnItemClickListener(param0: globalAndroid.widget.AdapterView.OnItemClickListener): void;
				public getListView(): globalAndroid.widget.ListView;
				public setOverlapAnchor(param0: boolean): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				public show(): void;
				public isShowing(): boolean;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public getBackground(): globalAndroid.graphics.drawable.Drawable;
				public setInputMethodMode(param0: number): void;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setOnItemSelectedListener(param0: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
				public setModal(param0: boolean): void;
				public setForceIgnoreOutsideTouch(param0: boolean): void;
				public setSelection(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getSoftInputMode(): number;
				public postShow(): void;
				public getVerticalOffset(): number;
				public clearListSelection(): void;
				public setAdapter(param0: globalAndroid.widget.ListAdapter): void;
				public setWidth(param0: number): void;
				public isDropDownAlwaysVisible(): boolean;
				public getSelectedItemPosition(): number;
				public setAnimationStyle(param0: number): void;
				public setEpicenterBounds(param0: globalAndroid.graphics.Rect): void;
				public setVerticalOffset(param0: number): void;
				public getInputMethodMode(): number;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public dismiss(): void;
				public setHorizontalOffset(param0: number): void;
				public isModal(): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public getSelectedView(): globalAndroid.view.View;
				public getHorizontalOffset(): number;
				public setPromptView(param0: globalAndroid.view.View): void;
				public isInputMethodNotNeeded(): boolean;
				public setDropDownGravity(param0: number): void;
				public setWindowLayoutType(param0: number): void;
				public onKeyPreIme(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public getAnimationStyle(): number;
				public setContentWidth(param0: number): void;
				public getPromptPosition(): number;
				public getAnchorView(): globalAndroid.view.View;
				public setAnchorView(param0: globalAndroid.view.View): void;
				public getWidth(): number;
				public setSoftInputMode(param0: number): void;
				public performItemClick(param0: number): boolean;
				public setPromptPosition(param0: number): void;
				public getSelectedItemId(): number;
			}
			export module ListPopupWindow {
				export class ListSelectorHider {
					public static class: java.lang.Class<androidx.appcompat.widget.ListPopupWindow.ListSelectorHider>;
					public run(): void;
				}
				export class PopupDataSetObserver {
					public static class: java.lang.Class<androidx.appcompat.widget.ListPopupWindow.PopupDataSetObserver>;
					public onChanged(): void;
					public onInvalidated(): void;
				}
				export class PopupScrollListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ListPopupWindow.PopupScrollListener>;
					public onScrollStateChanged(param0: globalAndroid.widget.AbsListView, param1: number): void;
					public onScroll(param0: globalAndroid.widget.AbsListView, param1: number, param2: number, param3: number): void;
				}
				export class PopupTouchInterceptor {
					public static class: java.lang.Class<androidx.appcompat.widget.ListPopupWindow.PopupTouchInterceptor>;
					public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
				}
				export class ResizePopupRunnable {
					public static class: java.lang.Class<androidx.appcompat.widget.ListPopupWindow.ResizePopupRunnable>;
					public run(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class MenuItemHoverListener {
				public static class: java.lang.Class<androidx.appcompat.widget.MenuItemHoverListener>;
				/**
				 * Constructs a new instance of the androidx.appcompat.widget.MenuItemHoverListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onItemHoverExit(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): void; onItemHoverEnter(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): void });
				public constructor();
				public onItemHoverExit(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): void;
				public onItemHoverEnter(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class MenuPopupWindow extends androidx.appcompat.widget.ListPopupWindow implements androidx.appcompat.widget.MenuItemHoverListener {
				public static class: java.lang.Class<androidx.appcompat.widget.MenuPopupWindow>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setEnterTransition(param0: any): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public onItemHoverExit(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): void;
				public getListView(): globalAndroid.widget.ListView;
				public onItemHoverEnter(param0: androidx.appcompat.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): void;
				public setTouchModal(param0: boolean): void;
				public dismiss(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				public show(): void;
				public setExitTransition(param0: any): void;
				public setHoverListener(param0: androidx.appcompat.widget.MenuItemHoverListener): void;
				public isShowing(): boolean;
				public constructor(param0: globalAndroid.content.Context);
			}
			export module MenuPopupWindow {
				export class MenuDropDownListView extends androidx.appcompat.widget.DropDownListView {
					public static class: java.lang.Class<androidx.appcompat.widget.MenuPopupWindow.MenuDropDownListView>;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: boolean);
					public setHoverListener(param0: androidx.appcompat.widget.MenuItemHoverListener): void;
					public clearSelection(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class PopupMenu {
				public static class: java.lang.Class<androidx.appcompat.widget.PopupMenu>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.View, param2: number, param3: number, param4: number);
				public inflate(param0: number): void;
				public getMenuInflater(): globalAndroid.view.MenuInflater;
				public getDragToOpenListener(): globalAndroid.view.View.OnTouchListener;
				public dismiss(): void;
				public getMenu(): globalAndroid.view.Menu;
				public show(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.View, param2: number);
				public getGravity(): number;
				public setOnDismissListener(param0: androidx.appcompat.widget.PopupMenu.OnDismissListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.View);
				public setOnMenuItemClickListener(param0: androidx.appcompat.widget.PopupMenu.OnMenuItemClickListener): void;
				public setGravity(param0: number): void;
			}
			export module PopupMenu {
				export class OnDismissListener {
					public static class: java.lang.Class<androidx.appcompat.widget.PopupMenu.OnDismissListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.PopupMenu$OnDismissListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onDismiss(param0: androidx.appcompat.widget.PopupMenu): void });
					public constructor();
					public onDismiss(param0: androidx.appcompat.widget.PopupMenu): void;
				}
				export class OnMenuItemClickListener {
					public static class: java.lang.Class<androidx.appcompat.widget.PopupMenu.OnMenuItemClickListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean });
					public constructor();
					public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ResourcesWrapper {
				public static class: java.lang.Class<androidx.appcompat.widget.ResourcesWrapper>;
				public getDimensionPixelSize(param0: number): number;
				public openRawResourceFd(param0: number): globalAndroid.content.res.AssetFileDescriptor;
				public getDrawableForDensity(param0: number, param1: number): globalAndroid.graphics.drawable.Drawable;
				public getString(param0: number): string;
				public getInteger(param0: number): number;
				public getLayout(param0: number): globalAndroid.content.res.XmlResourceParser;
				public getConfiguration(): globalAndroid.content.res.Configuration;
				public getAnimation(param0: number): globalAndroid.content.res.XmlResourceParser;
				public getDisplayMetrics(): globalAndroid.util.DisplayMetrics;
				public getDrawableForDensity(param0: number, param1: number, param2: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				public getResourceEntryName(param0: number): string;
				public parseBundleExtra(param0: string, param1: globalAndroid.util.AttributeSet, param2: globalAndroid.os.Bundle): void;
				public getDrawable(param0: number, param1: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				public getString(param0: number, param1: native.Array<any>): string;
				public parseBundleExtras(param0: globalAndroid.content.res.XmlResourceParser, param1: globalAndroid.os.Bundle): void;
				public updateConfiguration(param0: globalAndroid.content.res.Configuration, param1: globalAndroid.util.DisplayMetrics): void;
				public openRawResource(param0: number, param1: globalAndroid.util.TypedValue): java.io.InputStream;
				public getTextArray(param0: number): native.Array<string>;
				public obtainTypedArray(param0: number): globalAndroid.content.res.TypedArray;
				public getDimension(param0: number): number;
				public getResourceTypeName(param0: number): string;
				public getQuantityText(param0: number, param1: number): string;
				public getMovie(param0: number): globalAndroid.graphics.Movie;
				public openRawResource(param0: number): java.io.InputStream;
				public getValueForDensity(param0: number, param1: number, param2: globalAndroid.util.TypedValue, param3: boolean): void;
				public getText(param0: number): string;
				public getIntArray(param0: number): native.Array<number>;
				public getValue(param0: number, param1: globalAndroid.util.TypedValue, param2: boolean): void;
				public obtainAttributes(param0: globalAndroid.util.AttributeSet, param1: native.Array<number>): globalAndroid.content.res.TypedArray;
				public getColor(param0: number): number;
				public constructor(param0: globalAndroid.content.res.Resources);
				public getStringArray(param0: number): native.Array<string>;
				public getFraction(param0: number, param1: number, param2: number): number;
				public getQuantityString(param0: number, param1: number, param2: native.Array<any>): string;
				public getDrawable(param0: number): globalAndroid.graphics.drawable.Drawable;
				public getText(param0: number, param1: string): string;
				public getDimensionPixelOffset(param0: number): number;
				public getXml(param0: number): globalAndroid.content.res.XmlResourceParser;
				public getResourcePackageName(param0: number): string;
				public getColorStateList(param0: number): globalAndroid.content.res.ColorStateList;
				public getBoolean(param0: number): boolean;
				public getIdentifier(param0: string, param1: string, param2: string): number;
				public getResourceName(param0: number): string;
				public getQuantityString(param0: number, param1: number): string;
				public getValue(param0: string, param1: globalAndroid.util.TypedValue, param2: boolean): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class RtlSpacingHelper {
				public static class: java.lang.Class<androidx.appcompat.widget.RtlSpacingHelper>;
				public static UNDEFINED: number;
				public getEnd(): number;
				public setDirection(param0: boolean): void;
				public getLeft(): number;
				public getStart(): number;
				public setAbsolute(param0: number, param1: number): void;
				public getRight(): number;
				public setRelative(param0: number, param1: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ScrollingTabContainerView {
				public static class: java.lang.Class<androidx.appcompat.widget.ScrollingTabContainerView>;
				public mVisibilityAnim: globalAndroid.view.ViewPropertyAnimator;
				public mVisAnimListener: androidx.appcompat.widget.ScrollingTabContainerView.VisibilityAnimListener;
				public animateToVisibility(param0: number): void;
				public updateTab(param0: number): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: number, param2: boolean): void;
				public setContentHeight(param0: number): void;
				public onNothingSelected(param0: globalAndroid.widget.AdapterView<any>): void;
				public setTabSelected(param0: number): void;
				public onItemSelected(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public constructor(param0: globalAndroid.content.Context);
				public onMeasure(param0: number, param1: number): void;
				public onDetachedFromWindow(): void;
				public setAllowCollapse(param0: boolean): void;
				public animateToTab(param0: number): void;
				public addTab(param0: androidx.appcompat.app.ActionBar.Tab, param1: boolean): void;
				public removeTabAt(param0: number): void;
				public removeAllTabs(): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public onAttachedToWindow(): void;
			}
			export module ScrollingTabContainerView {
				export class TabAdapter {
					public static class: java.lang.Class<androidx.appcompat.widget.ScrollingTabContainerView.TabAdapter>;
					public getItem(param0: number): any;
					public getCount(): number;
					public getItemId(param0: number): number;
					public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				}
				export class TabClickListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ScrollingTabContainerView.TabClickListener>;
					public onClick(param0: globalAndroid.view.View): void;
				}
				export class TabView {
					public static class: java.lang.Class<androidx.appcompat.widget.ScrollingTabContainerView.TabView>;
					public constructor(param0: androidx.appcompat.widget.ScrollingTabContainerView, param1: globalAndroid.content.Context, param2: androidx.appcompat.app.ActionBar.Tab, param3: boolean);
					public onMeasure(param0: number, param1: number): void;
					public setSelected(param0: boolean): void;
					public update(): void;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public getTab(): androidx.appcompat.app.ActionBar.Tab;
					public bindTab(param0: androidx.appcompat.app.ActionBar.Tab): void;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
				}
				export class VisibilityAnimListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ScrollingTabContainerView.VisibilityAnimListener>;
					public withFinalVisibility(param0: globalAndroid.view.ViewPropertyAnimator, param1: number): androidx.appcompat.widget.ScrollingTabContainerView.VisibilityAnimListener;
					public constructor(param0: androidx.appcompat.widget.ScrollingTabContainerView);
					public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
					public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
					public onAnimationStart(param0: globalAndroid.animation.Animator): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class SearchView extends androidx.appcompat.widget.LinearLayoutCompat implements androidx.appcompat.view.CollapsibleActionView {
				public static class: java.lang.Class<androidx.appcompat.widget.SearchView>;
				public isIconified(): boolean;
				public setMaxWidth(param0: number): void;
				public setIconified(param0: boolean): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setAppSearchData(param0: globalAndroid.os.Bundle): void;
				public setIconifiedByDefault(param0: boolean): void;
				public setOnSearchClickListener(param0: globalAndroid.view.View.OnClickListener): void;
				public getMaxWidth(): number;
				public isQueryRefinementEnabled(): boolean;
				public setQuery(param0: string, param1: boolean): void;
				public setInputType(param0: number): void;
				public setQueryHint(param0: string): void;
				public getInputType(): number;
				public constructor(param0: globalAndroid.content.Context);
				public isSubmitButtonEnabled(): boolean;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public setSubmitButtonEnabled(param0: boolean): void;
				public setOnSuggestionListener(param0: androidx.appcompat.widget.SearchView.OnSuggestionListener): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public setQueryRefinementEnabled(param0: boolean): void;
				public getQueryHint(): string;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setOnCloseListener(param0: androidx.appcompat.widget.SearchView.OnCloseListener): void;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public onActionViewExpanded(): void;
				public setOnQueryTextListener(param0: androidx.appcompat.widget.SearchView.OnQueryTextListener): void;
				public setSuggestionsAdapter(param0: androidx.cursoradapter.widget.CursorAdapter): void;
				public getSuggestionsAdapter(): androidx.cursoradapter.widget.CursorAdapter;
				public setSearchableInfo(param0: globalAndroid.app.SearchableInfo): void;
				public getImeOptions(): number;
				public clearFocus(): void;
				public getQuery(): string;
				public onMeasure(param0: number, param1: number): void;
				public requestFocus(param0: number, param1: globalAndroid.graphics.Rect): boolean;
				public onDetachedFromWindow(): void;
				public isIconfiedByDefault(): boolean;
				public setOnQueryTextFocusChangeListener(param0: globalAndroid.view.View.OnFocusChangeListener): void;
				public onWindowFocusChanged(param0: boolean): void;
				public onActionViewCollapsed(): void;
				public setImeOptions(param0: number): void;
			}
			export module SearchView {
				export class AutoCompleteTextViewReflector {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.AutoCompleteTextViewReflector>;
				}
				export class OnCloseListener {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.OnCloseListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.SearchView$OnCloseListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onClose(): boolean });
					public constructor();
					public onClose(): boolean;
				}
				export class OnQueryTextListener {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.OnQueryTextListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.SearchView$OnQueryTextListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onQueryTextSubmit(param0: string): boolean; onQueryTextChange(param0: string): boolean });
					public constructor();
					public onQueryTextSubmit(param0: string): boolean;
					public onQueryTextChange(param0: string): boolean;
				}
				export class OnSuggestionListener {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.OnSuggestionListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.SearchView$OnSuggestionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onSuggestionSelect(param0: number): boolean; onSuggestionClick(param0: number): boolean });
					public constructor();
					public onSuggestionClick(param0: number): boolean;
					public onSuggestionSelect(param0: number): boolean;
				}
				export class SavedState extends androidx.customview.view.AbsSavedState {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.appcompat.widget.SearchView.SavedState>;
					public constructor(param0: globalAndroid.os.Parcel);
					public toString(): string;
					public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: globalAndroid.os.Parcelable);
				}
				export class SearchAutoComplete extends androidx.appcompat.widget.AppCompatAutoCompleteTextView {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.SearchAutoComplete>;
					public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
					public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public enoughToFilter(): boolean;
					public performCompletion(): void;
					public onKeyPreIme(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public setThreshold(param0: number): void;
					public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public replaceText(param0: string): void;
					public onFinishInflate(): void;
					public onWindowFocusChanged(param0: boolean): void;
					public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
					public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				}
				export class UpdatableTouchDelegate {
					public static class: java.lang.Class<androidx.appcompat.widget.SearchView.UpdatableTouchDelegate>;
					public setBounds(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect): void;
					public constructor(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: globalAndroid.view.View);
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ShareActionProvider extends androidx.core.view.ActionProvider {
				public static class: java.lang.Class<androidx.appcompat.widget.ShareActionProvider>;
				public static DEFAULT_SHARE_HISTORY_FILE_NAME: string;
				public setOnShareTargetSelectedListener(param0: androidx.appcompat.widget.ShareActionProvider.OnShareTargetSelectedListener): void;
				public onCreateActionView(param0: globalAndroid.view.MenuItem): globalAndroid.view.View;
				public constructor(param0: globalAndroid.content.Context);
				public onCreateActionView(): globalAndroid.view.View;
				public hasSubMenu(): boolean;
				public setShareIntent(param0: globalAndroid.content.Intent): void;
				public setShareHistoryFileName(param0: string): void;
				public onPrepareSubMenu(param0: globalAndroid.view.SubMenu): void;
			}
			export module ShareActionProvider {
				export class OnShareTargetSelectedListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ShareActionProvider.OnShareTargetSelectedListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onShareTargetSelected(param0: androidx.appcompat.widget.ShareActionProvider, param1: globalAndroid.content.Intent): boolean });
					public constructor();
					public onShareTargetSelected(param0: androidx.appcompat.widget.ShareActionProvider, param1: globalAndroid.content.Intent): boolean;
				}
				export class ShareActivityChooserModelPolicy extends androidx.appcompat.widget.ActivityChooserModel.OnChooseActivityListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ShareActionProvider.ShareActivityChooserModelPolicy>;
					public onChooseActivity(param0: androidx.appcompat.widget.ActivityChooserModel, param1: globalAndroid.content.Intent): boolean;
				}
				export class ShareMenuItemOnMenuItemClickListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ShareActionProvider.ShareMenuItemOnMenuItemClickListener>;
					public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class SuggestionsAdapter extends androidx.cursoradapter.widget.ResourceCursorAdapter {
				public static class: java.lang.Class<androidx.appcompat.widget.SuggestionsAdapter>;
				public setQueryRefinement(param0: number): void;
				public close(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: boolean);
				public notifyDataSetChanged(): void;
				public getCursor(): globalAndroid.database.Cursor;
				public changeCursor(param0: globalAndroid.database.Cursor): void;
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: number);
				public convertToString(param0: globalAndroid.database.Cursor): string;
				public onClick(param0: globalAndroid.view.View): void;
				public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public hasStableIds(): boolean;
				public newView(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public static getColumnString(param0: globalAndroid.database.Cursor, param1: string): string;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: number);
				public getQueryRefinement(): number;
				public bindView(param0: globalAndroid.view.View, param1: globalAndroid.content.Context, param2: globalAndroid.database.Cursor): void;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor);
				public notifyDataSetInvalidated(): void;
				public constructor(param0: globalAndroid.content.Context, param1: androidx.appcompat.widget.SearchView, param2: globalAndroid.app.SearchableInfo, param3: java.util.WeakHashMap<string, globalAndroid.graphics.drawable.Drawable.ConstantState>);
				public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: boolean);
				public runQueryOnBackgroundThread(param0: string): globalAndroid.database.Cursor;
			}
			export module SuggestionsAdapter {
				export class ChildViewCache {
					public static class: java.lang.Class<androidx.appcompat.widget.SuggestionsAdapter.ChildViewCache>;
					public mText1: globalAndroid.widget.TextView;
					public mText2: globalAndroid.widget.TextView;
					public mIcon1: globalAndroid.widget.ImageView;
					public mIcon2: globalAndroid.widget.ImageView;
					public mIconRefine: globalAndroid.widget.ImageView;
					public constructor(param0: globalAndroid.view.View);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class SwitchCompat {
				public static class: java.lang.Class<androidx.appcompat.widget.SwitchCompat>;
				public setChecked(param0: boolean): void;
				public setTrackTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public drawableHotspotChanged(param0: number, param1: number): void;
				public setTrackDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getTextOff(): string;
				public setThumbTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public setTextOn(param0: string): void;
				public getTrackTintList(): globalAndroid.content.res.ColorStateList;
				public onCreateDrawableState(param0: number): native.Array<number>;
				public setSwitchTypeface(param0: globalAndroid.graphics.Typeface, param1: number): void;
				public setThumbTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public setThumbResource(param0: number): void;
				public getTextOn(): string;
				public setThumbTextPadding(param0: number): void;
				public getThumbTintList(): globalAndroid.content.res.ColorStateList;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getSplitTrack(): boolean;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getTrackTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setTextOff(param0: string): void;
				public setSwitchMinWidth(param0: number): void;
				public onPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public drawableStateChanged(): void;
				public setShowText(param0: boolean): void;
				public jumpDrawablesToCurrentState(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getThumbTextPadding(): number;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public setSwitchTypeface(param0: globalAndroid.graphics.Typeface): void;
				public setSplitTrack(param0: boolean): void;
				public setSwitchTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public toggle(): void;
				public getSwitchMinWidth(): number;
				public setSwitchPadding(param0: number): void;
				public getThumbTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public getSwitchPadding(): number;
				public constructor(param0: globalAndroid.content.Context);
				public getTrackDrawable(): globalAndroid.graphics.drawable.Drawable;
				public setCustomSelectionActionModeCallback(param0: globalAndroid.view.ActionMode.Callback): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public getCompoundPaddingLeft(): number;
				public getThumbDrawable(): globalAndroid.graphics.drawable.Drawable;
				public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
				public setThumbDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public setTrackTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public getShowText(): boolean;
				public onMeasure(param0: number, param1: number): void;
				public getCompoundPaddingRight(): number;
				public setTrackResource(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ThemeUtils {
				public static class: java.lang.Class<androidx.appcompat.widget.ThemeUtils>;
				public static createDisabledStateList(param0: number, param1: number): globalAndroid.content.res.ColorStateList;
				public static getThemeAttrColor(param0: globalAndroid.content.Context, param1: number): number;
				public static getThemeAttrColorStateList(param0: globalAndroid.content.Context, param1: number): globalAndroid.content.res.ColorStateList;
				public static getDisabledThemeAttrColor(param0: globalAndroid.content.Context, param1: number): number;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ThemedSpinnerAdapter {
				public static class: java.lang.Class<androidx.appcompat.widget.ThemedSpinnerAdapter>;
				/**
				 * Constructs a new instance of the androidx.appcompat.widget.ThemedSpinnerAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setDropDownViewTheme(param0: globalAndroid.content.res.Resources.Theme): void; getDropDownViewTheme(): globalAndroid.content.res.Resources.Theme });
				public constructor();
				public setDropDownViewTheme(param0: globalAndroid.content.res.Resources.Theme): void;
				public getDropDownViewTheme(): globalAndroid.content.res.Resources.Theme;
			}
			export module ThemedSpinnerAdapter {
				export class Helper {
					public static class: java.lang.Class<androidx.appcompat.widget.ThemedSpinnerAdapter.Helper>;
					public constructor(param0: globalAndroid.content.Context);
					public setDropDownViewTheme(param0: globalAndroid.content.res.Resources.Theme): void;
					public getDropDownViewInflater(): globalAndroid.view.LayoutInflater;
					public getDropDownViewTheme(): globalAndroid.content.res.Resources.Theme;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TintContextWrapper {
				public static class: java.lang.Class<androidx.appcompat.widget.TintContextWrapper>;
				public setTheme(param0: number): void;
				public getResources(): globalAndroid.content.res.Resources;
				public getTheme(): globalAndroid.content.res.Resources.Theme;
				public getAssets(): globalAndroid.content.res.AssetManager;
				public static wrap(param0: globalAndroid.content.Context): globalAndroid.content.Context;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TintInfo {
				public static class: java.lang.Class<androidx.appcompat.widget.TintInfo>;
				public mTintList: globalAndroid.content.res.ColorStateList;
				public mTintMode: globalAndroid.graphics.PorterDuff.Mode;
				public mHasTintMode: boolean;
				public mHasTintList: boolean;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TintResources extends androidx.appcompat.widget.ResourcesWrapper {
				public static class: java.lang.Class<androidx.appcompat.widget.TintResources>;
				public getDrawable(param0: number, param1: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
				public constructor(param0: globalAndroid.content.res.Resources);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources);
				public getDrawable(param0: number): globalAndroid.graphics.drawable.Drawable;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TintTypedArray {
				public static class: java.lang.Class<androidx.appcompat.widget.TintTypedArray>;
				public static obtainStyledAttributes(param0: globalAndroid.content.Context, param1: number, param2: native.Array<number>): androidx.appcompat.widget.TintTypedArray;
				public recycle(): void;
				public getString(param0: number): string;
				public peekValue(param0: number): globalAndroid.util.TypedValue;
				public getFraction(param0: number, param1: number, param2: number, param3: number): number;
				public getFloat(param0: number, param1: number): number;
				public static obtainStyledAttributes(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: native.Array<number>): androidx.appcompat.widget.TintTypedArray;
				public getPositionDescription(): string;
				public hasValue(param0: number): boolean;
				public getNonResourceString(param0: number): string;
				public getInt(param0: number, param1: number): number;
				public getTextArray(param0: number): native.Array<string>;
				public getIndex(param0: number): number;
				public getInteger(param0: number, param1: number): number;
				public getText(param0: number): string;
				public getIndexCount(): number;
				public getDimensionPixelSize(param0: number, param1: number): number;
				public static obtainStyledAttributes(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: native.Array<number>, param3: number, param4: number): androidx.appcompat.widget.TintTypedArray;
				public getFont(param0: number, param1: number, param2: androidx.core.content.res.ResourcesCompat.FontCallback): globalAndroid.graphics.Typeface;
				public getLayoutDimension(param0: number, param1: number): number;
				public getResources(): globalAndroid.content.res.Resources;
				public length(): number;
				public getChangingConfigurations(): number;
				public getDrawable(param0: number): globalAndroid.graphics.drawable.Drawable;
				public getColor(param0: number, param1: number): number;
				public getColorStateList(param0: number): globalAndroid.content.res.ColorStateList;
				public getBoolean(param0: number, param1: boolean): boolean;
				public getResourceId(param0: number, param1: number): number;
				public getDimension(param0: number, param1: number): number;
				public getLayoutDimension(param0: number, param1: string): number;
				public getType(param0: number): number;
				public getDrawableIfKnown(param0: number): globalAndroid.graphics.drawable.Drawable;
				public getValue(param0: number, param1: globalAndroid.util.TypedValue): boolean;
				public getDimensionPixelOffset(param0: number, param1: number): number;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class Toolbar {
				public static class: java.lang.Class<androidx.appcompat.widget.Toolbar>;
				public setLogoDescription(param0: number): void;
				public setOnMenuItemClickListener(param0: androidx.appcompat.widget.Toolbar.OnMenuItemClickListener): void;
				public setPopupTheme(param0: number): void;
				public showOverflowMenu(): boolean;
				public getContentInsetLeft(): number;
				public getTitleMarginBottom(): number;
				public getOverflowIcon(): globalAndroid.graphics.drawable.Drawable;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public setTitleMarginStart(param0: number): void;
				public setTitle(param0: string): void;
				public setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTitle(param0: number): void;
				public setTitleMarginBottom(param0: number): void;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public getNavigationContentDescription(): string;
				public getContentInsetStartWithNavigation(): number;
				public getLogo(): globalAndroid.graphics.drawable.Drawable;
				public getContentInsetEndWithActions(): number;
				public setContentInsetsRelative(param0: number, param1: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public collapseActionView(): void;
				public setTitleMargin(param0: number, param1: number, param2: number, param3: number): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getTitleMarginStart(): number;
				public getMenu(): globalAndroid.view.Menu;
				public setLogoDescription(param0: string): void;
				public setNavigationContentDescription(param0: number): void;
				public getContentInsetEnd(): number;
				public hideOverflowMenu(): boolean;
				public setSubtitle(param0: string): void;
				public setNavigationContentDescription(param0: string): void;
				public setLogo(param0: number): void;
				public onDetachedFromWindow(): void;
				public getSubtitle(): string;
				public setSubtitle(param0: number): void;
				public setOverflowIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getCurrentContentInsetRight(): number;
				public setTitleMarginEnd(param0: number): void;
				public onRtlPropertiesChanged(param0: number): void;
				public setSubtitleTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public getTitleMarginTop(): number;
				public getContentInsetRight(): number;
				public getCurrentContentInsetEnd(): number;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public inflateMenu(param0: number): void;
				public setCollapsible(param0: boolean): void;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.appcompat.widget.Toolbar.LayoutParams;
				public getNavigationIcon(): globalAndroid.graphics.drawable.Drawable;
				public setMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.widget.ActionMenuPresenter): void;
				public getTitleMarginEnd(): number;
				public setNavigationOnClickListener(param0: globalAndroid.view.View.OnClickListener): void;
				public constructor(param0: globalAndroid.content.Context);
				public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getCurrentContentInsetStart(): number;
				public dismissPopupMenus(): void;
				public getLogoDescription(): string;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public setSubtitleTextColor(param0: number): void;
				public setContentInsetStartWithNavigation(param0: number): void;
				public generateDefaultLayoutParams(): androidx.appcompat.widget.Toolbar.LayoutParams;
				public setContentInsetsAbsolute(param0: number, param1: number): void;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.appcompat.widget.Toolbar.LayoutParams;
				public isTitleTruncated(): boolean;
				public setNavigationIcon(param0: number): void;
				public canShowOverflowMenu(): boolean;
				public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setTitleTextAppearance(param0: globalAndroid.content.Context, param1: number): void;
				public setContentInsetEndWithActions(param0: number): void;
				public hasExpandedActionView(): boolean;
				public getTitle(): string;
				public setTitleTextColor(param0: number): void;
				public isOverflowMenuShowing(): boolean;
				public setTitleMarginTop(param0: number): void;
				public setMenuCallbacks(param0: androidx.appcompat.view.menu.MenuPresenter.Callback, param1: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
				public getCurrentContentInsetLeft(): number;
				public onMeasure(param0: number, param1: number): void;
				public isOverflowMenuShowPending(): boolean;
				public getContentInsetStart(): number;
				public getPopupTheme(): number;
				public getWrapper(): androidx.appcompat.widget.DecorToolbar;
			}
			export module Toolbar {
				export class ExpandedActionViewMenuPresenter extends androidx.appcompat.view.menu.MenuPresenter {
					public static class: java.lang.Class<androidx.appcompat.widget.Toolbar.ExpandedActionViewMenuPresenter>;
					public getMenuView(param0: globalAndroid.view.ViewGroup): androidx.appcompat.view.menu.MenuView;
					public expandItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public getId(): number;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public collapseItemActionView(param0: androidx.appcompat.view.menu.MenuBuilder, param1: androidx.appcompat.view.menu.MenuItemImpl): boolean;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public initForMenu(param0: globalAndroid.content.Context, param1: androidx.appcompat.view.menu.MenuBuilder): void;
					public updateMenuView(param0: boolean): void;
					public setCallback(param0: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
					public onSubMenuSelected(param0: androidx.appcompat.view.menu.SubMenuBuilder): boolean;
					public onCloseMenu(param0: androidx.appcompat.view.menu.MenuBuilder, param1: boolean): void;
					public flagActionItems(): boolean;
				}
				export class LayoutParams extends androidx.appcompat.app.ActionBar.LayoutParams {
					public static class: java.lang.Class<androidx.appcompat.widget.Toolbar.LayoutParams>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.appcompat.app.ActionBar.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: number, param1: number, param2: number);
					public constructor(param0: androidx.appcompat.widget.Toolbar.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public constructor(param0: number);
					public constructor(param0: number, param1: number);
				}
				export class OnMenuItemClickListener {
					public static class: java.lang.Class<androidx.appcompat.widget.Toolbar.OnMenuItemClickListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.Toolbar$OnMenuItemClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean });
					public constructor();
					public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
				}
				export class SavedState extends androidx.customview.view.AbsSavedState {
					public static class: java.lang.Class<androidx.appcompat.widget.Toolbar.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.appcompat.widget.Toolbar.SavedState>;
					public constructor(param0: globalAndroid.os.Parcel);
					public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: globalAndroid.os.Parcelable);
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ToolbarWidgetWrapper extends androidx.appcompat.widget.DecorToolbar {
				public static class: java.lang.Class<androidx.appcompat.widget.ToolbarWidgetWrapper>;
				public getHeight(): number;
				public hasLogo(): boolean;
				public showOverflowMenu(): boolean;
				public setIcon(param0: number): void;
				public constructor(param0: androidx.appcompat.widget.Toolbar, param1: boolean);
				public setTitle(param0: string): void;
				public setDefaultNavigationContentDescription(param0: number): void;
				public setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getDropdownSelectedPosition(): number;
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setWindowTitle(param0: string): void;
				public setCustomView(param0: globalAndroid.view.View): void;
				public setDisplayOptions(param0: number): void;
				public collapseActionView(): void;
				public getContext(): globalAndroid.content.Context;
				public setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public getMenu(): globalAndroid.view.Menu;
				public setupAnimatorToVisibility(param0: number, param1: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setNavigationContentDescription(param0: number): void;
				public setVisibility(param0: number): void;
				public hideOverflowMenu(): boolean;
				public setEmbeddedTabView(param0: androidx.appcompat.widget.ScrollingTabContainerView): void;
				public setSubtitle(param0: string): void;
				public initIndeterminateProgress(): void;
				public hasEmbeddedTabs(): boolean;
				public getVisibility(): number;
				public setNavigationContentDescription(param0: string): void;
				public saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
				public constructor(param0: androidx.appcompat.widget.Toolbar, param1: boolean, param2: number, param3: number);
				public setLogo(param0: number): void;
				public getSubtitle(): string;
				public setMenuPrepared(): void;
				public setHomeButtonEnabled(param0: boolean): void;
				public initProgress(): void;
				public setCollapsible(param0: boolean): void;
				public getNavigationMode(): number;
				public animateToVisibility(param0: number): void;
				public getCustomView(): globalAndroid.view.View;
				public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
				public getDisplayOptions(): number;
				public dismissPopupMenus(): void;
				public setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
				public setMenu(param0: globalAndroid.view.Menu, param1: androidx.appcompat.view.menu.MenuPresenter.Callback): void;
				public isTitleTruncated(): boolean;
				public getDropdownItemCount(): number;
				public setNavigationIcon(param0: number): void;
				public canShowOverflowMenu(): boolean;
				public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
				public hasExpandedActionView(): boolean;
				public getTitle(): string;
				public hasIcon(): boolean;
				public isOverflowMenuShowing(): boolean;
				public setMenuCallbacks(param0: androidx.appcompat.view.menu.MenuPresenter.Callback, param1: androidx.appcompat.view.menu.MenuBuilder.Callback): void;
				public setNavigationMode(param0: number): void;
				public setDropdownSelectedPosition(param0: number): void;
				public isOverflowMenuShowPending(): boolean;
				public getViewGroup(): globalAndroid.view.ViewGroup;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TooltipCompat {
				public static class: java.lang.Class<androidx.appcompat.widget.TooltipCompat>;
				public static setTooltipText(param0: globalAndroid.view.View, param1: string): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TooltipCompatHandler {
				public static class: java.lang.Class<androidx.appcompat.widget.TooltipCompatHandler>;
				public onLongClick(param0: globalAndroid.view.View): boolean;
				public onHover(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
				public onViewAttachedToWindow(param0: globalAndroid.view.View): void;
				public onViewDetachedFromWindow(param0: globalAndroid.view.View): void;
				public static setTooltipText(param0: globalAndroid.view.View, param1: string): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class TooltipPopup {
				public static class: java.lang.Class<androidx.appcompat.widget.TooltipPopup>;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class VectorEnabledTintResources {
				public static class: java.lang.Class<androidx.appcompat.widget.VectorEnabledTintResources>;
				public static MAX_SDK_WHERE_REQUIRED: number;
				public static shouldBeUsed(): boolean;
				public static setCompatVectorFromResourcesEnabled(param0: boolean): void;
				public static isCompatVectorFromResourcesEnabled(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources);
				public getDrawable(param0: number): globalAndroid.graphics.drawable.Drawable;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ViewStubCompat {
				public static class: java.lang.Class<androidx.appcompat.widget.ViewStubCompat>;
				public setLayoutInflater(param0: globalAndroid.view.LayoutInflater): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getInflatedId(): number;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
				public setInflatedId(param0: number): void;
				public setVisibility(param0: number): void;
				public setOnInflateListener(param0: androidx.appcompat.widget.ViewStubCompat.OnInflateListener): void;
				public setLayoutResource(param0: number): void;
				public getLayoutResource(): number;
				public onMeasure(param0: number, param1: number): void;
				public inflate(): globalAndroid.view.View;
				public getLayoutInflater(): globalAndroid.view.LayoutInflater;
			}
			export module ViewStubCompat {
				export class OnInflateListener {
					public static class: java.lang.Class<androidx.appcompat.widget.ViewStubCompat.OnInflateListener>;
					/**
					 * Constructs a new instance of the androidx.appcompat.widget.ViewStubCompat$OnInflateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onInflate(param0: androidx.appcompat.widget.ViewStubCompat, param1: globalAndroid.view.View): void });
					public constructor();
					public onInflate(param0: androidx.appcompat.widget.ViewStubCompat, param1: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class ViewUtils {
				public static class: java.lang.Class<androidx.appcompat.widget.ViewUtils>;
				public static isLayoutRtl(param0: globalAndroid.view.View): boolean;
				public static makeOptionalFitsSystemWindows(param0: globalAndroid.view.View): void;
				public static computeFitSystemWindows(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect): void;
			}
		}
	}
}

declare module androidx {
	export module appcompat {
		export module widget {
			export class WithHint {
				public static class: java.lang.Class<androidx.appcompat.widget.WithHint>;
				/**
				 * Constructs a new instance of the androidx.appcompat.widget.WithHint interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { getHint(): string });
				public constructor();
				public getHint(): string;
			}
		}
	}
}

declare module androidx {
	export module arch {
		export module core {
			export module executor {
				export class ArchTaskExecutor extends androidx.arch.core.executor.TaskExecutor {
					public static class: java.lang.Class<androidx.arch.core.executor.ArchTaskExecutor>;
					public setDelegate(param0: androidx.arch.core.executor.TaskExecutor): void;
					public static getInstance(): androidx.arch.core.executor.ArchTaskExecutor;
					public postToMainThread(param0: java.lang.Runnable): void;
					public static getMainThreadExecutor(): java.util.concurrent.Executor;
					public isMainThread(): boolean;
					public static getIOThreadExecutor(): java.util.concurrent.Executor;
					public executeOnDiskIO(param0: java.lang.Runnable): void;
				}
			}
		}
	}
}

declare module androidx {
	export module arch {
		export module core {
			export module executor {
				export class DefaultTaskExecutor extends androidx.arch.core.executor.TaskExecutor {
					public static class: java.lang.Class<androidx.arch.core.executor.DefaultTaskExecutor>;
					public constructor();
					public postToMainThread(param0: java.lang.Runnable): void;
					public isMainThread(): boolean;
					public executeOnDiskIO(param0: java.lang.Runnable): void;
				}
			}
		}
	}
}

declare module androidx {
	export module arch {
		export module core {
			export module executor {
				export abstract class TaskExecutor {
					public static class: java.lang.Class<androidx.arch.core.executor.TaskExecutor>;
					public executeOnMainThread(param0: java.lang.Runnable): void;
					public constructor();
					public postToMainThread(param0: java.lang.Runnable): void;
					public isMainThread(): boolean;
					public executeOnDiskIO(param0: java.lang.Runnable): void;
				}
			}
		}
	}
}

declare module androidx {
	export module arch {
		export module core {
			export module internal {
				export class FastSafeIterableMap<K, V> extends androidx.arch.core.internal.SafeIterableMap<any, any> {
					public static class: java.lang.Class<androidx.arch.core.internal.FastSafeIterableMap<any, any>>;
					public remove(param0: any): any;
					public ceil(param0: any): java.util.Map.Entry<any, any>;
					public constructor();
					public get(param0: any): androidx.arch.core.internal.SafeIterableMap.Entry<any, any>;
					public putIfAbsent(param0: any, param1: any): any;
					public contains(param0: any): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module arch {
		export module core {
			export module internal {
				export class SafeIterableMap<K, V> extends java.lang.Iterable<java.util.Map.Entry<any, any>> {
					public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap<any, any>>;
					public descendingIterator(): java.util.Iterator<java.util.Map.Entry<any, any>>;
					public put(param0: any, param1: any): androidx.arch.core.internal.SafeIterableMap.Entry<any, any>;
					public eldest(): java.util.Map.Entry<any, any>;
					public iterator(): java.util.Iterator<java.util.Map.Entry<any, any>>;
					public size(): number;
					public equals(param0: any): boolean;
					public remove(param0: any): any;
					public iteratorWithAdditions(): androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions;
					public toString(): string;
					public constructor();
					public newest(): java.util.Map.Entry<any, any>;
					public get(param0: any): androidx.arch.core.internal.SafeIterableMap.Entry<any, any>;
					public putIfAbsent(param0: any, param1: any): any;
					public hashCode(): number;
				}
				export module SafeIterableMap {
					export class AscendingIterator<K, V> extends androidx.arch.core.internal.SafeIterableMap.ListIterator<any, any> {
						public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap.AscendingIterator<any, any>>;
						public supportRemove(param0: androidx.arch.core.internal.SafeIterableMap.Entry<any, any>): void;
					}
					export class DescendingIterator<K, V> extends androidx.arch.core.internal.SafeIterableMap.ListIterator<any, any> {
						public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap.DescendingIterator<any, any>>;
						public supportRemove(param0: androidx.arch.core.internal.SafeIterableMap.Entry<any, any>): void;
					}
					export class Entry<K, V> extends java.util.Map.Entry<any, any> {
						public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap.Entry<any, any>>;
						public setValue(param0: any): any;
						public getValue(): any;
						public getKey(): any;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
					}
					export class IteratorWithAdditions extends java.lang.Object {
						public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions>;
						public supportRemove(param0: androidx.arch.core.internal.SafeIterableMap.Entry<any, any>): void;
						public next(): java.util.Map.Entry<any, any>;
						public hasNext(): boolean;
					}
					export abstract class ListIterator<K, V> extends java.lang.Object {
						public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap.ListIterator<any, any>>;
						public next(): java.util.Map.Entry<K, V>;
						public hasNext(): boolean;
						public supportRemove(param0: androidx.arch.core.internal.SafeIterableMap.Entry<K, V>): void;
					}
					export class SupportRemove<K, V> extends java.lang.Object {
						public static class: java.lang.Class<androidx.arch.core.internal.SafeIterableMap.SupportRemove<any, any>>;
						/**
						 * Constructs a new instance of the androidx.arch.core.internal.SafeIterableMap$SupportRemove interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { supportRemove(param0: androidx.arch.core.internal.SafeIterableMap.Entry<K, V>): void });
						public constructor();
						public supportRemove(param0: androidx.arch.core.internal.SafeIterableMap.Entry<K, V>): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module arch {
		export module core {
			export module util {
				export class Function<I, O> extends java.lang.Object {
					public static class: java.lang.Class<androidx.arch.core.util.Function<any, any>>;
					/**
					 * Constructs a new instance of the androidx.arch.core.util.Function<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { apply(param0: I): O });
					public constructor();
					public apply(param0: I): O;
				}
			}
		}
	}
}

declare module androidx {
	export module asynclayoutinflater {
		export module view {
			export class AsyncLayoutInflater {
				public static class: java.lang.Class<androidx.asynclayoutinflater.view.AsyncLayoutInflater>;
				public inflate(param0: number, param1: globalAndroid.view.ViewGroup, param2: androidx.asynclayoutinflater.view.AsyncLayoutInflater.OnInflateFinishedListener): void;
				public constructor(param0: globalAndroid.content.Context);
			}
			export module AsyncLayoutInflater {
				export class BasicInflater {
					public static class: java.lang.Class<androidx.asynclayoutinflater.view.AsyncLayoutInflater.BasicInflater>;
					public onCreateView(param0: string, param1: globalAndroid.util.AttributeSet): globalAndroid.view.View;
					public cloneInContext(param0: globalAndroid.content.Context): globalAndroid.view.LayoutInflater;
				}
				export class InflateRequest {
					public static class: java.lang.Class<androidx.asynclayoutinflater.view.AsyncLayoutInflater.InflateRequest>;
				}
				export class InflateThread {
					public static class: java.lang.Class<androidx.asynclayoutinflater.view.AsyncLayoutInflater.InflateThread>;
					public obtainRequest(): androidx.asynclayoutinflater.view.AsyncLayoutInflater.InflateRequest;
					public run(): void;
					public releaseRequest(param0: androidx.asynclayoutinflater.view.AsyncLayoutInflater.InflateRequest): void;
					public static getInstance(): androidx.asynclayoutinflater.view.AsyncLayoutInflater.InflateThread;
					public runInner(): void;
					public enqueue(param0: androidx.asynclayoutinflater.view.AsyncLayoutInflater.InflateRequest): void;
				}
				export class OnInflateFinishedListener {
					public static class: java.lang.Class<androidx.asynclayoutinflater.view.AsyncLayoutInflater.OnInflateFinishedListener>;
					/**
					 * Constructs a new instance of the androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onInflateFinished(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup): void });
					public constructor();
					public onInflateFinished(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup): void;
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module browseractions {
			export class BrowserActionItem {
				public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionItem>;
				public getIconId(): number;
				public constructor(param0: string, param1: globalAndroid.app.PendingIntent);
				public getAction(): globalAndroid.app.PendingIntent;
				public constructor(param0: string, param1: globalAndroid.app.PendingIntent, param2: number);
				public getTitle(): string;
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module browseractions {
			export class BrowserActionsFallbackMenuAdapter {
				public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsFallbackMenuAdapter>;
				public getItemId(param0: number): number;
				public getCount(): number;
				public getItem(param0: number): any;
				public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
			}
			export module BrowserActionsFallbackMenuAdapter {
				export class ViewHolderItem {
					public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsFallbackMenuAdapter.ViewHolderItem>;
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module browseractions {
			export class BrowserActionsFallbackMenuDialog {
				public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsFallbackMenuDialog>;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public dismiss(): void;
				public show(): void;
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module browseractions {
			export class BrowserActionsFallbackMenuUi {
				public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsFallbackMenuUi>;
				public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public displayMenu(): void;
			}
			export module BrowserActionsFallbackMenuUi {
				export class BrowserActionsFallMenuUiListener {
					public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsFallbackMenuUi.BrowserActionsFallMenuUiListener>;
					/**
					 * Constructs a new instance of the androidx.browser.browseractions.BrowserActionsFallbackMenuUi$BrowserActionsFallMenuUiListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onMenuShown(param0: globalAndroid.view.View): void });
					public constructor();
					public onMenuShown(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module browseractions {
			export class BrowserActionsFallbackMenuView {
				public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsFallbackMenuView>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onMeasure(param0: number, param1: number): void;
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module browseractions {
			export class BrowserActionsIntent {
				public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsIntent>;
				public static EXTRA_APP_ID: string;
				public static ACTION_BROWSER_ACTIONS_OPEN: string;
				public static KEY_ICON_ID: string;
				public static KEY_TITLE: string;
				public static KEY_ACTION: string;
				public static EXTRA_TYPE: string;
				public static EXTRA_MENU_ITEMS: string;
				public static EXTRA_SELECTED_ACTION_PENDING_INTENT: string;
				public static MAX_CUSTOM_ITEMS: number;
				public static URL_TYPE_NONE: number;
				public static URL_TYPE_IMAGE: number;
				public static URL_TYPE_VIDEO: number;
				public static URL_TYPE_AUDIO: number;
				public static URL_TYPE_FILE: number;
				public static URL_TYPE_PLUGIN: number;
				public static ITEM_INVALID_ITEM: number;
				public static ITEM_OPEN_IN_NEW_TAB: number;
				public static ITEM_OPEN_IN_INCOGNITO: number;
				public static ITEM_DOWNLOAD: number;
				public static ITEM_COPY: number;
				public static ITEM_SHARE: number;
				public static openBrowserAction(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: number, param3: java.util.ArrayList<androidx.browser.browseractions.BrowserActionItem>, param4: globalAndroid.app.PendingIntent): void;
				public getIntent(): globalAndroid.content.Intent;
				public static openBrowserAction(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): void;
				public static launchIntent(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				public static parseBrowserActionItems(param0: java.util.ArrayList<globalAndroid.os.Bundle>): java.util.List<androidx.browser.browseractions.BrowserActionItem>;
				public static getCreatorPackageName(param0: globalAndroid.content.Intent): string;
			}
			export module BrowserActionsIntent {
				export class BrowserActionsFallDialogListener {
					public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsIntent.BrowserActionsFallDialogListener>;
					/**
					 * Constructs a new instance of the androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsFallDialogListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onDialogShown(): void });
					public constructor();
					public onDialogShown(): void;
				}
				export class BrowserActionsItemId {
					public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsIntent.BrowserActionsItemId>;
					/**
					 * Constructs a new instance of the androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class BrowserActionsUrlType {
					public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsIntent.BrowserActionsUrlType>;
					/**
					 * Constructs a new instance of the androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class Builder {
					public static class: java.lang.Class<androidx.browser.browseractions.BrowserActionsIntent.Builder>;
					public setOnItemSelectedAction(param0: globalAndroid.app.PendingIntent): androidx.browser.browseractions.BrowserActionsIntent.Builder;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri);
					public setUrlType(param0: number): androidx.browser.browseractions.BrowserActionsIntent.Builder;
					public setCustomItems(param0: native.Array<androidx.browser.browseractions.BrowserActionItem>): androidx.browser.browseractions.BrowserActionsIntent.Builder;
					public build(): androidx.browser.browseractions.BrowserActionsIntent;
					public setCustomItems(param0: java.util.ArrayList<androidx.browser.browseractions.BrowserActionItem>): androidx.browser.browseractions.BrowserActionsIntent.Builder;
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class CustomTabsCallback {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsCallback>;
				public static NAVIGATION_STARTED: number;
				public static NAVIGATION_FINISHED: number;
				public static NAVIGATION_FAILED: number;
				public static NAVIGATION_ABORTED: number;
				public static TAB_SHOWN: number;
				public static TAB_HIDDEN: number;
				public onNavigationEvent(param0: number, param1: globalAndroid.os.Bundle): void;
				public extraCallback(param0: string, param1: globalAndroid.os.Bundle): void;
				public onPostMessage(param0: string, param1: globalAndroid.os.Bundle): void;
				public onRelationshipValidationResult(param0: number, param1: globalAndroid.net.Uri, param2: boolean, param3: globalAndroid.os.Bundle): void;
				public constructor();
				public onMessageChannelReady(param0: globalAndroid.os.Bundle): void;
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class CustomTabsClient {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsClient>;
				public warmup(param0: number): boolean;
				public newSession(param0: androidx.browser.customtabs.CustomTabsCallback): androidx.browser.customtabs.CustomTabsSession;
				public static connectAndInitialize(param0: globalAndroid.content.Context, param1: string): boolean;
				public static bindCustomTabsService(param0: globalAndroid.content.Context, param1: string, param2: androidx.browser.customtabs.CustomTabsServiceConnection): boolean;
				public extraCommand(param0: string, param1: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
				public static getPackageName(param0: globalAndroid.content.Context, param1: java.util.List<string>, param2: boolean): string;
				public static getPackageName(param0: globalAndroid.content.Context, param1: java.util.List<string>): string;
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class CustomTabsIntent {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsIntent>;
				public static EXTRA_SESSION: string;
				public static EXTRA_TOOLBAR_COLOR: string;
				public static EXTRA_ENABLE_URLBAR_HIDING: string;
				public static EXTRA_CLOSE_BUTTON_ICON: string;
				public static EXTRA_TITLE_VISIBILITY_STATE: string;
				public static NO_TITLE: number;
				public static SHOW_PAGE_TITLE: number;
				public static EXTRA_ACTION_BUTTON_BUNDLE: string;
				public static EXTRA_TOOLBAR_ITEMS: string;
				public static EXTRA_SECONDARY_TOOLBAR_COLOR: string;
				public static KEY_ICON: string;
				public static KEY_DESCRIPTION: string;
				public static KEY_PENDING_INTENT: string;
				public static EXTRA_TINT_ACTION_BUTTON: string;
				public static EXTRA_MENU_ITEMS: string;
				public static KEY_MENU_ITEM_TITLE: string;
				public static EXTRA_EXIT_ANIMATION_BUNDLE: string;
				public static EXTRA_DEFAULT_SHARE_MENU_ITEM: string;
				public static EXTRA_REMOTEVIEWS: string;
				public static EXTRA_REMOTEVIEWS_VIEW_IDS: string;
				public static EXTRA_REMOTEVIEWS_PENDINGINTENT: string;
				public static EXTRA_REMOTEVIEWS_CLICKED_ID: string;
				public static EXTRA_ENABLE_INSTANT_APPS: string;
				public static KEY_ID: string;
				public static TOOLBAR_ACTION_BUTTON_ID: number;
				public intent: globalAndroid.content.Intent;
				public startAnimationBundle: globalAndroid.os.Bundle;
				public static getMaxToolbarItems(): number;
				public static setAlwaysUseBrowserUI(param0: globalAndroid.content.Intent): globalAndroid.content.Intent;
				public static shouldAlwaysUseBrowserUI(param0: globalAndroid.content.Intent): boolean;
				public launchUrl(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): void;
			}
			export module CustomTabsIntent {
				export class Builder {
					public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsIntent.Builder>;
					public setToolbarColor(param0: number): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setCloseButtonIcon(param0: globalAndroid.graphics.Bitmap): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setStartAnimations(param0: globalAndroid.content.Context, param1: number, param2: number): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setActionButton(param0: globalAndroid.graphics.Bitmap, param1: string, param2: globalAndroid.app.PendingIntent, param3: boolean): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setActionButton(param0: globalAndroid.graphics.Bitmap, param1: string, param2: globalAndroid.app.PendingIntent): androidx.browser.customtabs.CustomTabsIntent.Builder;
					/** @deprecated */
					public addToolbarItem(param0: number, param1: globalAndroid.graphics.Bitmap, param2: string, param3: globalAndroid.app.PendingIntent): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setSecondaryToolbarViews(param0: globalAndroid.widget.RemoteViews, param1: native.Array<number>, param2: globalAndroid.app.PendingIntent): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public build(): androidx.browser.customtabs.CustomTabsIntent;
					public enableUrlBarHiding(): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public addDefaultShareMenuItem(): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setExitAnimations(param0: globalAndroid.content.Context, param1: number, param2: number): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public constructor();
					public constructor(param0: androidx.browser.customtabs.CustomTabsSession);
					public setShowTitle(param0: boolean): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public addMenuItem(param0: string, param1: globalAndroid.app.PendingIntent): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setInstantAppsEnabled(param0: boolean): androidx.browser.customtabs.CustomTabsIntent.Builder;
					public setSecondaryToolbarColor(param0: number): androidx.browser.customtabs.CustomTabsIntent.Builder;
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export abstract class CustomTabsService {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsService>;
				public static ACTION_CUSTOM_TABS_CONNECTION: string;
				public static KEY_URL: string;
				public static RESULT_SUCCESS: number;
				public static RESULT_FAILURE_DISALLOWED: number;
				public static RESULT_FAILURE_REMOTE_ERROR: number;
				public static RESULT_FAILURE_MESSAGING_ERROR: number;
				public static RELATION_USE_AS_ORIGIN: number;
				public static RELATION_HANDLE_ALL_URLS: number;
				public cleanUpSession(param0: androidx.browser.customtabs.CustomTabsSessionToken): boolean;
				public warmup(param0: number): boolean;
				public mayLaunchUrl(param0: androidx.browser.customtabs.CustomTabsSessionToken, param1: globalAndroid.net.Uri, param2: globalAndroid.os.Bundle, param3: java.util.List<globalAndroid.os.Bundle>): boolean;
				public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
				public newSession(param0: androidx.browser.customtabs.CustomTabsSessionToken): boolean;
				public validateRelationship(param0: androidx.browser.customtabs.CustomTabsSessionToken, param1: number, param2: globalAndroid.net.Uri, param3: globalAndroid.os.Bundle): boolean;
				public updateVisuals(param0: androidx.browser.customtabs.CustomTabsSessionToken, param1: globalAndroid.os.Bundle): boolean;
				public requestPostMessageChannel(param0: androidx.browser.customtabs.CustomTabsSessionToken, param1: globalAndroid.net.Uri): boolean;
				public extraCommand(param0: string, param1: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
				public postMessage(param0: androidx.browser.customtabs.CustomTabsSessionToken, param1: string, param2: globalAndroid.os.Bundle): number;
				public constructor();
			}
			export module CustomTabsService {
				export class Relation {
					public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsService.Relation>;
					/**
					 * Constructs a new instance of the androidx.browser.customtabs.CustomTabsService$Relation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class Result {
					public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsService.Result>;
					/**
					 * Constructs a new instance of the androidx.browser.customtabs.CustomTabsService$Result interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export abstract class CustomTabsServiceConnection {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsServiceConnection>;
				public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
				public onCustomTabsServiceConnected(param0: globalAndroid.content.ComponentName, param1: androidx.browser.customtabs.CustomTabsClient): void;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class CustomTabsSession {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsSession>;
				public mayLaunchUrl(param0: globalAndroid.net.Uri, param1: globalAndroid.os.Bundle, param2: java.util.List<globalAndroid.os.Bundle>): boolean;
				public setActionButton(param0: globalAndroid.graphics.Bitmap, param1: string): boolean;
				public validateRelationship(param0: number, param1: globalAndroid.net.Uri, param2: globalAndroid.os.Bundle): boolean;
				/** @deprecated */
				public setToolbarItem(param0: number, param1: globalAndroid.graphics.Bitmap, param2: string): boolean;
				public static createMockSessionForTesting(param0: globalAndroid.content.ComponentName): androidx.browser.customtabs.CustomTabsSession;
				public setSecondaryToolbarViews(param0: globalAndroid.widget.RemoteViews, param1: native.Array<number>, param2: globalAndroid.app.PendingIntent): boolean;
				public requestPostMessageChannel(param0: globalAndroid.net.Uri): boolean;
				public postMessage(param0: string, param1: globalAndroid.os.Bundle): number;
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class CustomTabsSessionToken {
				public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsSessionToken>;
				public static getSessionTokenFromIntent(param0: globalAndroid.content.Intent): androidx.browser.customtabs.CustomTabsSessionToken;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public isAssociatedWith(param0: androidx.browser.customtabs.CustomTabsSession): boolean;
				public static createMockSessionTokenForTesting(): androidx.browser.customtabs.CustomTabsSessionToken;
				public getCallback(): androidx.browser.customtabs.CustomTabsCallback;
			}
			export module CustomTabsSessionToken {
				export class MockCallback extends globalAndroid.support.customtabs.ICustomTabsCallback.Stub {
					public static class: java.lang.Class<androidx.browser.customtabs.CustomTabsSessionToken.MockCallback>;
					public onPostMessage(param0: string, param1: globalAndroid.os.Bundle): void;
					public onMessageChannelReady(param0: globalAndroid.os.Bundle): void;
					public extraCallback(param0: string, param1: globalAndroid.os.Bundle): void;
					public onNavigationEvent(param0: number, param1: globalAndroid.os.Bundle): void;
					public onRelationshipValidationResult(param0: number, param1: globalAndroid.net.Uri, param2: boolean, param3: globalAndroid.os.Bundle): void;
					public asBinder(): globalAndroid.os.IBinder;
				}
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class PostMessageService {
				public static class: java.lang.Class<androidx.browser.customtabs.PostMessageService>;
				public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export abstract class PostMessageServiceConnection {
				public static class: java.lang.Class<androidx.browser.customtabs.PostMessageServiceConnection>;
				public postMessage(param0: string, param1: globalAndroid.os.Bundle): boolean;
				public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
				public unbindFromContext(param0: globalAndroid.content.Context): void;
				public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
				public bindSessionToPostMessageService(param0: globalAndroid.content.Context, param1: string): boolean;
				public onPostMessageServiceConnected(): void;
				public notifyMessageChannelReady(param0: globalAndroid.os.Bundle): boolean;
				public onPostMessageServiceDisconnected(): void;
				public constructor(param0: androidx.browser.customtabs.CustomTabsSessionToken);
			}
		}
	}
}

declare module androidx {
	export module browser {
		export module customtabs {
			export class TrustedWebUtils {
				public static class: java.lang.Class<androidx.browser.customtabs.TrustedWebUtils>;
				public static EXTRA_LAUNCH_AS_TRUSTED_WEB_ACTIVITY: string;
				public static launchAsTrustedWebActivity(param0: globalAndroid.content.Context, param1: androidx.browser.customtabs.CustomTabsIntent, param2: globalAndroid.net.Uri): void;
			}
		}
	}
}

declare module androidx {
	export module collection {
		export class ArrayMap<K, V> extends java.util.Map {
			public static class: java.lang.Class<androidx.collection.ArrayMap<any, any>>;
			public containsAll(param0: java.util.Collection<any>): boolean;
			public constructor(param0: androidx.collection.SimpleArrayMap<any, any>);
			public entrySet(): java.util.Set<java.util.Map.Entry<any, any>>;
			public keySet(): java.util.Set<any>;
			public putAll(param0: java.util.Map<any, any>): void;
			public constructor(param0: number);
			public putAll(param0: androidx.collection.SimpleArrayMap<any, any>): void;
			public removeAll(param0: java.util.Collection<any>): boolean;
			public constructor();
			public constructor(param0: androidx.collection.SimpleArrayMap<any, any>);
			public values(): java.util.Collection<any>;
			public retainAll(param0: java.util.Collection<any>): boolean;
		}
	}
}

declare module androidx {
	export module collection {
		export class ArraySet<E> extends java.lang.Object {
			public static class: java.lang.Class<androidx.collection.ArraySet<any>>;
			public removeAll(param0: androidx.collection.ArraySet<any>): boolean;
			public equals(param0: any): boolean;
			public toArray(): native.Array<any>;
			public iterator(): java.util.Iterator<E>;
			public removeAt(param0: number): E;
			public ensureCapacity(param0: number): void;
			public contains(param0: any): boolean;
			public append(param0: E): void;
			public clear(): void;
			public isEmpty(): boolean;
			public size(): number;
			public constructor(param0: number);
			public add(param0: E): boolean;
			public toArray(param0: native.Array<any>): native.Array<any>;
			public constructor();
			public addAll(param0: java.util.Collection<any>): boolean;
			public retainAll(param0: java.util.Collection<any>): boolean;
			public addAll(param0: androidx.collection.ArraySet<any>): void;
			public remove(param0: any): boolean;
			public containsAll(param0: java.util.Collection<any>): boolean;
			public toString(): string;
			public valueAt(param0: number): E;
			public removeAll(param0: java.util.Collection<any>): boolean;
			public constructor(param0: java.util.Collection<E>);
			public indexOf(param0: any): number;
			public constructor(param0: androidx.collection.ArraySet<E>);
			public hashCode(): number;
		}
	}
}

declare module androidx {
	export module collection {
		export class CircularArray<E> extends java.lang.Object {
			public static class: java.lang.Class<androidx.collection.CircularArray<any>>;
			public addFirst(param0: E): void;
			public clear(): void;
			public size(): number;
			public isEmpty(): boolean;
			public constructor(param0: number);
			public constructor();
			public get(param0: number): E;
			public getLast(): E;
			public removeFromEnd(param0: number): void;
			public popLast(): E;
			public getFirst(): E;
			public removeFromStart(param0: number): void;
			public popFirst(): E;
			public addLast(param0: E): void;
		}
	}
}

declare module androidx {
	export module collection {
		export class CircularIntArray {
			public static class: java.lang.Class<androidx.collection.CircularIntArray>;
			public clear(): void;
			public popLast(): number;
			public size(): number;
			public isEmpty(): boolean;
			public getFirst(): number;
			public constructor(param0: number);
			public constructor();
			public addLast(param0: number): void;
			public addFirst(param0: number): void;
			public popFirst(): number;
			public removeFromEnd(param0: number): void;
			public removeFromStart(param0: number): void;
			public getLast(): number;
			public get(param0: number): number;
		}
	}
}

declare module androidx {
	export module collection {
		export class ContainerHelpers {
			public static class: java.lang.Class<androidx.collection.ContainerHelpers>;
			public static idealLongArraySize(param0: number): number;
			public static idealByteArraySize(param0: number): number;
			public static equal(param0: any, param1: any): boolean;
			public static idealIntArraySize(param0: number): number;
		}
	}
}

declare module androidx {
	export module collection {
		export class LongSparseArray<E> extends java.lang.Cloneable {
			public static class: java.lang.Class<androidx.collection.LongSparseArray<any>>;
			public containsKey(param0: number): boolean;
			public append(param0: number, param1: any): void;
			public clear(): void;
			public put(param0: number, param1: any): void;
			public size(): number;
			public isEmpty(): boolean;
			public containsValue(param0: any): boolean;
			public delete(param0: number): void;
			public indexOfValue(param0: any): number;
			public constructor(param0: number);
			public constructor();
			public remove(param0: number): void;
			public putAll(param0: androidx.collection.LongSparseArray<any>): void;
			public keyAt(param0: number): number;
			public valueAt(param0: number): any;
			public toString(): string;
			public clone(): androidx.collection.LongSparseArray<any>;
			public get(param0: number): any;
			public removeAt(param0: number): void;
			public get(param0: number, param1: any): any;
			public setValueAt(param0: number, param1: any): void;
			public indexOfKey(param0: number): number;
		}
	}
}

declare module androidx {
	export module collection {
		export class LruCache<K, V> extends java.lang.Object {
			public static class: java.lang.Class<androidx.collection.LruCache<any, any>>;
			public put(param0: K, param1: V): V;
			public size(): number;
			public putCount(): number;
			public createCount(): number;
			public constructor(param0: number);
			public evictAll(): void;
			public get(param0: K): V;
			public resize(param0: number): void;
			public maxSize(): number;
			public create(param0: K): V;
			public hitCount(): number;
			public snapshot(): java.util.Map<K, V>;
			public entryRemoved(param0: boolean, param1: K, param2: V, param3: V): void;
			public toString(): string;
			public sizeOf(param0: K, param1: V): number;
			public trimToSize(param0: number): void;
			public remove(param0: K): V;
			public evictionCount(): number;
			public missCount(): number;
		}
	}
}

declare module androidx {
	export module collection {
		export abstract class MapCollections<K, V> extends java.lang.Object {
			public static class: java.lang.Class<androidx.collection.MapCollections<any, any>>;
			public getEntrySet(): java.util.Set<java.util.Map.Entry<K, V>>;
			public colGetEntry(param0: number, param1: number): any;
			public getKeySet(): java.util.Set<K>;
			public colIndexOfValue(param0: any): number;
			public colClear(): void;
			public static removeAllHelper(param0: java.util.Map, param1: java.util.Collection): boolean;
			public getValues(): java.util.Collection<V>;
			public toArrayHelper(param0: native.Array<any>, param1: number): native.Array<any>;
			public colGetMap(): java.util.Map<K, V>;
			public colPut(param0: K, param1: V): void;
			public static equalsSetHelper(param0: java.util.Set, param1: any): boolean;
			public colRemoveAt(param0: number): void;
			public static containsAllHelper(param0: java.util.Map, param1: java.util.Collection): boolean;
			public colSetValue(param0: number, param1: V): V;
			public toArrayHelper(param0: number): native.Array<any>;
			public colGetSize(): number;
			public static retainAllHelper(param0: java.util.Map, param1: java.util.Collection): boolean;
			public colIndexOfKey(param0: any): number;
		}
		export module MapCollections {
			export class ArrayIterator<T> extends java.util.Iterator<any> {
				public static class: java.lang.Class<androidx.collection.MapCollections.ArrayIterator<any>>;
				public remove(): void;
				public next(): any;
				public hasNext(): boolean;
			}
			export class EntrySet extends java.util.Set<java.util.Map.Entry<any, any>> {
				public static class: java.lang.Class<androidx.collection.MapCollections.EntrySet>;
				public add(param0: java.util.Map.Entry<any, any>): boolean;
				public addAll(param0: java.util.Collection<any>): boolean;
				public contains(param0: any): boolean;
				public iterator(): java.util.Iterator<java.util.Map.Entry<any, any>>;
				public toArray(param0: native.Array<any>): native.Array<any>;
				public retainAll(param0: java.util.Collection<any>): boolean;
				public size(): number;
				public toArray(): native.Array<any>;
				public containsAll(param0: java.util.Collection<any>): boolean;
				public hashCode(): number;
				public removeAll(param0: java.util.Collection<any>): boolean;
				public clear(): void;
				public equals(param0: any): boolean;
				public isEmpty(): boolean;
				public remove(param0: any): boolean;
			}
			export class KeySet extends java.util.Set<any> {
				public static class: java.lang.Class<androidx.collection.MapCollections.KeySet>;
				public addAll(param0: java.util.Collection<any>): boolean;
				public contains(param0: any): boolean;
				public toArray(param0: native.Array<any>): native.Array<any>;
				public iterator(): java.util.Iterator<any>;
				public retainAll(param0: java.util.Collection<any>): boolean;
				public size(): number;
				public toArray(): native.Array<any>;
				public containsAll(param0: java.util.Collection<any>): boolean;
				public add(param0: any): boolean;
				public hashCode(): number;
				public removeAll(param0: java.util.Collection<any>): boolean;
				public clear(): void;
				public equals(param0: any): boolean;
				public isEmpty(): boolean;
				public remove(param0: any): boolean;
			}
			export class MapIterator extends java.lang.Object {
				public static class: java.lang.Class<androidx.collection.MapCollections.MapIterator>;
				public remove(): void;
				public getKey(): any;
				public hashCode(): number;
				public hasNext(): boolean;
				public equals(param0: any): boolean;
				public next(): java.util.Map.Entry<any, any>;
				public getValue(): any;
				public toString(): string;
				public setValue(param0: any): any;
			}
			export class ValuesCollection extends java.util.Collection<any> {
				public static class: java.lang.Class<androidx.collection.MapCollections.ValuesCollection>;
				public addAll(param0: java.util.Collection<any>): boolean;
				public contains(param0: any): boolean;
				public toArray(param0: native.Array<any>): native.Array<any>;
				public iterator(): java.util.Iterator<any>;
				public retainAll(param0: java.util.Collection<any>): boolean;
				public size(): number;
				public toArray(): native.Array<any>;
				public containsAll(param0: java.util.Collection<any>): boolean;
				public add(param0: any): boolean;
				public removeAll(param0: java.util.Collection<any>): boolean;
				public clear(): void;
				public isEmpty(): boolean;
				public remove(param0: any): boolean;
			}
		}
	}
}

declare module androidx {
	export module collection {
		export class SimpleArrayMap<K, V> extends java.lang.Object {
			public static class: java.lang.Class<androidx.collection.SimpleArrayMap<any, any>>;
			public clear(): void;
			public equals(param0: any): boolean;
			public isEmpty(): boolean;
			public put(param0: K, param1: V): V;
			public size(): number;
			public containsValue(param0: any): boolean;
			public valueAt(param0: number): V;
			public constructor(param0: number);
			public removeAt(param0: number): V;
			public constructor(param0: androidx.collection.SimpleArrayMap<K, V>);
			public setValueAt(param0: number, param1: V): V;
			public constructor();
			public get(param0: any): V;
			public ensureCapacity(param0: number): void;
			public toString(): string;
			public indexOfKey(param0: any): number;
			public remove(param0: any): V;
			public containsKey(param0: any): boolean;
			public putAll(param0: androidx.collection.SimpleArrayMap<any, any>): void;
			public keyAt(param0: number): K;
			public hashCode(): number;
		}
	}
}

declare module androidx {
	export module collection {
		export class SparseArrayCompat<E> extends java.lang.Cloneable {
			public static class: java.lang.Class<androidx.collection.SparseArrayCompat<any>>;
			public containsKey(param0: number): boolean;
			public append(param0: number, param1: any): void;
			public clear(): void;
			public put(param0: number, param1: any): void;
			public size(): number;
			public isEmpty(): boolean;
			public containsValue(param0: any): boolean;
			public delete(param0: number): void;
			public indexOfValue(param0: any): number;
			public constructor(param0: number);
			public constructor();
			public remove(param0: number): void;
			public clone(): androidx.collection.SparseArrayCompat<any>;
			public keyAt(param0: number): number;
			public valueAt(param0: number): any;
			public toString(): string;
			public removeAtRange(param0: number, param1: number): void;
			public get(param0: number): any;
			public removeAt(param0: number): void;
			public putAll(param0: androidx.collection.SparseArrayCompat<any>): void;
			public get(param0: number, param1: any): any;
			public setValueAt(param0: number, param1: any): void;
			public indexOfKey(param0: number): number;
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class ArrayLinkedVariables {
				public static class: java.lang.Class<androidx.constraintlayout.solver.ArrayLinkedVariables>;
				public remove(param0: androidx.constraintlayout.solver.SolverVariable, param1: boolean): number;
				public put(param0: androidx.constraintlayout.solver.SolverVariable, param1: number): void;
				public display(): void;
				public clear(): void;
				public get(param0: androidx.constraintlayout.solver.SolverVariable): number;
				public toString(): string;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class ArrayRow extends androidx.constraintlayout.solver.LinearSystem.Row {
				public static class: java.lang.Class<androidx.constraintlayout.solver.ArrayRow>;
				public variables: androidx.constraintlayout.solver.ArrayLinkedVariables;
				public initFromRow(param0: androidx.constraintlayout.solver.LinearSystem.Row): void;
				public createRowLowerThan(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: number): androidx.constraintlayout.solver.ArrayRow;
				public createRowEquals(param0: androidx.constraintlayout.solver.SolverVariable, param1: number): androidx.constraintlayout.solver.ArrayRow;
				public addError(param0: androidx.constraintlayout.solver.SolverVariable): void;
				public getKey(): androidx.constraintlayout.solver.SolverVariable;
				public createRowGreaterThan(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: number): androidx.constraintlayout.solver.ArrayRow;
				public createRowGreaterThan(param0: androidx.constraintlayout.solver.SolverVariable, param1: number, param2: androidx.constraintlayout.solver.SolverVariable): androidx.constraintlayout.solver.ArrayRow;
				public toString(): string;
				public createRowEqualDimension(param0: number, param1: number, param2: number, param3: androidx.constraintlayout.solver.SolverVariable, param4: number, param5: androidx.constraintlayout.solver.SolverVariable, param6: number, param7: androidx.constraintlayout.solver.SolverVariable, param8: number, param9: androidx.constraintlayout.solver.SolverVariable, param10: number): androidx.constraintlayout.solver.ArrayRow;
				public addError(param0: androidx.constraintlayout.solver.LinearSystem, param1: number): androidx.constraintlayout.solver.ArrayRow;
				public reset(): void;
				public createRowWithAngle(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: androidx.constraintlayout.solver.SolverVariable, param4: number): androidx.constraintlayout.solver.ArrayRow;
				public createRowDimensionRatio(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: androidx.constraintlayout.solver.SolverVariable, param4: number): androidx.constraintlayout.solver.ArrayRow;
				public constructor(param0: androidx.constraintlayout.solver.Cache);
				public createRowEqualMatchDimensions(param0: number, param1: number, param2: number, param3: androidx.constraintlayout.solver.SolverVariable, param4: androidx.constraintlayout.solver.SolverVariable, param5: androidx.constraintlayout.solver.SolverVariable, param6: androidx.constraintlayout.solver.SolverVariable): androidx.constraintlayout.solver.ArrayRow;
				public clear(): void;
				public getPivotCandidate(param0: androidx.constraintlayout.solver.LinearSystem, param1: native.Array<boolean>): androidx.constraintlayout.solver.SolverVariable;
				public isEmpty(): boolean;
				public createRowEquals(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: number): androidx.constraintlayout.solver.ArrayRow;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class Cache {
				public static class: java.lang.Class<androidx.constraintlayout.solver.Cache>;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class GoalRow extends androidx.constraintlayout.solver.ArrayRow {
				public static class: java.lang.Class<androidx.constraintlayout.solver.GoalRow>;
				public initFromRow(param0: androidx.constraintlayout.solver.LinearSystem.Row): void;
				public constructor(param0: androidx.constraintlayout.solver.Cache);
				public addError(param0: androidx.constraintlayout.solver.SolverVariable): void;
				public clear(): void;
				public getKey(): androidx.constraintlayout.solver.SolverVariable;
				public getPivotCandidate(param0: androidx.constraintlayout.solver.LinearSystem, param1: native.Array<boolean>): androidx.constraintlayout.solver.SolverVariable;
				public isEmpty(): boolean;
				public addError(param0: androidx.constraintlayout.solver.LinearSystem, param1: number): androidx.constraintlayout.solver.ArrayRow;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class LinearSystem {
				public static class: java.lang.Class<androidx.constraintlayout.solver.LinearSystem>;
				public static FULL_DEBUG: boolean;
				public graphOptimizer: boolean;
				public static sMetrics: androidx.constraintlayout.solver.Metrics;
				public static createRowDimensionPercent(param0: androidx.constraintlayout.solver.LinearSystem, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: androidx.constraintlayout.solver.SolverVariable, param4: number, param5: boolean): androidx.constraintlayout.solver.ArrayRow;
				public createExtraVariable(): androidx.constraintlayout.solver.SolverVariable;
				public addGreaterThan(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: number, param3: number): void;
				public addCenterPoint(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget, param1: androidx.constraintlayout.solver.widgets.ConstraintWidget, param2: number, param3: number): void;
				public addEquality(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: number, param3: number): androidx.constraintlayout.solver.ArrayRow;
				public constructor();
				public createErrorVariable(param0: number, param1: string): androidx.constraintlayout.solver.SolverVariable;
				public reset(): void;
				public createRow(): androidx.constraintlayout.solver.ArrayRow;
				public minimize(): void;
				public addEquality(param0: androidx.constraintlayout.solver.SolverVariable, param1: number, param2: number): void;
				public createSlackVariable(): androidx.constraintlayout.solver.SolverVariable;
				public addGreaterBarrier(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: boolean): void;
				public static createRowGreaterThan(param0: androidx.constraintlayout.solver.LinearSystem, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: number, param4: boolean): androidx.constraintlayout.solver.ArrayRow;
				public fillMetrics(param0: androidx.constraintlayout.solver.Metrics): void;
				public static createRowLowerThan(param0: androidx.constraintlayout.solver.LinearSystem, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: number, param4: boolean): androidx.constraintlayout.solver.ArrayRow;
				public addGreaterThan(param0: androidx.constraintlayout.solver.SolverVariable, param1: number): void;
				public addLowerThan(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: number, param3: number): void;
				public addLowerBarrier(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: boolean): void;
				public addConstraint(param0: androidx.constraintlayout.solver.ArrayRow): void;
				public getNumVariables(): number;
				public getNumEquations(): number;
				public static getMetrics(): androidx.constraintlayout.solver.Metrics;
				public createObjectVariable(param0: any): androidx.constraintlayout.solver.SolverVariable;
				public addEquality(param0: androidx.constraintlayout.solver.SolverVariable, param1: number): void;
				public displayVariablesReadableRows(): void;
				public getMemoryUsed(): number;
				public static createRowCentering(param0: androidx.constraintlayout.solver.LinearSystem, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: number, param4: number, param5: androidx.constraintlayout.solver.SolverVariable, param6: androidx.constraintlayout.solver.SolverVariable, param7: number, param8: boolean): androidx.constraintlayout.solver.ArrayRow;
				public addCentering(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: number, param3: number, param4: androidx.constraintlayout.solver.SolverVariable, param5: androidx.constraintlayout.solver.SolverVariable, param6: number, param7: number): void;
				public getCache(): androidx.constraintlayout.solver.Cache;
				public addRatio(param0: androidx.constraintlayout.solver.SolverVariable, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: androidx.constraintlayout.solver.SolverVariable, param4: number, param5: number): void;
				public getObjectVariableValue(param0: any): number;
				public static createRowEquals(param0: androidx.constraintlayout.solver.LinearSystem, param1: androidx.constraintlayout.solver.SolverVariable, param2: androidx.constraintlayout.solver.SolverVariable, param3: number, param4: boolean): androidx.constraintlayout.solver.ArrayRow;
			}
			export module LinearSystem {
				export class Row {
					public static class: java.lang.Class<androidx.constraintlayout.solver.LinearSystem.Row>;
					/**
					 * Constructs a new instance of the androidx.constraintlayout.solver.LinearSystem$Row interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getPivotCandidate(param0: androidx.constraintlayout.solver.LinearSystem, param1: native.Array<boolean>): androidx.constraintlayout.solver.SolverVariable; clear(): void; initFromRow(param0: androidx.constraintlayout.solver.LinearSystem.Row): void; addError(param0: androidx.constraintlayout.solver.SolverVariable): void; getKey(): androidx.constraintlayout.solver.SolverVariable; isEmpty(): boolean });
					public constructor();
					public initFromRow(param0: androidx.constraintlayout.solver.LinearSystem.Row): void;
					public isEmpty(): boolean;
					public addError(param0: androidx.constraintlayout.solver.SolverVariable): void;
					public getKey(): androidx.constraintlayout.solver.SolverVariable;
					public clear(): void;
					public getPivotCandidate(param0: androidx.constraintlayout.solver.LinearSystem, param1: native.Array<boolean>): androidx.constraintlayout.solver.SolverVariable;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class Metrics {
				public static class: java.lang.Class<androidx.constraintlayout.solver.Metrics>;
				public measures: number;
				public additionalMeasures: number;
				public resolutions: number;
				public tableSizeIncrease: number;
				public minimize: number;
				public constraints: number;
				public simpleconstraints: number;
				public optimize: number;
				public iterations: number;
				public pivots: number;
				public bfs: number;
				public variables: number;
				public errors: number;
				public slackvariables: number;
				public extravariables: number;
				public maxTableSize: number;
				public fullySolved: number;
				public graphOptimizer: number;
				public resolvedWidgets: number;
				public minimizeGoal: number;
				public maxVariables: number;
				public maxRows: number;
				public centerConnectionResolved: number;
				public matchConnectionResolved: number;
				public chainConnectionResolved: number;
				public barrierConnectionResolved: number;
				public oldresolvedWidgets: number;
				public nonresolvedWidgets: number;
				public problematicLayouts: java.util.ArrayList<string>;
				public lastTableSize: number;
				public reset(): void;
				public toString(): string;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class Pools {
				public static class: java.lang.Class<androidx.constraintlayout.solver.Pools>;
			}
			export module Pools {
				export class Pool<T> extends java.lang.Object {
					public static class: java.lang.Class<androidx.constraintlayout.solver.Pools.Pool<any>>;
					/**
					 * Constructs a new instance of the androidx.constraintlayout.solver.Pools$Pool interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { acquire(): T; release(param0: T): boolean; releaseAll(param0: native.Array<T>, param1: number): void });
					public constructor();
					public acquire(): T;
					public releaseAll(param0: native.Array<T>, param1: number): void;
					public release(param0: T): boolean;
				}
				export class SimplePool<T> extends androidx.constraintlayout.solver.Pools.Pool<any> {
					public static class: java.lang.Class<androidx.constraintlayout.solver.Pools.SimplePool<any>>;
					public releaseAll(param0: native.Array<any>, param1: number): void;
					public acquire(): any;
					public release(param0: any): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export class SolverVariable {
				public static class: java.lang.Class<androidx.constraintlayout.solver.SolverVariable>;
				public static STRENGTH_NONE: number;
				public static STRENGTH_LOW: number;
				public static STRENGTH_MEDIUM: number;
				public static STRENGTH_HIGH: number;
				public static STRENGTH_HIGHEST: number;
				public static STRENGTH_EQUALITY: number;
				public static STRENGTH_FIXED: number;
				public static STRENGTH_BARRIER: number;
				public id: number;
				public strength: number;
				public computedValue: number;
				public usageInRowCount: number;
				public updateReferencesWithNewDefinition(param0: androidx.constraintlayout.solver.ArrayRow): void;
				public reset(): void;
				public setName(param0: string): void;
				public addToRow(param0: androidx.constraintlayout.solver.ArrayRow): void;
				public constructor(param0: string, param1: androidx.constraintlayout.solver.SolverVariable.Type);
				public getName(): string;
				public setType(param0: androidx.constraintlayout.solver.SolverVariable.Type, param1: string): void;
				public toString(): string;
				public removeFromRow(param0: androidx.constraintlayout.solver.ArrayRow): void;
				public constructor(param0: androidx.constraintlayout.solver.SolverVariable.Type, param1: string);
			}
			export module SolverVariable {
				export class Type {
					public static class: java.lang.Class<androidx.constraintlayout.solver.SolverVariable.Type>;
					public static UNRESTRICTED: androidx.constraintlayout.solver.SolverVariable.Type;
					public static CONSTANT: androidx.constraintlayout.solver.SolverVariable.Type;
					public static SLACK: androidx.constraintlayout.solver.SolverVariable.Type;
					public static ERROR: androidx.constraintlayout.solver.SolverVariable.Type;
					public static UNKNOWN: androidx.constraintlayout.solver.SolverVariable.Type;
					public static values(): native.Array<androidx.constraintlayout.solver.SolverVariable.Type>;
					public static valueOf(param0: string): androidx.constraintlayout.solver.SolverVariable.Type;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Analyzer {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Analyzer>;
					public static determineGroups(param0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer): void;
					public static setPosition(param0: java.util.List<androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup>, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Barrier extends androidx.constraintlayout.solver.widgets.Helper {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Barrier>;
					public static LEFT: number;
					public static RIGHT: number;
					public static TOP: number;
					public static BOTTOM: number;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public addToSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public allowedInBarrier(): boolean;
					public resetResolutionNodes(): void;
					public analyze(param0: number): void;
					public constructor();
					public setAllowsGoneWidget(param0: boolean): void;
					public setBarrierType(param0: number): void;
					public resolve(): void;
					public allowsGoneWidget(): boolean;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Chain {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Chain>;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ChainHead {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ChainHead>;
					public mFirst: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mFirstVisibleWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mLast: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mLastVisibleWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mHead: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mFirstMatchConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mLastMatchConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public mWeightedMatchConstraintsWidgets: java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public mWidgetsCount: number;
					public mWidgetsMatchCount: number;
					public mTotalWeight: number;
					public mHasUndefinedWeights: boolean;
					public mHasDefinedWeights: boolean;
					public mHasComplexMatchWeights: boolean;
					public getLast(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public getFirst(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public constructor(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget, param1: number, param2: boolean);
					public getLastVisibleWidget(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public getFirstMatchConstraintWidget(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public getLastMatchConstraintWidget(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public getFirstVisibleWidget(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public define(): void;
					public getTotalWeight(): number;
					public getHead(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ConstraintAnchor {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintAnchor>;
					public static USER_CREATOR: number;
					public static SCOUT_CREATOR: number;
					public static AUTO_CONSTRAINT_CREATOR: number;
					public mMargin: number;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: number): boolean;
					public isSnapCompatibleWith(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor): boolean;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: number, param2: number, param3: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength, param4: number, param5: boolean): boolean;
					public getSolverVariable(): androidx.constraintlayout.solver.SolverVariable;
					public getType(): androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
					public isVerticalAnchor(): boolean;
					public toString(): string;
					public getStrength(): androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: number, param2: number): boolean;
					public isSimilarDimensionConnection(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor): boolean;
					public isSideAnchor(): boolean;
					public isValidConnection(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor): boolean;
					public getTarget(): androidx.constraintlayout.solver.widgets.ConstraintAnchor;
					public getConnectionType(): androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType;
					public reset(): void;
					public resetSolverVariable(param0: androidx.constraintlayout.solver.Cache): void;
					public setStrength(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength): void;
					public setGoneMargin(param0: number): void;
					public isConnected(): boolean;
					public getMargin(): number;
					public getSnapPriorityLevel(): number;
					public isConnectionAllowed(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget, param1: androidx.constraintlayout.solver.widgets.ConstraintAnchor): boolean;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: number, param2: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength, param3: number): boolean;
					public setMargin(param0: number): void;
					public getOpposite(): androidx.constraintlayout.solver.widgets.ConstraintAnchor;
					public isConnectionAllowed(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): boolean;
					public setConnectionType(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType): void;
					public getConnectionCreator(): number;
					public setConnectionCreator(param0: number): void;
					public getResolutionNode(): androidx.constraintlayout.solver.widgets.ResolutionAnchor;
					public constructor(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget, param1: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type);
					public getOwner(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public getPriorityLevel(): number;
				}
				export module ConstraintAnchor {
					export class ConnectionType {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType>;
						public static RELAXED: androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType;
						public static STRICT: androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType;
						public static values(): native.Array<androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType>;
						public static valueOf(param0: string): androidx.constraintlayout.solver.widgets.ConstraintAnchor.ConnectionType;
					}
					export class Strength {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength>;
						public static NONE: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength;
						public static STRONG: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength;
						public static WEAK: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength;
						public static valueOf(param0: string): androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength;
						public static values(): native.Array<androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength>;
					}
					export class Type {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type>;
						public static NONE: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static LEFT: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static TOP: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static RIGHT: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static BOTTOM: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static BASELINE: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static CENTER: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static CENTER_X: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static CENTER_Y: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static valueOf(param0: string): androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type;
						public static values(): native.Array<androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ConstraintHorizontalLayout extends androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout>;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public addToSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public constructor();
					public constructor(param0: number, param1: number);
				}
				export module ConstraintHorizontalLayout {
					export class ContentAlignment {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment>;
						public static BEGIN: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static MIDDLE: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static END: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static TOP: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static VERTICAL_MIDDLE: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static BOTTOM: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static LEFT: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static RIGHT: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static valueOf(param0: string): androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment;
						public static values(): native.Array<androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout.ContentAlignment>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ConstraintTableLayout extends androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintTableLayout>;
					public static ALIGN_CENTER: number;
					public static ALIGN_LEFT: number;
					public static ALIGN_RIGHT: number;
					public getColumnsAlignmentRepresentation(): string;
					public getHorizontalGuidelines(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.Guideline>;
					public handlesInternalConstraints(): boolean;
					public getNumCols(): number;
					public setColumnAlignment(param0: string): void;
					public getVerticalGuidelines(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.Guideline>;
					public computeGuidelinesPercentPositions(): void;
					public updateFromSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public constructor();
					public setDebugSolverName(param0: androidx.constraintlayout.solver.LinearSystem, param1: string): void;
					public setPadding(param0: number, param1: number, param2: number, param3: number): void;
					public getType(): string;
					public constructor(param0: number, param1: number);
					public cycleColumnAlignment(param0: number): void;
					public getColumnAlignmentRepresentation(param0: number): string;
					public addToSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public setTableDimensions(): void;
					public setVerticalGrowth(param0: boolean): void;
					public setNumRows(param0: number): void;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public getPadding(): number;
					public setNumCols(param0: number): void;
					public setPadding(param0: number): void;
					public getNumRows(): number;
					public setColumnAlignment(param0: number, param1: number): void;
					public isVerticalGrowth(): boolean;
				}
				export module ConstraintTableLayout {
					export class HorizontalSlice {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintTableLayout.HorizontalSlice>;
					}
					export class VerticalSlice {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintTableLayout.VerticalSlice>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ConstraintWidget {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public static SOLVER: number;
					public static DIRECT: number;
					public static MATCH_CONSTRAINT_SPREAD: number;
					public static MATCH_CONSTRAINT_WRAP: number;
					public static MATCH_CONSTRAINT_PERCENT: number;
					public static MATCH_CONSTRAINT_RATIO: number;
					public static MATCH_CONSTRAINT_RATIO_RESOLVED: number;
					public static UNKNOWN: number;
					public static HORIZONTAL: number;
					public static VERTICAL: number;
					public static VISIBLE: number;
					public static INVISIBLE: number;
					public static GONE: number;
					public static CHAIN_SPREAD: number;
					public static CHAIN_SPREAD_INSIDE: number;
					public static CHAIN_PACKED: number;
					public mHorizontalResolution: number;
					public mVerticalResolution: number;
					public static ANCHOR_LEFT: number;
					public static ANCHOR_RIGHT: number;
					public static ANCHOR_TOP: number;
					public static ANCHOR_BOTTOM: number;
					public static ANCHOR_BASELINE: number;
					public mListAnchors: native.Array<androidx.constraintlayout.solver.widgets.ConstraintAnchor>;
					public mAnchors: java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintAnchor>;
					public mListDimensionBehaviors: native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour>;
					public mDimensionRatio: number;
					public mDimensionRatioSide: number;
					public mX: number;
					public mY: number;
					public mOffsetX: number;
					public mOffsetY: number;
					public mMinWidth: number;
					public mMinHeight: number;
					public static DEFAULT_BIAS: number;
					public mListNextMatchConstraintsWidget: native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public mNextChainWidget: native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public getRootX(): number;
					public getHorizontalChainStyle(): number;
					public setType(param0: string): void;
					public setHeight(param0: number): void;
					public setDimensionRatio(param0: number, param1: number): void;
					public getDrawY(): number;
					public resetResolutionNodes(): void;
					public constructor();
					public updateDrawPosition(): void;
					public getAnchor(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type): androidx.constraintlayout.solver.widgets.ConstraintAnchor;
					public getContainerItemSkip(): number;
					public constructor(param0: number, param1: number);
					public forceUpdateDrawPosition(): void;
					public immediateConnect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param1: androidx.constraintlayout.solver.widgets.ConstraintWidget, param2: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param3: number, param4: number): void;
					public resetAnchors(): void;
					public getVerticalChainControlWidget(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public addToSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public getHeight(): number;
					public connectedTo(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public getVerticalChainStyle(): number;
					public getY(): number;
					public setMaxHeight(param0: number): void;
					public getLength(param0: number): number;
					public setHorizontalMatchStyle(param0: number, param1: number, param2: number, param3: number): void;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param1: androidx.constraintlayout.solver.widgets.ConstraintWidget, param2: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param3: number, param4: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength): void;
					public analyze(param0: number): void;
					public getParent(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public updateResolutionNodes(): void;
					public getCompanionWidget(): any;
					public isInHorizontalChain(): boolean;
					public setLength(param0: number, param1: number): void;
					public getHorizontalBiasPercent(): number;
					public isInVerticalChain(): boolean;
					public getDrawHeight(): number;
					public getDimensionRatio(): number;
					public getMaxWidth(): number;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param1: androidx.constraintlayout.solver.widgets.ConstraintWidget, param2: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param3: number, param4: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength, param5: number): void;
					public setBaselineDistance(param0: number): void;
					public setFrame(param0: number, param1: number, param2: number): void;
					public setGoneMargin(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param1: number): void;
					public getVerticalDimensionBehaviour(): androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
					public hasBaseline(): boolean;
					public isRootContainer(): boolean;
					public isSpreadHeight(): boolean;
					public updateFromSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public getOptimizerWrapHeight(): number;
					public getWrapHeight(): number;
					public setDrawWidth(param0: number): void;
					public setMinHeight(param0: number): void;
					public getWrapWidth(): number;
					public isWidthWrapContent(): boolean;
					public getOptimizerWrapWidth(): number;
					public getInternalDrawRight(): number;
					public setCompanionWidget(param0: any): void;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param1: androidx.constraintlayout.solver.widgets.ConstraintWidget, param2: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param3: number): void;
					public getDrawX(): number;
					public setWrapHeight(param0: number): void;
					public reset(): void;
					public isHeightWrapContent(): boolean;
					public getWidth(): number;
					public resolve(): void;
					public isSpreadWidth(): boolean;
					public getResolutionHeight(): androidx.constraintlayout.solver.widgets.ResolutionDimension;
					public setDrawHeight(param0: number): void;
					public setupDimensionRatio(param0: boolean, param1: boolean, param2: boolean, param3: boolean): void;
					public setMinWidth(param0: number): void;
					public setDrawY(param0: number): void;
					public getRootWidgetContainer(): androidx.constraintlayout.solver.widgets.WidgetContainer;
					public resetAnchors(param0: number): void;
					public disconnectWidget(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public getBottom(): number;
					public setHeightWrapContent(param0: boolean): void;
					public getX(): number;
					public connectCircularConstraint(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget, param1: number, param2: number): void;
					public getResolutionWidth(): androidx.constraintlayout.solver.widgets.ResolutionDimension;
					public setOrigin(param0: number, param1: number): void;
					public getHorizontalChainControlWidget(): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public setHorizontalDimensionBehaviour(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour): void;
					public setDrawOrigin(param0: number, param1: number): void;
					public setVerticalWeight(param0: number): void;
					public getVerticalBiasPercent(): number;
					public setDimension(param0: number, param1: number): void;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param2: number, param3: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Strength, param4: number): void;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param2: number): void;
					public setDrawX(param0: number): void;
					public resetAnchor(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor): void;
					public resetSolverVariables(param0: androidx.constraintlayout.solver.Cache): void;
					public resetAllConstraints(): void;
					public setDebugSolverName(param0: androidx.constraintlayout.solver.LinearSystem, param1: string): void;
					public getVisibility(): number;
					public setVerticalMatchStyle(param0: number, param1: number, param2: number, param3: number): void;
					public getDimensionBehaviour(param0: number): androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
					public setHorizontalChainStyle(param0: number): void;
					public getRight(): number;
					public setMaxWidth(param0: number): void;
					public getInternalDrawBottom(): number;
					public getDebugName(): string;
					public getMinHeight(): number;
					public setParent(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public getDrawWidth(): number;
					public getRootY(): number;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type, param1: androidx.constraintlayout.solver.widgets.ConstraintWidget, param2: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type): void;
					public setHorizontalWeight(param0: number): void;
					public setVisibility(param0: number): void;
					public getLeft(): number;
					public setVerticalBiasPercent(param0: number): void;
					public getBaselineDistance(): number;
					public setWrapWidth(param0: number): void;
					public setDimensionRatio(param0: string): void;
					public getMinWidth(): number;
					public getDimensionRatioSide(): number;
					public isFullyResolved(): boolean;
					public setX(param0: number): void;
					public createObjectVariables(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public getHorizontalDimensionBehaviour(): androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
					public isRoot(): boolean;
					public toString(): string;
					public getDrawBottom(): number;
					public getBiasPercent(param0: number): number;
					public allowedInBarrier(): boolean;
					public setHorizontalBiasPercent(param0: number): void;
					public setContainerItemSkip(param0: number): void;
					public setVerticalChainStyle(param0: number): void;
					public isInsideConstraintLayout(): boolean;
					public setFrame(param0: number, param1: number, param2: number, param3: number): void;
					public getMaxHeight(): number;
					public getType(): string;
					public setVerticalDimension(param0: number, param1: number): void;
					public connect(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param1: androidx.constraintlayout.solver.widgets.ConstraintAnchor, param2: number, param3: number): void;
					public hasAncestor(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): boolean;
					public setHorizontalDimension(param0: number, param1: number): void;
					public setY(param0: number): void;
					public setWidth(param0: number): void;
					public getAnchors(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintAnchor>;
					public getDrawRight(): number;
					public setDebugName(param0: string): void;
					public getTop(): number;
					public setVerticalDimensionBehaviour(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour): void;
					public setWidthWrapContent(param0: boolean): void;
					public setOffset(param0: number, param1: number): void;
					public disconnectUnlockedWidget(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
				}
				export module ConstraintWidget {
					export class ContentAlignment {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment>;
						public static BEGIN: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static MIDDLE: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static END: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static TOP: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static VERTICAL_MIDDLE: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static BOTTOM: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static LEFT: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static RIGHT: androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static valueOf(param0: string): androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment;
						public static values(): native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget.ContentAlignment>;
					}
					export class DimensionBehaviour {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour>;
						public static FIXED: androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
						public static WRAP_CONTENT: androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
						public static MATCH_CONSTRAINT: androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
						public static MATCH_PARENT: androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
						public static values(): native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour>;
						public static valueOf(param0: string): androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ConstraintWidgetContainer extends androidx.constraintlayout.solver.widgets.WidgetContainer {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer>;
					public mSystem: androidx.constraintlayout.solver.LinearSystem;
					public mWidgetGroups: java.util.List<androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup>;
					public mGroupsWrapOptimized: boolean;
					public mHorizontalWrapOptimized: boolean;
					public mVerticalWrapOptimized: boolean;
					public mWrapFixedWidth: number;
					public mWrapFixedHeight: number;
					public mSkipSolver: boolean;
					public fillMetrics(param0: androidx.constraintlayout.solver.Metrics): void;
					public handlesInternalConstraints(): boolean;
					public getHorizontalGuidelines(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.Guideline>;
					public addChildrenToSolver(param0: androidx.constraintlayout.solver.LinearSystem): boolean;
					public preOptimize(): void;
					public setRtl(param0: boolean): void;
					public getOptimizationLevel(): number;
					public getVerticalGuidelines(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.Guideline>;
					public isHeightMeasuredTooSmall(): boolean;
					public constructor();
					public isWidthMeasuredTooSmall(): boolean;
					public setPadding(param0: number, param1: number, param2: number, param3: number): void;
					public layout(): void;
					public optimizeFor(param0: number): boolean;
					public getType(): string;
					public constructor(param0: number, param1: number);
					public reset(): void;
					public optimizeReset(): void;
					public optimizeForDimensions(param0: number, param1: number): void;
					public optimize(): void;
					public getSystem(): androidx.constraintlayout.solver.LinearSystem;
					public getWidgetGroups(): java.util.List<androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup>;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public updateChildrenFromSolver(param0: androidx.constraintlayout.solver.LinearSystem, param1: native.Array<boolean>): void;
					public analyze(param0: number): void;
					public solveGraph(): void;
					public setOptimizationLevel(param0: number): void;
					public resetGraph(): void;
					public isRtl(): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ConstraintWidgetGroup {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup>;
					public mConstrainedGroup: java.util.List<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public mSkipSolver: boolean;
					public mGroupDimensions: native.Array<number>;
					public getStartWidgets(param0: number): java.util.List<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Guideline extends androidx.constraintlayout.solver.widgets.ConstraintWidget {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Guideline>;
					public static HORIZONTAL: number;
					public static VERTICAL: number;
					public static RELATIVE_PERCENT: number;
					public static RELATIVE_BEGIN: number;
					public static RELATIVE_END: number;
					public static RELATIVE_UNKNWON: number;
					public mRelativePercent: number;
					public mRelativeBegin: number;
					public mRelativeEnd: number;
					public setGuidePercent(param0: number): void;
					public getRelativeBegin(): number;
					public setGuideEnd(param0: number): void;
					public setDrawOrigin(param0: number, param1: number): void;
					public updateFromSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public getRelativePercent(): number;
					public allowedInBarrier(): boolean;
					public constructor();
					public setGuideBegin(param0: number): void;
					public getAnchor(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor.Type): androidx.constraintlayout.solver.widgets.ConstraintAnchor;
					public getType(): string;
					public getOrientation(): number;
					public constructor(param0: number, param1: number);
					public setPositionRelaxed(param0: boolean): void;
					public addToSolver(param0: androidx.constraintlayout.solver.LinearSystem): void;
					public getAnchors(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintAnchor>;
					public setOrientation(param0: number): void;
					public getAnchor(): androidx.constraintlayout.solver.widgets.ConstraintAnchor;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public getHead(): androidx.constraintlayout.solver.widgets.Rectangle;
					public analyze(param0: number): void;
					public cyclePosition(): void;
					public getRelativeEnd(): number;
					public getRelativeBehaviour(): number;
					public setMinimumPosition(param0: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Helper extends androidx.constraintlayout.solver.widgets.ConstraintWidget {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Helper>;
					public mWidgets: native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public mWidgetsCount: number;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public constructor();
					public removeAllIds(): void;
					public add(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Optimizer {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Optimizer>;
					public static OPTIMIZATION_NONE: number;
					public static OPTIMIZATION_DIRECT: number;
					public static OPTIMIZATION_BARRIER: number;
					public static OPTIMIZATION_CHAIN: number;
					public static OPTIMIZATION_DIMENSIONS: number;
					public static OPTIMIZATION_RATIO: number;
					public static OPTIMIZATION_GROUPS: number;
					public static OPTIMIZATION_STANDARD: number;
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Rectangle {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Rectangle>;
					public x: number;
					public y: number;
					public width: number;
					public height: number;
					public getCenterY(): number;
					public constructor();
					public setBounds(param0: number, param1: number, param2: number, param3: number): void;
					public contains(param0: number, param1: number): boolean;
					public getCenterX(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ResolutionAnchor extends androidx.constraintlayout.solver.widgets.ResolutionNode {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ResolutionAnchor>;
					public static UNCONNECTED: number;
					public static DIRECT_CONNECTION: number;
					public static CENTER_CONNECTION: number;
					public static MATCH_CONNECTION: number;
					public static CHAIN_CONNECTION: number;
					public static BARRIER_CONNECTION: number;
					public reset(): void;
					public resolve(): void;
					public setOpposite(param0: androidx.constraintlayout.solver.widgets.ResolutionAnchor, param1: number, param2: androidx.constraintlayout.solver.widgets.ResolutionDimension): void;
					public dependsOn(param0: androidx.constraintlayout.solver.widgets.ResolutionAnchor, param1: number, param2: androidx.constraintlayout.solver.widgets.ResolutionDimension): void;
					public setOpposite(param0: androidx.constraintlayout.solver.widgets.ResolutionAnchor, param1: number): void;
					public getResolvedValue(): number;
					public toString(): string;
					public constructor(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor);
					public dependsOn(param0: androidx.constraintlayout.solver.widgets.ResolutionAnchor, param1: number): void;
					public constructor();
					public update(): void;
					public setType(param0: number): void;
					public resolve(param0: androidx.constraintlayout.solver.widgets.ResolutionAnchor, param1: number): void;
					public remove(param0: androidx.constraintlayout.solver.widgets.ResolutionDimension): void;
					public dependsOn(param0: number, param1: androidx.constraintlayout.solver.widgets.ResolutionAnchor, param2: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ResolutionDimension extends androidx.constraintlayout.solver.widgets.ResolutionNode {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ResolutionDimension>;
					public resolve(param0: number): void;
					public reset(): void;
					public constructor();
					public resolve(): void;
					public remove(param0: androidx.constraintlayout.solver.widgets.ResolutionDimension): void;
					public remove(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class ResolutionNode {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.ResolutionNode>;
					public static UNRESOLVED: number;
					public static RESOLVED: number;
					public static REMOVED: number;
					public addDependent(param0: androidx.constraintlayout.solver.widgets.ResolutionNode): void;
					public reset(): void;
					public isResolved(): boolean;
					public constructor();
					public invalidateAnchors(): void;
					public didResolve(): void;
					public resolve(): void;
					public invalidate(): void;
					public remove(param0: androidx.constraintlayout.solver.widgets.ResolutionDimension): void;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class Snapshot {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Snapshot>;
					public constructor(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget);
					public updateFrom(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public applyTo(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
				}
				export module Snapshot {
					export class Connection {
						public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.Snapshot.Connection>;
						public constructor(param0: androidx.constraintlayout.solver.widgets.ConstraintAnchor);
						public updateFrom(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
						public applyTo(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module solver {
			export module widgets {
				export class WidgetContainer extends androidx.constraintlayout.solver.widgets.ConstraintWidget {
					public static class: java.lang.Class<androidx.constraintlayout.solver.widgets.WidgetContainer>;
					public mChildren: java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public add(param0: native.Array<androidx.constraintlayout.solver.widgets.ConstraintWidget>): void;
					public reset(): void;
					public getRootConstraintContainer(): androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;
					public removeAllChildren(): void;
					public add(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public getChildren(): java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public remove(param0: androidx.constraintlayout.solver.widgets.ConstraintWidget): void;
					public static getBounds(param0: java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintWidget>): androidx.constraintlayout.solver.widgets.Rectangle;
					public findWidget(param0: number, param1: number): androidx.constraintlayout.solver.widgets.ConstraintWidget;
					public findWidgets(param0: number, param1: number, param2: number, param3: number): java.util.ArrayList<androidx.constraintlayout.solver.widgets.ConstraintWidget>;
					public constructor();
					public resetSolverVariables(param0: androidx.constraintlayout.solver.Cache): void;
					public layout(): void;
					public setOffset(param0: number, param1: number): void;
					public updateDrawPosition(): void;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class Barrier extends androidx.constraintlayout.widget.ConstraintHelper {
				public static class: java.lang.Class<androidx.constraintlayout.widget.Barrier>;
				public static LEFT: number;
				public static TOP: number;
				public static RIGHT: number;
				public static BOTTOM: number;
				public static START: number;
				public static END: number;
				public setType(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getType(): number;
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setAllowsGoneWidget(param0: boolean): void;
				public allowsGoneWidget(): boolean;
				public init(param0: globalAndroid.util.AttributeSet): void;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export abstract class ConstraintHelper {
				public static class: java.lang.Class<androidx.constraintlayout.widget.ConstraintHelper>;
				public mIds: native.Array<number>;
				public mCount: number;
				public myContext: globalAndroid.content.Context;
				public mHelperWidget: androidx.constraintlayout.solver.widgets.Helper;
				public mUseViewMeasure: boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getReferencedIds(): native.Array<number>;
				public updatePostMeasure(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public init(param0: globalAndroid.util.AttributeSet): void;
				public updatePreLayout(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public validateParams(): void;
				public updatePostLayout(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public constructor(param0: globalAndroid.content.Context);
				public setTag(param0: number, param1: any): void;
				public onMeasure(param0: number, param1: number): void;
				public setReferencedIds(param0: native.Array<number>): void;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class ConstraintLayout {
				public static class: java.lang.Class<androidx.constraintlayout.widget.ConstraintLayout>;
				public static VERSION: string;
				public static DESIGN_INFO_ID: number;
				public setMaxWidth(param0: number): void;
				public getMinHeight(): number;
				public getViewWidget(param0: globalAndroid.view.View): androidx.constraintlayout.solver.widgets.ConstraintWidget;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public removeView(param0: globalAndroid.view.View): void;
				public setMinHeight(param0: number): void;
				public getMaxWidth(): number;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public generateDefaultLayoutParams(): androidx.constraintlayout.widget.ConstraintLayout.LayoutParams;
				public getMaxHeight(): number;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.constraintlayout.widget.ConstraintLayout.LayoutParams;
				public getViewById(param0: number): globalAndroid.view.View;
				public getDesignInformation(param0: number, param1: any): any;
				public requestLayout(): void;
				public constructor(param0: globalAndroid.content.Context);
				public getMinWidth(): number;
				public setId(param0: number): void;
				public fillMetrics(param0: androidx.constraintlayout.solver.Metrics): void;
				public getOptimizationLevel(): number;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onViewRemoved(param0: globalAndroid.view.View): void;
				public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
				public onViewAdded(param0: globalAndroid.view.View): void;
				public onMeasure(param0: number, param1: number): void;
				public setMaxHeight(param0: number): void;
				public setMinWidth(param0: number): void;
				public setOptimizationLevel(param0: number): void;
				public solveLinearSystem(param0: string): void;
				public setDesignInformation(param0: number, param1: any, param2: any): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public setConstraintSet(param0: androidx.constraintlayout.widget.ConstraintSet): void;
				public shouldDelayChildPressedState(): boolean;
			}
			export module ConstraintLayout {
				export class LayoutParams {
					public static class: java.lang.Class<androidx.constraintlayout.widget.ConstraintLayout.LayoutParams>;
					public static MATCH_CONSTRAINT: number;
					public static PARENT_ID: number;
					public static UNSET: number;
					public static HORIZONTAL: number;
					public static VERTICAL: number;
					public static LEFT: number;
					public static RIGHT: number;
					public static TOP: number;
					public static BOTTOM: number;
					public static BASELINE: number;
					public static START: number;
					public static END: number;
					public static MATCH_CONSTRAINT_WRAP: number;
					public static MATCH_CONSTRAINT_SPREAD: number;
					public static MATCH_CONSTRAINT_PERCENT: number;
					public static CHAIN_SPREAD: number;
					public static CHAIN_SPREAD_INSIDE: number;
					public static CHAIN_PACKED: number;
					public guideBegin: number;
					public guideEnd: number;
					public guidePercent: number;
					public leftToLeft: number;
					public leftToRight: number;
					public rightToLeft: number;
					public rightToRight: number;
					public topToTop: number;
					public topToBottom: number;
					public bottomToTop: number;
					public bottomToBottom: number;
					public baselineToBaseline: number;
					public circleConstraint: number;
					public circleRadius: number;
					public circleAngle: number;
					public startToEnd: number;
					public startToStart: number;
					public endToStart: number;
					public endToEnd: number;
					public goneLeftMargin: number;
					public goneTopMargin: number;
					public goneRightMargin: number;
					public goneBottomMargin: number;
					public goneStartMargin: number;
					public goneEndMargin: number;
					public horizontalBias: number;
					public verticalBias: number;
					public dimensionRatio: string;
					public horizontalWeight: number;
					public verticalWeight: number;
					public horizontalChainStyle: number;
					public verticalChainStyle: number;
					public matchConstraintDefaultWidth: number;
					public matchConstraintDefaultHeight: number;
					public matchConstraintMinWidth: number;
					public matchConstraintMinHeight: number;
					public matchConstraintMaxWidth: number;
					public matchConstraintMaxHeight: number;
					public matchConstraintPercentWidth: number;
					public matchConstraintPercentHeight: number;
					public editorAbsoluteX: number;
					public editorAbsoluteY: number;
					public orientation: number;
					public constrainedWidth: boolean;
					public constrainedHeight: boolean;
					public helped: boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public reset(): void;
					public resolveLayoutDirection(param0: number): void;
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: androidx.constraintlayout.widget.ConstraintLayout.LayoutParams);
					public validate(): void;
					public constructor(param0: number, param1: number);
				}
				export module LayoutParams {
					export class Table {
						public static class: java.lang.Class<androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.Table>;
						public static UNUSED: number;
						public static ANDROID_ORIENTATION: number;
						public static LAYOUT_CONSTRAINT_CIRCLE: number;
						public static LAYOUT_CONSTRAINT_CIRCLE_RADIUS: number;
						public static LAYOUT_CONSTRAINT_CIRCLE_ANGLE: number;
						public static LAYOUT_CONSTRAINT_GUIDE_BEGIN: number;
						public static LAYOUT_CONSTRAINT_GUIDE_END: number;
						public static LAYOUT_CONSTRAINT_GUIDE_PERCENT: number;
						public static LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF: number;
						public static LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF: number;
						public static LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF: number;
						public static LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF: number;
						public static LAYOUT_CONSTRAINT_TOP_TO_TOP_OF: number;
						public static LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF: number;
						public static LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF: number;
						public static LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF: number;
						public static LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF: number;
						public static LAYOUT_CONSTRAINT_START_TO_END_OF: number;
						public static LAYOUT_CONSTRAINT_START_TO_START_OF: number;
						public static LAYOUT_CONSTRAINT_END_TO_START_OF: number;
						public static LAYOUT_CONSTRAINT_END_TO_END_OF: number;
						public static LAYOUT_GONE_MARGIN_LEFT: number;
						public static LAYOUT_GONE_MARGIN_TOP: number;
						public static LAYOUT_GONE_MARGIN_RIGHT: number;
						public static LAYOUT_GONE_MARGIN_BOTTOM: number;
						public static LAYOUT_GONE_MARGIN_START: number;
						public static LAYOUT_GONE_MARGIN_END: number;
						public static LAYOUT_CONSTRAINED_WIDTH: number;
						public static LAYOUT_CONSTRAINED_HEIGHT: number;
						public static LAYOUT_CONSTRAINT_HORIZONTAL_BIAS: number;
						public static LAYOUT_CONSTRAINT_VERTICAL_BIAS: number;
						public static LAYOUT_CONSTRAINT_WIDTH_DEFAULT: number;
						public static LAYOUT_CONSTRAINT_HEIGHT_DEFAULT: number;
						public static LAYOUT_CONSTRAINT_WIDTH_MIN: number;
						public static LAYOUT_CONSTRAINT_WIDTH_MAX: number;
						public static LAYOUT_CONSTRAINT_WIDTH_PERCENT: number;
						public static LAYOUT_CONSTRAINT_HEIGHT_MIN: number;
						public static LAYOUT_CONSTRAINT_HEIGHT_MAX: number;
						public static LAYOUT_CONSTRAINT_HEIGHT_PERCENT: number;
						public static LAYOUT_CONSTRAINT_LEFT_CREATOR: number;
						public static LAYOUT_CONSTRAINT_TOP_CREATOR: number;
						public static LAYOUT_CONSTRAINT_RIGHT_CREATOR: number;
						public static LAYOUT_CONSTRAINT_BOTTOM_CREATOR: number;
						public static LAYOUT_CONSTRAINT_BASELINE_CREATOR: number;
						public static LAYOUT_CONSTRAINT_DIMENSION_RATIO: number;
						public static LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT: number;
						public static LAYOUT_CONSTRAINT_VERTICAL_WEIGHT: number;
						public static LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE: number;
						public static LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE: number;
						public static LAYOUT_EDITOR_ABSOLUTEX: number;
						public static LAYOUT_EDITOR_ABSOLUTEY: number;
						public static map: globalAndroid.util.SparseIntArray;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class ConstraintSet {
				public static class: java.lang.Class<androidx.constraintlayout.widget.ConstraintSet>;
				public static UNSET: number;
				public static MATCH_CONSTRAINT: number;
				public static WRAP_CONTENT: number;
				public static MATCH_CONSTRAINT_WRAP: number;
				public static MATCH_CONSTRAINT_SPREAD: number;
				public static PARENT_ID: number;
				public static HORIZONTAL: number;
				public static VERTICAL: number;
				public static HORIZONTAL_GUIDELINE: number;
				public static VERTICAL_GUIDELINE: number;
				public static VISIBLE: number;
				public static INVISIBLE: number;
				public static GONE: number;
				public static LEFT: number;
				public static RIGHT: number;
				public static TOP: number;
				public static BOTTOM: number;
				public static BASELINE: number;
				public static START: number;
				public static END: number;
				public static CHAIN_SPREAD: number;
				public static CHAIN_SPREAD_INSIDE: number;
				public static CHAIN_PACKED: number;
				public clear(param0: number): void;
				public setVerticalChainStyle(param0: number, param1: number): void;
				public applyTo(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public setAlpha(param0: number, param1: number): void;
				public constrainPercentWidth(param0: number, param1: number): void;
				public createHorizontalChain(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: native.Array<number>, param6: number): void;
				public setTranslation(param0: number, param1: number, param2: number): void;
				public center(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
				public setGuidelinePercent(param0: number, param1: number): void;
				public centerHorizontally(param0: number, param1: number): void;
				public constructor();
				public setDimensionRatio(param0: number, param1: string): void;
				public centerVertically(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
				public setElevation(param0: number, param1: number): void;
				public clone(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public setGoneMargin(param0: number, param1: number, param2: number): void;
				public setBarrierType(param0: number, param1: number): void;
				public constrainWidth(param0: number, param1: number): void;
				public clear(param0: number, param1: number): void;
				public connect(param0: number, param1: number, param2: number, param3: number): void;
				public createHorizontalChainRtl(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: native.Array<number>, param6: number): void;
				public setGuidelineEnd(param0: number, param1: number): void;
				public setVisibility(param0: number, param1: number): void;
				public getApplyElevation(param0: number): boolean;
				public clone(param0: androidx.constraintlayout.widget.ConstraintSet): void;
				public setHorizontalWeight(param0: number, param1: number): void;
				public setApplyElevation(param0: number, param1: boolean): void;
				public clone(param0: globalAndroid.content.Context, param1: number): void;
				public setScaleY(param0: number, param1: number): void;
				public constrainCircle(param0: number, param1: number, param2: number, param3: number): void;
				public setRotationY(param0: number, param1: number): void;
				public setRotationX(param0: number, param1: number): void;
				public createVerticalChain(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: native.Array<number>, param6: number): void;
				public setMargin(param0: number, param1: number, param2: number): void;
				public setTranslationX(param0: number, param1: number): void;
				public setTranslationY(param0: number, param1: number): void;
				public setVerticalWeight(param0: number, param1: number): void;
				public getParameters(param0: number): androidx.constraintlayout.widget.ConstraintSet.Constraint;
				public setTranslationZ(param0: number, param1: number): void;
				public constrainDefaultHeight(param0: number, param1: number): void;
				public constrainPercentHeight(param0: number, param1: number): void;
				public constrainHeight(param0: number, param1: number): void;
				public centerHorizontallyRtl(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
				public connect(param0: number, param1: number, param2: number, param3: number, param4: number): void;
				public centerVertically(param0: number, param1: number): void;
				public constrainMaxHeight(param0: number, param1: number): void;
				public setVerticalBias(param0: number, param1: number): void;
				public addToHorizontalChain(param0: number, param1: number, param2: number): void;
				public setTransformPivot(param0: number, param1: number, param2: number): void;
				public setScaleX(param0: number, param1: number): void;
				public setHorizontalChainStyle(param0: number, param1: number): void;
				public setRotation(param0: number, param1: number): void;
				public load(param0: globalAndroid.content.Context, param1: number): void;
				public addToHorizontalChainRTL(param0: number, param1: number, param2: number): void;
				public removeFromHorizontalChain(param0: number): void;
				public setTransformPivotX(param0: number, param1: number): void;
				public centerHorizontally(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
				public setTransformPivotY(param0: number, param1: number): void;
				public centerHorizontallyRtl(param0: number, param1: number): void;
				public constrainMinHeight(param0: number, param1: number): void;
				public constrainDefaultWidth(param0: number, param1: number): void;
				public setGuidelineBegin(param0: number, param1: number): void;
				public setHorizontalBias(param0: number, param1: number): void;
				public constrainMaxWidth(param0: number, param1: number): void;
				public clone(param0: androidx.constraintlayout.widget.Constraints): void;
				public createBarrier(param0: number, param1: number, param2: native.Array<number>): void;
				public create(param0: number, param1: number): void;
				public constrainMinWidth(param0: number, param1: number): void;
				public addToVerticalChain(param0: number, param1: number, param2: number): void;
				public removeFromVerticalChain(param0: number): void;
			}
			export module ConstraintSet {
				export class Constraint {
					public static class: java.lang.Class<androidx.constraintlayout.widget.ConstraintSet.Constraint>;
					public mWidth: number;
					public mHeight: number;
					public guideBegin: number;
					public guideEnd: number;
					public guidePercent: number;
					public leftToLeft: number;
					public leftToRight: number;
					public rightToLeft: number;
					public rightToRight: number;
					public topToTop: number;
					public topToBottom: number;
					public bottomToTop: number;
					public bottomToBottom: number;
					public baselineToBaseline: number;
					public startToEnd: number;
					public startToStart: number;
					public endToStart: number;
					public endToEnd: number;
					public horizontalBias: number;
					public verticalBias: number;
					public dimensionRatio: string;
					public circleConstraint: number;
					public circleRadius: number;
					public circleAngle: number;
					public editorAbsoluteX: number;
					public editorAbsoluteY: number;
					public orientation: number;
					public leftMargin: number;
					public rightMargin: number;
					public topMargin: number;
					public bottomMargin: number;
					public endMargin: number;
					public startMargin: number;
					public visibility: number;
					public goneLeftMargin: number;
					public goneTopMargin: number;
					public goneRightMargin: number;
					public goneBottomMargin: number;
					public goneEndMargin: number;
					public goneStartMargin: number;
					public verticalWeight: number;
					public horizontalWeight: number;
					public horizontalChainStyle: number;
					public verticalChainStyle: number;
					public alpha: number;
					public applyElevation: boolean;
					public elevation: number;
					public rotation: number;
					public rotationX: number;
					public rotationY: number;
					public scaleX: number;
					public scaleY: number;
					public transformPivotX: number;
					public transformPivotY: number;
					public translationX: number;
					public translationY: number;
					public translationZ: number;
					public constrainedWidth: boolean;
					public constrainedHeight: boolean;
					public widthDefault: number;
					public heightDefault: number;
					public widthMax: number;
					public heightMax: number;
					public widthMin: number;
					public heightMin: number;
					public widthPercent: number;
					public heightPercent: number;
					public mBarrierAllowsGoneWidgets: boolean;
					public mBarrierDirection: number;
					public mHelperType: number;
					public mReferenceIds: native.Array<number>;
					public mReferenceIdString: string;
					public applyTo(param0: androidx.constraintlayout.widget.ConstraintLayout.LayoutParams): void;
					public clone(): androidx.constraintlayout.widget.ConstraintSet.Constraint;
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class Constraints {
				public static class: java.lang.Class<androidx.constraintlayout.widget.Constraints>;
				public static TAG: string;
				public getConstraintSet(): androidx.constraintlayout.widget.ConstraintSet;
				public generateDefaultLayoutParams(): androidx.constraintlayout.widget.Constraints.LayoutParams;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.constraintlayout.widget.Constraints.LayoutParams;
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
			}
			export module Constraints {
				export class LayoutParams extends androidx.constraintlayout.widget.ConstraintLayout.LayoutParams {
					public static class: java.lang.Class<androidx.constraintlayout.widget.Constraints.LayoutParams>;
					public alpha: number;
					public applyElevation: boolean;
					public elevation: number;
					public rotation: number;
					public rotationX: number;
					public rotationY: number;
					public scaleX: number;
					public scaleY: number;
					public transformPivotX: number;
					public transformPivotY: number;
					public translationX: number;
					public translationY: number;
					public translationZ: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.constraintlayout.widget.Constraints.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: androidx.constraintlayout.widget.ConstraintLayout.LayoutParams);
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class Group extends androidx.constraintlayout.widget.ConstraintHelper {
				public static class: java.lang.Class<androidx.constraintlayout.widget.Group>;
				public updatePostLayout(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public init(param0: globalAndroid.util.AttributeSet): void;
				public updatePreLayout(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class Guideline {
				public static class: java.lang.Class<androidx.constraintlayout.widget.Guideline>;
				public setGuidelinePercent(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public onMeasure(param0: number, param1: number): void;
				public setGuidelineEnd(param0: number): void;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public setGuidelineBegin(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				public setVisibility(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module constraintlayout {
		export module widget {
			export class Placeholder {
				public static class: java.lang.Class<androidx.constraintlayout.widget.Placeholder>;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setEmptyVisibility(param0: number): void;
				public getContent(): globalAndroid.view.View;
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getEmptyVisibility(): number;
				public updatePostMeasure(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public updatePreLayout(param0: androidx.constraintlayout.widget.ConstraintLayout): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				public setContentId(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module coordinatorlayout {
		export module widget {
			export class CoordinatorLayout implements androidx.core.view.NestedScrollingParent2 {
				public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout>;
				public setStatusBarBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public getSuggestedMinimumHeight(): number;
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public setStatusBarBackgroundColor(param0: number): void;
				public doViewsOverlap(param0: globalAndroid.view.View, param1: globalAndroid.view.View): boolean;
				public getNestedScrollAxes(): number;
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public isPointInChildBounds(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public setVisibility(param0: number): void;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number): void;
				public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
				public onDetachedFromWindow(): void;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public getLastWindowInsets(): androidx.core.view.WindowInsetsCompat;
				public drawableStateChanged(): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public getDependents(param0: globalAndroid.view.View): java.util.List<globalAndroid.view.View>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public onMeasureChild(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public getStatusBarBackground(): globalAndroid.graphics.drawable.Drawable;
				public generateDefaultLayoutParams(): androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams;
				public getDependencies(param0: globalAndroid.view.View): java.util.List<globalAndroid.view.View>;
				public setStatusBarBackgroundResource(param0: number): void;
				public constructor(param0: globalAndroid.content.Context);
				public onLayoutChild(param0: globalAndroid.view.View, param1: number): void;
				public setFitsSystemWindows(param0: boolean): void;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: number): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public setOnHierarchyChangeListener(param0: globalAndroid.view.ViewGroup.OnHierarchyChangeListener): void;
				public dispatchDependentViewsChanged(param0: globalAndroid.view.View): void;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public getSuggestedMinimumWidth(): number;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
				public onMeasure(param0: number, param1: number): void;
				public drawChild(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.view.View, param2: number): boolean;
				public onStopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public onAttachedToWindow(): void;
			}
			export module CoordinatorLayout {
				export class AttachedBehavior {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.AttachedBehavior>;
					/**
					 * Constructs a new instance of the androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getBehavior(): androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior<any> });
					public constructor();
					public getBehavior(): androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior<any>;
				}
				export abstract class Behavior<V> extends java.lang.Object {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior<any>>;
					public onNestedScrollAccepted(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: globalAndroid.view.View, param4: number, param5: number): void;
					/** @deprecated */
					public onStopNestedScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View): void;
					public blocksInteractionBelow(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V): boolean;
					public onNestedScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: number, param7: number): void;
					public getInsetDodgeRect(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.graphics.Rect): boolean;
					public onAttachedToLayoutParams(param0: androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					/** @deprecated */
					public onNestedScrollAccepted(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: globalAndroid.view.View, param4: number): void;
					public onSaveInstanceState(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V): globalAndroid.os.Parcelable;
					public constructor();
					public getScrimColor(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V): number;
					public onRequestChildRectangleOnScreen(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.graphics.Rect, param3: boolean): boolean;
					public onStartNestedScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: globalAndroid.view.View, param4: number, param5: number): boolean;
					/** @deprecated */
					public onNestedPreScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number, param4: number, param5: native.Array<number>): void;
					public onDependentViewRemoved(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View): void;
					/** @deprecated */
					public onStartNestedScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: globalAndroid.view.View, param4: number): boolean;
					public onTouchEvent(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.MotionEvent): boolean;
					public onStopNestedScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number): void;
					public onLayoutChild(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: number): boolean;
					public static getTag(param0: globalAndroid.view.View): any;
					public onInterceptTouchEvent(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.MotionEvent): boolean;
					public onNestedPreScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number, param4: number, param5: native.Array<number>, param6: number): void;
					public onDetachedFromLayoutParams(): void;
					public onNestedFling(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number, param4: number, param5: boolean): boolean;
					public layoutDependsOn(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View): boolean;
					public onApplyWindowInsets(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: androidx.core.view.WindowInsetsCompat): androidx.core.view.WindowInsetsCompat;
					public getScrimOpacity(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V): number;
					public onRestoreInstanceState(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.os.Parcelable): void;
					/** @deprecated */
					public onNestedScroll(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: number): void;
					public onNestedPreFling(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View, param3: number, param4: number): boolean;
					public static setTag(param0: globalAndroid.view.View, param1: any): void;
					public onDependentViewChanged(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: globalAndroid.view.View): boolean;
					public onMeasureChild(param0: androidx.coordinatorlayout.widget.CoordinatorLayout, param1: V, param2: number, param3: number, param4: number, param5: number): boolean;
				}
				export class DefaultBehavior {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.DefaultBehavior>;
					/**
					 * Constructs a new instance of the androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { value(): java.lang.Class<any> });
					public constructor();
					public value(): java.lang.Class<any>;
				}
				export class DispatchChangeEvent {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.DispatchChangeEvent>;
					/**
					 * Constructs a new instance of the androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class HierarchyChangeListener {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.HierarchyChangeListener>;
					public onChildViewAdded(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public onChildViewRemoved(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams>;
					public gravity: number;
					public anchorGravity: number;
					public keyline: number;
					public insetEdge: number;
					public dodgeInsetEdges: number;
					public setAnchorId(param0: number): void;
					public setBehavior(param0: androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior<any>): void;
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public getAnchorId(): number;
					public getBehavior(): androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior<any>;
					public constructor(param0: androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams);
					public constructor(param0: number, param1: number);
				}
				export class OnPreDrawListener {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.OnPreDrawListener>;
					public onPreDraw(): boolean;
				}
				export class SavedState extends androidx.customview.view.AbsSavedState {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.coordinatorlayout.widget.CoordinatorLayout.SavedState>;
					public constructor(param0: globalAndroid.os.Parcel);
					public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: globalAndroid.os.Parcelable);
				}
				export class ViewElevationComparator extends java.util.Comparator<globalAndroid.view.View> {
					public static class: java.lang.Class<androidx.coordinatorlayout.widget.CoordinatorLayout.ViewElevationComparator>;
					public compare(param0: globalAndroid.view.View, param1: globalAndroid.view.View): number;
				}
			}
		}
	}
}

declare module androidx {
	export module coordinatorlayout {
		export module widget {
			export class DirectedAcyclicGraph<T> extends java.lang.Object {
				public static class: java.lang.Class<androidx.coordinatorlayout.widget.DirectedAcyclicGraph<any>>;
				public addNode(param0: T): void;
				public contains(param0: T): boolean;
				public addEdge(param0: T, param1: T): void;
				public clear(): void;
				public getSortedList(): java.util.ArrayList<T>;
				public hasOutgoingEdges(param0: T): boolean;
				public getIncomingEdges(param0: T): java.util.List;
				public getOutgoingEdges(param0: T): java.util.List<T>;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module coordinatorlayout {
		export module widget {
			export class ViewGroupUtils {
				public static class: java.lang.Class<androidx.coordinatorlayout.widget.ViewGroupUtils>;
				public static getDescendantRect(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.graphics.Rect): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module accessibilityservice {
			export class AccessibilityServiceInfoCompat {
				public static class: java.lang.Class<androidx.core.accessibilityservice.AccessibilityServiceInfoCompat>;
				public static CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT: number;
				public static CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION: number;
				public static CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY: number;
				public static CAPABILITY_CAN_FILTER_KEY_EVENTS: number;
				public static FEEDBACK_BRAILLE: number;
				public static FEEDBACK_ALL_MASK: number;
				public static FLAG_INCLUDE_NOT_IMPORTANT_VIEWS: number;
				public static FLAG_REQUEST_TOUCH_EXPLORATION_MODE: number;
				public static FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY: number;
				public static FLAG_REPORT_VIEW_IDS: number;
				public static FLAG_REQUEST_FILTER_KEY_EVENTS: number;
				public static loadDescription(param0: globalAndroid.accessibilityservice.AccessibilityServiceInfo, param1: globalAndroid.content.pm.PackageManager): string;
				public static capabilityToString(param0: number): string;
				public static flagToString(param0: number): string;
				public static getCapabilities(param0: globalAndroid.accessibilityservice.AccessibilityServiceInfo): number;
				public static feedbackTypeToString(param0: number): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class ActivityCompat extends androidx.core.content.ContextCompat {
				public static class: java.lang.Class<androidx.core.app.ActivityCompat>;
				public static setEnterSharedElementCallback(param0: globalAndroid.app.Activity, param1: androidx.core.app.SharedElementCallback): void;
				public static setExitSharedElementCallback(param0: globalAndroid.app.Activity, param1: androidx.core.app.SharedElementCallback): void;
				public static getPermissionCompatDelegate(): androidx.core.app.ActivityCompat.PermissionCompatDelegate;
				public static requireViewById(param0: globalAndroid.app.Activity, param1: number): globalAndroid.view.View;
				/** @deprecated */
				public static invalidateOptionsMenu(param0: globalAndroid.app.Activity): boolean;
				public static finishAfterTransition(param0: globalAndroid.app.Activity): void;
				public static postponeEnterTransition(param0: globalAndroid.app.Activity): void;
				public constructor();
				public static startPostponedEnterTransition(param0: globalAndroid.app.Activity): void;
				public static finishAffinity(param0: globalAndroid.app.Activity): void;
				public static startActivityForResult(param0: globalAndroid.app.Activity, param1: globalAndroid.content.Intent, param2: number, param3: globalAndroid.os.Bundle): void;
				public static requestPermissions(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: number): void;
				public static shouldShowRequestPermissionRationale(param0: globalAndroid.app.Activity, param1: string): boolean;
				public static startIntentSenderForResult(param0: globalAndroid.app.Activity, param1: globalAndroid.content.IntentSender, param2: number, param3: globalAndroid.content.Intent, param4: number, param5: number, param6: number, param7: globalAndroid.os.Bundle): void;
				public static setPermissionCompatDelegate(param0: androidx.core.app.ActivityCompat.PermissionCompatDelegate): void;
				public static requestDragAndDropPermissions(param0: globalAndroid.app.Activity, param1: globalAndroid.view.DragEvent): androidx.core.view.DragAndDropPermissionsCompat;
				public static getReferrer(param0: globalAndroid.app.Activity): globalAndroid.net.Uri;
			}
			export module ActivityCompat {
				export class OnRequestPermissionsResultCallback {
					public static class: java.lang.Class<androidx.core.app.ActivityCompat.OnRequestPermissionsResultCallback>;
					/**
					 * Constructs a new instance of the androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void });
					public constructor();
					public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				}
				export class PermissionCompatDelegate {
					public static class: java.lang.Class<androidx.core.app.ActivityCompat.PermissionCompatDelegate>;
					/**
					 * Constructs a new instance of the androidx.core.app.ActivityCompat$PermissionCompatDelegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { requestPermissions(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: number): boolean; onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): boolean });
					public constructor();
					public requestPermissions(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: number): boolean;
					public onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): boolean;
				}
				export class RequestPermissionsRequestCodeValidator {
					public static class: java.lang.Class<androidx.core.app.ActivityCompat.RequestPermissionsRequestCodeValidator>;
					/**
					 * Constructs a new instance of the androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { validateRequestPermissionsRequestCode(param0: number): void });
					public constructor();
					public validateRequestPermissionsRequestCode(param0: number): void;
				}
				export class SharedElementCallback21Impl {
					public static class: java.lang.Class<androidx.core.app.ActivityCompat.SharedElementCallback21Impl>;
					public onMapSharedElements(param0: java.util.List<string>, param1: java.util.Map<string, globalAndroid.view.View>): void;
					public onSharedElementStart(param0: java.util.List<string>, param1: java.util.List<globalAndroid.view.View>, param2: java.util.List<globalAndroid.view.View>): void;
					public onCaptureSharedElementSnapshot(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Matrix, param2: globalAndroid.graphics.RectF): globalAndroid.os.Parcelable;
					public onRejectSharedElements(param0: java.util.List<globalAndroid.view.View>): void;
					public onCreateSnapshotView(param0: globalAndroid.content.Context, param1: globalAndroid.os.Parcelable): globalAndroid.view.View;
					public onSharedElementsArrived(param0: java.util.List<string>, param1: java.util.List<globalAndroid.view.View>, param2: any): void;
					public onSharedElementEnd(param0: java.util.List<string>, param1: java.util.List<globalAndroid.view.View>, param2: java.util.List<globalAndroid.view.View>): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class ActivityManagerCompat {
				public static class: java.lang.Class<androidx.core.app.ActivityManagerCompat>;
				public static isLowRamDevice(param0: globalAndroid.app.ActivityManager): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class ActivityOptionsCompat {
				public static class: java.lang.Class<androidx.core.app.ActivityOptionsCompat>;
				public static EXTRA_USAGE_TIME_REPORT: string;
				public static EXTRA_USAGE_TIME_REPORT_PACKAGES: string;
				public static makeThumbnailScaleUpAnimation(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Bitmap, param2: number, param3: number): androidx.core.app.ActivityOptionsCompat;
				public setLaunchBounds(param0: globalAndroid.graphics.Rect): androidx.core.app.ActivityOptionsCompat;
				public toBundle(): globalAndroid.os.Bundle;
				public static makeSceneTransitionAnimation(param0: globalAndroid.app.Activity, param1: globalAndroid.view.View, param2: string): androidx.core.app.ActivityOptionsCompat;
				public update(param0: androidx.core.app.ActivityOptionsCompat): void;
				public constructor();
				public static makeClipRevealAnimation(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): androidx.core.app.ActivityOptionsCompat;
				public static makeBasic(): androidx.core.app.ActivityOptionsCompat;
				public getLaunchBounds(): globalAndroid.graphics.Rect;
				public static makeCustomAnimation(param0: globalAndroid.content.Context, param1: number, param2: number): androidx.core.app.ActivityOptionsCompat;
				public requestUsageTimeReport(param0: globalAndroid.app.PendingIntent): void;
				public static makeTaskLaunchBehind(): androidx.core.app.ActivityOptionsCompat;
				public static makeSceneTransitionAnimation(param0: globalAndroid.app.Activity, param1: native.Array<androidx.core.util.Pair<globalAndroid.view.View, string>>): androidx.core.app.ActivityOptionsCompat;
				public static makeScaleUpAnimation(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): androidx.core.app.ActivityOptionsCompat;
			}
			export module ActivityOptionsCompat {
				export class ActivityOptionsCompatImpl extends androidx.core.app.ActivityOptionsCompat {
					public static class: java.lang.Class<androidx.core.app.ActivityOptionsCompat.ActivityOptionsCompatImpl>;
					public requestUsageTimeReport(param0: globalAndroid.app.PendingIntent): void;
					public getLaunchBounds(): globalAndroid.graphics.Rect;
					public toBundle(): globalAndroid.os.Bundle;
					public update(param0: androidx.core.app.ActivityOptionsCompat): void;
					public setLaunchBounds(param0: globalAndroid.graphics.Rect): androidx.core.app.ActivityOptionsCompat;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class AlarmManagerCompat {
				public static class: java.lang.Class<androidx.core.app.AlarmManagerCompat>;
				public static setAndAllowWhileIdle(param0: globalAndroid.app.AlarmManager, param1: number, param2: number, param3: globalAndroid.app.PendingIntent): void;
				public static setExact(param0: globalAndroid.app.AlarmManager, param1: number, param2: number, param3: globalAndroid.app.PendingIntent): void;
				public static setExactAndAllowWhileIdle(param0: globalAndroid.app.AlarmManager, param1: number, param2: number, param3: globalAndroid.app.PendingIntent): void;
				public static setAlarmClock(param0: globalAndroid.app.AlarmManager, param1: number, param2: globalAndroid.app.PendingIntent, param3: globalAndroid.app.PendingIntent): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class AppComponentFactory {
				public static class: java.lang.Class<androidx.core.app.AppComponentFactory>;
				public instantiateReceiverCompat(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.content.BroadcastReceiver;
				public instantiateApplication(param0: java.lang.ClassLoader, param1: string): globalAndroid.app.Application;
				public instantiateActivityCompat(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.app.Activity;
				public instantiateProviderCompat(param0: java.lang.ClassLoader, param1: string): globalAndroid.content.ContentProvider;
				public instantiateActivity(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.app.Activity;
				public instantiateApplicationCompat(param0: java.lang.ClassLoader, param1: string): globalAndroid.app.Application;
				public instantiateService(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.app.Service;
				public instantiateServiceCompat(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.app.Service;
				public instantiateReceiver(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.content.BroadcastReceiver;
				public instantiateProvider(param0: java.lang.ClassLoader, param1: string): globalAndroid.content.ContentProvider;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class AppLaunchChecker {
				public static class: java.lang.Class<androidx.core.app.AppLaunchChecker>;
				/** @deprecated */
				public constructor();
				public static onActivityCreate(param0: globalAndroid.app.Activity): void;
				public static hasStartedFromLauncher(param0: globalAndroid.content.Context): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class AppOpsManagerCompat {
				public static class: java.lang.Class<androidx.core.app.AppOpsManagerCompat>;
				public static MODE_ALLOWED: number;
				public static MODE_IGNORED: number;
				public static MODE_ERRORED: number;
				public static MODE_DEFAULT: number;
				public static noteOp(param0: globalAndroid.content.Context, param1: string, param2: number, param3: string): number;
				public static noteOpNoThrow(param0: globalAndroid.content.Context, param1: string, param2: number, param3: string): number;
				public static noteProxyOpNoThrow(param0: globalAndroid.content.Context, param1: string, param2: string): number;
				public static permissionToOp(param0: string): string;
				public static noteProxyOp(param0: globalAndroid.content.Context, param1: string, param2: string): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class BundleCompat {
				public static class: java.lang.Class<androidx.core.app.BundleCompat>;
				public static getBinder(param0: globalAndroid.os.Bundle, param1: string): globalAndroid.os.IBinder;
				public static putBinder(param0: globalAndroid.os.Bundle, param1: string, param2: globalAndroid.os.IBinder): void;
			}
			export module BundleCompat {
				export class BundleCompatBaseImpl {
					public static class: java.lang.Class<androidx.core.app.BundleCompat.BundleCompatBaseImpl>;
					public static putBinder(param0: globalAndroid.os.Bundle, param1: string, param2: globalAndroid.os.IBinder): void;
					public static getBinder(param0: globalAndroid.os.Bundle, param1: string): globalAndroid.os.IBinder;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class ComponentActivity implements androidx.lifecycle.LifecycleOwner, androidx.core.view.KeyEventDispatcher.Component {
				public static class: java.lang.Class<androidx.core.app.ComponentActivity>;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public putExtraData(param0: androidx.core.app.ComponentActivity.ExtraData): void;
				public getExtraData(param0: java.lang.Class): androidx.core.app.ComponentActivity.ExtraData;
				public dispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public constructor();
			}
			export module ComponentActivity {
				export class ExtraData {
					public static class: java.lang.Class<androidx.core.app.ComponentActivity.ExtraData>;
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class CoreComponentFactory {
				public static class: java.lang.Class<androidx.core.app.CoreComponentFactory>;
				public instantiateApplication(param0: java.lang.ClassLoader, param1: string): globalAndroid.app.Application;
				public instantiateActivity(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.app.Activity;
				public instantiateService(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.app.Service;
				public instantiateReceiver(param0: java.lang.ClassLoader, param1: string, param2: globalAndroid.content.Intent): globalAndroid.content.BroadcastReceiver;
				public instantiateProvider(param0: java.lang.ClassLoader, param1: string): globalAndroid.content.ContentProvider;
				public constructor();
			}
			export module CoreComponentFactory {
				export class CompatWrapped {
					public static class: java.lang.Class<androidx.core.app.CoreComponentFactory.CompatWrapped>;
					/**
					 * Constructs a new instance of the androidx.core.app.CoreComponentFactory$CompatWrapped interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getWrapper(): any });
					public constructor();
					public getWrapper(): any;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class FrameMetricsAggregator {
				public static class: java.lang.Class<androidx.core.app.FrameMetricsAggregator>;
				public static TOTAL_INDEX: number;
				public static INPUT_INDEX: number;
				public static LAYOUT_MEASURE_INDEX: number;
				public static DRAW_INDEX: number;
				public static SYNC_INDEX: number;
				public static COMMAND_INDEX: number;
				public static SWAP_INDEX: number;
				public static DELAY_INDEX: number;
				public static ANIMATION_INDEX: number;
				public static TOTAL_DURATION: number;
				public static INPUT_DURATION: number;
				public static LAYOUT_MEASURE_DURATION: number;
				public static DRAW_DURATION: number;
				public static SYNC_DURATION: number;
				public static COMMAND_DURATION: number;
				public static SWAP_DURATION: number;
				public static DELAY_DURATION: number;
				public static ANIMATION_DURATION: number;
				public static EVERY_DURATION: number;
				public stop(): native.Array<globalAndroid.util.SparseIntArray>;
				public getMetrics(): native.Array<globalAndroid.util.SparseIntArray>;
				public remove(param0: globalAndroid.app.Activity): native.Array<globalAndroid.util.SparseIntArray>;
				public constructor(param0: number);
				public add(param0: globalAndroid.app.Activity): void;
				public reset(): native.Array<globalAndroid.util.SparseIntArray>;
				public constructor();
			}
			export module FrameMetricsAggregator {
				export class FrameMetricsApi24Impl extends androidx.core.app.FrameMetricsAggregator.FrameMetricsBaseImpl {
					public static class: java.lang.Class<androidx.core.app.FrameMetricsAggregator.FrameMetricsApi24Impl>;
					public add(param0: globalAndroid.app.Activity): void;
					public getMetrics(): native.Array<globalAndroid.util.SparseIntArray>;
					public reset(): native.Array<globalAndroid.util.SparseIntArray>;
					public remove(param0: globalAndroid.app.Activity): native.Array<globalAndroid.util.SparseIntArray>;
					public stop(): native.Array<globalAndroid.util.SparseIntArray>;
				}
				export class FrameMetricsBaseImpl {
					public static class: java.lang.Class<androidx.core.app.FrameMetricsAggregator.FrameMetricsBaseImpl>;
					public add(param0: globalAndroid.app.Activity): void;
					public getMetrics(): native.Array<globalAndroid.util.SparseIntArray>;
					public reset(): native.Array<globalAndroid.util.SparseIntArray>;
					public remove(param0: globalAndroid.app.Activity): native.Array<globalAndroid.util.SparseIntArray>;
					public stop(): native.Array<globalAndroid.util.SparseIntArray>;
				}
				export class MetricType {
					public static class: java.lang.Class<androidx.core.app.FrameMetricsAggregator.MetricType>;
					/**
					 * Constructs a new instance of the androidx.core.app.FrameMetricsAggregator$MetricType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export abstract class JobIntentService {
				public static class: java.lang.Class<androidx.core.app.JobIntentService>;
				public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
				public setInterruptIfStopped(param0: boolean): void;
				public onStartCommand(param0: globalAndroid.content.Intent, param1: number, param2: number): number;
				public isStopped(): boolean;
				public onCreate(): void;
				public static enqueueWork(param0: globalAndroid.content.Context, param1: globalAndroid.content.ComponentName, param2: number, param3: globalAndroid.content.Intent): void;
				public onDestroy(): void;
				public static enqueueWork(param0: globalAndroid.content.Context, param1: java.lang.Class, param2: number, param3: globalAndroid.content.Intent): void;
				public onHandleWork(param0: globalAndroid.content.Intent): void;
				public onStopCurrentWork(): boolean;
				public constructor();
			}
			export module JobIntentService {
				export class CommandProcessor extends globalAndroid.os.AsyncTask<java.lang.Void, java.lang.Void, java.lang.Void> {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.CommandProcessor>;
					public doInBackground(param0: native.Array<java.lang.Void>): java.lang.Void;
					public onCancelled(param0: java.lang.Void): void;
					public onPostExecute(param0: java.lang.Void): void;
				}
				export class CompatJobEngine {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.CompatJobEngine>;
					/**
					 * Constructs a new instance of the androidx.core.app.JobIntentService$CompatJobEngine interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { compatGetBinder(): globalAndroid.os.IBinder; dequeueWork(): androidx.core.app.JobIntentService.GenericWorkItem });
					public constructor();
					public compatGetBinder(): globalAndroid.os.IBinder;
					public dequeueWork(): androidx.core.app.JobIntentService.GenericWorkItem;
				}
				export class CompatWorkEnqueuer extends androidx.core.app.JobIntentService.WorkEnqueuer {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.CompatWorkEnqueuer>;
					public serviceStartReceived(): void;
					public serviceProcessingFinished(): void;
					public serviceProcessingStarted(): void;
				}
				export class CompatWorkItem extends androidx.core.app.JobIntentService.GenericWorkItem {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.CompatWorkItem>;
					public getIntent(): globalAndroid.content.Intent;
					public complete(): void;
				}
				export class GenericWorkItem {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.GenericWorkItem>;
					/**
					 * Constructs a new instance of the androidx.core.app.JobIntentService$GenericWorkItem interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getIntent(): globalAndroid.content.Intent; complete(): void });
					public constructor();
					public getIntent(): globalAndroid.content.Intent;
					public complete(): void;
				}
				export class JobServiceEngineImpl extends androidx.core.app.JobIntentService.CompatJobEngine {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.JobServiceEngineImpl>;
					public onStopJob(param0: any): boolean;
					public onStartJob(param0: any): boolean;
					public compatGetBinder(): globalAndroid.os.IBinder;
					public dequeueWork(): androidx.core.app.JobIntentService.GenericWorkItem;
				}
				export module JobServiceEngineImpl {
					export class WrapperWorkItem extends androidx.core.app.JobIntentService.GenericWorkItem {
						public static class: java.lang.Class<androidx.core.app.JobIntentService.JobServiceEngineImpl.WrapperWorkItem>;
						public complete(): void;
						public getIntent(): globalAndroid.content.Intent;
					}
				}
				export class JobWorkEnqueuer extends androidx.core.app.JobIntentService.WorkEnqueuer {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.JobWorkEnqueuer>;
				}
				export abstract class WorkEnqueuer {
					public static class: java.lang.Class<androidx.core.app.JobIntentService.WorkEnqueuer>;
					public serviceStartReceived(): void;
					public serviceProcessingFinished(): void;
					public serviceProcessingStarted(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NavUtils {
				public static class: java.lang.Class<androidx.core.app.NavUtils>;
				public static PARENT_ACTIVITY: string;
				public static getParentActivityIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>): globalAndroid.content.Intent;
				public static getParentActivityName(param0: globalAndroid.content.Context, param1: globalAndroid.content.ComponentName): string;
				public static navigateUpTo(param0: globalAndroid.app.Activity, param1: globalAndroid.content.Intent): void;
				public static getParentActivityIntent(param0: globalAndroid.app.Activity): globalAndroid.content.Intent;
				public static getParentActivityName(param0: globalAndroid.app.Activity): string;
				public static shouldUpRecreateTask(param0: globalAndroid.app.Activity, param1: globalAndroid.content.Intent): boolean;
				public static navigateUpFromSameTask(param0: globalAndroid.app.Activity): void;
				public static getParentActivityIntent(param0: globalAndroid.content.Context, param1: globalAndroid.content.ComponentName): globalAndroid.content.Intent;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NotificationBuilderWithBuilderAccessor {
				public static class: java.lang.Class<androidx.core.app.NotificationBuilderWithBuilderAccessor>;
				/**
				 * Constructs a new instance of the androidx.core.app.NotificationBuilderWithBuilderAccessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { getBuilder(): globalAndroid.app.Notification.Builder });
				public constructor();
				public getBuilder(): globalAndroid.app.Notification.Builder;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NotificationCompat {
				public static class: java.lang.Class<androidx.core.app.NotificationCompat>;
				public static DEFAULT_ALL: number;
				public static DEFAULT_SOUND: number;
				public static DEFAULT_VIBRATE: number;
				public static DEFAULT_LIGHTS: number;
				public static STREAM_DEFAULT: number;
				public static FLAG_SHOW_LIGHTS: number;
				public static FLAG_ONGOING_EVENT: number;
				public static FLAG_INSISTENT: number;
				public static FLAG_ONLY_ALERT_ONCE: number;
				public static FLAG_AUTO_CANCEL: number;
				public static FLAG_NO_CLEAR: number;
				public static FLAG_FOREGROUND_SERVICE: number;
				public static FLAG_HIGH_PRIORITY: number;
				public static FLAG_LOCAL_ONLY: number;
				public static FLAG_GROUP_SUMMARY: number;
				public static PRIORITY_DEFAULT: number;
				public static PRIORITY_LOW: number;
				public static PRIORITY_MIN: number;
				public static PRIORITY_HIGH: number;
				public static PRIORITY_MAX: number;
				public static EXTRA_TITLE: string;
				public static EXTRA_TITLE_BIG: string;
				public static EXTRA_TEXT: string;
				public static EXTRA_SUB_TEXT: string;
				public static EXTRA_REMOTE_INPUT_HISTORY: string;
				public static EXTRA_INFO_TEXT: string;
				public static EXTRA_SUMMARY_TEXT: string;
				public static EXTRA_BIG_TEXT: string;
				public static EXTRA_SMALL_ICON: string;
				public static EXTRA_LARGE_ICON: string;
				public static EXTRA_LARGE_ICON_BIG: string;
				public static EXTRA_PROGRESS: string;
				public static EXTRA_PROGRESS_MAX: string;
				public static EXTRA_PROGRESS_INDETERMINATE: string;
				public static EXTRA_SHOW_CHRONOMETER: string;
				public static EXTRA_SHOW_WHEN: string;
				public static EXTRA_PICTURE: string;
				public static EXTRA_TEXT_LINES: string;
				public static EXTRA_TEMPLATE: string;
				public static EXTRA_PEOPLE: string;
				public static EXTRA_BACKGROUND_IMAGE_URI: string;
				public static EXTRA_MEDIA_SESSION: string;
				public static EXTRA_COMPACT_ACTIONS: string;
				public static EXTRA_SELF_DISPLAY_NAME: string;
				public static EXTRA_MESSAGING_STYLE_USER: string;
				public static EXTRA_CONVERSATION_TITLE: string;
				public static EXTRA_MESSAGES: string;
				public static EXTRA_IS_GROUP_CONVERSATION: string;
				public static EXTRA_HIDDEN_CONVERSATION_TITLE: string;
				public static EXTRA_AUDIO_CONTENTS_URI: string;
				public static COLOR_DEFAULT: number;
				public static VISIBILITY_PUBLIC: number;
				public static VISIBILITY_PRIVATE: number;
				public static VISIBILITY_SECRET: number;
				public static CATEGORY_CALL: string;
				public static CATEGORY_MESSAGE: string;
				public static CATEGORY_EMAIL: string;
				public static CATEGORY_EVENT: string;
				public static CATEGORY_PROMO: string;
				public static CATEGORY_ALARM: string;
				public static CATEGORY_PROGRESS: string;
				public static CATEGORY_SOCIAL: string;
				public static CATEGORY_ERROR: string;
				public static CATEGORY_TRANSPORT: string;
				public static CATEGORY_SYSTEM: string;
				public static CATEGORY_SERVICE: string;
				public static CATEGORY_REMINDER: string;
				public static CATEGORY_RECOMMENDATION: string;
				public static CATEGORY_STATUS: string;
				public static BADGE_ICON_NONE: number;
				public static BADGE_ICON_SMALL: number;
				public static BADGE_ICON_LARGE: number;
				public static GROUP_ALERT_ALL: number;
				public static GROUP_ALERT_SUMMARY: number;
				public static GROUP_ALERT_CHILDREN: number;
				public static getAction(param0: globalAndroid.app.Notification, param1: number): androidx.core.app.NotificationCompat.Action;
				public static getContentTitle(param0: globalAndroid.app.Notification): string;
				public static getLocalOnly(param0: globalAndroid.app.Notification): boolean;
				public static getChannelId(param0: globalAndroid.app.Notification): string;
				public static getGroupAlertBehavior(param0: globalAndroid.app.Notification): number;
				public static getInvisibleActions(param0: globalAndroid.app.Notification): java.util.List<androidx.core.app.NotificationCompat.Action>;
				public static getCategory(param0: globalAndroid.app.Notification): string;
				/** @deprecated */
				public constructor();
				public static getShortcutId(param0: globalAndroid.app.Notification): string;
				public static getExtras(param0: globalAndroid.app.Notification): globalAndroid.os.Bundle;
				public static getTimeoutAfter(param0: globalAndroid.app.Notification): number;
				public static getActionCount(param0: globalAndroid.app.Notification): number;
				public static getGroup(param0: globalAndroid.app.Notification): string;
				public static isGroupSummary(param0: globalAndroid.app.Notification): boolean;
				public static getSortKey(param0: globalAndroid.app.Notification): string;
				public static getBadgeIconType(param0: globalAndroid.app.Notification): number;
			}
			export module NotificationCompat {
				export class Action {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.Action>;
					public static SEMANTIC_ACTION_NONE: number;
					public static SEMANTIC_ACTION_REPLY: number;
					public static SEMANTIC_ACTION_MARK_AS_READ: number;
					public static SEMANTIC_ACTION_MARK_AS_UNREAD: number;
					public static SEMANTIC_ACTION_DELETE: number;
					public static SEMANTIC_ACTION_ARCHIVE: number;
					public static SEMANTIC_ACTION_MUTE: number;
					public static SEMANTIC_ACTION_UNMUTE: number;
					public static SEMANTIC_ACTION_THUMBS_UP: number;
					public static SEMANTIC_ACTION_THUMBS_DOWN: number;
					public static SEMANTIC_ACTION_CALL: number;
					public icon: number;
					public title: string;
					public actionIntent: globalAndroid.app.PendingIntent;
					public getTitle(): string;
					public getRemoteInputs(): native.Array<androidx.core.app.RemoteInput>;
					public getIcon(): number;
					public getExtras(): globalAndroid.os.Bundle;
					public getShowsUserInterface(): boolean;
					public constructor(param0: number, param1: string, param2: globalAndroid.app.PendingIntent);
					public getAllowGeneratedReplies(): boolean;
					public getDataOnlyRemoteInputs(): native.Array<androidx.core.app.RemoteInput>;
					public getSemanticAction(): number;
					public getActionIntent(): globalAndroid.app.PendingIntent;
				}
				export module Action {
					export class Builder {
						public static class: java.lang.Class<androidx.core.app.NotificationCompat.Action.Builder>;
						public constructor(param0: androidx.core.app.NotificationCompat.Action);
						public addExtras(param0: globalAndroid.os.Bundle): androidx.core.app.NotificationCompat.Action.Builder;
						public addRemoteInput(param0: androidx.core.app.RemoteInput): androidx.core.app.NotificationCompat.Action.Builder;
						public constructor(param0: number, param1: string, param2: globalAndroid.app.PendingIntent);
						public build(): androidx.core.app.NotificationCompat.Action;
						public setShowsUserInterface(param0: boolean): androidx.core.app.NotificationCompat.Action.Builder;
						public getExtras(): globalAndroid.os.Bundle;
						public setAllowGeneratedReplies(param0: boolean): androidx.core.app.NotificationCompat.Action.Builder;
						public setSemanticAction(param0: number): androidx.core.app.NotificationCompat.Action.Builder;
						public extend(param0: androidx.core.app.NotificationCompat.Action.Extender): androidx.core.app.NotificationCompat.Action.Builder;
					}
					export class Extender {
						public static class: java.lang.Class<androidx.core.app.NotificationCompat.Action.Extender>;
						/**
						 * Constructs a new instance of the androidx.core.app.NotificationCompat$Action$Extender interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { extend(param0: androidx.core.app.NotificationCompat.Action.Builder): androidx.core.app.NotificationCompat.Action.Builder });
						public constructor();
						public extend(param0: androidx.core.app.NotificationCompat.Action.Builder): androidx.core.app.NotificationCompat.Action.Builder;
					}
					export class SemanticAction {
						public static class: java.lang.Class<androidx.core.app.NotificationCompat.Action.SemanticAction>;
						/**
						 * Constructs a new instance of the androidx.core.app.NotificationCompat$Action$SemanticAction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
					export class WearableExtender extends androidx.core.app.NotificationCompat.Action.Extender {
						public static class: java.lang.Class<androidx.core.app.NotificationCompat.Action.WearableExtender>;
						public constructor();
						public getHintDisplayActionInline(): boolean;
						/** @deprecated */
						public getConfirmLabel(): string;
						/** @deprecated */
						public setConfirmLabel(param0: string): androidx.core.app.NotificationCompat.Action.WearableExtender;
						public setHintLaunchesActivity(param0: boolean): androidx.core.app.NotificationCompat.Action.WearableExtender;
						/** @deprecated */
						public setInProgressLabel(param0: string): androidx.core.app.NotificationCompat.Action.WearableExtender;
						public setAvailableOffline(param0: boolean): androidx.core.app.NotificationCompat.Action.WearableExtender;
						public extend(param0: androidx.core.app.NotificationCompat.Action.Builder): androidx.core.app.NotificationCompat.Action.Builder;
						/** @deprecated */
						public getInProgressLabel(): string;
						/** @deprecated */
						public setCancelLabel(param0: string): androidx.core.app.NotificationCompat.Action.WearableExtender;
						/** @deprecated */
						public getCancelLabel(): string;
						public getHintLaunchesActivity(): boolean;
						public constructor(param0: androidx.core.app.NotificationCompat.Action);
						public clone(): androidx.core.app.NotificationCompat.Action.WearableExtender;
						public setHintDisplayActionInline(param0: boolean): androidx.core.app.NotificationCompat.Action.WearableExtender;
						public isAvailableOffline(): boolean;
					}
				}
				export class BadgeIconType {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.BadgeIconType>;
					/**
					 * Constructs a new instance of the androidx.core.app.NotificationCompat$BadgeIconType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class BigPictureStyle extends androidx.core.app.NotificationCompat.Style {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.BigPictureStyle>;
					public setSummaryText(param0: string): androidx.core.app.NotificationCompat.BigPictureStyle;
					public constructor();
					public bigPicture(param0: globalAndroid.graphics.Bitmap): androidx.core.app.NotificationCompat.BigPictureStyle;
					public constructor(param0: androidx.core.app.NotificationCompat.Builder);
					public setBigContentTitle(param0: string): androidx.core.app.NotificationCompat.BigPictureStyle;
					public bigLargeIcon(param0: globalAndroid.graphics.Bitmap): androidx.core.app.NotificationCompat.BigPictureStyle;
					public apply(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): void;
				}
				export class BigTextStyle extends androidx.core.app.NotificationCompat.Style {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.BigTextStyle>;
					public constructor();
					public constructor(param0: androidx.core.app.NotificationCompat.Builder);
					public setSummaryText(param0: string): androidx.core.app.NotificationCompat.BigTextStyle;
					public apply(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): void;
					public setBigContentTitle(param0: string): androidx.core.app.NotificationCompat.BigTextStyle;
					public bigText(param0: string): androidx.core.app.NotificationCompat.BigTextStyle;
				}
				export class Builder {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.Builder>;
					public mContext: globalAndroid.content.Context;
					public mActions: java.util.ArrayList<androidx.core.app.NotificationCompat.Action>;
					public mPeople: java.util.ArrayList<string>;
					public setContentText(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setSubText(param0: string): androidx.core.app.NotificationCompat.Builder;
					public getHeadsUpContentView(): globalAndroid.widget.RemoteViews;
					public setExtras(param0: globalAndroid.os.Bundle): androidx.core.app.NotificationCompat.Builder;
					public setGroupSummary(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setChannelId(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setBadgeIconType(param0: number): androidx.core.app.NotificationCompat.Builder;
					public setGroupAlertBehavior(param0: number): androidx.core.app.NotificationCompat.Builder;
					public setSmallIcon(param0: number, param1: number): androidx.core.app.NotificationCompat.Builder;
					public addAction(param0: androidx.core.app.NotificationCompat.Action): androidx.core.app.NotificationCompat.Builder;
					public setOnlyAlertOnce(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setDeleteIntent(param0: globalAndroid.app.PendingIntent): androidx.core.app.NotificationCompat.Builder;
					public setSound(param0: globalAndroid.net.Uri, param1: number): androidx.core.app.NotificationCompat.Builder;
					public build(): globalAndroid.app.Notification;
					public setSound(param0: globalAndroid.net.Uri): androidx.core.app.NotificationCompat.Builder;
					public setCustomHeadsUpContentView(param0: globalAndroid.widget.RemoteViews): androidx.core.app.NotificationCompat.Builder;
					public setLocalOnly(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public addInvisibleAction(param0: number, param1: string, param2: globalAndroid.app.PendingIntent): androidx.core.app.NotificationCompat.Builder;
					public getPriority(): number;
					public getColor(): number;
					public setNumber(param0: number): androidx.core.app.NotificationCompat.Builder;
					public constructor(param0: globalAndroid.content.Context, param1: string);
					public addPerson(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setWhen(param0: number): androidx.core.app.NotificationCompat.Builder;
					public setShowWhen(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setVisibility(param0: number): androidx.core.app.NotificationCompat.Builder;
					/** @deprecated */
					public getNotification(): globalAndroid.app.Notification;
					public setGroup(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setTimeoutAfter(param0: number): androidx.core.app.NotificationCompat.Builder;
					public setProgress(param0: number, param1: number, param2: boolean): androidx.core.app.NotificationCompat.Builder;
					public setColorized(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setCustomBigContentView(param0: globalAndroid.widget.RemoteViews): androidx.core.app.NotificationCompat.Builder;
					public setUsesChronometer(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setShortcutId(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setTicker(param0: string, param1: globalAndroid.widget.RemoteViews): androidx.core.app.NotificationCompat.Builder;
					public setAutoCancel(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setPriority(param0: number): androidx.core.app.NotificationCompat.Builder;
					public getExtras(): globalAndroid.os.Bundle;
					public getWhenIfShowing(): number;
					public addAction(param0: number, param1: string, param2: globalAndroid.app.PendingIntent): androidx.core.app.NotificationCompat.Builder;
					public static limitCharSequenceLength(param0: string): string;
					public addInvisibleAction(param0: androidx.core.app.NotificationCompat.Action): androidx.core.app.NotificationCompat.Builder;
					public setRemoteInputHistory(param0: native.Array<string>): androidx.core.app.NotificationCompat.Builder;
					public setPublicVersion(param0: globalAndroid.app.Notification): androidx.core.app.NotificationCompat.Builder;
					public setCategory(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setLargeIcon(param0: globalAndroid.graphics.Bitmap): androidx.core.app.NotificationCompat.Builder;
					public setDefaults(param0: number): androidx.core.app.NotificationCompat.Builder;
					public extend(param0: androidx.core.app.NotificationCompat.Extender): androidx.core.app.NotificationCompat.Builder;
					public setLights(param0: number, param1: number, param2: number): androidx.core.app.NotificationCompat.Builder;
					public addExtras(param0: globalAndroid.os.Bundle): androidx.core.app.NotificationCompat.Builder;
					public setContentTitle(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setContentInfo(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setStyle(param0: androidx.core.app.NotificationCompat.Style): androidx.core.app.NotificationCompat.Builder;
					public setVibrate(param0: native.Array<number>): androidx.core.app.NotificationCompat.Builder;
					public setColor(param0: number): androidx.core.app.NotificationCompat.Builder;
					public getBigContentView(): globalAndroid.widget.RemoteViews;
					public setContentIntent(param0: globalAndroid.app.PendingIntent): androidx.core.app.NotificationCompat.Builder;
					public setCustomContentView(param0: globalAndroid.widget.RemoteViews): androidx.core.app.NotificationCompat.Builder;
					public setOngoing(param0: boolean): androidx.core.app.NotificationCompat.Builder;
					public setSmallIcon(param0: number): androidx.core.app.NotificationCompat.Builder;
					public setContent(param0: globalAndroid.widget.RemoteViews): androidx.core.app.NotificationCompat.Builder;
					public getContentView(): globalAndroid.widget.RemoteViews;
					/** @deprecated */
					public constructor(param0: globalAndroid.content.Context);
					public setFullScreenIntent(param0: globalAndroid.app.PendingIntent, param1: boolean): androidx.core.app.NotificationCompat.Builder;
					public setSortKey(param0: string): androidx.core.app.NotificationCompat.Builder;
					public setTicker(param0: string): androidx.core.app.NotificationCompat.Builder;
				}
				export class CarExtender extends androidx.core.app.NotificationCompat.Extender {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.CarExtender>;
					public getLargeIcon(): globalAndroid.graphics.Bitmap;
					public getColor(): number;
					public setUnreadConversation(param0: androidx.core.app.NotificationCompat.CarExtender.UnreadConversation): androidx.core.app.NotificationCompat.CarExtender;
					public constructor();
					public setColor(param0: number): androidx.core.app.NotificationCompat.CarExtender;
					public setLargeIcon(param0: globalAndroid.graphics.Bitmap): androidx.core.app.NotificationCompat.CarExtender;
					public constructor(param0: globalAndroid.app.Notification);
					public getUnreadConversation(): androidx.core.app.NotificationCompat.CarExtender.UnreadConversation;
					public extend(param0: androidx.core.app.NotificationCompat.Builder): androidx.core.app.NotificationCompat.Builder;
				}
				export module CarExtender {
					export class UnreadConversation {
						public static class: java.lang.Class<androidx.core.app.NotificationCompat.CarExtender.UnreadConversation>;
						public getParticipant(): string;
						public getRemoteInput(): androidx.core.app.RemoteInput;
						public getReplyPendingIntent(): globalAndroid.app.PendingIntent;
						public getParticipants(): native.Array<string>;
						public getMessages(): native.Array<string>;
						public getReadPendingIntent(): globalAndroid.app.PendingIntent;
						public getLatestTimestamp(): number;
					}
					export module UnreadConversation {
						export class Builder {
							public static class: java.lang.Class<androidx.core.app.NotificationCompat.CarExtender.UnreadConversation.Builder>;
							public addMessage(param0: string): androidx.core.app.NotificationCompat.CarExtender.UnreadConversation.Builder;
							public setReadPendingIntent(param0: globalAndroid.app.PendingIntent): androidx.core.app.NotificationCompat.CarExtender.UnreadConversation.Builder;
							public constructor(param0: string);
							public setLatestTimestamp(param0: number): androidx.core.app.NotificationCompat.CarExtender.UnreadConversation.Builder;
							public setReplyAction(param0: globalAndroid.app.PendingIntent, param1: androidx.core.app.RemoteInput): androidx.core.app.NotificationCompat.CarExtender.UnreadConversation.Builder;
							public build(): androidx.core.app.NotificationCompat.CarExtender.UnreadConversation;
						}
					}
				}
				export class DecoratedCustomViewStyle extends androidx.core.app.NotificationCompat.Style {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.DecoratedCustomViewStyle>;
					public makeContentView(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): globalAndroid.widget.RemoteViews;
					public constructor();
					public makeHeadsUpContentView(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): globalAndroid.widget.RemoteViews;
					public makeBigContentView(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): globalAndroid.widget.RemoteViews;
					public apply(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): void;
				}
				export class Extender {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.Extender>;
					/**
					 * Constructs a new instance of the androidx.core.app.NotificationCompat$Extender interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { extend(param0: androidx.core.app.NotificationCompat.Builder): androidx.core.app.NotificationCompat.Builder });
					public constructor();
					public extend(param0: androidx.core.app.NotificationCompat.Builder): androidx.core.app.NotificationCompat.Builder;
				}
				export class GroupAlertBehavior {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.GroupAlertBehavior>;
					/**
					 * Constructs a new instance of the androidx.core.app.NotificationCompat$GroupAlertBehavior interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class InboxStyle extends androidx.core.app.NotificationCompat.Style {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.InboxStyle>;
					public addLine(param0: string): androidx.core.app.NotificationCompat.InboxStyle;
					public constructor();
					public setBigContentTitle(param0: string): androidx.core.app.NotificationCompat.InboxStyle;
					public constructor(param0: androidx.core.app.NotificationCompat.Builder);
					public setSummaryText(param0: string): androidx.core.app.NotificationCompat.InboxStyle;
					public apply(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): void;
				}
				export class MessagingStyle extends androidx.core.app.NotificationCompat.Style {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.MessagingStyle>;
					public static MAXIMUM_RETAINED_MESSAGES: number;
					public isGroupConversation(): boolean;
					public setGroupConversation(param0: boolean): androidx.core.app.NotificationCompat.MessagingStyle;
					/** @deprecated */
					public constructor(param0: string);
					public setConversationTitle(param0: string): androidx.core.app.NotificationCompat.MessagingStyle;
					public addMessage(param0: androidx.core.app.NotificationCompat.MessagingStyle.Message): androidx.core.app.NotificationCompat.MessagingStyle;
					public restoreFromCompatExtras(param0: globalAndroid.os.Bundle): void;
					public addCompatExtras(param0: globalAndroid.os.Bundle): void;
					public constructor();
					public constructor(param0: androidx.core.app.Person);
					public getConversationTitle(): string;
					/** @deprecated */
					public addMessage(param0: string, param1: number, param2: string): androidx.core.app.NotificationCompat.MessagingStyle;
					public getUser(): androidx.core.app.Person;
					public getMessages(): java.util.List<androidx.core.app.NotificationCompat.MessagingStyle.Message>;
					public addMessage(param0: string, param1: number, param2: androidx.core.app.Person): androidx.core.app.NotificationCompat.MessagingStyle;
					public apply(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): void;
					public static extractMessagingStyleFromNotification(param0: globalAndroid.app.Notification): androidx.core.app.NotificationCompat.MessagingStyle;
					/** @deprecated */
					public getUserDisplayName(): string;
				}
				export module MessagingStyle {
					export class Message {
						public static class: java.lang.Class<androidx.core.app.NotificationCompat.MessagingStyle.Message>;
						/** @deprecated */
						public getSender(): string;
						public getDataMimeType(): string;
						public getTimestamp(): number;
						public getPerson(): androidx.core.app.Person;
						public getDataUri(): globalAndroid.net.Uri;
						public setData(param0: string, param1: globalAndroid.net.Uri): androidx.core.app.NotificationCompat.MessagingStyle.Message;
						public constructor(param0: string, param1: number, param2: androidx.core.app.Person);
						/** @deprecated */
						public constructor(param0: string, param1: number, param2: string);
						public getText(): string;
						public getExtras(): globalAndroid.os.Bundle;
					}
				}
				export class NotificationVisibility {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.NotificationVisibility>;
					/**
					 * Constructs a new instance of the androidx.core.app.NotificationCompat$NotificationVisibility interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class StreamType {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.StreamType>;
					/**
					 * Constructs a new instance of the androidx.core.app.NotificationCompat$StreamType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export abstract class Style {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.Style>;
					public mBuilder: androidx.core.app.NotificationCompat.Builder;
					public restoreFromCompatExtras(param0: globalAndroid.os.Bundle): void;
					public addCompatExtras(param0: globalAndroid.os.Bundle): void;
					public makeContentView(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): globalAndroid.widget.RemoteViews;
					public applyStandardTemplate(param0: boolean, param1: number, param2: boolean): globalAndroid.widget.RemoteViews;
					public constructor();
					public build(): globalAndroid.app.Notification;
					public makeHeadsUpContentView(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): globalAndroid.widget.RemoteViews;
					public makeBigContentView(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): globalAndroid.widget.RemoteViews;
					public setBuilder(param0: androidx.core.app.NotificationCompat.Builder): void;
					public createColoredBitmap(param0: number, param1: number): globalAndroid.graphics.Bitmap;
					public buildIntoRemoteViews(param0: globalAndroid.widget.RemoteViews, param1: globalAndroid.widget.RemoteViews): void;
					public apply(param0: androidx.core.app.NotificationBuilderWithBuilderAccessor): void;
				}
				export class WearableExtender extends androidx.core.app.NotificationCompat.Extender {
					public static class: java.lang.Class<androidx.core.app.NotificationCompat.WearableExtender>;
					public static UNSET_ACTION_INDEX: number;
					public static SIZE_DEFAULT: number;
					public static SIZE_XSMALL: number;
					public static SIZE_SMALL: number;
					public static SIZE_MEDIUM: number;
					public static SIZE_LARGE: number;
					public static SIZE_FULL_SCREEN: number;
					public static SCREEN_TIMEOUT_SHORT: number;
					public static SCREEN_TIMEOUT_LONG: number;
					public addActions(param0: java.util.List<androidx.core.app.NotificationCompat.Action>): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public setContentIconGravity(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					public clone(): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public getGravity(): number;
					/** @deprecated */
					public setCustomSizePreset(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					public setDismissalId(param0: string): androidx.core.app.NotificationCompat.WearableExtender;
					public setDisplayIntent(param0: globalAndroid.app.PendingIntent): androidx.core.app.NotificationCompat.WearableExtender;
					public getHintAmbientBigPicture(): boolean;
					public getBackground(): globalAndroid.graphics.Bitmap;
					public clearActions(): androidx.core.app.NotificationCompat.WearableExtender;
					public getContentIntentAvailableOffline(): boolean;
					/** @deprecated */
					public getHintScreenTimeout(): number;
					/** @deprecated */
					public setContentIcon(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public getHintShowBackgroundOnly(): boolean;
					/** @deprecated */
					public getCustomSizePreset(): number;
					public setBridgeTag(param0: string): androidx.core.app.NotificationCompat.WearableExtender;
					public constructor();
					public getPages(): java.util.List<globalAndroid.app.Notification>;
					/** @deprecated */
					public setHintHideIcon(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public getCustomContentHeight(): number;
					public getHintContentIntentLaunchesActivity(): boolean;
					/** @deprecated */
					public getContentIcon(): number;
					public clearPages(): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public getContentIconGravity(): number;
					public setContentIntentAvailableOffline(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
					public setBackground(param0: globalAndroid.graphics.Bitmap): androidx.core.app.NotificationCompat.WearableExtender;
					public getContentAction(): number;
					/** @deprecated */
					public getHintAvoidBackgroundClipping(): boolean;
					public setStartScrollBottom(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public setHintAvoidBackgroundClipping(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
					public getActions(): java.util.List<androidx.core.app.NotificationCompat.Action>;
					public setContentAction(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public setGravity(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public setHintShowBackgroundOnly(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
					public addPages(param0: java.util.List<globalAndroid.app.Notification>): androidx.core.app.NotificationCompat.WearableExtender;
					public addAction(param0: androidx.core.app.NotificationCompat.Action): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public setCustomContentHeight(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public getHintHideIcon(): boolean;
					public extend(param0: androidx.core.app.NotificationCompat.Builder): androidx.core.app.NotificationCompat.Builder;
					public addPage(param0: globalAndroid.app.Notification): androidx.core.app.NotificationCompat.WearableExtender;
					/** @deprecated */
					public setHintScreenTimeout(param0: number): androidx.core.app.NotificationCompat.WearableExtender;
					public getBridgeTag(): string;
					public setHintAmbientBigPicture(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
					public getDismissalId(): string;
					public getDisplayIntent(): globalAndroid.app.PendingIntent;
					public getStartScrollBottom(): boolean;
					public constructor(param0: globalAndroid.app.Notification);
					public setHintContentIntentLaunchesActivity(param0: boolean): androidx.core.app.NotificationCompat.WearableExtender;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NotificationCompatBuilder extends androidx.core.app.NotificationBuilderWithBuilderAccessor {
				public static class: java.lang.Class<androidx.core.app.NotificationCompatBuilder>;
				public build(): globalAndroid.app.Notification;
				public buildInternal(): globalAndroid.app.Notification;
				public getBuilder(): globalAndroid.app.Notification.Builder;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NotificationCompatExtras {
				public static class: java.lang.Class<androidx.core.app.NotificationCompatExtras>;
				public static EXTRA_LOCAL_ONLY: string;
				public static EXTRA_GROUP_KEY: string;
				public static EXTRA_GROUP_SUMMARY: string;
				public static EXTRA_SORT_KEY: string;
				public static EXTRA_ACTION_EXTRAS: string;
				public static EXTRA_REMOTE_INPUTS: string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NotificationCompatJellybean {
				public static class: java.lang.Class<androidx.core.app.NotificationCompatJellybean>;
				public static TAG: string;
				public static getAction(param0: globalAndroid.app.Notification, param1: number): androidx.core.app.NotificationCompat.Action;
				public static readAction(param0: number, param1: string, param2: globalAndroid.app.PendingIntent, param3: globalAndroid.os.Bundle): androidx.core.app.NotificationCompat.Action;
				public static getExtras(param0: globalAndroid.app.Notification): globalAndroid.os.Bundle;
				public static buildActionExtrasMap(param0: java.util.List<globalAndroid.os.Bundle>): globalAndroid.util.SparseArray<globalAndroid.os.Bundle>;
				public static writeActionAndGetExtras(param0: globalAndroid.app.Notification.Builder, param1: androidx.core.app.NotificationCompat.Action): globalAndroid.os.Bundle;
				public static getActionCount(param0: globalAndroid.app.Notification): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export abstract class NotificationCompatSideChannelService {
				public static class: java.lang.Class<androidx.core.app.NotificationCompatSideChannelService>;
				public notify(param0: string, param1: number, param2: string, param3: globalAndroid.app.Notification): void;
				public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
				public cancelAll(param0: string): void;
				public cancel(param0: string, param1: number, param2: string): void;
				public constructor();
			}
			export module NotificationCompatSideChannelService {
				export class NotificationSideChannelStub extends globalAndroid.support.v4.app.INotificationSideChannel.Stub {
					public static class: java.lang.Class<androidx.core.app.NotificationCompatSideChannelService.NotificationSideChannelStub>;
					public cancelAll(param0: string): void;
					public notify(param0: string, param1: number, param2: string, param3: globalAndroid.app.Notification): void;
					public cancel(param0: string, param1: number, param2: string): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class NotificationManagerCompat {
				public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat>;
				public static EXTRA_USE_SIDE_CHANNEL: string;
				public static ACTION_BIND_SIDE_CHANNEL: string;
				public static IMPORTANCE_UNSPECIFIED: number;
				public static IMPORTANCE_NONE: number;
				public static IMPORTANCE_MIN: number;
				public static IMPORTANCE_LOW: number;
				public static IMPORTANCE_DEFAULT: number;
				public static IMPORTANCE_HIGH: number;
				public static IMPORTANCE_MAX: number;
				public static from(param0: globalAndroid.content.Context): androidx.core.app.NotificationManagerCompat;
				public cancel(param0: string, param1: number): void;
				public areNotificationsEnabled(): boolean;
				public cancelAll(): void;
				public static getEnabledListenerPackages(param0: globalAndroid.content.Context): java.util.Set<string>;
				public notify(param0: number, param1: globalAndroid.app.Notification): void;
				public notify(param0: string, param1: number, param2: globalAndroid.app.Notification): void;
				public getImportance(): number;
				public cancel(param0: number): void;
			}
			export module NotificationManagerCompat {
				export class CancelTask extends androidx.core.app.NotificationManagerCompat.Task {
					public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat.CancelTask>;
					public send(param0: globalAndroid.support.v4.app.INotificationSideChannel): void;
					public toString(): string;
				}
				export class NotifyTask extends androidx.core.app.NotificationManagerCompat.Task {
					public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat.NotifyTask>;
					public send(param0: globalAndroid.support.v4.app.INotificationSideChannel): void;
					public toString(): string;
				}
				export class ServiceConnectedEvent {
					public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat.ServiceConnectedEvent>;
				}
				export class SideChannelManager {
					public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat.SideChannelManager>;
					public queueTask(param0: androidx.core.app.NotificationManagerCompat.Task): void;
					public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
					public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
					public handleMessage(param0: globalAndroid.os.Message): boolean;
				}
				export module SideChannelManager {
					export class ListenerRecord {
						public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat.SideChannelManager.ListenerRecord>;
					}
				}
				export class Task {
					public static class: java.lang.Class<androidx.core.app.NotificationManagerCompat.Task>;
					/**
					 * Constructs a new instance of the androidx.core.app.NotificationManagerCompat$Task interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { send(param0: globalAndroid.support.v4.app.INotificationSideChannel): void });
					public constructor();
					public send(param0: globalAndroid.support.v4.app.INotificationSideChannel): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class Person {
				public static class: java.lang.Class<androidx.core.app.Person>;
				public isBot(): boolean;
				public toAndroidPerson(): any;
				public getUri(): string;
				public static fromAndroidPerson(param0: any): androidx.core.app.Person;
				public getIcon(): androidx.core.graphics.drawable.IconCompat;
				public isImportant(): boolean;
				public toBundle(): globalAndroid.os.Bundle;
				public toBuilder(): androidx.core.app.Person.Builder;
				public getName(): string;
				public static fromBundle(param0: globalAndroid.os.Bundle): androidx.core.app.Person;
				public getKey(): string;
			}
			export module Person {
				export class Builder {
					public static class: java.lang.Class<androidx.core.app.Person.Builder>;
					public constructor();
					public setUri(param0: string): androidx.core.app.Person.Builder;
					public setBot(param0: boolean): androidx.core.app.Person.Builder;
					public setIcon(param0: androidx.core.graphics.drawable.IconCompat): androidx.core.app.Person.Builder;
					public setImportant(param0: boolean): androidx.core.app.Person.Builder;
					public setKey(param0: string): androidx.core.app.Person.Builder;
					public setName(param0: string): androidx.core.app.Person.Builder;
					public build(): androidx.core.app.Person;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class RemoteInput {
				public static class: java.lang.Class<androidx.core.app.RemoteInput>;
				public static RESULTS_CLIP_LABEL: string;
				public static EXTRA_RESULTS_DATA: string;
				public getChoices(): native.Array<string>;
				public getResultKey(): string;
				public getAllowFreeFormInput(): boolean;
				public getExtras(): globalAndroid.os.Bundle;
				public getLabel(): string;
				public static addResultsToIntent(param0: native.Array<androidx.core.app.RemoteInput>, param1: globalAndroid.content.Intent, param2: globalAndroid.os.Bundle): void;
				public static getDataResultsFromIntent(param0: globalAndroid.content.Intent, param1: string): java.util.Map<string, globalAndroid.net.Uri>;
				public static getResultsFromIntent(param0: globalAndroid.content.Intent): globalAndroid.os.Bundle;
				public isDataOnly(): boolean;
				public static addDataResultToIntent(param0: androidx.core.app.RemoteInput, param1: globalAndroid.content.Intent, param2: java.util.Map<string, globalAndroid.net.Uri>): void;
				public getAllowedDataTypes(): java.util.Set<string>;
			}
			export module RemoteInput {
				export class Builder {
					public static class: java.lang.Class<androidx.core.app.RemoteInput.Builder>;
					public setAllowDataType(param0: string, param1: boolean): androidx.core.app.RemoteInput.Builder;
					public getExtras(): globalAndroid.os.Bundle;
					public constructor(param0: string);
					public setLabel(param0: string): androidx.core.app.RemoteInput.Builder;
					public setChoices(param0: native.Array<string>): androidx.core.app.RemoteInput.Builder;
					public addExtras(param0: globalAndroid.os.Bundle): androidx.core.app.RemoteInput.Builder;
					public build(): androidx.core.app.RemoteInput;
					public setAllowFreeFormInput(param0: boolean): androidx.core.app.RemoteInput.Builder;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class ServiceCompat {
				public static class: java.lang.Class<androidx.core.app.ServiceCompat>;
				public static START_STICKY: number;
				public static STOP_FOREGROUND_REMOVE: number;
				public static STOP_FOREGROUND_DETACH: number;
				public static stopForeground(param0: globalAndroid.app.Service, param1: number): void;
			}
			export module ServiceCompat {
				export class StopForegroundFlags {
					public static class: java.lang.Class<androidx.core.app.ServiceCompat.StopForegroundFlags>;
					/**
					 * Constructs a new instance of the androidx.core.app.ServiceCompat$StopForegroundFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class ShareCompat {
				public static class: java.lang.Class<androidx.core.app.ShareCompat>;
				public static EXTRA_CALLING_PACKAGE: string;
				public static EXTRA_CALLING_ACTIVITY: string;
				public static getCallingActivity(param0: globalAndroid.app.Activity): globalAndroid.content.ComponentName;
				public static configureMenuItem(param0: globalAndroid.view.MenuItem, param1: androidx.core.app.ShareCompat.IntentBuilder): void;
				public static getCallingPackage(param0: globalAndroid.app.Activity): string;
				public static configureMenuItem(param0: globalAndroid.view.Menu, param1: number, param2: androidx.core.app.ShareCompat.IntentBuilder): void;
			}
			export module ShareCompat {
				export class IntentBuilder {
					public static class: java.lang.Class<androidx.core.app.ShareCompat.IntentBuilder>;
					public addEmailBcc(param0: native.Array<string>): androidx.core.app.ShareCompat.IntentBuilder;
					public setType(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public addEmailCc(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public setEmailTo(param0: native.Array<string>): androidx.core.app.ShareCompat.IntentBuilder;
					public addEmailCc(param0: native.Array<string>): androidx.core.app.ShareCompat.IntentBuilder;
					public startChooser(): void;
					public setStream(param0: globalAndroid.net.Uri): androidx.core.app.ShareCompat.IntentBuilder;
					public getIntent(): globalAndroid.content.Intent;
					public addStream(param0: globalAndroid.net.Uri): androidx.core.app.ShareCompat.IntentBuilder;
					public addEmailBcc(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public setChooserTitle(param0: number): androidx.core.app.ShareCompat.IntentBuilder;
					public setSubject(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public setChooserTitle(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public setEmailBcc(param0: native.Array<string>): androidx.core.app.ShareCompat.IntentBuilder;
					public static from(param0: globalAndroid.app.Activity): androidx.core.app.ShareCompat.IntentBuilder;
					public addEmailTo(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public createChooserIntent(): globalAndroid.content.Intent;
					public setEmailCc(param0: native.Array<string>): androidx.core.app.ShareCompat.IntentBuilder;
					public setText(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
					public addEmailTo(param0: native.Array<string>): androidx.core.app.ShareCompat.IntentBuilder;
					public setHtmlText(param0: string): androidx.core.app.ShareCompat.IntentBuilder;
				}
				export class IntentReader {
					public static class: java.lang.Class<androidx.core.app.ShareCompat.IntentReader>;
					public getText(): string;
					public static from(param0: globalAndroid.app.Activity): androidx.core.app.ShareCompat.IntentReader;
					public isShareIntent(): boolean;
					public getCallingPackage(): string;
					public getSubject(): string;
					public getCallingApplicationLabel(): string;
					public getStream(param0: number): globalAndroid.net.Uri;
					public getStreamCount(): number;
					public isMultipleShare(): boolean;
					public getCallingActivityIcon(): globalAndroid.graphics.drawable.Drawable;
					public isSingleShare(): boolean;
					public getCallingApplicationIcon(): globalAndroid.graphics.drawable.Drawable;
					public getEmailTo(): native.Array<string>;
					public getCallingActivity(): globalAndroid.content.ComponentName;
					public getType(): string;
					public getStream(): globalAndroid.net.Uri;
					public getEmailBcc(): native.Array<string>;
					public getEmailCc(): native.Array<string>;
					public getHtmlText(): string;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export abstract class SharedElementCallback {
				public static class: java.lang.Class<androidx.core.app.SharedElementCallback>;
				public onCreateSnapshotView(param0: globalAndroid.content.Context, param1: globalAndroid.os.Parcelable): globalAndroid.view.View;
				public onSharedElementEnd(param0: java.util.List<string>, param1: java.util.List<globalAndroid.view.View>, param2: java.util.List<globalAndroid.view.View>): void;
				public onMapSharedElements(param0: java.util.List<string>, param1: java.util.Map<string, globalAndroid.view.View>): void;
				public onSharedElementsArrived(param0: java.util.List<string>, param1: java.util.List<globalAndroid.view.View>, param2: androidx.core.app.SharedElementCallback.OnSharedElementsReadyListener): void;
				public onCaptureSharedElementSnapshot(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Matrix, param2: globalAndroid.graphics.RectF): globalAndroid.os.Parcelable;
				public onSharedElementStart(param0: java.util.List<string>, param1: java.util.List<globalAndroid.view.View>, param2: java.util.List<globalAndroid.view.View>): void;
				public onRejectSharedElements(param0: java.util.List<globalAndroid.view.View>): void;
				public constructor();
			}
			export module SharedElementCallback {
				export class OnSharedElementsReadyListener {
					public static class: java.lang.Class<androidx.core.app.SharedElementCallback.OnSharedElementsReadyListener>;
					/**
					 * Constructs a new instance of the androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onSharedElementsReady(): void });
					public constructor();
					public onSharedElementsReady(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module app {
			export class TaskStackBuilder extends java.lang.Iterable<globalAndroid.content.Intent> {
				public static class: java.lang.Class<androidx.core.app.TaskStackBuilder>;
				/** @deprecated */
				public getIntent(param0: number): globalAndroid.content.Intent;
				public addParentStack(param0: globalAndroid.content.ComponentName): androidx.core.app.TaskStackBuilder;
				public startActivities(): void;
				public getIntents(): native.Array<globalAndroid.content.Intent>;
				public editIntentAt(param0: number): globalAndroid.content.Intent;
				public getIntentCount(): number;
				public addNextIntent(param0: globalAndroid.content.Intent): androidx.core.app.TaskStackBuilder;
				public startActivities(param0: globalAndroid.os.Bundle): void;
				public static create(param0: globalAndroid.content.Context): androidx.core.app.TaskStackBuilder;
				/** @deprecated */
				public iterator(): java.util.Iterator<globalAndroid.content.Intent>;
				public getPendingIntent(param0: number, param1: number, param2: globalAndroid.os.Bundle): globalAndroid.app.PendingIntent;
				public getPendingIntent(param0: number, param1: number): globalAndroid.app.PendingIntent;
				public addNextIntentWithParentStack(param0: globalAndroid.content.Intent): androidx.core.app.TaskStackBuilder;
				public addParentStack(param0: globalAndroid.app.Activity): androidx.core.app.TaskStackBuilder;
				/** @deprecated */
				public static from(param0: globalAndroid.content.Context): androidx.core.app.TaskStackBuilder;
				public addParentStack(param0: java.lang.Class<any>): androidx.core.app.TaskStackBuilder;
			}
			export module TaskStackBuilder {
				export class SupportParentable {
					public static class: java.lang.Class<androidx.core.app.TaskStackBuilder.SupportParentable>;
					/**
					 * Constructs a new instance of the androidx.core.app.TaskStackBuilder$SupportParentable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getSupportParentActivityIntent(): globalAndroid.content.Intent });
					public constructor();
					public getSupportParentActivityIntent(): globalAndroid.content.Intent;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class ContentResolverCompat {
				public static class: java.lang.Class<androidx.core.content.ContentResolverCompat>;
				public static query(param0: globalAndroid.content.ContentResolver, param1: globalAndroid.net.Uri, param2: native.Array<string>, param3: string, param4: native.Array<string>, param5: string, param6: androidx.core.os.CancellationSignal): globalAndroid.database.Cursor;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class ContextCompat {
				public static class: java.lang.Class<androidx.core.content.ContextCompat>;
				public static getSystemService(param0: globalAndroid.content.Context, param1: java.lang.Class): any;
				public static getExternalFilesDirs(param0: globalAndroid.content.Context, param1: string): native.Array<java.io.File>;
				public static startForegroundService(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
				public static getDrawable(param0: globalAndroid.content.Context, param1: number): globalAndroid.graphics.drawable.Drawable;
				public static checkSelfPermission(param0: globalAndroid.content.Context, param1: string): number;
				public static getColor(param0: globalAndroid.content.Context, param1: number): number;
				public static getCodeCacheDir(param0: globalAndroid.content.Context): java.io.File;
				public static createDeviceProtectedStorageContext(param0: globalAndroid.content.Context): globalAndroid.content.Context;
				public constructor();
				public static startActivity(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent, param2: globalAndroid.os.Bundle): void;
				public static startActivities(param0: globalAndroid.content.Context, param1: native.Array<globalAndroid.content.Intent>, param2: globalAndroid.os.Bundle): boolean;
				public static getDataDir(param0: globalAndroid.content.Context): java.io.File;
				public static getObbDirs(param0: globalAndroid.content.Context): native.Array<java.io.File>;
				public static getExternalCacheDirs(param0: globalAndroid.content.Context): native.Array<java.io.File>;
				public static getColorStateList(param0: globalAndroid.content.Context, param1: number): globalAndroid.content.res.ColorStateList;
				public static getSystemServiceName(param0: globalAndroid.content.Context, param1: java.lang.Class<any>): string;
				public static isDeviceProtectedStorage(param0: globalAndroid.content.Context): boolean;
				public static startActivities(param0: globalAndroid.content.Context, param1: native.Array<globalAndroid.content.Intent>): boolean;
				public static getNoBackupFilesDir(param0: globalAndroid.content.Context): java.io.File;
			}
			export module ContextCompat {
				export class LegacyServiceMapHolder {
					public static class: java.lang.Class<androidx.core.content.ContextCompat.LegacyServiceMapHolder>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class FileProvider {
				public static class: java.lang.Class<androidx.core.content.FileProvider>;
				public static getUriForFile(param0: globalAndroid.content.Context, param1: string, param2: java.io.File): globalAndroid.net.Uri;
				public getType(param0: globalAndroid.net.Uri): string;
				public openFile(param0: globalAndroid.net.Uri, param1: string): globalAndroid.os.ParcelFileDescriptor;
				public insert(param0: globalAndroid.net.Uri, param1: globalAndroid.content.ContentValues): globalAndroid.net.Uri;
				public update(param0: globalAndroid.net.Uri, param1: globalAndroid.content.ContentValues, param2: string, param3: native.Array<string>): number;
				public delete(param0: globalAndroid.net.Uri, param1: string, param2: native.Array<string>): number;
				public attachInfo(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.ProviderInfo): void;
				public query(param0: globalAndroid.net.Uri, param1: native.Array<string>, param2: string, param3: native.Array<string>, param4: string): globalAndroid.database.Cursor;
				public onCreate(): boolean;
				public constructor();
			}
			export module FileProvider {
				export class PathStrategy {
					public static class: java.lang.Class<androidx.core.content.FileProvider.PathStrategy>;
					/**
					 * Constructs a new instance of the androidx.core.content.FileProvider$PathStrategy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getUriForFile(param0: java.io.File): globalAndroid.net.Uri; getFileForUri(param0: globalAndroid.net.Uri): java.io.File });
					public constructor();
					public getUriForFile(param0: java.io.File): globalAndroid.net.Uri;
					public getFileForUri(param0: globalAndroid.net.Uri): java.io.File;
				}
				export class SimplePathStrategy extends androidx.core.content.FileProvider.PathStrategy {
					public static class: java.lang.Class<androidx.core.content.FileProvider.SimplePathStrategy>;
					public getUriForFile(param0: java.io.File): globalAndroid.net.Uri;
					public getFileForUri(param0: globalAndroid.net.Uri): java.io.File;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class IntentCompat {
				public static class: java.lang.Class<androidx.core.content.IntentCompat>;
				public static EXTRA_HTML_TEXT: string;
				public static EXTRA_START_PLAYBACK: string;
				public static CATEGORY_LEANBACK_LAUNCHER: string;
				public static makeMainSelectorActivity(param0: string, param1: string): globalAndroid.content.Intent;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class MimeTypeFilter {
				public static class: java.lang.Class<androidx.core.content.MimeTypeFilter>;
				public static matchesMany(param0: native.Array<string>, param1: string): native.Array<string>;
				public static matches(param0: string, param1: string): boolean;
				public static matches(param0: string, param1: native.Array<string>): string;
				public static matches(param0: native.Array<string>, param1: string): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class PermissionChecker {
				public static class: java.lang.Class<androidx.core.content.PermissionChecker>;
				public static PERMISSION_GRANTED: number;
				public static PERMISSION_DENIED: number;
				public static PERMISSION_DENIED_APP_OP: number;
				public static checkCallingPermission(param0: globalAndroid.content.Context, param1: string, param2: string): number;
				public static checkPermission(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: string): number;
				public static checkSelfPermission(param0: globalAndroid.content.Context, param1: string): number;
				public static checkCallingOrSelfPermission(param0: globalAndroid.content.Context, param1: string): number;
			}
			export module PermissionChecker {
				export class PermissionResult {
					public static class: java.lang.Class<androidx.core.content.PermissionChecker.PermissionResult>;
					/**
					 * Constructs a new instance of the androidx.core.content.PermissionChecker$PermissionResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export class SharedPreferencesCompat {
				public static class: java.lang.Class<androidx.core.content.SharedPreferencesCompat>;
			}
			export module SharedPreferencesCompat {
				export class EditorCompat {
					public static class: java.lang.Class<androidx.core.content.SharedPreferencesCompat.EditorCompat>;
					/** @deprecated */
					public apply(param0: globalAndroid.content.SharedPreferences.Editor): void;
					/** @deprecated */
					public static getInstance(): androidx.core.content.SharedPreferencesCompat.EditorCompat;
				}
				export module EditorCompat {
					export class Helper {
						public static class: java.lang.Class<androidx.core.content.SharedPreferencesCompat.EditorCompat.Helper>;
						public apply(param0: globalAndroid.content.SharedPreferences.Editor): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module pm {
				export class ActivityInfoCompat {
					public static class: java.lang.Class<androidx.core.content.pm.ActivityInfoCompat>;
					public static CONFIG_UI_MODE: number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module pm {
				export class PackageInfoCompat {
					public static class: java.lang.Class<androidx.core.content.pm.PackageInfoCompat>;
					public static getLongVersionCode(param0: globalAndroid.content.pm.PackageInfo): number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module pm {
				export class PermissionInfoCompat {
					public static class: java.lang.Class<androidx.core.content.pm.PermissionInfoCompat>;
					public static getProtectionFlags(param0: globalAndroid.content.pm.PermissionInfo): number;
					public static getProtection(param0: globalAndroid.content.pm.PermissionInfo): number;
				}
				export module PermissionInfoCompat {
					export class Protection {
						public static class: java.lang.Class<androidx.core.content.pm.PermissionInfoCompat.Protection>;
						/**
						 * Constructs a new instance of the androidx.core.content.pm.PermissionInfoCompat$Protection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
					export class ProtectionFlags {
						public static class: java.lang.Class<androidx.core.content.pm.PermissionInfoCompat.ProtectionFlags>;
						/**
						 * Constructs a new instance of the androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module pm {
				export class ShortcutInfoCompat {
					public static class: java.lang.Class<androidx.core.content.pm.ShortcutInfoCompat>;
					public getDisabledMessage(): string;
					public getShortLabel(): string;
					public getId(): string;
					public getIntent(): globalAndroid.content.Intent;
					public toShortcutInfo(): any;
					public getIntents(): native.Array<globalAndroid.content.Intent>;
					public getActivity(): globalAndroid.content.ComponentName;
					public getLongLabel(): string;
				}
				export module ShortcutInfoCompat {
					export class Builder {
						public static class: java.lang.Class<androidx.core.content.pm.ShortcutInfoCompat.Builder>;
						public setDisabledMessage(param0: string): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public setAlwaysBadged(): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public setShortLabel(param0: string): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public setIcon(param0: androidx.core.graphics.drawable.IconCompat): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public build(): androidx.core.content.pm.ShortcutInfoCompat;
						public setActivity(param0: globalAndroid.content.ComponentName): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public setLongLabel(param0: string): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public setIntent(param0: globalAndroid.content.Intent): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public setIntents(param0: native.Array<globalAndroid.content.Intent>): androidx.core.content.pm.ShortcutInfoCompat.Builder;
						public constructor(param0: globalAndroid.content.Context, param1: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module pm {
				export class ShortcutManagerCompat {
					public static class: java.lang.Class<androidx.core.content.pm.ShortcutManagerCompat>;
					public static createShortcutResultIntent(param0: globalAndroid.content.Context, param1: androidx.core.content.pm.ShortcutInfoCompat): globalAndroid.content.Intent;
					public static isRequestPinShortcutSupported(param0: globalAndroid.content.Context): boolean;
					public static requestPinShortcut(param0: globalAndroid.content.Context, param1: androidx.core.content.pm.ShortcutInfoCompat, param2: globalAndroid.content.IntentSender): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class ColorStateListInflaterCompat {
					public static class: java.lang.Class<androidx.core.content.res.ColorStateListInflaterCompat>;
					public static createFromXml(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.content.res.Resources.Theme): globalAndroid.content.res.ColorStateList;
					public static createFromXmlInner(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.content.res.ColorStateList;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class ComplexColorCompat {
					public static class: java.lang.Class<androidx.core.content.res.ComplexColorCompat>;
					public setColor(param0: number): void;
					public isGradient(): boolean;
					public getColor(): number;
					public getShader(): globalAndroid.graphics.Shader;
					public isStateful(): boolean;
					public willDraw(): boolean;
					public onStateChanged(param0: native.Array<number>): boolean;
					public static inflate(param0: globalAndroid.content.res.Resources, param1: number, param2: globalAndroid.content.res.Resources.Theme): androidx.core.content.res.ComplexColorCompat;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class ConfigurationHelper {
					public static class: java.lang.Class<androidx.core.content.res.ConfigurationHelper>;
					public static getDensityDpi(param0: globalAndroid.content.res.Resources): number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class FontResourcesParserCompat {
					public static class: java.lang.Class<androidx.core.content.res.FontResourcesParserCompat>;
					public static FETCH_STRATEGY_BLOCKING: number;
					public static FETCH_STRATEGY_ASYNC: number;
					public static INFINITE_TIMEOUT_VALUE: number;
					public static parse(param0: org.xmlpull.v1.XmlPullParser, param1: globalAndroid.content.res.Resources): androidx.core.content.res.FontResourcesParserCompat.FamilyResourceEntry;
					public static readCerts(param0: globalAndroid.content.res.Resources, param1: number): java.util.List<java.util.List<native.Array<number>>>;
				}
				export module FontResourcesParserCompat {
					export class FamilyResourceEntry {
						public static class: java.lang.Class<androidx.core.content.res.FontResourcesParserCompat.FamilyResourceEntry>;
						/**
						 * Constructs a new instance of the androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
					export class FetchStrategy {
						public static class: java.lang.Class<androidx.core.content.res.FontResourcesParserCompat.FetchStrategy>;
						/**
						 * Constructs a new instance of the androidx.core.content.res.FontResourcesParserCompat$FetchStrategy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
					export class FontFamilyFilesResourceEntry extends androidx.core.content.res.FontResourcesParserCompat.FamilyResourceEntry {
						public static class: java.lang.Class<androidx.core.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry>;
						public constructor(param0: native.Array<androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry>);
						public getEntries(): native.Array<androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry>;
					}
					export class FontFileResourceEntry {
						public static class: java.lang.Class<androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry>;
						public isItalic(): boolean;
						public getVariationSettings(): string;
						public getWeight(): number;
						public getFileName(): string;
						public getTtcIndex(): number;
						public getResourceId(): number;
						public constructor(param0: string, param1: number, param2: boolean, param3: string, param4: number, param5: number);
					}
					export class ProviderResourceEntry extends androidx.core.content.res.FontResourcesParserCompat.FamilyResourceEntry {
						public static class: java.lang.Class<androidx.core.content.res.FontResourcesParserCompat.ProviderResourceEntry>;
						public getRequest(): androidx.core.provider.FontRequest;
						public getFetchStrategy(): number;
						public constructor(param0: androidx.core.provider.FontRequest, param1: number, param2: number);
						public getTimeout(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class GradientColorInflaterCompat {
					public static class: java.lang.Class<androidx.core.content.res.GradientColorInflaterCompat>;
				}
				export module GradientColorInflaterCompat {
					export class ColorStops {
						public static class: java.lang.Class<androidx.core.content.res.GradientColorInflaterCompat.ColorStops>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class GrowingArrayUtils {
					public static class: java.lang.Class<androidx.core.content.res.GrowingArrayUtils>;
					public static append(param0: native.Array<any>, param1: number, param2: any): native.Array<any>;
					public static append(param0: native.Array<number>, param1: number, param2: number): native.Array<number>;
					public static append(param0: native.Array<boolean>, param1: number, param2: boolean): native.Array<boolean>;
					public static growSize(param0: number): number;
					public static insert(param0: native.Array<boolean>, param1: number, param2: number, param3: boolean): native.Array<boolean>;
					public static insert(param0: native.Array<number>, param1: number, param2: number, param3: number): native.Array<number>;
					public static insert(param0: native.Array<any>, param1: number, param2: number, param3: any): native.Array<any>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class ResourcesCompat {
					public static class: java.lang.Class<androidx.core.content.res.ResourcesCompat>;
					public static getFont(param0: globalAndroid.content.Context, param1: number): globalAndroid.graphics.Typeface;
					public static getDrawableForDensity(param0: globalAndroid.content.res.Resources, param1: number, param2: number, param3: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
					public static getColorStateList(param0: globalAndroid.content.res.Resources, param1: number, param2: globalAndroid.content.res.Resources.Theme): globalAndroid.content.res.ColorStateList;
					public static getFont(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.util.TypedValue, param3: number, param4: androidx.core.content.res.ResourcesCompat.FontCallback): globalAndroid.graphics.Typeface;
					public static getFont(param0: globalAndroid.content.Context, param1: number, param2: androidx.core.content.res.ResourcesCompat.FontCallback, param3: globalAndroid.os.Handler): void;
					public static getDrawable(param0: globalAndroid.content.res.Resources, param1: number, param2: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
					public static getColor(param0: globalAndroid.content.res.Resources, param1: number, param2: globalAndroid.content.res.Resources.Theme): number;
				}
				export module ResourcesCompat {
					export abstract class FontCallback {
						public static class: java.lang.Class<androidx.core.content.res.ResourcesCompat.FontCallback>;
						public constructor();
						public onFontRetrievalFailed(param0: number): void;
						public callbackSuccessAsync(param0: globalAndroid.graphics.Typeface, param1: globalAndroid.os.Handler): void;
						public callbackFailAsync(param0: number, param1: globalAndroid.os.Handler): void;
						public onFontRetrieved(param0: globalAndroid.graphics.Typeface): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module content {
			export module res {
				export class TypedArrayUtils {
					public static class: java.lang.Class<androidx.core.content.res.TypedArrayUtils>;
					public static getNamedResourceId(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number, param4: number): number;
					public static getNamedBoolean(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number, param4: boolean): boolean;
					public static getDrawable(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number): globalAndroid.graphics.drawable.Drawable;
					public static getString(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number): string;
					public static peekNamedValue(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number): globalAndroid.util.TypedValue;
					public static getNamedString(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number): string;
					public static obtainAttributes(param0: globalAndroid.content.res.Resources, param1: globalAndroid.content.res.Resources.Theme, param2: globalAndroid.util.AttributeSet, param3: native.Array<number>): globalAndroid.content.res.TypedArray;
					public static getText(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number): string;
					public static hasAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): boolean;
					public static getNamedComplexColor(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.content.res.Resources.Theme, param3: string, param4: number, param5: number): androidx.core.content.res.ComplexColorCompat;
					public static getInt(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number, param3: number): number;
					public static getBoolean(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number, param3: boolean): boolean;
					public static getTextArray(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number): native.Array<string>;
					public static getNamedColor(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number, param4: number): number;
					public static getNamedFloat(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number, param4: number): number;
					public static getResourceId(param0: globalAndroid.content.res.TypedArray, param1: number, param2: number, param3: number): number;
					public static getAttr(param0: globalAndroid.content.Context, param1: number, param2: number): number;
					public static getNamedInt(param0: globalAndroid.content.res.TypedArray, param1: org.xmlpull.v1.XmlPullParser, param2: string, param3: number, param4: number): number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module database {
			export class CursorWindowCompat {
				public static class: java.lang.Class<androidx.core.database.CursorWindowCompat>;
				public static create(param0: string, param1: number): globalAndroid.database.CursorWindow;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module database {
			export class DatabaseUtilsCompat {
				public static class: java.lang.Class<androidx.core.database.DatabaseUtilsCompat>;
				/** @deprecated */
				public static concatenateWhere(param0: string, param1: string): string;
				/** @deprecated */
				public static appendSelectionArgs(param0: native.Array<string>, param1: native.Array<string>): native.Array<string>;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module database {
			export module sqlite {
				export class SQLiteCursorCompat {
					public static class: java.lang.Class<androidx.core.database.sqlite.SQLiteCursorCompat>;
					public static setFillWindowForwardOnly(param0: globalAndroid.database.sqlite.SQLiteCursor, param1: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class BitmapCompat {
				public static class: java.lang.Class<androidx.core.graphics.BitmapCompat>;
				public static getAllocationByteCount(param0: globalAndroid.graphics.Bitmap): number;
				public static setHasMipMap(param0: globalAndroid.graphics.Bitmap, param1: boolean): void;
				public static hasMipMap(param0: globalAndroid.graphics.Bitmap): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class ColorUtils {
				public static class: java.lang.Class<androidx.core.graphics.ColorUtils>;
				public static LABToColor(param0: number, param1: number, param2: number): number;
				public static calculateContrast(param0: number, param1: number): number;
				public static RGBToHSL(param0: number, param1: number, param2: number, param3: native.Array<number>): void;
				public static colorToLAB(param0: number, param1: native.Array<number>): void;
				public static blendARGB(param0: number, param1: number, param2: number): number;
				public static colorToHSL(param0: number, param1: native.Array<number>): void;
				public static RGBToXYZ(param0: number, param1: number, param2: number, param3: native.Array<number>): void;
				public static XYZToLAB(param0: number, param1: number, param2: number, param3: native.Array<number>): void;
				public static calculateLuminance(param0: number): number;
				public static setAlphaComponent(param0: number, param1: number): number;
				public static compositeColors(param0: number, param1: number): number;
				public static calculateMinimumAlpha(param0: number, param1: number, param2: number): number;
				public static HSLToColor(param0: native.Array<number>): number;
				public static blendHSL(param0: native.Array<number>, param1: native.Array<number>, param2: number, param3: native.Array<number>): void;
				public static XYZToColor(param0: number, param1: number, param2: number): number;
				public static RGBToLAB(param0: number, param1: number, param2: number, param3: native.Array<number>): void;
				public static compositeColors(param0: globalAndroid.graphics.Color, param1: globalAndroid.graphics.Color): globalAndroid.graphics.Color;
				public static distanceEuclidean(param0: native.Array<number>, param1: native.Array<number>): number;
				public static blendLAB(param0: native.Array<number>, param1: native.Array<number>, param2: number, param3: native.Array<number>): void;
				public static LABToXYZ(param0: number, param1: number, param2: number, param3: native.Array<number>): void;
				public static colorToXYZ(param0: number, param1: native.Array<number>): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class PaintCompat {
				public static class: java.lang.Class<androidx.core.graphics.PaintCompat>;
				public static hasGlyph(param0: globalAndroid.graphics.Paint, param1: string): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class PathParser {
				public static class: java.lang.Class<androidx.core.graphics.PathParser>;
				public static deepCopyNodes(param0: native.Array<androidx.core.graphics.PathParser.PathDataNode>): native.Array<androidx.core.graphics.PathParser.PathDataNode>;
				public static canMorph(param0: native.Array<androidx.core.graphics.PathParser.PathDataNode>, param1: native.Array<androidx.core.graphics.PathParser.PathDataNode>): boolean;
				public static createPathFromPathData(param0: string): globalAndroid.graphics.Path;
				public static createNodesFromPathData(param0: string): native.Array<androidx.core.graphics.PathParser.PathDataNode>;
				public static updateNodes(param0: native.Array<androidx.core.graphics.PathParser.PathDataNode>, param1: native.Array<androidx.core.graphics.PathParser.PathDataNode>): void;
			}
			export module PathParser {
				export class ExtractFloatResult {
					public static class: java.lang.Class<androidx.core.graphics.PathParser.ExtractFloatResult>;
				}
				export class PathDataNode {
					public static class: java.lang.Class<androidx.core.graphics.PathParser.PathDataNode>;
					public mType: string;
					public mParams: native.Array<number>;
					public static nodesToPath(param0: native.Array<androidx.core.graphics.PathParser.PathDataNode>, param1: globalAndroid.graphics.Path): void;
					public interpolatePathDataNode(param0: androidx.core.graphics.PathParser.PathDataNode, param1: androidx.core.graphics.PathParser.PathDataNode, param2: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class PathSegment {
				public static class: java.lang.Class<androidx.core.graphics.PathSegment>;
				public getStart(): globalAndroid.graphics.PointF;
				public getEndFraction(): number;
				public getStartFraction(): number;
				public getEnd(): globalAndroid.graphics.PointF;
				public constructor(param0: globalAndroid.graphics.PointF, param1: number, param2: globalAndroid.graphics.PointF, param3: number);
				public hashCode(): number;
				public equals(param0: any): boolean;
				public toString(): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class PathUtils {
				public static class: java.lang.Class<androidx.core.graphics.PathUtils>;
				public static flatten(param0: globalAndroid.graphics.Path, param1: number): java.util.Collection<androidx.core.graphics.PathSegment>;
				public static flatten(param0: globalAndroid.graphics.Path): java.util.Collection<androidx.core.graphics.PathSegment>;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompat {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompat>;
				public static createFromFontInfo(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param3: number): globalAndroid.graphics.Typeface;
				public static createFromResourcesFamilyXml(param0: globalAndroid.content.Context, param1: androidx.core.content.res.FontResourcesParserCompat.FamilyResourceEntry, param2: globalAndroid.content.res.Resources, param3: number, param4: number, param5: androidx.core.content.res.ResourcesCompat.FontCallback, param6: globalAndroid.os.Handler, param7: boolean): globalAndroid.graphics.Typeface;
				public static findFromCache(param0: globalAndroid.content.res.Resources, param1: number, param2: number): globalAndroid.graphics.Typeface;
				public static createFromResourcesFontFile(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: number, param3: string, param4: number): globalAndroid.graphics.Typeface;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompatApi21Impl extends androidx.core.graphics.TypefaceCompatBaseImpl {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatApi21Impl>;
				public createFromFontInfo(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param3: number): globalAndroid.graphics.Typeface;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompatApi24Impl extends androidx.core.graphics.TypefaceCompatBaseImpl {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatApi24Impl>;
				public static isUsable(): boolean;
				public createFromFontFamilyFilesResourceEntry(param0: globalAndroid.content.Context, param1: androidx.core.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry, param2: globalAndroid.content.res.Resources, param3: number): globalAndroid.graphics.Typeface;
				public createFromFontInfo(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param3: number): globalAndroid.graphics.Typeface;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompatApi26Impl extends androidx.core.graphics.TypefaceCompatApi21Impl {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatApi26Impl>;
				public mFontFamily: java.lang.Class;
				public mFontFamilyCtor: java.lang.reflect.Constructor;
				public mAddFontFromAssetManager: java.lang.reflect.Method;
				public mAddFontFromBuffer: java.lang.reflect.Method;
				public mFreeze: java.lang.reflect.Method;
				public mAbortCreation: java.lang.reflect.Method;
				public mCreateFromFamiliesWithDefault: java.lang.reflect.Method;
				public createFromResourcesFontFile(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: number, param3: string, param4: number): globalAndroid.graphics.Typeface;
				public obtainFreezeMethod(param0: java.lang.Class): java.lang.reflect.Method;
				public createFromFontFamilyFilesResourceEntry(param0: globalAndroid.content.Context, param1: androidx.core.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry, param2: globalAndroid.content.res.Resources, param3: number): globalAndroid.graphics.Typeface;
				public obtainFontFamilyCtor(param0: java.lang.Class): java.lang.reflect.Constructor;
				public obtainAddFontFromAssetManagerMethod(param0: java.lang.Class): java.lang.reflect.Method;
				public obtainAbortCreationMethod(param0: java.lang.Class): java.lang.reflect.Method;
				public createFromFamiliesWithDefault(param0: any): globalAndroid.graphics.Typeface;
				public obtainFontFamily(): java.lang.Class;
				public createFromFontInfo(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param3: number): globalAndroid.graphics.Typeface;
				public obtainAddFontFromBufferMethod(param0: java.lang.Class): java.lang.reflect.Method;
				public obtainCreateFromFamiliesWithDefaultMethod(param0: java.lang.Class): java.lang.reflect.Method;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompatApi28Impl extends androidx.core.graphics.TypefaceCompatApi26Impl {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatApi28Impl>;
				public createFromFamiliesWithDefault(param0: any): globalAndroid.graphics.Typeface;
				public obtainCreateFromFamiliesWithDefaultMethod(param0: java.lang.Class): java.lang.reflect.Method;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompatBaseImpl {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatBaseImpl>;
				public createFromResourcesFontFile(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: number, param3: string, param4: number): globalAndroid.graphics.Typeface;
				public findBestInfo(param0: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param1: number): androidx.core.provider.FontsContractCompat.FontInfo;
				public createFromFontFamilyFilesResourceEntry(param0: globalAndroid.content.Context, param1: androidx.core.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry, param2: globalAndroid.content.res.Resources, param3: number): globalAndroid.graphics.Typeface;
				public createFromInputStream(param0: globalAndroid.content.Context, param1: java.io.InputStream): globalAndroid.graphics.Typeface;
				public createFromFontInfo(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param3: number): globalAndroid.graphics.Typeface;
			}
			export module TypefaceCompatBaseImpl {
				export class StyleExtractor<T> extends java.lang.Object {
					public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatBaseImpl.StyleExtractor<any>>;
					/**
					 * Constructs a new instance of the androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getWeight(param0: T): number; isItalic(param0: T): boolean });
					public constructor();
					public getWeight(param0: T): number;
					public isItalic(param0: T): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export class TypefaceCompatUtil {
				public static class: java.lang.Class<androidx.core.graphics.TypefaceCompatUtil>;
				public static copyToFile(param0: java.io.File, param1: java.io.InputStream): boolean;
				public static copyToFile(param0: java.io.File, param1: globalAndroid.content.res.Resources, param2: number): boolean;
				public static copyToDirectBuffer(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: number): java.nio.ByteBuffer;
				public static closeQuietly(param0: java.io.Closeable): void;
				public static mmap(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: globalAndroid.net.Uri): java.nio.ByteBuffer;
				public static getTempFile(param0: globalAndroid.content.Context): java.io.File;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class DrawableCompat {
					public static class: java.lang.Class<androidx.core.graphics.drawable.DrawableCompat>;
					public static getColorFilter(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.ColorFilter;
					public static setAutoMirrored(param0: globalAndroid.graphics.drawable.Drawable, param1: boolean): void;
					public static applyTheme(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.content.res.Resources.Theme): void;
					public static clearColorFilter(param0: globalAndroid.graphics.drawable.Drawable): void;
					public static setTint(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
					public static wrap(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public static unwrap(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public static setLayoutDirection(param0: globalAndroid.graphics.drawable.Drawable, param1: number): boolean;
					/** @deprecated */
					public static jumpToCurrentState(param0: globalAndroid.graphics.drawable.Drawable): void;
					public static setHotspotBounds(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number, param3: number, param4: number): void;
					public static setTintList(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.content.res.ColorStateList): void;
					public static setTintMode(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public static getLayoutDirection(param0: globalAndroid.graphics.drawable.Drawable): number;
					public static inflate(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.content.res.Resources, param2: org.xmlpull.v1.XmlPullParser, param3: globalAndroid.util.AttributeSet, param4: globalAndroid.content.res.Resources.Theme): void;
					public static getAlpha(param0: globalAndroid.graphics.drawable.Drawable): number;
					public static setHotspot(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number): void;
					public static canApplyTheme(param0: globalAndroid.graphics.drawable.Drawable): boolean;
					public static isAutoMirrored(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class IconCompat extends androidx.versionedparcelable.CustomVersionedParcelable {
					public static class: java.lang.Class<androidx.core.graphics.drawable.IconCompat>;
					public static TYPE_UNKNOWN: number;
					public mType: number;
					public mData: native.Array<number>;
					public mParcelable: globalAndroid.os.Parcelable;
					public mInt1: number;
					public mInt2: number;
					public mTintList: globalAndroid.content.res.ColorStateList;
					public mTintModeStr: string;
					public getType(): number;
					public setTint(param0: number): androidx.core.graphics.drawable.IconCompat;
					public static createWithResource(param0: globalAndroid.content.Context, param1: number): androidx.core.graphics.drawable.IconCompat;
					public static createFromIcon(param0: any): androidx.core.graphics.drawable.IconCompat;
					public getResId(): number;
					public static createFromIcon(param0: globalAndroid.content.Context, param1: any): androidx.core.graphics.drawable.IconCompat;
					public static createWithBitmap(param0: globalAndroid.graphics.Bitmap): androidx.core.graphics.drawable.IconCompat;
					public static createWithContentUri(param0: globalAndroid.net.Uri): androidx.core.graphics.drawable.IconCompat;
					public checkResource(param0: globalAndroid.content.Context): void;
					public static createWithAdaptiveBitmap(param0: globalAndroid.graphics.Bitmap): androidx.core.graphics.drawable.IconCompat;
					public toString(): string;
					public addToShortcutIntent(param0: globalAndroid.content.Intent, param1: globalAndroid.graphics.drawable.Drawable, param2: globalAndroid.content.Context): void;
					public constructor();
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): androidx.core.graphics.drawable.IconCompat;
					public static createWithData(param0: native.Array<number>, param1: number, param2: number): androidx.core.graphics.drawable.IconCompat;
					public onPreParceling(param0: boolean): void;
					public getResPackage(): string;
					public static createWithContentUri(param0: string): androidx.core.graphics.drawable.IconCompat;
					public static createWithResource(param0: globalAndroid.content.res.Resources, param1: string, param2: number): androidx.core.graphics.drawable.IconCompat;
					public toBundle(): globalAndroid.os.Bundle;
					public toIcon(): any;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): androidx.core.graphics.drawable.IconCompat;
					public loadDrawable(param0: globalAndroid.content.Context): globalAndroid.graphics.drawable.Drawable;
					public getUri(): globalAndroid.net.Uri;
					public static createFromBundle(param0: globalAndroid.os.Bundle): androidx.core.graphics.drawable.IconCompat;
					public onPostParceling(): void;
				}
				export module IconCompat {
					export class IconType {
						public static class: java.lang.Class<androidx.core.graphics.drawable.IconCompat.IconType>;
						/**
						 * Constructs a new instance of the androidx.core.graphics.drawable.IconCompat$IconType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class IconCompatParcelizer {
					public static class: java.lang.Class<androidx.core.graphics.drawable.IconCompatParcelizer>;
					public static read(param0: androidx.versionedparcelable.VersionedParcel): androidx.core.graphics.drawable.IconCompat;
					public constructor();
					public static write(param0: androidx.core.graphics.drawable.IconCompat, param1: androidx.versionedparcelable.VersionedParcel): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export abstract class RoundedBitmapDrawable {
					public static class: java.lang.Class<androidx.core.graphics.drawable.RoundedBitmapDrawable>;
					public getGravity(): number;
					public setMipMap(param0: boolean): void;
					public hasAntiAlias(): boolean;
					public setDither(param0: boolean): void;
					public getCornerRadius(): number;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public getIntrinsicWidth(): number;
					public setTargetDensity(param0: globalAndroid.util.DisplayMetrics): void;
					public setFilterBitmap(param0: boolean): void;
					public getColorFilter(): globalAndroid.graphics.ColorFilter;
					public setAntiAlias(param0: boolean): void;
					public getOpacity(): number;
					public getAlpha(): number;
					public setCircular(param0: boolean): void;
					public setGravity(param0: number): void;
					public setCornerRadius(param0: number): void;
					public getIntrinsicHeight(): number;
					public setAlpha(param0: number): void;
					public getBitmap(): globalAndroid.graphics.Bitmap;
					public getPaint(): globalAndroid.graphics.Paint;
					public setTargetDensity(param0: globalAndroid.graphics.Canvas): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setTargetDensity(param0: number): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public hasMipMap(): boolean;
					public isCircular(): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class RoundedBitmapDrawable21 extends androidx.core.graphics.drawable.RoundedBitmapDrawable {
					public static class: java.lang.Class<androidx.core.graphics.drawable.RoundedBitmapDrawable21>;
					public setMipMap(param0: boolean): void;
					public getOutline(param0: any): void;
					public constructor(param0: globalAndroid.content.res.Resources, param1: globalAndroid.graphics.Bitmap);
					public hasMipMap(): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class RoundedBitmapDrawableFactory {
					public static class: java.lang.Class<androidx.core.graphics.drawable.RoundedBitmapDrawableFactory>;
					public static create(param0: globalAndroid.content.res.Resources, param1: string): androidx.core.graphics.drawable.RoundedBitmapDrawable;
					public static create(param0: globalAndroid.content.res.Resources, param1: globalAndroid.graphics.Bitmap): androidx.core.graphics.drawable.RoundedBitmapDrawable;
					public static create(param0: globalAndroid.content.res.Resources, param1: java.io.InputStream): androidx.core.graphics.drawable.RoundedBitmapDrawable;
				}
				export module RoundedBitmapDrawableFactory {
					export class DefaultRoundedBitmapDrawable extends androidx.core.graphics.drawable.RoundedBitmapDrawable {
						public static class: java.lang.Class<androidx.core.graphics.drawable.RoundedBitmapDrawableFactory.DefaultRoundedBitmapDrawable>;
						public hasMipMap(): boolean;
						public setMipMap(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class TintAwareDrawable {
					public static class: java.lang.Class<androidx.core.graphics.drawable.TintAwareDrawable>;
					/**
					 * Constructs a new instance of the androidx.core.graphics.drawable.TintAwareDrawable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setTint(param0: number): void; setTintList(param0: globalAndroid.content.res.ColorStateList): void; setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void });
					public constructor();
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public setTint(param0: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class WrappedDrawable {
					public static class: java.lang.Class<androidx.core.graphics.drawable.WrappedDrawable>;
					/**
					 * Constructs a new instance of the androidx.core.graphics.drawable.WrappedDrawable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getWrappedDrawable(): globalAndroid.graphics.drawable.Drawable; setWrappedDrawable(param0: globalAndroid.graphics.drawable.Drawable): void });
					public constructor();
					public getWrappedDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setWrappedDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class WrappedDrawableApi14 implements androidx.core.graphics.drawable.WrappedDrawable, androidx.core.graphics.drawable.TintAwareDrawable {
					public static class: java.lang.Class<androidx.core.graphics.drawable.WrappedDrawableApi14>;
					public getMinimumWidth(): number;
					public setDither(param0: boolean): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public isCompatTintEnabled(): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public isStateful(): boolean;
					public onLevelChange(param0: number): boolean;
					public getIntrinsicWidth(): number;
					public setWrappedDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public getChangingConfigurations(): number;
					public setFilterBitmap(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public getState(): native.Array<number>;
					public getMinimumHeight(): number;
					public getWrappedDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setAutoMirrored(param0: boolean): void;
					public setTint(param0: number): void;
					public setChangingConfigurations(param0: number): void;
					public getOpacity(): number;
					public jumpToCurrentState(): void;
					public getTransparentRegion(): globalAndroid.graphics.Region;
					public getIntrinsicHeight(): number;
					public getConstantState(): globalAndroid.graphics.drawable.Drawable.ConstantState;
					public getCurrent(): globalAndroid.graphics.drawable.Drawable;
					public setAlpha(param0: number): void;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setState(param0: native.Array<number>): boolean;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public isAutoMirrored(): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				}
				export module WrappedDrawableApi14 {
					export abstract class DrawableWrapperState {
						public static class: java.lang.Class<androidx.core.graphics.drawable.WrappedDrawableApi14.DrawableWrapperState>;
						public getChangingConfigurations(): number;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
					export class DrawableWrapperStateBase extends androidx.core.graphics.drawable.WrappedDrawableApi14.DrawableWrapperState {
						public static class: java.lang.Class<androidx.core.graphics.drawable.WrappedDrawableApi14.DrawableWrapperStateBase>;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module graphics {
			export module drawable {
				export class WrappedDrawableApi21 extends androidx.core.graphics.drawable.WrappedDrawableApi14 {
					public static class: java.lang.Class<androidx.core.graphics.drawable.WrappedDrawableApi21>;
					public setHotspot(param0: number, param1: number): void;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public getDirtyBounds(): globalAndroid.graphics.Rect;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public setState(param0: native.Array<number>): boolean;
					public isProjected(): boolean;
					public isCompatTintEnabled(): boolean;
					public getOutline(param0: any): void;
					public setHotspotBounds(param0: number, param1: number, param2: number, param3: number): void;
					public getWrappedDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setTint(param0: number): void;
					public setWrappedDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				}
				export module WrappedDrawableApi21 {
					export class DrawableWrapperStateLollipop extends androidx.core.graphics.drawable.WrappedDrawableApi14.DrawableWrapperState {
						public static class: java.lang.Class<androidx.core.graphics.drawable.WrappedDrawableApi21.DrawableWrapperStateLollipop>;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module hardware {
			export module display {
				export class DisplayManagerCompat {
					public static class: java.lang.Class<androidx.core.hardware.display.DisplayManagerCompat>;
					public static DISPLAY_CATEGORY_PRESENTATION: string;
					public static getInstance(param0: globalAndroid.content.Context): androidx.core.hardware.display.DisplayManagerCompat;
					public getDisplay(param0: number): globalAndroid.view.Display;
					public getDisplays(): native.Array<globalAndroid.view.Display>;
					public getDisplays(param0: string): native.Array<globalAndroid.view.Display>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module hardware {
			export module fingerprint {
				export class FingerprintManagerCompat {
					public static class: java.lang.Class<androidx.core.hardware.fingerprint.FingerprintManagerCompat>;
					public static from(param0: globalAndroid.content.Context): androidx.core.hardware.fingerprint.FingerprintManagerCompat;
					public authenticate(param0: androidx.core.hardware.fingerprint.FingerprintManagerCompat.CryptoObject, param1: number, param2: androidx.core.os.CancellationSignal, param3: androidx.core.hardware.fingerprint.FingerprintManagerCompat.AuthenticationCallback, param4: globalAndroid.os.Handler): void;
					public hasEnrolledFingerprints(): boolean;
					public isHardwareDetected(): boolean;
				}
				export module FingerprintManagerCompat {
					export abstract class AuthenticationCallback {
						public static class: java.lang.Class<androidx.core.hardware.fingerprint.FingerprintManagerCompat.AuthenticationCallback>;
						public onAuthenticationHelp(param0: number, param1: string): void;
						public onAuthenticationFailed(): void;
						public constructor();
						public onAuthenticationSucceeded(param0: androidx.core.hardware.fingerprint.FingerprintManagerCompat.AuthenticationResult): void;
						public onAuthenticationError(param0: number, param1: string): void;
					}
					export class AuthenticationResult {
						public static class: java.lang.Class<androidx.core.hardware.fingerprint.FingerprintManagerCompat.AuthenticationResult>;
						public getCryptoObject(): androidx.core.hardware.fingerprint.FingerprintManagerCompat.CryptoObject;
						public constructor(param0: androidx.core.hardware.fingerprint.FingerprintManagerCompat.CryptoObject);
					}
					export class CryptoObject {
						public static class: java.lang.Class<androidx.core.hardware.fingerprint.FingerprintManagerCompat.CryptoObject>;
						public getMac(): javax.crypto.Mac;
						public constructor(param0: javax.crypto.Cipher);
						public getSignature(): java.security.Signature;
						public getCipher(): javax.crypto.Cipher;
						public constructor(param0: javax.crypto.Mac);
						public constructor(param0: java.security.Signature);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module internal {
			export module view {
				export class SupportMenu {
					public static class: java.lang.Class<androidx.core.internal.view.SupportMenu>;
					/**
					 * Constructs a new instance of the androidx.core.internal.view.SupportMenu interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setGroupDividerEnabled(param0: boolean): void });
					public constructor();
					public static FLAG_KEEP_OPEN_ON_SUBMENU_OPENED: number;
					public static CATEGORY_MASK: number;
					public static USER_SHIFT: number;
					public static SUPPORTED_MODIFIERS_MASK: number;
					public static USER_MASK: number;
					public static CATEGORY_SHIFT: number;
					public setGroupDividerEnabled(param0: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module internal {
			export module view {
				export class SupportMenuItem {
					public static class: java.lang.Class<androidx.core.internal.view.SupportMenuItem>;
					/**
					 * Constructs a new instance of the androidx.core.internal.view.SupportMenuItem interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setShowAsAction(param0: number): void;
						setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
						setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
						setActionView(param0: number): globalAndroid.view.MenuItem;
						getActionView(): globalAndroid.view.View;
						setSupportActionProvider(param0: androidx.core.view.ActionProvider): androidx.core.internal.view.SupportMenuItem;
						getSupportActionProvider(): androidx.core.view.ActionProvider;
						expandActionView(): boolean;
						collapseActionView(): boolean;
						isActionViewExpanded(): boolean;
						setContentDescription(param0: string): androidx.core.internal.view.SupportMenuItem;
						getContentDescription(): string;
						setTooltipText(param0: string): androidx.core.internal.view.SupportMenuItem;
						getTooltipText(): string;
						setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
						setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
						getNumericModifiers(): number;
						setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
						getAlphabeticModifiers(): number;
						setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
						getIconTintList(): globalAndroid.content.res.ColorStateList;
						setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
						getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					});
					public constructor();
					public static SHOW_AS_ACTION_WITH_TEXT: number;
					public static SHOW_AS_ACTION_ALWAYS: number;
					public static SHOW_AS_ACTION_NEVER: number;
					public static SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW: number;
					public static SHOW_AS_ACTION_IF_ROOM: number;
					public setActionView(param0: number): globalAndroid.view.MenuItem;
					public getSupportActionProvider(): androidx.core.view.ActionProvider;
					public isActionViewExpanded(): boolean;
					public setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
					public setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
					public getContentDescription(): string;
					public getIconTintList(): globalAndroid.content.res.ColorStateList;
					public setShowAsAction(param0: number): void;
					public getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
					public getActionView(): globalAndroid.view.View;
					public setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public setSupportActionProvider(param0: androidx.core.view.ActionProvider): androidx.core.internal.view.SupportMenuItem;
					public setTooltipText(param0: string): androidx.core.internal.view.SupportMenuItem;
					public setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
					public getNumericModifiers(): number;
					public getAlphabeticModifiers(): number;
					public collapseActionView(): boolean;
					public getTooltipText(): string;
					public setContentDescription(param0: string): androidx.core.internal.view.SupportMenuItem;
					public setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
					public setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
					public expandActionView(): boolean;
					public setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module internal {
			export module view {
				export class SupportSubMenu extends androidx.core.internal.view.SupportMenu {
					public static class: java.lang.Class<androidx.core.internal.view.SupportSubMenu>;
					/**
					 * Constructs a new instance of the androidx.core.internal.view.SupportSubMenu interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setGroupDividerEnabled(param0: boolean): void });
					public constructor();
					public static FLAG_KEEP_OPEN_ON_SUBMENU_OPENED: number;
					public static CATEGORY_MASK: number;
					public static USER_SHIFT: number;
					public static SUPPORTED_MODIFIERS_MASK: number;
					public static USER_MASK: number;
					public static CATEGORY_SHIFT: number;
					public setGroupDividerEnabled(param0: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module math {
			export class MathUtils {
				public static class: java.lang.Class<androidx.core.math.MathUtils>;
				public static clamp(param0: number, param1: number, param2: number): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module net {
			export class ConnectivityManagerCompat {
				public static class: java.lang.Class<androidx.core.net.ConnectivityManagerCompat>;
				public static RESTRICT_BACKGROUND_STATUS_DISABLED: number;
				public static RESTRICT_BACKGROUND_STATUS_WHITELISTED: number;
				public static RESTRICT_BACKGROUND_STATUS_ENABLED: number;
				public static isActiveNetworkMetered(param0: globalAndroid.net.ConnectivityManager): boolean;
				public static getNetworkInfoFromBroadcast(param0: globalAndroid.net.ConnectivityManager, param1: globalAndroid.content.Intent): globalAndroid.net.NetworkInfo;
				public static getRestrictBackgroundStatus(param0: globalAndroid.net.ConnectivityManager): number;
			}
			export module ConnectivityManagerCompat {
				export class RestrictBackgroundStatus {
					public static class: java.lang.Class<androidx.core.net.ConnectivityManagerCompat.RestrictBackgroundStatus>;
					/**
					 * Constructs a new instance of the androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module net {
			export class DatagramSocketWrapper {
				public static class: java.lang.Class<androidx.core.net.DatagramSocketWrapper>;
			}
			export module DatagramSocketWrapper {
				export class DatagramSocketImplWrapper {
					public static class: java.lang.Class<androidx.core.net.DatagramSocketWrapper.DatagramSocketImplWrapper>;
					public listen(param0: number): void;
					public connect(param0: java.net.InetAddress, param1: number): void;
					public bind(param0: java.net.InetAddress, param1: number): void;
					public connect(param0: java.net.SocketAddress, param1: number): void;
					public available(): number;
					public accept(param0: java.net.SocketImpl): void;
					public close(): void;
					public getOption(param0: number): any;
					public connect(param0: string, param1: number): void;
					public create(param0: boolean): void;
					public getOutputStream(): java.io.OutputStream;
					public getInputStream(): java.io.InputStream;
					public sendUrgentData(param0: number): void;
					public setOption(param0: number, param1: any): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module net {
			export class TrafficStatsCompat {
				public static class: java.lang.Class<androidx.core.net.TrafficStatsCompat>;
				/** @deprecated */
				public static clearThreadStatsTag(): void;
				/** @deprecated */
				public static incrementOperationCount(param0: number, param1: number): void;
				/** @deprecated */
				public static untagSocket(param0: java.net.Socket): void;
				/** @deprecated */
				public static setThreadStatsTag(param0: number): void;
				public static tagDatagramSocket(param0: java.net.DatagramSocket): void;
				public static untagDatagramSocket(param0: java.net.DatagramSocket): void;
				/** @deprecated */
				public static incrementOperationCount(param0: number): void;
				/** @deprecated */
				public static getThreadStatsTag(): number;
				/** @deprecated */
				public static tagSocket(param0: java.net.Socket): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class BuildCompat {
				public static class: java.lang.Class<androidx.core.os.BuildCompat>;
				/** @deprecated */
				public static isAtLeastO(): boolean;
				/** @deprecated */
				public static isAtLeastNMR1(): boolean;
				/** @deprecated */
				public static isAtLeastOMR1(): boolean;
				/** @deprecated */
				public static isAtLeastN(): boolean;
				public static isAtLeastQ(): boolean;
				/** @deprecated */
				public static isAtLeastP(): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class CancellationSignal {
				public static class: java.lang.Class<androidx.core.os.CancellationSignal>;
				public isCanceled(): boolean;
				public throwIfCanceled(): void;
				public setOnCancelListener(param0: androidx.core.os.CancellationSignal.OnCancelListener): void;
				public getCancellationSignalObject(): any;
				public cancel(): void;
				public constructor();
			}
			export module CancellationSignal {
				export class OnCancelListener {
					public static class: java.lang.Class<androidx.core.os.CancellationSignal.OnCancelListener>;
					/**
					 * Constructs a new instance of the androidx.core.os.CancellationSignal$OnCancelListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onCancel(): void });
					public constructor();
					public onCancel(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class ConfigurationCompat {
				public static class: java.lang.Class<androidx.core.os.ConfigurationCompat>;
				public static getLocales(param0: globalAndroid.content.res.Configuration): androidx.core.os.LocaleListCompat;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class EnvironmentCompat {
				public static class: java.lang.Class<androidx.core.os.EnvironmentCompat>;
				public static MEDIA_UNKNOWN: string;
				public static getStorageState(param0: java.io.File): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class HandlerCompat {
				public static class: java.lang.Class<androidx.core.os.HandlerCompat>;
				public static postDelayed(param0: globalAndroid.os.Handler, param1: java.lang.Runnable, param2: any, param3: number): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class LocaleHelper {
				public static class: java.lang.Class<androidx.core.os.LocaleHelper>;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class LocaleListCompat {
				public static class: java.lang.Class<androidx.core.os.LocaleListCompat>;
				public static wrap(param0: any): androidx.core.os.LocaleListCompat;
				public indexOf(param0: java.util.Locale): number;
				public getFirstMatch(param0: native.Array<string>): java.util.Locale;
				public toString(): string;
				public size(): number;
				public static getDefault(): androidx.core.os.LocaleListCompat;
				public get(param0: number): java.util.Locale;
				public static create(param0: native.Array<java.util.Locale>): androidx.core.os.LocaleListCompat;
				public static forLanguageTags(param0: string): androidx.core.os.LocaleListCompat;
				public hashCode(): number;
				public toLanguageTags(): string;
				public static getEmptyLocaleList(): androidx.core.os.LocaleListCompat;
				public equals(param0: any): boolean;
				public isEmpty(): boolean;
				public static getAdjustedDefault(): androidx.core.os.LocaleListCompat;
				public unwrap(): any;
			}
			export module LocaleListCompat {
				export class LocaleListCompatApi24Impl extends androidx.core.os.LocaleListInterface {
					public static class: java.lang.Class<androidx.core.os.LocaleListCompat.LocaleListCompatApi24Impl>;
					public equals(param0: any): boolean;
					public indexOf(param0: java.util.Locale): number;
					public toString(): string;
					public isEmpty(): boolean;
					public getLocaleList(): any;
					public get(param0: number): java.util.Locale;
					public toLanguageTags(): string;
					public getFirstMatch(param0: native.Array<string>): java.util.Locale;
					public size(): number;
					public setLocaleList(param0: native.Array<java.util.Locale>): void;
					public hashCode(): number;
				}
				export class LocaleListCompatBaseImpl extends androidx.core.os.LocaleListInterface {
					public static class: java.lang.Class<androidx.core.os.LocaleListCompat.LocaleListCompatBaseImpl>;
					public equals(param0: any): boolean;
					public indexOf(param0: java.util.Locale): number;
					public toString(): string;
					public isEmpty(): boolean;
					public getLocaleList(): any;
					public get(param0: number): java.util.Locale;
					public toLanguageTags(): string;
					public getFirstMatch(param0: native.Array<string>): java.util.Locale;
					public size(): number;
					public setLocaleList(param0: native.Array<java.util.Locale>): void;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class LocaleListHelper {
				public static class: java.lang.Class<androidx.core.os.LocaleListHelper>;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public toString(): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class LocaleListInterface {
				public static class: java.lang.Class<androidx.core.os.LocaleListInterface>;
				/**
				 * Constructs a new instance of the androidx.core.os.LocaleListInterface interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setLocaleList(param0: native.Array<java.util.Locale>): void; getLocaleList(): any; get(param0: number): java.util.Locale; isEmpty(): boolean; size(): number; indexOf(param0: java.util.Locale): number; equals(param0: any): boolean; hashCode(): number; toString(): string; toLanguageTags(): string; getFirstMatch(param0: native.Array<string>): java.util.Locale });
				public constructor();
				public get(param0: number): java.util.Locale;
				public getLocaleList(): any;
				public indexOf(param0: java.util.Locale): number;
				public hashCode(): number;
				public getFirstMatch(param0: native.Array<string>): java.util.Locale;
				public equals(param0: any): boolean;
				public toLanguageTags(): string;
				public setLocaleList(param0: native.Array<java.util.Locale>): void;
				public isEmpty(): boolean;
				public toString(): string;
				public size(): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class OperationCanceledException {
				public static class: java.lang.Class<androidx.core.os.OperationCanceledException>;
				public constructor(param0: string);
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class ParcelCompat {
				public static class: java.lang.Class<androidx.core.os.ParcelCompat>;
				public static writeBoolean(param0: globalAndroid.os.Parcel, param1: boolean): void;
				public static readBoolean(param0: globalAndroid.os.Parcel): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class ParcelableCompat {
				public static class: java.lang.Class<androidx.core.os.ParcelableCompat>;
				/** @deprecated */
				public static newCreator(param0: androidx.core.os.ParcelableCompatCreatorCallbacks<any>): globalAndroid.os.Parcelable.Creator;
			}
			export module ParcelableCompat {
				export class ParcelableCompatCreatorHoneycombMR2<T> extends globalAndroid.os.Parcelable.ClassLoaderCreator<any> {
					public static class: java.lang.Class<androidx.core.os.ParcelableCompat.ParcelableCompatCreatorHoneycombMR2<any>>;
					public createFromParcel(param0: globalAndroid.os.Parcel): any;
					public createFromParcel(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader): any;
					public newArray(param0: number): native.Array<any>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class ParcelableCompatCreatorCallbacks<T> extends java.lang.Object {
				public static class: java.lang.Class<androidx.core.os.ParcelableCompatCreatorCallbacks<any>>;
				/**
				 * Constructs a new instance of the androidx.core.os.ParcelableCompatCreatorCallbacks<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { createFromParcel(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader): T; newArray(param0: number): native.Array<T> });
				public constructor();
				public createFromParcel(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader): T;
				public newArray(param0: number): native.Array<T>;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class TraceCompat {
				public static class: java.lang.Class<androidx.core.os.TraceCompat>;
				public static endSection(): void;
				public static beginSection(param0: string): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module os {
			export class UserManagerCompat {
				public static class: java.lang.Class<androidx.core.os.UserManagerCompat>;
				public static isUserUnlocked(param0: globalAndroid.content.Context): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module provider {
			export class FontRequest {
				public static class: java.lang.Class<androidx.core.provider.FontRequest>;
				public constructor(param0: string, param1: string, param2: string, param3: number);
				public getQuery(): string;
				public getCertificatesArrayResId(): number;
				public getProviderPackage(): string;
				public getIdentifier(): string;
				public getProviderAuthority(): string;
				public toString(): string;
				public constructor(param0: string, param1: string, param2: string, param3: java.util.List<java.util.List<native.Array<number>>>);
				public getCertificates(): java.util.List<java.util.List<native.Array<number>>>;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module provider {
			export class FontsContractCompat {
				public static class: java.lang.Class<androidx.core.provider.FontsContractCompat>;
				public static PARCEL_FONT_RESULTS: string;
				public static prepareFontData(param0: globalAndroid.content.Context, param1: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>, param2: globalAndroid.os.CancellationSignal): java.util.Map<globalAndroid.net.Uri, java.nio.ByteBuffer>;
				public static getProvider(param0: globalAndroid.content.pm.PackageManager, param1: androidx.core.provider.FontRequest, param2: globalAndroid.content.res.Resources): globalAndroid.content.pm.ProviderInfo;
				public static resetCache(): void;
				public static buildTypeface(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>): globalAndroid.graphics.Typeface;
				public static getFontSync(param0: globalAndroid.content.Context, param1: androidx.core.provider.FontRequest, param2: androidx.core.content.res.ResourcesCompat.FontCallback, param3: globalAndroid.os.Handler, param4: boolean, param5: number, param6: number): globalAndroid.graphics.Typeface;
				public static requestFont(param0: globalAndroid.content.Context, param1: androidx.core.provider.FontRequest, param2: androidx.core.provider.FontsContractCompat.FontRequestCallback, param3: globalAndroid.os.Handler): void;
				public static fetchFonts(param0: globalAndroid.content.Context, param1: globalAndroid.os.CancellationSignal, param2: androidx.core.provider.FontRequest): androidx.core.provider.FontsContractCompat.FontFamilyResult;
			}
			export module FontsContractCompat {
				export class Columns {
					public static class: java.lang.Class<androidx.core.provider.FontsContractCompat.Columns>;
					public static FILE_ID: string;
					public static TTC_INDEX: string;
					public static VARIATION_SETTINGS: string;
					public static WEIGHT: string;
					public static ITALIC: string;
					public static RESULT_CODE: string;
					public static RESULT_CODE_OK: number;
					public static RESULT_CODE_FONT_NOT_FOUND: number;
					public static RESULT_CODE_FONT_UNAVAILABLE: number;
					public static RESULT_CODE_MALFORMED_QUERY: number;
					public constructor();
				}
				export class FontFamilyResult {
					public static class: java.lang.Class<androidx.core.provider.FontsContractCompat.FontFamilyResult>;
					public static STATUS_OK: number;
					public static STATUS_WRONG_CERTIFICATES: number;
					public static STATUS_UNEXPECTED_DATA_PROVIDED: number;
					public getFonts(): native.Array<androidx.core.provider.FontsContractCompat.FontInfo>;
					public constructor(param0: number, param1: native.Array<androidx.core.provider.FontsContractCompat.FontInfo>);
					public getStatusCode(): number;
				}
				export class FontInfo {
					public static class: java.lang.Class<androidx.core.provider.FontsContractCompat.FontInfo>;
					public getResultCode(): number;
					public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number, param3: boolean, param4: number);
					public getWeight(): number;
					public isItalic(): boolean;
					public getUri(): globalAndroid.net.Uri;
					public getTtcIndex(): number;
				}
				export class FontRequestCallback {
					public static class: java.lang.Class<androidx.core.provider.FontsContractCompat.FontRequestCallback>;
					public static RESULT_OK: number;
					public static FAIL_REASON_PROVIDER_NOT_FOUND: number;
					public static FAIL_REASON_WRONG_CERTIFICATES: number;
					public static FAIL_REASON_FONT_LOAD_ERROR: number;
					public static FAIL_REASON_SECURITY_VIOLATION: number;
					public static FAIL_REASON_FONT_NOT_FOUND: number;
					public static FAIL_REASON_FONT_UNAVAILABLE: number;
					public static FAIL_REASON_MALFORMED_QUERY: number;
					public onTypefaceRetrieved(param0: globalAndroid.graphics.Typeface): void;
					public onTypefaceRequestFailed(param0: number): void;
					public constructor();
				}
				export module FontRequestCallback {
					export class FontRequestFailReason {
						public static class: java.lang.Class<androidx.core.provider.FontsContractCompat.FontRequestCallback.FontRequestFailReason>;
						/**
						 * Constructs a new instance of the androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
				}
				export class TypefaceResult {
					public static class: java.lang.Class<androidx.core.provider.FontsContractCompat.TypefaceResult>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module provider {
			export class SelfDestructiveThread {
				public static class: java.lang.Class<androidx.core.provider.SelfDestructiveThread>;
				public postAndWait(param0: java.util.concurrent.Callable, param1: number): any;
				public isRunning(): boolean;
				public postAndReply(param0: java.util.concurrent.Callable, param1: androidx.core.provider.SelfDestructiveThread.ReplyCallback<any>): void;
				public constructor(param0: string, param1: number, param2: number);
				public getGeneration(): number;
			}
			export module SelfDestructiveThread {
				export class ReplyCallback<T> extends java.lang.Object {
					public static class: java.lang.Class<androidx.core.provider.SelfDestructiveThread.ReplyCallback<any>>;
					/**
					 * Constructs a new instance of the androidx.core.provider.SelfDestructiveThread$ReplyCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onReply(param0: T): void });
					public constructor();
					public onReply(param0: T): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class BidiFormatter {
				public static class: java.lang.Class<androidx.core.text.BidiFormatter>;
				public isRtlContext(): boolean;
				public unicodeWrap(param0: string, param1: boolean): string;
				public isRtl(param0: string): boolean;
				public static getInstance(param0: boolean): androidx.core.text.BidiFormatter;
				public static getInstance(): androidx.core.text.BidiFormatter;
				public static getInstance(param0: java.util.Locale): androidx.core.text.BidiFormatter;
				public unicodeWrap(param0: string, param1: androidx.core.text.TextDirectionHeuristicCompat): string;
				public unicodeWrap(param0: string, param1: androidx.core.text.TextDirectionHeuristicCompat, param2: boolean): string;
				public getStereoReset(): boolean;
				public unicodeWrap(param0: string): string;
			}
			export module BidiFormatter {
				export class Builder {
					public static class: java.lang.Class<androidx.core.text.BidiFormatter.Builder>;
					public build(): androidx.core.text.BidiFormatter;
					public stereoReset(param0: boolean): androidx.core.text.BidiFormatter.Builder;
					public constructor(param0: boolean);
					public constructor();
					public constructor(param0: java.util.Locale);
					public setTextDirectionHeuristic(param0: androidx.core.text.TextDirectionHeuristicCompat): androidx.core.text.BidiFormatter.Builder;
				}
				export class DirectionalityEstimator {
					public static class: java.lang.Class<androidx.core.text.BidiFormatter.DirectionalityEstimator>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class HtmlCompat {
				public static class: java.lang.Class<androidx.core.text.HtmlCompat>;
				public static TO_HTML_PARAGRAPH_LINES_CONSECUTIVE: number;
				public static TO_HTML_PARAGRAPH_LINES_INDIVIDUAL: number;
				public static FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH: number;
				public static FROM_HTML_SEPARATOR_LINE_BREAK_HEADING: number;
				public static FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM: number;
				public static FROM_HTML_SEPARATOR_LINE_BREAK_LIST: number;
				public static FROM_HTML_SEPARATOR_LINE_BREAK_DIV: number;
				public static FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE: number;
				public static FROM_HTML_OPTION_USE_CSS_COLORS: number;
				public static FROM_HTML_MODE_LEGACY: number;
				public static FROM_HTML_MODE_COMPACT: number;
				public static toHtml(param0: globalAndroid.text.Spanned, param1: number): string;
				public static fromHtml(param0: string, param1: number): globalAndroid.text.Spanned;
				public static fromHtml(param0: string, param1: number, param2: globalAndroid.text.Html.ImageGetter, param3: globalAndroid.text.Html.TagHandler): globalAndroid.text.Spanned;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class ICUCompat {
				public static class: java.lang.Class<androidx.core.text.ICUCompat>;
				public static maximizeAndGetScript(param0: java.util.Locale): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class PrecomputedTextCompat extends android.text.Spannable {
				public static class: java.lang.Class<androidx.core.text.PrecomputedTextCompat>;
				public getSpanEnd(param0: any): number;
				public getParagraphStart(param0: number): number;
				public static getTextFuture(param0: string, param1: androidx.core.text.PrecomputedTextCompat.Params, param2: java.util.concurrent.Executor): java.util.concurrent.Future<androidx.core.text.PrecomputedTextCompat>;
				public getSpanFlags(param0: any): number;
				public getSpans(param0: number, param1: number, param2: java.lang.Class): native.Array<any>;
				public length(): number;
				public getPrecomputedText(): any;
				public setSpan(param0: any, param1: number, param2: number, param3: number): void;
				public removeSpan(param0: any): void;
				public toString(): string;
				public getParagraphEnd(param0: number): number;
				public charAt(param0: number): string;
				public getParams(): androidx.core.text.PrecomputedTextCompat.Params;
				public getParagraphCount(): number;
				public subSequence(param0: number, param1: number): string;
				public static create(param0: string, param1: androidx.core.text.PrecomputedTextCompat.Params): androidx.core.text.PrecomputedTextCompat;
				public nextSpanTransition(param0: number, param1: number, param2: java.lang.Class): number;
				public getSpanStart(param0: any): number;
			}
			export module PrecomputedTextCompat {
				export class Params {
					public static class: java.lang.Class<androidx.core.text.PrecomputedTextCompat.Params>;
					public constructor(param0: any);
					public equals(param0: any): boolean;
					public getBreakStrategy(): number;
					public toString(): string;
					public getHyphenationFrequency(): number;
					public getTextPaint(): globalAndroid.text.TextPaint;
					public equalsWithoutTextDirection(param0: androidx.core.text.PrecomputedTextCompat.Params): boolean;
					public hashCode(): number;
					public getTextDirection(): any;
				}
				export module Params {
					export class Builder {
						public static class: java.lang.Class<androidx.core.text.PrecomputedTextCompat.Params.Builder>;
						public constructor(param0: globalAndroid.text.TextPaint);
						public setBreakStrategy(param0: number): androidx.core.text.PrecomputedTextCompat.Params.Builder;
						public setTextDirection(param0: any): androidx.core.text.PrecomputedTextCompat.Params.Builder;
						public setHyphenationFrequency(param0: number): androidx.core.text.PrecomputedTextCompat.Params.Builder;
						public build(): androidx.core.text.PrecomputedTextCompat.Params;
					}
				}
				export class PrecomputedTextFutureTask extends java.util.concurrent.FutureTask<androidx.core.text.PrecomputedTextCompat> {
					public static class: java.lang.Class<androidx.core.text.PrecomputedTextCompat.PrecomputedTextFutureTask>;
				}
				export module PrecomputedTextFutureTask {
					export class PrecomputedTextCallback extends java.util.concurrent.Callable<androidx.core.text.PrecomputedTextCompat> {
						public static class: java.lang.Class<androidx.core.text.PrecomputedTextCompat.PrecomputedTextFutureTask.PrecomputedTextCallback>;
						public call(): androidx.core.text.PrecomputedTextCompat;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class TextDirectionHeuristicCompat {
				public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicCompat>;
				/**
				 * Constructs a new instance of the androidx.core.text.TextDirectionHeuristicCompat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { isRtl(param0: native.Array<string>, param1: number, param2: number): boolean; isRtl(param0: string, param1: number, param2: number): boolean });
				public constructor();
				public isRtl(param0: native.Array<string>, param1: number, param2: number): boolean;
				public isRtl(param0: string, param1: number, param2: number): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class TextDirectionHeuristicsCompat {
				public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat>;
				public static LTR: androidx.core.text.TextDirectionHeuristicCompat;
				public static RTL: androidx.core.text.TextDirectionHeuristicCompat;
				public static FIRSTSTRONG_LTR: androidx.core.text.TextDirectionHeuristicCompat;
				public static FIRSTSTRONG_RTL: androidx.core.text.TextDirectionHeuristicCompat;
				public static ANYRTL_LTR: androidx.core.text.TextDirectionHeuristicCompat;
				public static LOCALE: androidx.core.text.TextDirectionHeuristicCompat;
			}
			export module TextDirectionHeuristicsCompat {
				export class AnyStrong extends androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionAlgorithm {
					public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat.AnyStrong>;
					public checkRtl(param0: string, param1: number, param2: number): number;
				}
				export class FirstStrong extends androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionAlgorithm {
					public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat.FirstStrong>;
					public checkRtl(param0: string, param1: number, param2: number): number;
				}
				export class TextDirectionAlgorithm {
					public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionAlgorithm>;
					/**
					 * Constructs a new instance of the androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { checkRtl(param0: string, param1: number, param2: number): number });
					public constructor();
					public checkRtl(param0: string, param1: number, param2: number): number;
				}
				export abstract class TextDirectionHeuristicImpl extends androidx.core.text.TextDirectionHeuristicCompat {
					public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicImpl>;
					public defaultIsRtl(): boolean;
					public isRtl(param0: native.Array<string>, param1: number, param2: number): boolean;
					public isRtl(param0: string, param1: number, param2: number): boolean;
				}
				export class TextDirectionHeuristicInternal extends androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicImpl {
					public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicInternal>;
					public defaultIsRtl(): boolean;
					public isRtl(param0: native.Array<string>, param1: number, param2: number): boolean;
					public isRtl(param0: string, param1: number, param2: number): boolean;
				}
				export class TextDirectionHeuristicLocale extends androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicImpl {
					public static class: java.lang.Class<androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicLocale>;
					public defaultIsRtl(): boolean;
					public isRtl(param0: native.Array<string>, param1: number, param2: number): boolean;
					public isRtl(param0: string, param1: number, param2: number): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export class TextUtilsCompat {
				public static class: java.lang.Class<androidx.core.text.TextUtilsCompat>;
				public static htmlEncode(param0: string): string;
				public static getLayoutDirectionFromLocale(param0: java.util.Locale): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export module util {
				export class FindAddress {
					public static class: java.lang.Class<androidx.core.text.util.FindAddress>;
					public static isValidZipCode(param0: string): boolean;
					public static isValidLocationName(param0: string): boolean;
					public static matchHouseNumber(param0: string, param1: number): java.util.regex.MatchResult;
					public static matchState(param0: string, param1: number): java.util.regex.MatchResult;
					public static isValidZipCode(param0: string, param1: string): boolean;
				}
				export module FindAddress {
					export class ZipRange {
						public static class: java.lang.Class<androidx.core.text.util.FindAddress.ZipRange>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module text {
			export module util {
				export class LinkifyCompat {
					public static class: java.lang.Class<androidx.core.text.util.LinkifyCompat>;
					public static addLinks(param0: globalAndroid.widget.TextView, param1: java.util.regex.Pattern, param2: string): void;
					public static addLinks(param0: globalAndroid.text.Spannable, param1: java.util.regex.Pattern, param2: string): boolean;
					public static addLinks(param0: globalAndroid.text.Spannable, param1: java.util.regex.Pattern, param2: string, param3: native.Array<string>, param4: globalAndroid.text.util.Linkify.MatchFilter, param5: globalAndroid.text.util.Linkify.TransformFilter): boolean;
					public static addLinks(param0: globalAndroid.widget.TextView, param1: number): boolean;
					public static addLinks(param0: globalAndroid.text.Spannable, param1: java.util.regex.Pattern, param2: string, param3: globalAndroid.text.util.Linkify.MatchFilter, param4: globalAndroid.text.util.Linkify.TransformFilter): boolean;
					public static addLinks(param0: globalAndroid.widget.TextView, param1: java.util.regex.Pattern, param2: string, param3: native.Array<string>, param4: globalAndroid.text.util.Linkify.MatchFilter, param5: globalAndroid.text.util.Linkify.TransformFilter): void;
					public static addLinks(param0: globalAndroid.widget.TextView, param1: java.util.regex.Pattern, param2: string, param3: globalAndroid.text.util.Linkify.MatchFilter, param4: globalAndroid.text.util.Linkify.TransformFilter): void;
					public static addLinks(param0: globalAndroid.text.Spannable, param1: number): boolean;
				}
				export module LinkifyCompat {
					export class LinkSpec {
						public static class: java.lang.Class<androidx.core.text.util.LinkifyCompat.LinkSpec>;
					}
					export class LinkifyMask {
						public static class: java.lang.Class<androidx.core.text.util.LinkifyCompat.LinkifyMask>;
						/**
						 * Constructs a new instance of the androidx.core.text.util.LinkifyCompat$LinkifyMask interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {});
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class AtomicFile {
				public static class: java.lang.Class<androidx.core.util.AtomicFile>;
				public finishWrite(param0: java.io.FileOutputStream): void;
				public openRead(): java.io.FileInputStream;
				public constructor(param0: java.io.File);
				public delete(): void;
				public getBaseFile(): java.io.File;
				public startWrite(): java.io.FileOutputStream;
				public failWrite(param0: java.io.FileOutputStream): void;
				public readFully(): native.Array<number>;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class Consumer<T> extends java.lang.Object {
				public static class: java.lang.Class<androidx.core.util.Consumer<any>>;
				/**
				 * Constructs a new instance of the androidx.core.util.Consumer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { accept(param0: T): void });
				public constructor();
				public accept(param0: T): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class DebugUtils {
				public static class: java.lang.Class<androidx.core.util.DebugUtils>;
				public static buildShortClassTag(param0: any, param1: java.lang.StringBuilder): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class LogWriter {
				public static class: java.lang.Class<androidx.core.util.LogWriter>;
				public write(param0: native.Array<string>, param1: number, param2: number): void;
				public close(): void;
				public constructor(param0: string);
				public flush(): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class ObjectsCompat {
				public static class: java.lang.Class<androidx.core.util.ObjectsCompat>;
				public static hash(param0: native.Array<any>): number;
				public static hashCode(param0: any): number;
				public static equals(param0: any, param1: any): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class Pair<F, S> extends java.lang.Object {
				public static class: java.lang.Class<androidx.core.util.Pair<any, any>>;
				public first: F;
				public second: S;
				public hashCode(): number;
				public constructor(param0: F, param1: S);
				public equals(param0: any): boolean;
				public static create(param0: any, param1: any): androidx.core.util.Pair<any, any>;
				public toString(): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class PatternsCompat {
				public static class: java.lang.Class<androidx.core.util.PatternsCompat>;
				public static IP_ADDRESS: java.util.regex.Pattern;
				public static DOMAIN_NAME: java.util.regex.Pattern;
				public static WEB_URL: java.util.regex.Pattern;
				public static AUTOLINK_WEB_URL: java.util.regex.Pattern;
				public static AUTOLINK_EMAIL_ADDRESS: java.util.regex.Pattern;
				public static EMAIL_ADDRESS: java.util.regex.Pattern;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class Pools {
				public static class: java.lang.Class<androidx.core.util.Pools>;
			}
			export module Pools {
				export class Pool<T> extends java.lang.Object {
					public static class: java.lang.Class<androidx.core.util.Pools.Pool<any>>;
					/**
					 * Constructs a new instance of the androidx.core.util.Pools$Pool interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { acquire(): T; release(param0: T): boolean });
					public constructor();
					public acquire(): T;
					public release(param0: T): boolean;
				}
				export class SimplePool<T> extends androidx.core.util.Pools.Pool<any> {
					public static class: java.lang.Class<androidx.core.util.Pools.SimplePool<any>>;
					public acquire(): any;
					public release(param0: any): boolean;
					public constructor(param0: number);
				}
				export class SynchronizedPool<T> extends androidx.core.util.Pools.SimplePool<any> {
					public static class: java.lang.Class<androidx.core.util.Pools.SynchronizedPool<any>>;
					public acquire(): any;
					public release(param0: any): boolean;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class Preconditions {
				public static class: java.lang.Class<androidx.core.util.Preconditions>;
				public static checkCollectionNotEmpty(param0: java.util.Collection, param1: string): java.util.Collection;
				public static checkArgument(param0: boolean, param1: any): void;
				public static checkState(param0: boolean): void;
				public static checkCollectionElementsNotNull(param0: java.util.Collection, param1: string): java.util.Collection;
				public static checkArrayElementsNotNull(param0: native.Array<any>, param1: string): native.Array<any>;
				public static checkArgumentNonnegative(param0: number): number;
				public static checkFlagsArgument(param0: number, param1: number): number;
				public static checkArrayElementsInRange(param0: native.Array<number>, param1: number, param2: number, param3: string): native.Array<number>;
				public static checkStringNotEmpty(param0: string): string;
				public static checkNotNull(param0: any, param1: any): any;
				public static checkState(param0: boolean, param1: string): void;
				public static checkArgumentNonnegative(param0: number, param1: string): number;
				public static checkArgumentPositive(param0: number, param1: string): number;
				public static checkArgumentInRange(param0: number, param1: number, param2: number, param3: string): number;
				public static checkArgument(param0: boolean): void;
				public static checkStringNotEmpty(param0: string, param1: any): string;
				public static checkNotNull(param0: any): any;
				public static checkArgumentFinite(param0: number, param1: string): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module util {
			export class TimeUtils {
				public static class: java.lang.Class<androidx.core.util.TimeUtils>;
				public static HUNDRED_DAY_FIELD_LEN: number;
				public static formatDuration(param0: number, param1: java.io.PrintWriter, param2: number): void;
				public static formatDuration(param0: number, param1: number, param2: java.io.PrintWriter): void;
				public static formatDuration(param0: number, param1: java.lang.StringBuilder): void;
				public static formatDuration(param0: number, param1: java.io.PrintWriter): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class AccessibilityDelegateCompat {
				public static class: java.lang.Class<androidx.core.view.AccessibilityDelegateCompat>;
				public sendAccessibilityEventUnchecked(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public getAccessibilityNodeProvider(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeProviderCompat;
				public onPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public sendAccessibilityEvent(param0: globalAndroid.view.View, param1: number): void;
				public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				public constructor();
			}
			export module AccessibilityDelegateCompat {
				export class AccessibilityDelegateAdapter {
					public static class: java.lang.Class<androidx.core.view.AccessibilityDelegateCompat.AccessibilityDelegateAdapter>;
					public getAccessibilityNodeProvider(param0: globalAndroid.view.View): globalAndroid.view.accessibility.AccessibilityNodeProvider;
					public onPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
					public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public sendAccessibilityEvent(param0: globalAndroid.view.View, param1: number): void;
					public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export abstract class ActionProvider {
				public static class: java.lang.Class<androidx.core.view.ActionProvider>;
				public isVisible(): boolean;
				public getContext(): globalAndroid.content.Context;
				public onPerformDefaultAction(): boolean;
				public overridesItemVisibility(): boolean;
				public setSubUiVisibilityListener(param0: androidx.core.view.ActionProvider.SubUiVisibilityListener): void;
				public subUiVisibilityChanged(param0: boolean): void;
				public onPrepareSubMenu(param0: globalAndroid.view.SubMenu): void;
				public reset(): void;
				public onCreateActionView(param0: globalAndroid.view.MenuItem): globalAndroid.view.View;
				public refreshVisibility(): void;
				public constructor(param0: globalAndroid.content.Context);
				public onCreateActionView(): globalAndroid.view.View;
				public hasSubMenu(): boolean;
				public setVisibilityListener(param0: androidx.core.view.ActionProvider.VisibilityListener): void;
			}
			export module ActionProvider {
				export class SubUiVisibilityListener {
					public static class: java.lang.Class<androidx.core.view.ActionProvider.SubUiVisibilityListener>;
					/**
					 * Constructs a new instance of the androidx.core.view.ActionProvider$SubUiVisibilityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onSubUiVisibilityChanged(param0: boolean): void });
					public constructor();
					public onSubUiVisibilityChanged(param0: boolean): void;
				}
				export class VisibilityListener {
					public static class: java.lang.Class<androidx.core.view.ActionProvider.VisibilityListener>;
					/**
					 * Constructs a new instance of the androidx.core.view.ActionProvider$VisibilityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onActionProviderVisibilityChanged(param0: boolean): void });
					public constructor();
					public onActionProviderVisibilityChanged(param0: boolean): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class DisplayCutoutCompat {
				public static class: java.lang.Class<androidx.core.view.DisplayCutoutCompat>;
				public getSafeInsetBottom(): number;
				public getSafeInsetLeft(): number;
				public constructor(param0: globalAndroid.graphics.Rect, param1: java.util.List<globalAndroid.graphics.Rect>);
				public hashCode(): number;
				public getSafeInsetTop(): number;
				public getBoundingRects(): java.util.List<globalAndroid.graphics.Rect>;
				public equals(param0: any): boolean;
				public getSafeInsetRight(): number;
				public toString(): string;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class DragAndDropPermissionsCompat {
				public static class: java.lang.Class<androidx.core.view.DragAndDropPermissionsCompat>;
				public release(): void;
				public static request(param0: globalAndroid.app.Activity, param1: globalAndroid.view.DragEvent): androidx.core.view.DragAndDropPermissionsCompat;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class DragStartHelper {
				public static class: java.lang.Class<androidx.core.view.DragStartHelper>;
				public constructor(param0: globalAndroid.view.View, param1: androidx.core.view.DragStartHelper.OnDragStartListener);
				public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
				public attach(): void;
				public getTouchPosition(param0: globalAndroid.graphics.Point): void;
				public onLongClick(param0: globalAndroid.view.View): boolean;
				public detach(): void;
			}
			export module DragStartHelper {
				export class OnDragStartListener {
					public static class: java.lang.Class<androidx.core.view.DragStartHelper.OnDragStartListener>;
					/**
					 * Constructs a new instance of the androidx.core.view.DragStartHelper$OnDragStartListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onDragStart(param0: globalAndroid.view.View, param1: androidx.core.view.DragStartHelper): boolean });
					public constructor();
					public onDragStart(param0: globalAndroid.view.View, param1: androidx.core.view.DragStartHelper): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class GestureDetectorCompat {
				public static class: java.lang.Class<androidx.core.view.GestureDetectorCompat>;
				public isLongpressEnabled(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.GestureDetector.OnGestureListener, param2: globalAndroid.os.Handler);
				public setIsLongpressEnabled(param0: boolean): void;
				public setOnDoubleTapListener(param0: globalAndroid.view.GestureDetector.OnDoubleTapListener): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.GestureDetector.OnGestureListener);
			}
			export module GestureDetectorCompat {
				export class GestureDetectorCompatImpl {
					public static class: java.lang.Class<androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImpl>;
					/**
					 * Constructs a new instance of the androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { isLongpressEnabled(): boolean; onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean; setIsLongpressEnabled(param0: boolean): void; setOnDoubleTapListener(param0: globalAndroid.view.GestureDetector.OnDoubleTapListener): void });
					public constructor();
					public isLongpressEnabled(): boolean;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public setIsLongpressEnabled(param0: boolean): void;
					public setOnDoubleTapListener(param0: globalAndroid.view.GestureDetector.OnDoubleTapListener): void;
				}
				export class GestureDetectorCompatImplBase extends androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImpl {
					public static class: java.lang.Class<androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase>;
					public isLongpressEnabled(): boolean;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public setOnDoubleTapListener(param0: globalAndroid.view.GestureDetector.OnDoubleTapListener): void;
					public setIsLongpressEnabled(param0: boolean): void;
				}
				export module GestureDetectorCompatImplBase {
					export class GestureHandler {
						public static class: java.lang.Class<androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.GestureHandler>;
						public handleMessage(param0: globalAndroid.os.Message): void;
					}
				}
				export class GestureDetectorCompatImplJellybeanMr2 extends androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImpl {
					public static class: java.lang.Class<androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplJellybeanMr2>;
					public isLongpressEnabled(): boolean;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public setIsLongpressEnabled(param0: boolean): void;
					public setOnDoubleTapListener(param0: globalAndroid.view.GestureDetector.OnDoubleTapListener): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class GravityCompat {
				public static class: java.lang.Class<androidx.core.view.GravityCompat>;
				public static RELATIVE_LAYOUT_DIRECTION: number;
				public static START: number;
				public static END: number;
				public static RELATIVE_HORIZONTAL_GRAVITY_MASK: number;
				public static getAbsoluteGravity(param0: number, param1: number): number;
				public static applyDisplay(param0: number, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect, param3: number): void;
				public static apply(param0: number, param1: number, param2: number, param3: globalAndroid.graphics.Rect, param4: number, param5: number, param6: globalAndroid.graphics.Rect, param7: number): void;
				public static apply(param0: number, param1: number, param2: number, param3: globalAndroid.graphics.Rect, param4: globalAndroid.graphics.Rect, param5: number): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class InputDeviceCompat {
				public static class: java.lang.Class<androidx.core.view.InputDeviceCompat>;
				public static SOURCE_CLASS_MASK: number;
				public static SOURCE_CLASS_NONE: number;
				public static SOURCE_CLASS_BUTTON: number;
				public static SOURCE_CLASS_POINTER: number;
				public static SOURCE_CLASS_TRACKBALL: number;
				public static SOURCE_CLASS_POSITION: number;
				public static SOURCE_CLASS_JOYSTICK: number;
				public static SOURCE_UNKNOWN: number;
				public static SOURCE_KEYBOARD: number;
				public static SOURCE_DPAD: number;
				public static SOURCE_GAMEPAD: number;
				public static SOURCE_TOUCHSCREEN: number;
				public static SOURCE_MOUSE: number;
				public static SOURCE_STYLUS: number;
				public static SOURCE_TRACKBALL: number;
				public static SOURCE_TOUCHPAD: number;
				public static SOURCE_TOUCH_NAVIGATION: number;
				public static SOURCE_ROTARY_ENCODER: number;
				public static SOURCE_JOYSTICK: number;
				public static SOURCE_HDMI: number;
				public static SOURCE_ANY: number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class KeyEventDispatcher {
				public static class: java.lang.Class<androidx.core.view.KeyEventDispatcher>;
				public static dispatchKeyEvent(param0: androidx.core.view.KeyEventDispatcher.Component, param1: globalAndroid.view.View, param2: globalAndroid.view.Window.Callback, param3: globalAndroid.view.KeyEvent): boolean;
				public static dispatchBeforeHierarchy(param0: globalAndroid.view.View, param1: globalAndroid.view.KeyEvent): boolean;
			}
			export module KeyEventDispatcher {
				export class Component {
					public static class: java.lang.Class<androidx.core.view.KeyEventDispatcher.Component>;
					/**
					 * Constructs a new instance of the androidx.core.view.KeyEventDispatcher$Component interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean });
					public constructor();
					public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class LayoutInflaterCompat {
				public static class: java.lang.Class<androidx.core.view.LayoutInflaterCompat>;
				public static setFactory2(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.LayoutInflater.Factory2): void;
				/** @deprecated */
				public static getFactory(param0: globalAndroid.view.LayoutInflater): androidx.core.view.LayoutInflaterFactory;
				/** @deprecated */
				public static setFactory(param0: globalAndroid.view.LayoutInflater, param1: androidx.core.view.LayoutInflaterFactory): void;
			}
			export module LayoutInflaterCompat {
				export class Factory2Wrapper {
					public static class: java.lang.Class<androidx.core.view.LayoutInflaterCompat.Factory2Wrapper>;
					public toString(): string;
					public onCreateView(param0: string, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
					public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class LayoutInflaterFactory {
				public static class: java.lang.Class<androidx.core.view.LayoutInflaterFactory>;
				/**
				 * Constructs a new instance of the androidx.core.view.LayoutInflaterFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View });
				public constructor();
				public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class MarginLayoutParamsCompat {
				public static class: java.lang.Class<androidx.core.view.MarginLayoutParamsCompat>;
				public static setLayoutDirection(param0: globalAndroid.view.ViewGroup.MarginLayoutParams, param1: number): void;
				public static setMarginEnd(param0: globalAndroid.view.ViewGroup.MarginLayoutParams, param1: number): void;
				public static isMarginRelative(param0: globalAndroid.view.ViewGroup.MarginLayoutParams): boolean;
				public static getMarginEnd(param0: globalAndroid.view.ViewGroup.MarginLayoutParams): number;
				public static getLayoutDirection(param0: globalAndroid.view.ViewGroup.MarginLayoutParams): number;
				public static resolveLayoutDirection(param0: globalAndroid.view.ViewGroup.MarginLayoutParams, param1: number): void;
				public static setMarginStart(param0: globalAndroid.view.ViewGroup.MarginLayoutParams, param1: number): void;
				public static getMarginStart(param0: globalAndroid.view.ViewGroup.MarginLayoutParams): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class MenuCompat {
				public static class: java.lang.Class<androidx.core.view.MenuCompat>;
				/** @deprecated */
				public static setShowAsAction(param0: globalAndroid.view.MenuItem, param1: number): void;
				public static setGroupDividerEnabled(param0: globalAndroid.view.Menu, param1: boolean): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class MenuItemCompat {
				public static class: java.lang.Class<androidx.core.view.MenuItemCompat>;
				public static SHOW_AS_ACTION_NEVER: number;
				public static SHOW_AS_ACTION_IF_ROOM: number;
				public static SHOW_AS_ACTION_ALWAYS: number;
				public static SHOW_AS_ACTION_WITH_TEXT: number;
				public static SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW: number;
				/** @deprecated */
				public static setShowAsAction(param0: globalAndroid.view.MenuItem, param1: number): void;
				public static getAlphabeticModifiers(param0: globalAndroid.view.MenuItem): number;
				/** @deprecated */
				public static setActionView(param0: globalAndroid.view.MenuItem, param1: number): globalAndroid.view.MenuItem;
				/** @deprecated */
				public static getActionView(param0: globalAndroid.view.MenuItem): globalAndroid.view.View;
				public static getActionProvider(param0: globalAndroid.view.MenuItem): androidx.core.view.ActionProvider;
				/** @deprecated */
				public static setOnActionExpandListener(param0: globalAndroid.view.MenuItem, param1: androidx.core.view.MenuItemCompat.OnActionExpandListener): globalAndroid.view.MenuItem;
				/** @deprecated */
				public static setActionView(param0: globalAndroid.view.MenuItem, param1: globalAndroid.view.View): globalAndroid.view.MenuItem;
				/** @deprecated */
				public static expandActionView(param0: globalAndroid.view.MenuItem): boolean;
				public static setIconTintMode(param0: globalAndroid.view.MenuItem, param1: globalAndroid.graphics.PorterDuff.Mode): void;
				/** @deprecated */
				public static isActionViewExpanded(param0: globalAndroid.view.MenuItem): boolean;
				public static setNumericShortcut(param0: globalAndroid.view.MenuItem, param1: string, param2: number): void;
				public static getContentDescription(param0: globalAndroid.view.MenuItem): string;
				public static setActionProvider(param0: globalAndroid.view.MenuItem, param1: androidx.core.view.ActionProvider): globalAndroid.view.MenuItem;
				public static getIconTintMode(param0: globalAndroid.view.MenuItem): globalAndroid.graphics.PorterDuff.Mode;
				public static setTooltipText(param0: globalAndroid.view.MenuItem, param1: string): void;
				public static setAlphabeticShortcut(param0: globalAndroid.view.MenuItem, param1: string, param2: number): void;
				public static getIconTintList(param0: globalAndroid.view.MenuItem): globalAndroid.content.res.ColorStateList;
				public static getTooltipText(param0: globalAndroid.view.MenuItem): string;
				public static getNumericModifiers(param0: globalAndroid.view.MenuItem): number;
				public static setIconTintList(param0: globalAndroid.view.MenuItem, param1: globalAndroid.content.res.ColorStateList): void;
				/** @deprecated */
				public static collapseActionView(param0: globalAndroid.view.MenuItem): boolean;
				public static setContentDescription(param0: globalAndroid.view.MenuItem, param1: string): void;
				public static setShortcut(param0: globalAndroid.view.MenuItem, param1: string, param2: string, param3: number, param4: number): void;
			}
			export module MenuItemCompat {
				export class OnActionExpandListener {
					public static class: java.lang.Class<androidx.core.view.MenuItemCompat.OnActionExpandListener>;
					/**
					 * Constructs a new instance of the androidx.core.view.MenuItemCompat$OnActionExpandListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onMenuItemActionExpand(param0: globalAndroid.view.MenuItem): boolean; onMenuItemActionCollapse(param0: globalAndroid.view.MenuItem): boolean });
					public constructor();
					public onMenuItemActionCollapse(param0: globalAndroid.view.MenuItem): boolean;
					public onMenuItemActionExpand(param0: globalAndroid.view.MenuItem): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class MotionEventCompat {
				public static class: java.lang.Class<androidx.core.view.MotionEventCompat>;
				public static ACTION_MASK: number;
				public static ACTION_POINTER_DOWN: number;
				public static ACTION_POINTER_UP: number;
				public static ACTION_HOVER_MOVE: number;
				public static ACTION_SCROLL: number;
				public static ACTION_POINTER_INDEX_MASK: number;
				public static ACTION_POINTER_INDEX_SHIFT: number;
				public static ACTION_HOVER_ENTER: number;
				public static ACTION_HOVER_EXIT: number;
				public static AXIS_X: number;
				public static AXIS_Y: number;
				public static AXIS_PRESSURE: number;
				public static AXIS_SIZE: number;
				public static AXIS_TOUCH_MAJOR: number;
				public static AXIS_TOUCH_MINOR: number;
				public static AXIS_TOOL_MAJOR: number;
				public static AXIS_TOOL_MINOR: number;
				public static AXIS_ORIENTATION: number;
				public static AXIS_VSCROLL: number;
				public static AXIS_HSCROLL: number;
				public static AXIS_Z: number;
				public static AXIS_RX: number;
				public static AXIS_RY: number;
				public static AXIS_RZ: number;
				public static AXIS_HAT_X: number;
				public static AXIS_HAT_Y: number;
				public static AXIS_LTRIGGER: number;
				public static AXIS_RTRIGGER: number;
				public static AXIS_THROTTLE: number;
				public static AXIS_RUDDER: number;
				public static AXIS_WHEEL: number;
				public static AXIS_GAS: number;
				public static AXIS_BRAKE: number;
				public static AXIS_DISTANCE: number;
				public static AXIS_TILT: number;
				public static AXIS_SCROLL: number;
				public static AXIS_RELATIVE_X: number;
				public static AXIS_RELATIVE_Y: number;
				public static AXIS_GENERIC_1: number;
				public static AXIS_GENERIC_2: number;
				public static AXIS_GENERIC_3: number;
				public static AXIS_GENERIC_4: number;
				public static AXIS_GENERIC_5: number;
				public static AXIS_GENERIC_6: number;
				public static AXIS_GENERIC_7: number;
				public static AXIS_GENERIC_8: number;
				public static AXIS_GENERIC_9: number;
				public static AXIS_GENERIC_10: number;
				public static AXIS_GENERIC_11: number;
				public static AXIS_GENERIC_12: number;
				public static AXIS_GENERIC_13: number;
				public static AXIS_GENERIC_14: number;
				public static AXIS_GENERIC_15: number;
				public static AXIS_GENERIC_16: number;
				public static BUTTON_PRIMARY: number;
				/** @deprecated */
				public static getActionMasked(param0: globalAndroid.view.MotionEvent): number;
				/** @deprecated */
				public static getY(param0: globalAndroid.view.MotionEvent, param1: number): number;
				/** @deprecated */
				public static getPointerId(param0: globalAndroid.view.MotionEvent, param1: number): number;
				/** @deprecated */
				public static getPointerCount(param0: globalAndroid.view.MotionEvent): number;
				public static isFromSource(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
				/** @deprecated */
				public static getX(param0: globalAndroid.view.MotionEvent, param1: number): number;
				/** @deprecated */
				public static getButtonState(param0: globalAndroid.view.MotionEvent): number;
				/** @deprecated */
				public static getActionIndex(param0: globalAndroid.view.MotionEvent): number;
				/** @deprecated */
				public static getSource(param0: globalAndroid.view.MotionEvent): number;
				/** @deprecated */
				public static getAxisValue(param0: globalAndroid.view.MotionEvent, param1: number, param2: number): number;
				/** @deprecated */
				public static findPointerIndex(param0: globalAndroid.view.MotionEvent, param1: number): number;
				/** @deprecated */
				public static getAxisValue(param0: globalAndroid.view.MotionEvent, param1: number): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class NestedScrollingChild {
				public static class: java.lang.Class<androidx.core.view.NestedScrollingChild>;
				/**
				 * Constructs a new instance of the androidx.core.view.NestedScrollingChild interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					setNestedScrollingEnabled(param0: boolean): void;
					isNestedScrollingEnabled(): boolean;
					startNestedScroll(param0: number): boolean;
					stopNestedScroll(): void;
					hasNestedScrollingParent(): boolean;
					dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
					dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
					dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
					dispatchNestedPreFling(param0: number, param1: number): boolean;
				});
				public constructor();
				public stopNestedScroll(): void;
				public setNestedScrollingEnabled(param0: boolean): void;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
				public startNestedScroll(param0: number): boolean;
				public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
				public hasNestedScrollingParent(): boolean;
				public dispatchNestedPreFling(param0: number, param1: number): boolean;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
				public isNestedScrollingEnabled(): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class NestedScrollingChild2 extends androidx.core.view.NestedScrollingChild {
				public static class: java.lang.Class<androidx.core.view.NestedScrollingChild2>;
				/**
				 * Constructs a new instance of the androidx.core.view.NestedScrollingChild2 interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					startNestedScroll(param0: number, param1: number): boolean;
					stopNestedScroll(param0: number): void;
					hasNestedScrollingParent(param0: number): boolean;
					dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: number): boolean;
					dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: number): boolean;
					setNestedScrollingEnabled(param0: boolean): void;
					isNestedScrollingEnabled(): boolean;
					startNestedScroll(param0: number): boolean;
					stopNestedScroll(): void;
					hasNestedScrollingParent(): boolean;
					dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
					dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
					dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
					dispatchNestedPreFling(param0: number, param1: number): boolean;
				});
				public constructor();
				public stopNestedScroll(param0: number): void;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: number): boolean;
				public startNestedScroll(param0: number, param1: number): boolean;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: number): boolean;
				public stopNestedScroll(): void;
				public setNestedScrollingEnabled(param0: boolean): void;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
				public startNestedScroll(param0: number): boolean;
				public hasNestedScrollingParent(param0: number): boolean;
				public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
				public hasNestedScrollingParent(): boolean;
				public dispatchNestedPreFling(param0: number, param1: number): boolean;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
				public isNestedScrollingEnabled(): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class NestedScrollingChildHelper {
				public static class: java.lang.Class<androidx.core.view.NestedScrollingChildHelper>;
				public stopNestedScroll(param0: number): void;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: number): boolean;
				public startNestedScroll(param0: number, param1: number): boolean;
				public stopNestedScroll(): void;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: number): boolean;
				public setNestedScrollingEnabled(param0: boolean): void;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
				public startNestedScroll(param0: number): boolean;
				public hasNestedScrollingParent(param0: number): boolean;
				public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
				public hasNestedScrollingParent(): boolean;
				public onDetachedFromWindow(): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public dispatchNestedPreFling(param0: number, param1: number): boolean;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
				public constructor(param0: globalAndroid.view.View);
				public isNestedScrollingEnabled(): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class NestedScrollingParent {
				public static class: java.lang.Class<androidx.core.view.NestedScrollingParent>;
				/**
				 * Constructs a new instance of the androidx.core.view.NestedScrollingParent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
					onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
					onStopNestedScroll(param0: globalAndroid.view.View): void;
					onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
					onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
					onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
					getNestedScrollAxes(): number;
				});
				public constructor();
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public getNestedScrollAxes(): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class NestedScrollingParent2 extends androidx.core.view.NestedScrollingParent {
				public static class: java.lang.Class<androidx.core.view.NestedScrollingParent2>;
				/**
				 * Constructs a new instance of the androidx.core.view.NestedScrollingParent2 interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
					onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
					onStopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
					onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number): void;
					onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: number): void;
					onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
					onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
					onStopNestedScroll(param0: globalAndroid.view.View): void;
					onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
					onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
					onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
					getNestedScrollAxes(): number;
				});
				public constructor();
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number): void;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onStopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: number): void;
				public getNestedScrollAxes(): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class NestedScrollingParentHelper {
				public static class: java.lang.Class<androidx.core.view.NestedScrollingParentHelper>;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public constructor(param0: globalAndroid.view.ViewGroup);
				public onStopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public getNestedScrollAxes(): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class OnApplyWindowInsetsListener {
				public static class: java.lang.Class<androidx.core.view.OnApplyWindowInsetsListener>;
				/**
				 * Constructs a new instance of the androidx.core.view.OnApplyWindowInsetsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onApplyWindowInsets(param0: globalAndroid.view.View, param1: androidx.core.view.WindowInsetsCompat): androidx.core.view.WindowInsetsCompat });
				public constructor();
				public onApplyWindowInsets(param0: globalAndroid.view.View, param1: androidx.core.view.WindowInsetsCompat): androidx.core.view.WindowInsetsCompat;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class PointerIconCompat {
				public static class: java.lang.Class<androidx.core.view.PointerIconCompat>;
				public static TYPE_NULL: number;
				public static TYPE_ARROW: number;
				public static TYPE_CONTEXT_MENU: number;
				public static TYPE_HAND: number;
				public static TYPE_HELP: number;
				public static TYPE_WAIT: number;
				public static TYPE_CELL: number;
				public static TYPE_CROSSHAIR: number;
				public static TYPE_TEXT: number;
				public static TYPE_VERTICAL_TEXT: number;
				public static TYPE_ALIAS: number;
				public static TYPE_COPY: number;
				public static TYPE_NO_DROP: number;
				public static TYPE_ALL_SCROLL: number;
				public static TYPE_HORIZONTAL_DOUBLE_ARROW: number;
				public static TYPE_VERTICAL_DOUBLE_ARROW: number;
				public static TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW: number;
				public static TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW: number;
				public static TYPE_ZOOM_IN: number;
				public static TYPE_ZOOM_OUT: number;
				public static TYPE_GRAB: number;
				public static TYPE_GRABBING: number;
				public static TYPE_DEFAULT: number;
				public static getSystemIcon(param0: globalAndroid.content.Context, param1: number): androidx.core.view.PointerIconCompat;
				public static load(param0: globalAndroid.content.res.Resources, param1: number): androidx.core.view.PointerIconCompat;
				public getPointerIcon(): any;
				public static create(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number): androidx.core.view.PointerIconCompat;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ScaleGestureDetectorCompat {
				public static class: java.lang.Class<androidx.core.view.ScaleGestureDetectorCompat>;
				public static isQuickScaleEnabled(param0: globalAndroid.view.ScaleGestureDetector): boolean;
				/** @deprecated */
				public static setQuickScaleEnabled(param0: any, param1: boolean): void;
				public static setQuickScaleEnabled(param0: globalAndroid.view.ScaleGestureDetector, param1: boolean): void;
				/** @deprecated */
				public static isQuickScaleEnabled(param0: any): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ScrollingView {
				public static class: java.lang.Class<androidx.core.view.ScrollingView>;
				/**
				 * Constructs a new instance of the androidx.core.view.ScrollingView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { computeHorizontalScrollRange(): number; computeHorizontalScrollOffset(): number; computeHorizontalScrollExtent(): number; computeVerticalScrollRange(): number; computeVerticalScrollOffset(): number; computeVerticalScrollExtent(): number });
				public constructor();
				public computeHorizontalScrollExtent(): number;
				public computeHorizontalScrollRange(): number;
				public computeVerticalScrollOffset(): number;
				public computeVerticalScrollExtent(): number;
				public computeVerticalScrollRange(): number;
				public computeHorizontalScrollOffset(): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class TintableBackgroundView {
				public static class: java.lang.Class<androidx.core.view.TintableBackgroundView>;
				/**
				 * Constructs a new instance of the androidx.core.view.TintableBackgroundView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void; getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList; setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void; getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode });
				public constructor();
				public setSupportBackgroundTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getSupportBackgroundTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public getSupportBackgroundTintList(): globalAndroid.content.res.ColorStateList;
				public setSupportBackgroundTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class VelocityTrackerCompat {
				public static class: java.lang.Class<androidx.core.view.VelocityTrackerCompat>;
				/** @deprecated */
				public static getXVelocity(param0: globalAndroid.view.VelocityTracker, param1: number): number;
				/** @deprecated */
				public static getYVelocity(param0: globalAndroid.view.VelocityTracker, param1: number): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewCompat {
				public static class: java.lang.Class<androidx.core.view.ViewCompat>;
				public static OVER_SCROLL_ALWAYS: number;
				public static OVER_SCROLL_IF_CONTENT_SCROLLS: number;
				public static OVER_SCROLL_NEVER: number;
				public static IMPORTANT_FOR_ACCESSIBILITY_AUTO: number;
				public static IMPORTANT_FOR_ACCESSIBILITY_YES: number;
				public static IMPORTANT_FOR_ACCESSIBILITY_NO: number;
				public static IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS: number;
				public static ACCESSIBILITY_LIVE_REGION_NONE: number;
				public static ACCESSIBILITY_LIVE_REGION_POLITE: number;
				public static ACCESSIBILITY_LIVE_REGION_ASSERTIVE: number;
				public static LAYER_TYPE_NONE: number;
				public static LAYER_TYPE_SOFTWARE: number;
				public static LAYER_TYPE_HARDWARE: number;
				public static LAYOUT_DIRECTION_LTR: number;
				public static LAYOUT_DIRECTION_RTL: number;
				public static LAYOUT_DIRECTION_INHERIT: number;
				public static LAYOUT_DIRECTION_LOCALE: number;
				public static MEASURED_SIZE_MASK: number;
				public static MEASURED_STATE_MASK: number;
				public static MEASURED_HEIGHT_STATE_SHIFT: number;
				public static MEASURED_STATE_TOO_SMALL: number;
				public static SCROLL_AXIS_NONE: number;
				public static SCROLL_AXIS_HORIZONTAL: number;
				public static SCROLL_AXIS_VERTICAL: number;
				public static TYPE_TOUCH: number;
				public static TYPE_NON_TOUCH: number;
				public static SCROLL_INDICATOR_TOP: number;
				public static SCROLL_INDICATOR_BOTTOM: number;
				public static SCROLL_INDICATOR_LEFT: number;
				public static SCROLL_INDICATOR_RIGHT: number;
				public static SCROLL_INDICATOR_START: number;
				public static SCROLL_INDICATOR_END: number;
				public static getMinimumWidth(param0: globalAndroid.view.View): number;
				public static setBackgroundTintList(param0: globalAndroid.view.View, param1: globalAndroid.content.res.ColorStateList): void;
				public static isKeyboardNavigationCluster(param0: globalAndroid.view.View): boolean;
				public static setLabelFor(param0: globalAndroid.view.View, param1: number): void;
				public static setBackgroundTintMode(param0: globalAndroid.view.View, param1: globalAndroid.graphics.PorterDuff.Mode): void;
				public static setImportantForAccessibility(param0: globalAndroid.view.View, param1: number): void;
				public static hasNestedScrollingParent(param0: globalAndroid.view.View, param1: number): boolean;
				public static startNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				/** @deprecated */
				public static setY(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static setActivated(param0: globalAndroid.view.View, param1: boolean): void;
				public static hasOverlappingRendering(param0: globalAndroid.view.View): boolean;
				public static offsetLeftAndRight(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static getMeasuredState(param0: globalAndroid.view.View): number;
				public static setPointerIcon(param0: globalAndroid.view.View, param1: androidx.core.view.PointerIconCompat): void;
				/** @deprecated */
				public static getLayerType(param0: globalAndroid.view.View): number;
				public static setHasTransientState(param0: globalAndroid.view.View, param1: boolean): void;
				public static getScrollIndicators(param0: globalAndroid.view.View): number;
				public static startDragAndDrop(param0: globalAndroid.view.View, param1: globalAndroid.content.ClipData, param2: globalAndroid.view.View.DragShadowBuilder, param3: any, param4: number): boolean;
				public static cancelDragAndDrop(param0: globalAndroid.view.View): void;
				public static setTranslationZ(param0: globalAndroid.view.View, param1: number): void;
				public static restoreDefaultFocus(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static getScaleX(param0: globalAndroid.view.View): number;
				public static getImportantForAutofill(param0: globalAndroid.view.View): number;
				public static setTransitionName(param0: globalAndroid.view.View, param1: string): void;
				public static dispatchNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: native.Array<number>, param5: number): boolean;
				public static dispatchApplyWindowInsets(param0: globalAndroid.view.View, param1: androidx.core.view.WindowInsetsCompat): androidx.core.view.WindowInsetsCompat;
				/** @deprecated */
				public static jumpDrawablesToCurrentState(param0: globalAndroid.view.View): void;
				public static updateDragShadow(param0: globalAndroid.view.View, param1: globalAndroid.view.View.DragShadowBuilder): void;
				public static getBackgroundTintList(param0: globalAndroid.view.View): globalAndroid.content.res.ColorStateList;
				/** @deprecated */
				public static resolveSizeAndState(param0: number, param1: number, param2: number): number;
				public static getMinimumHeight(param0: globalAndroid.view.View): number;
				public static setElevation(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static getPivotX(param0: globalAndroid.view.View): number;
				public static setTooltipText(param0: globalAndroid.view.View, param1: string): void;
				public static setZ(param0: globalAndroid.view.View, param1: number): void;
				public static setNextClusterForwardId(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static setPivotX(param0: globalAndroid.view.View, param1: number): void;
				public static stopNestedScroll(param0: globalAndroid.view.View): void;
				public static stopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static setRotationX(param0: globalAndroid.view.View, param1: number): void;
				public static getZ(param0: globalAndroid.view.View): number;
				public static isInLayout(param0: globalAndroid.view.View): boolean;
				public static setLayerPaint(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Paint): void;
				public static getImportantForAccessibility(param0: globalAndroid.view.View): number;
				/** @deprecated */
				public static getMatrix(param0: globalAndroid.view.View): globalAndroid.graphics.Matrix;
				public static removeOnUnhandledKeyEventListener(param0: globalAndroid.view.View, param1: androidx.core.view.ViewCompat.OnUnhandledKeyEventListenerCompat): void;
				public static postOnAnimationDelayed(param0: globalAndroid.view.View, param1: java.lang.Runnable, param2: number): void;
				public static generateViewId(): number;
				/** @deprecated */
				public static setTranslationX(param0: globalAndroid.view.View, param1: number): void;
				public static getLayoutDirection(param0: globalAndroid.view.View): number;
				/** @deprecated */
				public static getAlpha(param0: globalAndroid.view.View): number;
				/** @deprecated */
				public static setScaleX(param0: globalAndroid.view.View, param1: number): void;
				public static setClipBounds(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
				public static requestApplyInsets(param0: globalAndroid.view.View): void;
				public static dispatchFinishTemporaryDetach(param0: globalAndroid.view.View): void;
				public static onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				/** @deprecated */
				public static setChildrenDrawingOrderEnabled(param0: globalAndroid.view.ViewGroup, param1: boolean): void;
				public static setKeyboardNavigationCluster(param0: globalAndroid.view.View, param1: boolean): void;
				public static animate(param0: globalAndroid.view.View): androidx.core.view.ViewPropertyAnimatorCompat;
				public static postInvalidateOnAnimation(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public static getX(param0: globalAndroid.view.View): number;
				public static dispatchNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public static hasExplicitFocusable(param0: globalAndroid.view.View): boolean;
				public static dispatchNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: native.Array<number>): boolean;
				public static offsetTopAndBottom(param0: globalAndroid.view.View, param1: number): void;
				public static getTransitionName(param0: globalAndroid.view.View): string;
				/** @deprecated */
				public static getY(param0: globalAndroid.view.View): number;
				public static isLayoutDirectionResolved(param0: globalAndroid.view.View): boolean;
				public static getAccessibilityNodeProvider(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeProviderCompat;
				public static getPaddingEnd(param0: globalAndroid.view.View): number;
				public static dispatchNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public static setOnApplyWindowInsetsListener(param0: globalAndroid.view.View, param1: androidx.core.view.OnApplyWindowInsetsListener): void;
				public static setScrollIndicators(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static getMeasuredHeightAndState(param0: globalAndroid.view.View): number;
				public static hasNestedScrollingParent(param0: globalAndroid.view.View): boolean;
				public static setScrollIndicators(param0: globalAndroid.view.View, param1: number, param2: number): void;
				public static hasTransientState(param0: globalAndroid.view.View): boolean;
				public static onApplyWindowInsets(param0: globalAndroid.view.View, param1: androidx.core.view.WindowInsetsCompat): androidx.core.view.WindowInsetsCompat;
				public static getPaddingStart(param0: globalAndroid.view.View): number;
				public static isLaidOut(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static isOpaque(param0: globalAndroid.view.View): boolean;
				public static addOnUnhandledKeyEventListener(param0: globalAndroid.view.View, param1: androidx.core.view.ViewCompat.OnUnhandledKeyEventListenerCompat): void;
				public constructor();
				public static setNestedScrollingEnabled(param0: globalAndroid.view.View, param1: boolean): void;
				/** @deprecated */
				public static getMeasuredWidthAndState(param0: globalAndroid.view.View): number;
				public static getNextClusterForwardId(param0: globalAndroid.view.View): number;
				public static getElevation(param0: globalAndroid.view.View): number;
				public static setImportantForAutofill(param0: globalAndroid.view.View, param1: number): void;
				public static setFocusedByDefault(param0: globalAndroid.view.View, param1: boolean): void;
				public static isImportantForAutofill(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static setSaveFromParentEnabled(param0: globalAndroid.view.View, param1: boolean): void;
				public static isNestedScrollingEnabled(param0: globalAndroid.view.View): boolean;
				public static getTranslationZ(param0: globalAndroid.view.View): number;
				public static hasOnClickListeners(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static getScaleY(param0: globalAndroid.view.View): number;
				public static getWindowSystemUiVisibility(param0: globalAndroid.view.View): number;
				public static startNestedScroll(param0: globalAndroid.view.View, param1: number): boolean;
				/** @deprecated */
				public static getOverScrollMode(param0: globalAndroid.view.View): number;
				/** @deprecated */
				public static setRotationY(param0: globalAndroid.view.View, param1: number): void;
				public static isFocusedByDefault(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static setPivotY(param0: globalAndroid.view.View, param1: number): void;
				public static setBackground(param0: globalAndroid.view.View, param1: globalAndroid.graphics.drawable.Drawable): void;
				/** @deprecated */
				public static getPivotY(param0: globalAndroid.view.View): number;
				public static postOnAnimation(param0: globalAndroid.view.View, param1: java.lang.Runnable): void;
				public static performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				/** @deprecated */
				public static combineMeasuredStates(param0: number, param1: number): number;
				/** @deprecated */
				public static canScrollHorizontally(param0: globalAndroid.view.View, param1: number): boolean;
				public static dispatchNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: native.Array<number>): boolean;
				public static isAttachedToWindow(param0: globalAndroid.view.View): boolean;
				public static setAccessibilityLiveRegion(param0: globalAndroid.view.View, param1: number): void;
				public static dispatchNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: native.Array<number>, param6: number): boolean;
				/** @deprecated */
				public static setX(param0: globalAndroid.view.View, param1: number): void;
				public static setAccessibilityDelegate(param0: globalAndroid.view.View, param1: androidx.core.view.AccessibilityDelegateCompat): void;
				public static getClipBounds(param0: globalAndroid.view.View): globalAndroid.graphics.Rect;
				/** @deprecated */
				public static getRotationY(param0: globalAndroid.view.View): number;
				public static getParentForAccessibility(param0: globalAndroid.view.View): globalAndroid.view.ViewParent;
				/** @deprecated */
				public static getRotationX(param0: globalAndroid.view.View): number;
				public static addKeyboardNavigationClusters(param0: globalAndroid.view.View, param1: java.util.Collection<globalAndroid.view.View>, param2: number): void;
				/** @deprecated */
				public static getRotation(param0: globalAndroid.view.View): number;
				public static getAccessibilityLiveRegion(param0: globalAndroid.view.View): number;
				/** @deprecated */
				public static getTranslationX(param0: globalAndroid.view.View): number;
				public static getDisplay(param0: globalAndroid.view.View): globalAndroid.view.Display;
				/** @deprecated */
				public static getTranslationY(param0: globalAndroid.view.View): number;
				public static postInvalidateOnAnimation(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				/** @deprecated */
				public static setAlpha(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static setScaleY(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public static getLabelFor(param0: globalAndroid.view.View): number;
				public static dispatchStartTemporaryDetach(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public static setTranslationY(param0: globalAndroid.view.View, param1: number): void;
				public static keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): globalAndroid.view.View;
				/** @deprecated */
				public static canScrollVertically(param0: globalAndroid.view.View, param1: number): boolean;
				public static getFitsSystemWindows(param0: globalAndroid.view.View): boolean;
				public static requireViewById(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
				public static isPaddingRelative(param0: globalAndroid.view.View): boolean;
				public static hasAccessibilityDelegate(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static setLayerType(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.graphics.Paint): void;
				public static getBackgroundTintMode(param0: globalAndroid.view.View): globalAndroid.graphics.PorterDuff.Mode;
				public static isImportantForAccessibility(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public static setOverScrollMode(param0: globalAndroid.view.View, param1: number): void;
				/** @deprecated */
				public static onPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public static setPaddingRelative(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				/** @deprecated */
				public static setRotation(param0: globalAndroid.view.View, param1: number): void;
				public static setLayoutDirection(param0: globalAndroid.view.View, param1: number): void;
				public static setAutofillHints(param0: globalAndroid.view.View, param1: native.Array<string>): void;
				/** @deprecated */
				public static setFitsSystemWindows(param0: globalAndroid.view.View, param1: boolean): void;
			}
			export module ViewCompat {
				export class FocusDirection {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.FocusDirection>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$FocusDirection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class FocusRealDirection {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.FocusRealDirection>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$FocusRealDirection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class FocusRelativeDirection {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.FocusRelativeDirection>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$FocusRelativeDirection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class NestedScrollType {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.NestedScrollType>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$NestedScrollType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class OnUnhandledKeyEventListenerCompat {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.OnUnhandledKeyEventListenerCompat>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onUnhandledKeyEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.KeyEvent): boolean });
					public constructor();
					public onUnhandledKeyEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.KeyEvent): boolean;
				}
				export class OnUnhandledKeyEventListenerWrapper {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.OnUnhandledKeyEventListenerWrapper>;
					public onUnhandledKeyEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.KeyEvent): boolean;
				}
				export class ScrollAxis {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.ScrollAxis>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$ScrollAxis interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class ScrollIndicators {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.ScrollIndicators>;
					/**
					 * Constructs a new instance of the androidx.core.view.ViewCompat$ScrollIndicators interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class UnhandledKeyEventManager {
					public static class: java.lang.Class<androidx.core.view.ViewCompat.UnhandledKeyEventManager>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewConfigurationCompat {
				public static class: java.lang.Class<androidx.core.view.ViewConfigurationCompat>;
				/** @deprecated */
				public static getScaledPagingTouchSlop(param0: globalAndroid.view.ViewConfiguration): number;
				public static shouldShowMenuShortcutsWhenKeyboardPresent(param0: globalAndroid.view.ViewConfiguration, param1: globalAndroid.content.Context): boolean;
				public static getScaledHorizontalScrollFactor(param0: globalAndroid.view.ViewConfiguration, param1: globalAndroid.content.Context): number;
				/** @deprecated */
				public static hasPermanentMenuKey(param0: globalAndroid.view.ViewConfiguration): boolean;
				public static getScaledVerticalScrollFactor(param0: globalAndroid.view.ViewConfiguration, param1: globalAndroid.content.Context): number;
				public static getScaledHoverSlop(param0: globalAndroid.view.ViewConfiguration): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewGroupCompat {
				public static class: java.lang.Class<androidx.core.view.ViewGroupCompat>;
				public static LAYOUT_MODE_CLIP_BOUNDS: number;
				public static LAYOUT_MODE_OPTICAL_BOUNDS: number;
				public static isTransitionGroup(param0: globalAndroid.view.ViewGroup): boolean;
				/** @deprecated */
				public static onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public static getNestedScrollAxes(param0: globalAndroid.view.ViewGroup): number;
				public static getLayoutMode(param0: globalAndroid.view.ViewGroup): number;
				public static setTransitionGroup(param0: globalAndroid.view.ViewGroup, param1: boolean): void;
				public static setLayoutMode(param0: globalAndroid.view.ViewGroup, param1: number): void;
				/** @deprecated */
				public static setMotionEventSplittingEnabled(param0: globalAndroid.view.ViewGroup, param1: boolean): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewParentCompat {
				public static class: java.lang.Class<androidx.core.view.ViewParentCompat>;
				public static onStopNestedScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number): void;
				public static onStopNestedScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View): void;
				public static onNestedPreScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number, param3: number, param4: native.Array<number>, param5: number): void;
				public static onNestedPreFling(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
				public static onNestedScrollAccepted(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: number): void;
				public static onNestedPreScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number, param3: number, param4: native.Array<number>): void;
				public static onNestedScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number, param3: number, param4: number, param5: number, param6: number): void;
				public static onStartNestedScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: number): boolean;
				public static onNestedScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number, param3: number, param4: number, param5: number): void;
				/** @deprecated */
				public static requestSendAccessibilityEvent(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public static onNestedScrollAccepted(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: number, param4: number): void;
				public static onStartNestedScroll(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: number, param4: number): boolean;
				public static notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: number): void;
				public static onNestedFling(param0: globalAndroid.view.ViewParent, param1: globalAndroid.view.View, param2: number, param3: number, param4: boolean): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewPropertyAnimatorCompat {
				public static class: java.lang.Class<androidx.core.view.ViewPropertyAnimatorCompat>;
				public x(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public rotationY(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setDuration(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public getDuration(): number;
				public rotationBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public xBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public translationYBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public translationZBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setInterpolator(param0: globalAndroid.view.animation.Interpolator): androidx.core.view.ViewPropertyAnimatorCompat;
				public rotationX(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public translationXBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setStartDelay(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public withLayer(): androidx.core.view.ViewPropertyAnimatorCompat;
				public start(): void;
				public yBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public setListener(param0: androidx.core.view.ViewPropertyAnimatorListener): androidx.core.view.ViewPropertyAnimatorCompat;
				public withEndAction(param0: java.lang.Runnable): androidx.core.view.ViewPropertyAnimatorCompat;
				public cancel(): void;
				public zBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public scaleX(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public scaleY(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public rotationXBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public rotationYBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public y(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public z(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public withStartAction(param0: java.lang.Runnable): androidx.core.view.ViewPropertyAnimatorCompat;
				public scaleYBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public translationZ(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public translationX(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public translationY(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public scaleXBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public alpha(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public getStartDelay(): number;
				public alphaBy(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public rotation(param0: number): androidx.core.view.ViewPropertyAnimatorCompat;
				public getInterpolator(): globalAndroid.view.animation.Interpolator;
				public setUpdateListener(param0: androidx.core.view.ViewPropertyAnimatorUpdateListener): androidx.core.view.ViewPropertyAnimatorCompat;
			}
			export module ViewPropertyAnimatorCompat {
				export class ViewPropertyAnimatorListenerApi14 extends androidx.core.view.ViewPropertyAnimatorListener {
					public static class: java.lang.Class<androidx.core.view.ViewPropertyAnimatorCompat.ViewPropertyAnimatorListenerApi14>;
					public onAnimationCancel(param0: globalAndroid.view.View): void;
					public onAnimationStart(param0: globalAndroid.view.View): void;
					public onAnimationEnd(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewPropertyAnimatorListener {
				public static class: java.lang.Class<androidx.core.view.ViewPropertyAnimatorListener>;
				/**
				 * Constructs a new instance of the androidx.core.view.ViewPropertyAnimatorListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onAnimationStart(param0: globalAndroid.view.View): void; onAnimationEnd(param0: globalAndroid.view.View): void; onAnimationCancel(param0: globalAndroid.view.View): void });
				public constructor();
				public onAnimationCancel(param0: globalAndroid.view.View): void;
				public onAnimationEnd(param0: globalAndroid.view.View): void;
				public onAnimationStart(param0: globalAndroid.view.View): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewPropertyAnimatorListenerAdapter extends androidx.core.view.ViewPropertyAnimatorListener {
				public static class: java.lang.Class<androidx.core.view.ViewPropertyAnimatorListenerAdapter>;
				public onAnimationCancel(param0: globalAndroid.view.View): void;
				public onAnimationEnd(param0: globalAndroid.view.View): void;
				public onAnimationStart(param0: globalAndroid.view.View): void;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class ViewPropertyAnimatorUpdateListener {
				public static class: java.lang.Class<androidx.core.view.ViewPropertyAnimatorUpdateListener>;
				/**
				 * Constructs a new instance of the androidx.core.view.ViewPropertyAnimatorUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onAnimationUpdate(param0: globalAndroid.view.View): void });
				public constructor();
				public onAnimationUpdate(param0: globalAndroid.view.View): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class WindowCompat {
				public static class: java.lang.Class<androidx.core.view.WindowCompat>;
				public static FEATURE_ACTION_BAR: number;
				public static FEATURE_ACTION_BAR_OVERLAY: number;
				public static FEATURE_ACTION_MODE_OVERLAY: number;
				public static requireViewById(param0: globalAndroid.view.Window, param1: number): globalAndroid.view.View;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export class WindowInsetsCompat {
				public static class: java.lang.Class<androidx.core.view.WindowInsetsCompat>;
				public getSystemWindowInsetRight(): number;
				public replaceSystemWindowInsets(param0: number, param1: number, param2: number, param3: number): androidx.core.view.WindowInsetsCompat;
				public constructor(param0: androidx.core.view.WindowInsetsCompat);
				public hasStableInsets(): boolean;
				public consumeSystemWindowInsets(): androidx.core.view.WindowInsetsCompat;
				public isConsumed(): boolean;
				public isRound(): boolean;
				public consumeStableInsets(): androidx.core.view.WindowInsetsCompat;
				public getDisplayCutout(): androidx.core.view.DisplayCutoutCompat;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public getStableInsetLeft(): number;
				public getSystemWindowInsetTop(): number;
				public getStableInsetTop(): number;
				public getStableInsetRight(): number;
				public getSystemWindowInsetLeft(): number;
				public getSystemWindowInsetBottom(): number;
				public hasSystemWindowInsets(): boolean;
				public replaceSystemWindowInsets(param0: globalAndroid.graphics.Rect): androidx.core.view.WindowInsetsCompat;
				public getStableInsetBottom(): number;
				public hasInsets(): boolean;
				public consumeDisplayCutout(): androidx.core.view.WindowInsetsCompat;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module accessibility {
				export class AccessibilityEventCompat {
					public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityEventCompat>;
					public static TYPE_VIEW_HOVER_ENTER: number;
					public static TYPE_VIEW_HOVER_EXIT: number;
					public static TYPE_TOUCH_EXPLORATION_GESTURE_START: number;
					public static TYPE_TOUCH_EXPLORATION_GESTURE_END: number;
					public static TYPE_WINDOW_CONTENT_CHANGED: number;
					public static TYPE_VIEW_SCROLLED: number;
					public static TYPE_VIEW_TEXT_SELECTION_CHANGED: number;
					public static TYPE_ANNOUNCEMENT: number;
					public static TYPE_VIEW_ACCESSIBILITY_FOCUSED: number;
					public static TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED: number;
					public static TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY: number;
					public static TYPE_GESTURE_DETECTION_START: number;
					public static TYPE_GESTURE_DETECTION_END: number;
					public static TYPE_TOUCH_INTERACTION_START: number;
					public static TYPE_TOUCH_INTERACTION_END: number;
					public static TYPE_WINDOWS_CHANGED: number;
					public static TYPE_VIEW_CONTEXT_CLICKED: number;
					public static TYPE_ASSIST_READING_CONTEXT: number;
					public static CONTENT_CHANGE_TYPE_UNDEFINED: number;
					public static CONTENT_CHANGE_TYPE_SUBTREE: number;
					public static CONTENT_CHANGE_TYPE_TEXT: number;
					public static CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION: number;
					public static TYPES_ALL_MASK: number;
					public static getContentChangeTypes(param0: globalAndroid.view.accessibility.AccessibilityEvent): number;
					public static getAction(param0: globalAndroid.view.accessibility.AccessibilityEvent): number;
					/** @deprecated */
					public static getRecord(param0: globalAndroid.view.accessibility.AccessibilityEvent, param1: number): androidx.core.view.accessibility.AccessibilityRecordCompat;
					/** @deprecated */
					public static appendRecord(param0: globalAndroid.view.accessibility.AccessibilityEvent, param1: androidx.core.view.accessibility.AccessibilityRecordCompat): void;
					public static setMovementGranularity(param0: globalAndroid.view.accessibility.AccessibilityEvent, param1: number): void;
					public static setContentChangeTypes(param0: globalAndroid.view.accessibility.AccessibilityEvent, param1: number): void;
					public static getMovementGranularity(param0: globalAndroid.view.accessibility.AccessibilityEvent): number;
					/** @deprecated */
					public static getRecordCount(param0: globalAndroid.view.accessibility.AccessibilityEvent): number;
					/** @deprecated */
					public static asRecord(param0: globalAndroid.view.accessibility.AccessibilityEvent): androidx.core.view.accessibility.AccessibilityRecordCompat;
					public static setAction(param0: globalAndroid.view.accessibility.AccessibilityEvent, param1: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module accessibility {
				export class AccessibilityManagerCompat {
					public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityManagerCompat>;
					/** @deprecated */
					public static removeAccessibilityStateChangeListener(param0: globalAndroid.view.accessibility.AccessibilityManager, param1: androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener): boolean;
					/** @deprecated */
					public static addAccessibilityStateChangeListener(param0: globalAndroid.view.accessibility.AccessibilityManager, param1: androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener): boolean;
					public static removeTouchExplorationStateChangeListener(param0: globalAndroid.view.accessibility.AccessibilityManager, param1: androidx.core.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListener): boolean;
					/** @deprecated */
					public static isTouchExplorationEnabled(param0: globalAndroid.view.accessibility.AccessibilityManager): boolean;
					public static addTouchExplorationStateChangeListener(param0: globalAndroid.view.accessibility.AccessibilityManager, param1: androidx.core.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListener): boolean;
					/** @deprecated */
					public static getEnabledAccessibilityServiceList(param0: globalAndroid.view.accessibility.AccessibilityManager, param1: number): java.util.List<globalAndroid.accessibilityservice.AccessibilityServiceInfo>;
					/** @deprecated */
					public static getInstalledAccessibilityServiceList(param0: globalAndroid.view.accessibility.AccessibilityManager): java.util.List<globalAndroid.accessibilityservice.AccessibilityServiceInfo>;
				}
				export module AccessibilityManagerCompat {
					export class AccessibilityStateChangeListener {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener>;
						/**
						 * Constructs a new instance of the androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onAccessibilityStateChanged(param0: boolean): void });
						public constructor();
						/** @deprecated */
						public onAccessibilityStateChanged(param0: boolean): void;
					}
					export abstract class AccessibilityStateChangeListenerCompat extends androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat>;
						public constructor();
						/** @deprecated */
						public onAccessibilityStateChanged(param0: boolean): void;
					}
					export class AccessibilityStateChangeListenerWrapper {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerWrapper>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public onAccessibilityStateChanged(param0: boolean): void;
					}
					export class TouchExplorationStateChangeListener {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListener>;
						/**
						 * Constructs a new instance of the androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onTouchExplorationStateChanged(param0: boolean): void });
						public constructor();
						public onTouchExplorationStateChanged(param0: boolean): void;
					}
					export class TouchExplorationStateChangeListenerWrapper {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListenerWrapper>;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public onTouchExplorationStateChanged(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module accessibility {
				export class AccessibilityNodeInfoCompat {
					public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeInfoCompat>;
					public mParentVirtualDescendantId: number;
					public static ACTION_FOCUS: number;
					public static ACTION_CLEAR_FOCUS: number;
					public static ACTION_SELECT: number;
					public static ACTION_CLEAR_SELECTION: number;
					public static ACTION_CLICK: number;
					public static ACTION_LONG_CLICK: number;
					public static ACTION_ACCESSIBILITY_FOCUS: number;
					public static ACTION_CLEAR_ACCESSIBILITY_FOCUS: number;
					public static ACTION_NEXT_AT_MOVEMENT_GRANULARITY: number;
					public static ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY: number;
					public static ACTION_NEXT_HTML_ELEMENT: number;
					public static ACTION_PREVIOUS_HTML_ELEMENT: number;
					public static ACTION_SCROLL_FORWARD: number;
					public static ACTION_SCROLL_BACKWARD: number;
					public static ACTION_COPY: number;
					public static ACTION_PASTE: number;
					public static ACTION_CUT: number;
					public static ACTION_SET_SELECTION: number;
					public static ACTION_EXPAND: number;
					public static ACTION_COLLAPSE: number;
					public static ACTION_DISMISS: number;
					public static ACTION_SET_TEXT: number;
					public static ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT: string;
					public static ACTION_ARGUMENT_HTML_ELEMENT_STRING: string;
					public static ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN: string;
					public static ACTION_ARGUMENT_SELECTION_START_INT: string;
					public static ACTION_ARGUMENT_SELECTION_END_INT: string;
					public static ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE: string;
					public static ACTION_ARGUMENT_ROW_INT: string;
					public static ACTION_ARGUMENT_COLUMN_INT: string;
					public static ACTION_ARGUMENT_PROGRESS_VALUE: string;
					public static ACTION_ARGUMENT_MOVE_WINDOW_X: string;
					public static ACTION_ARGUMENT_MOVE_WINDOW_Y: string;
					public static FOCUS_INPUT: number;
					public static FOCUS_ACCESSIBILITY: number;
					public static MOVEMENT_GRANULARITY_CHARACTER: number;
					public static MOVEMENT_GRANULARITY_WORD: number;
					public static MOVEMENT_GRANULARITY_LINE: number;
					public static MOVEMENT_GRANULARITY_PARAGRAPH: number;
					public static MOVEMENT_GRANULARITY_PAGE: number;
					public findFocus(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public recycle(): void;
					public setHintText(param0: string): void;
					public isFocusable(): boolean;
					public setTraversalBefore(param0: globalAndroid.view.View): void;
					public getParent(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public isClickable(): boolean;
					public getContentDescription(): string;
					public setContentInvalid(param0: boolean): void;
					public setPaneTitle(param0: string): void;
					public setEditable(param0: boolean): void;
					public findAccessibilityNodeInfosByText(param0: string): java.util.List<androidx.core.view.accessibility.AccessibilityNodeInfoCompat>;
					public setSelected(param0: boolean): void;
					public setText(param0: string): void;
					public setCheckable(param0: boolean): void;
					public setLongClickable(param0: boolean): void;
					public static obtain(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public isVisibleToUser(): boolean;
					public isHeading(): boolean;
					public setBoundsInScreen(param0: globalAndroid.graphics.Rect): void;
					public setChecked(param0: boolean): void;
					public setParent(param0: globalAndroid.view.View): void;
					public setLiveRegion(param0: number): void;
					public setVisibleToUser(param0: boolean): void;
					public getLabeledBy(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public getLabelFor(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public setClickable(param0: boolean): void;
					public getTextSelectionStart(): number;
					public removeAction(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat): boolean;
					public setCollectionInfo(param0: any): void;
					public getTraversalBefore(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public setSource(param0: globalAndroid.view.View): void;
					public isSelected(): boolean;
					public setBoundsInParent(param0: globalAndroid.graphics.Rect): void;
					public setContentDescription(param0: string): void;
					public getPackageName(): string;
					public setMovementGranularities(param0: number): void;
					public findAccessibilityNodeInfosByViewId(param0: string): java.util.List<androidx.core.view.accessibility.AccessibilityNodeInfoCompat>;
					public static obtain(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public getViewIdResourceName(): string;
					public setTraversalBefore(param0: globalAndroid.view.View, param1: number): void;
					public setDismissable(param0: boolean): void;
					public getDrawingOrder(): number;
					public getWindow(): androidx.core.view.accessibility.AccessibilityWindowInfoCompat;
					public setLabelFor(param0: globalAndroid.view.View, param1: number): void;
					public addAction(param0: number): void;
					public isCheckable(): boolean;
					public removeChild(param0: globalAndroid.view.View, param1: number): boolean;
					public hashCode(): number;
					public isChecked(): boolean;
					public getActionList(): java.util.List<androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat>;
					public getBoundsInScreen(param0: globalAndroid.graphics.Rect): void;
					public isImportantForAccessibility(): boolean;
					public setClassName(param0: string): void;
					public refresh(): boolean;
					public getMaxTextLength(): number;
					public setShowingHintText(param0: boolean): void;
					public setContextClickable(param0: boolean): void;
					public addChild(param0: globalAndroid.view.View): void;
					public setCanOpenPopup(param0: boolean): void;
					public getPaneTitle(): string;
					public isMultiLine(): boolean;
					public setError(param0: string): void;
					public canOpenPopup(): boolean;
					public getActions(): number;
					public isScrollable(): boolean;
					public getCollectionItemInfo(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat;
					public getTraversalAfter(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public setLabeledBy(param0: globalAndroid.view.View): void;
					public getChildCount(): number;
					public getLiveRegion(): number;
					public setRangeInfo(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat): void;
					public getMovementGranularities(): number;
					public getCollectionInfo(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat;
					public isContextClickable(): boolean;
					public setHeading(param0: boolean): void;
					public isEnabled(): boolean;
					public isScreenReaderFocusable(): boolean;
					public setEnabled(param0: boolean): void;
					public setPackageName(param0: string): void;
					public setScrollable(param0: boolean): void;
					public getText(): string;
					/** @deprecated */
					public getInfo(): any;
					public setScreenReaderFocusable(param0: boolean): void;
					public setPassword(param0: boolean): void;
					public setRoleDescription(param0: string): void;
					public setTextSelection(param0: number, param1: number): void;
					public isDismissable(): boolean;
					public setMultiLine(param0: boolean): void;
					public removeChild(param0: globalAndroid.view.View): boolean;
					public setInputType(param0: number): void;
					public getError(): string;
					public addChild(param0: globalAndroid.view.View, param1: number): void;
					public isContentInvalid(): boolean;
					public getTooltipText(): string;
					public setAccessibilityFocused(param0: boolean): void;
					public isEditable(): boolean;
					public getBoundsInParent(param0: globalAndroid.graphics.Rect): void;
					public getRoleDescription(): string;
					public static wrap(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public isFocused(): boolean;
					public isPassword(): boolean;
					public setTraversalAfter(param0: globalAndroid.view.View): void;
					public setTooltipText(param0: string): void;
					/** @deprecated */
					public constructor(param0: any);
					public getTextSelectionEnd(): number;
					public setImportantForAccessibility(param0: boolean): void;
					public setDrawingOrder(param0: number): void;
					public unwrap(): globalAndroid.view.accessibility.AccessibilityNodeInfo;
					public setParent(param0: globalAndroid.view.View, param1: number): void;
					public toString(): string;
					public getClassName(): string;
					public getExtras(): globalAndroid.os.Bundle;
					public setSource(param0: globalAndroid.view.View, param1: number): void;
					public setTraversalAfter(param0: globalAndroid.view.View, param1: number): void;
					public performAction(param0: number): boolean;
					public getHintText(): string;
					public setMaxTextLength(param0: number): void;
					public setFocusable(param0: boolean): void;
					public isAccessibilityFocused(): boolean;
					public static obtain(param0: globalAndroid.view.View, param1: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public performAction(param0: number, param1: globalAndroid.os.Bundle): boolean;
					public setLabeledBy(param0: globalAndroid.view.View, param1: number): void;
					public focusSearch(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public getRangeInfo(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat;
					public static obtain(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public setViewIdResourceName(param0: string): void;
					public setLabelFor(param0: globalAndroid.view.View): void;
					public equals(param0: any): boolean;
					public isLongClickable(): boolean;
					public getWindowId(): number;
					public getChild(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public setCollectionItemInfo(param0: any): void;
					public isShowingHintText(): boolean;
					public setFocused(param0: boolean): void;
					public getInputType(): number;
					public addAction(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat): void;
				}
				export module AccessibilityNodeInfoCompat {
					export class AccessibilityActionCompat {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat>;
						public static ACTION_FOCUS: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_CLEAR_FOCUS: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SELECT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_CLEAR_SELECTION: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_CLICK: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_LONG_CLICK: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_ACCESSIBILITY_FOCUS: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_CLEAR_ACCESSIBILITY_FOCUS: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_NEXT_AT_MOVEMENT_GRANULARITY: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_NEXT_HTML_ELEMENT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_PREVIOUS_HTML_ELEMENT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_FORWARD: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_BACKWARD: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_COPY: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_PASTE: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_CUT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SET_SELECTION: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_EXPAND: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_COLLAPSE: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_DISMISS: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SET_TEXT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SHOW_ON_SCREEN: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_TO_POSITION: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_UP: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_LEFT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_DOWN: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SCROLL_RIGHT: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_CONTEXT_CLICK: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SET_PROGRESS: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_MOVE_WINDOW: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_SHOW_TOOLTIP: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public static ACTION_HIDE_TOOLTIP: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
						public constructor(param0: number, param1: string);
						public getLabel(): string;
						public getId(): number;
					}
					export class CollectionInfoCompat {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat>;
						public static SELECTION_MODE_NONE: number;
						public static SELECTION_MODE_SINGLE: number;
						public static SELECTION_MODE_MULTIPLE: number;
						public static obtain(param0: number, param1: number, param2: boolean, param3: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat;
						public static obtain(param0: number, param1: number, param2: boolean): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat;
						public getRowCount(): number;
						public isHierarchical(): boolean;
						public getSelectionMode(): number;
						public getColumnCount(): number;
					}
					export class CollectionItemInfoCompat {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat>;
						public static obtain(param0: number, param1: number, param2: number, param3: number, param4: boolean): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat;
						public getColumnSpan(): number;
						public static obtain(param0: number, param1: number, param2: number, param3: number, param4: boolean, param5: boolean): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat;
						public isSelected(): boolean;
						public getRowIndex(): number;
						public getColumnIndex(): number;
						public getRowSpan(): number;
						/** @deprecated */
						public isHeading(): boolean;
					}
					export class RangeInfoCompat {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat>;
						public static RANGE_TYPE_INT: number;
						public static RANGE_TYPE_FLOAT: number;
						public static RANGE_TYPE_PERCENT: number;
						public getMin(): number;
						public getCurrent(): number;
						public getType(): number;
						public static obtain(param0: number, param1: number, param2: number, param3: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat;
						public getMax(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module accessibility {
				export class AccessibilityNodeProviderCompat {
					public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeProviderCompat>;
					public static HOST_VIEW_ID: number;
					public performAction(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
					public findFocus(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public constructor();
					public findAccessibilityNodeInfosByText(param0: string, param1: number): java.util.List<androidx.core.view.accessibility.AccessibilityNodeInfoCompat>;
					public getProvider(): any;
					public constructor(param0: any);
					public createAccessibilityNodeInfo(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
				}
				export module AccessibilityNodeProviderCompat {
					export class AccessibilityNodeProviderApi16 {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeProviderCompat.AccessibilityNodeProviderApi16>;
						public createAccessibilityNodeInfo(param0: number): globalAndroid.view.accessibility.AccessibilityNodeInfo;
						public performAction(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
						public findAccessibilityNodeInfosByText(param0: string, param1: number): java.util.List<globalAndroid.view.accessibility.AccessibilityNodeInfo>;
					}
					export class AccessibilityNodeProviderApi19 extends androidx.core.view.accessibility.AccessibilityNodeProviderCompat.AccessibilityNodeProviderApi16 {
						public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityNodeProviderCompat.AccessibilityNodeProviderApi19>;
						public findFocus(param0: number): globalAndroid.view.accessibility.AccessibilityNodeInfo;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module accessibility {
				export class AccessibilityRecordCompat {
					public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityRecordCompat>;
					/** @deprecated */
					public getFromIndex(): number;
					/** @deprecated */
					public getText(): java.util.List<string>;
					public static setMaxScrollX(param0: globalAndroid.view.accessibility.AccessibilityRecord, param1: number): void;
					/** @deprecated */
					public getClassName(): string;
					/** @deprecated */
					public getScrollY(): number;
					public static setMaxScrollY(param0: globalAndroid.view.accessibility.AccessibilityRecord, param1: number): void;
					/** @deprecated */
					public getParcelableData(): globalAndroid.os.Parcelable;
					/** @deprecated */
					public getItemCount(): number;
					/** @deprecated */
					public getAddedCount(): number;
					/** @deprecated */
					public setContentDescription(param0: string): void;
					/** @deprecated */
					public isChecked(): boolean;
					/** @deprecated */
					public setSource(param0: globalAndroid.view.View): void;
					/** @deprecated */
					public isScrollable(): boolean;
					/** @deprecated */
					public setFullScreen(param0: boolean): void;
					/** @deprecated */
					public hashCode(): number;
					/** @deprecated */
					public isPassword(): boolean;
					/** @deprecated */
					public isFullScreen(): boolean;
					/** @deprecated */
					public setMaxScrollX(param0: number): void;
					/** @deprecated */
					public static obtain(param0: androidx.core.view.accessibility.AccessibilityRecordCompat): androidx.core.view.accessibility.AccessibilityRecordCompat;
					/** @deprecated */
					public setScrollable(param0: boolean): void;
					/** @deprecated */
					public setSource(param0: globalAndroid.view.View, param1: number): void;
					/** @deprecated */
					public setScrollY(param0: number): void;
					public static setSource(param0: globalAndroid.view.accessibility.AccessibilityRecord, param1: globalAndroid.view.View, param2: number): void;
					/** @deprecated */
					public getRemovedCount(): number;
					/** @deprecated */
					public constructor(param0: any);
					/** @deprecated */
					public setRemovedCount(param0: number): void;
					/** @deprecated */
					public setBeforeText(param0: string): void;
					/** @deprecated */
					public setFromIndex(param0: number): void;
					/** @deprecated */
					public getMaxScrollY(): number;
					/** @deprecated */
					public getContentDescription(): string;
					/** @deprecated */
					public setCurrentItemIndex(param0: number): void;
					public static getMaxScrollX(param0: globalAndroid.view.accessibility.AccessibilityRecord): number;
					/** @deprecated */
					public getImpl(): any;
					/** @deprecated */
					public setMaxScrollY(param0: number): void;
					/** @deprecated */
					public static obtain(): androidx.core.view.accessibility.AccessibilityRecordCompat;
					/** @deprecated */
					public setPassword(param0: boolean): void;
					/** @deprecated */
					public setEnabled(param0: boolean): void;
					/** @deprecated */
					public getCurrentItemIndex(): number;
					/** @deprecated */
					public getWindowId(): number;
					/** @deprecated */
					public isEnabled(): boolean;
					/** @deprecated */
					public setToIndex(param0: number): void;
					/** @deprecated */
					public recycle(): void;
					/** @deprecated */
					public setParcelableData(param0: globalAndroid.os.Parcelable): void;
					/** @deprecated */
					public setChecked(param0: boolean): void;
					/** @deprecated */
					public getMaxScrollX(): number;
					public static getMaxScrollY(param0: globalAndroid.view.accessibility.AccessibilityRecord): number;
					/** @deprecated */
					public getSource(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					/** @deprecated */
					public setScrollX(param0: number): void;
					/** @deprecated */
					public setClassName(param0: string): void;
					/** @deprecated */
					public setAddedCount(param0: number): void;
					/** @deprecated */
					public getBeforeText(): string;
					/** @deprecated */
					public getToIndex(): number;
					/** @deprecated */
					public equals(param0: any): boolean;
					/** @deprecated */
					public setItemCount(param0: number): void;
					/** @deprecated */
					public getScrollX(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module accessibility {
				export class AccessibilityWindowInfoCompat {
					public static class: java.lang.Class<androidx.core.view.accessibility.AccessibilityWindowInfoCompat>;
					public static TYPE_APPLICATION: number;
					public static TYPE_INPUT_METHOD: number;
					public static TYPE_SYSTEM: number;
					public static TYPE_ACCESSIBILITY_OVERLAY: number;
					public static TYPE_SPLIT_SCREEN_DIVIDER: number;
					public getType(): number;
					public getBoundsInScreen(param0: globalAndroid.graphics.Rect): void;
					public getTitle(): string;
					public getChildCount(): number;
					public recycle(): void;
					public isFocused(): boolean;
					public getId(): number;
					public getRoot(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public getAnchor(): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public equals(param0: any): boolean;
					public isActive(): boolean;
					public toString(): string;
					public static obtain(param0: androidx.core.view.accessibility.AccessibilityWindowInfoCompat): androidx.core.view.accessibility.AccessibilityWindowInfoCompat;
					public getLayer(): number;
					public hashCode(): number;
					public getParent(): androidx.core.view.accessibility.AccessibilityWindowInfoCompat;
					public isAccessibilityFocused(): boolean;
					public static obtain(): androidx.core.view.accessibility.AccessibilityWindowInfoCompat;
					public getChild(param0: number): androidx.core.view.accessibility.AccessibilityWindowInfoCompat;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module animation {
				export class PathInterpolatorApi14 {
					public static class: java.lang.Class<androidx.core.view.animation.PathInterpolatorApi14>;
					public getInterpolation(param0: number): number;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module animation {
				export class PathInterpolatorCompat {
					public static class: java.lang.Class<androidx.core.view.animation.PathInterpolatorCompat>;
					public static create(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.animation.Interpolator;
					public static create(param0: number, param1: number): globalAndroid.view.animation.Interpolator;
					public static create(param0: globalAndroid.graphics.Path): globalAndroid.view.animation.Interpolator;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module inputmethod {
				export class EditorInfoCompat {
					public static class: java.lang.Class<androidx.core.view.inputmethod.EditorInfoCompat>;
					public static IME_FLAG_NO_PERSONALIZED_LEARNING: number;
					public static IME_FLAG_FORCE_ASCII: number;
					public static setContentMimeTypes(param0: globalAndroid.view.inputmethod.EditorInfo, param1: native.Array<string>): void;
					/** @deprecated */
					public constructor();
					public static getContentMimeTypes(param0: globalAndroid.view.inputmethod.EditorInfo): native.Array<string>;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module inputmethod {
				export class InputConnectionCompat {
					public static class: java.lang.Class<androidx.core.view.inputmethod.InputConnectionCompat>;
					public static INPUT_CONTENT_GRANT_READ_URI_PERMISSION: number;
					public static commitContent(param0: globalAndroid.view.inputmethod.InputConnection, param1: globalAndroid.view.inputmethod.EditorInfo, param2: androidx.core.view.inputmethod.InputContentInfoCompat, param3: number, param4: globalAndroid.os.Bundle): boolean;
					public static createWrapper(param0: globalAndroid.view.inputmethod.InputConnection, param1: globalAndroid.view.inputmethod.EditorInfo, param2: androidx.core.view.inputmethod.InputConnectionCompat.OnCommitContentListener): globalAndroid.view.inputmethod.InputConnection;
					/** @deprecated */
					public constructor();
				}
				export module InputConnectionCompat {
					export class OnCommitContentListener {
						public static class: java.lang.Class<androidx.core.view.inputmethod.InputConnectionCompat.OnCommitContentListener>;
						/**
						 * Constructs a new instance of the androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onCommitContent(param0: androidx.core.view.inputmethod.InputContentInfoCompat, param1: number, param2: globalAndroid.os.Bundle): boolean });
						public constructor();
						public onCommitContent(param0: androidx.core.view.inputmethod.InputContentInfoCompat, param1: number, param2: globalAndroid.os.Bundle): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module view {
			export module inputmethod {
				export class InputContentInfoCompat {
					public static class: java.lang.Class<androidx.core.view.inputmethod.InputContentInfoCompat>;
					public constructor(param0: globalAndroid.net.Uri, param1: globalAndroid.content.ClipDescription, param2: globalAndroid.net.Uri);
					public unwrap(): any;
					public getDescription(): globalAndroid.content.ClipDescription;
					public getContentUri(): globalAndroid.net.Uri;
					public requestPermission(): void;
					public getLinkUri(): globalAndroid.net.Uri;
					public releasePermission(): void;
					public static wrap(param0: any): androidx.core.view.inputmethod.InputContentInfoCompat;
				}
				export module InputContentInfoCompat {
					export class InputContentInfoCompatApi25Impl extends androidx.core.view.inputmethod.InputContentInfoCompat.InputContentInfoCompatImpl {
						public static class: java.lang.Class<androidx.core.view.inputmethod.InputContentInfoCompat.InputContentInfoCompatApi25Impl>;
						public getLinkUri(): globalAndroid.net.Uri;
						public getContentUri(): globalAndroid.net.Uri;
						public requestPermission(): void;
						public getInputContentInfo(): any;
						public getDescription(): globalAndroid.content.ClipDescription;
						public releasePermission(): void;
					}
					export class InputContentInfoCompatBaseImpl extends androidx.core.view.inputmethod.InputContentInfoCompat.InputContentInfoCompatImpl {
						public static class: java.lang.Class<androidx.core.view.inputmethod.InputContentInfoCompat.InputContentInfoCompatBaseImpl>;
						public getLinkUri(): globalAndroid.net.Uri;
						public getContentUri(): globalAndroid.net.Uri;
						public requestPermission(): void;
						public getInputContentInfo(): any;
						public getDescription(): globalAndroid.content.ClipDescription;
						public releasePermission(): void;
					}
					export class InputContentInfoCompatImpl {
						public static class: java.lang.Class<androidx.core.view.inputmethod.InputContentInfoCompat.InputContentInfoCompatImpl>;
						/**
						 * Constructs a new instance of the androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { getContentUri(): globalAndroid.net.Uri; getDescription(): globalAndroid.content.ClipDescription; getLinkUri(): globalAndroid.net.Uri; getInputContentInfo(): any; requestPermission(): void; releasePermission(): void });
						public constructor();
						public getLinkUri(): globalAndroid.net.Uri;
						public getContentUri(): globalAndroid.net.Uri;
						public requestPermission(): void;
						public getInputContentInfo(): any;
						public getDescription(): globalAndroid.content.ClipDescription;
						public releasePermission(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export abstract class AutoScrollHelper {
				public static class: java.lang.Class<androidx.core.widget.AutoScrollHelper>;
				public static RELATIVE_UNSPECIFIED: number;
				public static NO_MAX: number;
				public static NO_MIN: number;
				public static EDGE_TYPE_INSIDE: number;
				public static EDGE_TYPE_INSIDE_EXTEND: number;
				public static EDGE_TYPE_OUTSIDE: number;
				public setEnabled(param0: boolean): androidx.core.widget.AutoScrollHelper;
				public setMaximumVelocity(param0: number, param1: number): androidx.core.widget.AutoScrollHelper;
				public setMinimumVelocity(param0: number, param1: number): androidx.core.widget.AutoScrollHelper;
				public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
				public setRelativeEdges(param0: number, param1: number): androidx.core.widget.AutoScrollHelper;
				public setRampUpDuration(param0: number): androidx.core.widget.AutoScrollHelper;
				public setEdgeType(param0: number): androidx.core.widget.AutoScrollHelper;
				public canTargetScrollHorizontally(param0: number): boolean;
				public canTargetScrollVertically(param0: number): boolean;
				public setMaximumEdges(param0: number, param1: number): androidx.core.widget.AutoScrollHelper;
				public setExclusive(param0: boolean): androidx.core.widget.AutoScrollHelper;
				public scrollTargetBy(param0: number, param1: number): void;
				public setActivationDelay(param0: number): androidx.core.widget.AutoScrollHelper;
				public setRelativeVelocity(param0: number, param1: number): androidx.core.widget.AutoScrollHelper;
				public isEnabled(): boolean;
				public setRampDownDuration(param0: number): androidx.core.widget.AutoScrollHelper;
				public constructor(param0: globalAndroid.view.View);
				public isExclusive(): boolean;
			}
			export module AutoScrollHelper {
				export class ClampedScroller {
					public static class: java.lang.Class<androidx.core.widget.AutoScrollHelper.ClampedScroller>;
					public isFinished(): boolean;
					public setTargetVelocity(param0: number, param1: number): void;
					public getHorizontalDirection(): number;
					public getDeltaX(): number;
					public getDeltaY(): number;
					public requestStop(): void;
					public setRampDownDuration(param0: number): void;
					public getVerticalDirection(): number;
					public start(): void;
					public computeScrollDelta(): void;
					public setRampUpDuration(param0: number): void;
				}
				export class ScrollAnimationRunnable {
					public static class: java.lang.Class<androidx.core.widget.AutoScrollHelper.ScrollAnimationRunnable>;
					public run(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class AutoSizeableTextView {
				public static class: java.lang.Class<androidx.core.widget.AutoSizeableTextView>;
				/**
				 * Constructs a new instance of the androidx.core.widget.AutoSizeableTextView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setAutoSizeTextTypeWithDefaults(param0: number): void; setAutoSizeTextTypeUniformWithConfiguration(param0: number, param1: number, param2: number, param3: number): void; setAutoSizeTextTypeUniformWithPresetSizes(param0: native.Array<number>, param1: number): void; getAutoSizeTextType(): number; getAutoSizeStepGranularity(): number; getAutoSizeMinTextSize(): number; getAutoSizeMaxTextSize(): number; getAutoSizeTextAvailableSizes(): native.Array<number>; <clinit>(): void });
				public constructor();
				public static PLATFORM_SUPPORTS_AUTOSIZE: boolean;
				public setAutoSizeTextTypeWithDefaults(param0: number): void;
				public setAutoSizeTextTypeUniformWithConfiguration(param0: number, param1: number, param2: number, param3: number): void;
				public setAutoSizeTextTypeUniformWithPresetSizes(param0: native.Array<number>, param1: number): void;
				public getAutoSizeMaxTextSize(): number;
				public getAutoSizeTextAvailableSizes(): native.Array<number>;
				public getAutoSizeStepGranularity(): number;
				public getAutoSizeTextType(): number;
				public getAutoSizeMinTextSize(): number;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class CompoundButtonCompat {
				public static class: java.lang.Class<androidx.core.widget.CompoundButtonCompat>;
				public static setButtonTintList(param0: globalAndroid.widget.CompoundButton, param1: globalAndroid.content.res.ColorStateList): void;
				public static setButtonTintMode(param0: globalAndroid.widget.CompoundButton, param1: globalAndroid.graphics.PorterDuff.Mode): void;
				public static getButtonTintMode(param0: globalAndroid.widget.CompoundButton): globalAndroid.graphics.PorterDuff.Mode;
				public static getButtonDrawable(param0: globalAndroid.widget.CompoundButton): globalAndroid.graphics.drawable.Drawable;
				public static getButtonTintList(param0: globalAndroid.widget.CompoundButton): globalAndroid.content.res.ColorStateList;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class ContentLoadingProgressBar {
				public static class: java.lang.Class<androidx.core.widget.ContentLoadingProgressBar>;
				public hide(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public constructor(param0: globalAndroid.content.Context);
				public onDetachedFromWindow(): void;
				public onAttachedToWindow(): void;
				public show(): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class EdgeEffectCompat {
				public static class: java.lang.Class<androidx.core.widget.EdgeEffectCompat>;
				/** @deprecated */
				public onAbsorb(param0: number): boolean;
				/** @deprecated */
				public onRelease(): boolean;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context);
				/** @deprecated */
				public isFinished(): boolean;
				/** @deprecated */
				public setSize(param0: number, param1: number): void;
				/** @deprecated */
				public onPull(param0: number): boolean;
				public static onPull(param0: globalAndroid.widget.EdgeEffect, param1: number, param2: number): void;
				/** @deprecated */
				public onPull(param0: number, param1: number): boolean;
				/** @deprecated */
				public finish(): void;
				/** @deprecated */
				public draw(param0: globalAndroid.graphics.Canvas): boolean;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class ImageViewCompat {
				public static class: java.lang.Class<androidx.core.widget.ImageViewCompat>;
				public static getImageTintMode(param0: globalAndroid.widget.ImageView): globalAndroid.graphics.PorterDuff.Mode;
				public static setImageTintList(param0: globalAndroid.widget.ImageView, param1: globalAndroid.content.res.ColorStateList): void;
				public static getImageTintList(param0: globalAndroid.widget.ImageView): globalAndroid.content.res.ColorStateList;
				public static setImageTintMode(param0: globalAndroid.widget.ImageView, param1: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class ListPopupWindowCompat {
				public static class: java.lang.Class<androidx.core.widget.ListPopupWindowCompat>;
				public static createDragToOpenListener(param0: globalAndroid.widget.ListPopupWindow, param1: globalAndroid.view.View): globalAndroid.view.View.OnTouchListener;
				/** @deprecated */
				public static createDragToOpenListener(param0: any, param1: globalAndroid.view.View): globalAndroid.view.View.OnTouchListener;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class ListViewAutoScrollHelper extends androidx.core.widget.AutoScrollHelper {
				public static class: java.lang.Class<androidx.core.widget.ListViewAutoScrollHelper>;
				public constructor(param0: globalAndroid.widget.ListView);
				public canTargetScrollHorizontally(param0: number): boolean;
				public canTargetScrollVertically(param0: number): boolean;
				public scrollTargetBy(param0: number, param1: number): void;
				public constructor(param0: globalAndroid.view.View);
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class ListViewCompat {
				public static class: java.lang.Class<androidx.core.widget.ListViewCompat>;
				public static canScrollList(param0: globalAndroid.widget.ListView, param1: number): boolean;
				public static scrollListBy(param0: globalAndroid.widget.ListView, param1: number): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class NestedScrollView implements androidx.core.view.NestedScrollingParent2, androidx.core.view.NestedScrollingChild2, androidx.core.view.ScrollingView {
				public static class: java.lang.Class<androidx.core.widget.NestedScrollView>;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				public computeVerticalScrollOffset(): number;
				public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
				public onGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public pageScroll(param0: number): boolean;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public computeHorizontalScrollRange(): number;
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getTopFadingEdgeStrength(): number;
				public onOverScrolled(param0: number, param1: number, param2: boolean, param3: boolean): void;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public getNestedScrollAxes(): number;
				public fullScroll(param0: number): boolean;
				public computeScrollDeltaToGetChildRectOnScreen(param0: globalAndroid.graphics.Rect): number;
				public onRequestFocusInDescendants(param0: number, param1: globalAndroid.graphics.Rect): boolean;
				public stopNestedScroll(param0: number): void;
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public smoothScrollBy(param0: number, param1: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public smoothScrollTo(param0: number, param1: number): void;
				public setOnScrollChangeListener(param0: androidx.core.widget.NestedScrollView.OnScrollChangeListener): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public measureChildWithMargins(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public addView(param0: globalAndroid.view.View, param1: number): void;
				public getBottomFadingEdgeStrength(): number;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number): void;
				public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
				public computeHorizontalScrollExtent(): number;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
				public startNestedScroll(param0: number): boolean;
				public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
				public executeKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public computeVerticalScrollExtent(): number;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public computeVerticalScrollRange(): number;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public fling(param0: number): void;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
				public getMaxScrollAmount(): number;
				public arrowScroll(param0: number): boolean;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public setFillViewport(param0: boolean): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public startNestedScroll(param0: number, param1: number): boolean;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public computeHorizontalScrollOffset(): number;
				public setNestedScrollingEnabled(param0: boolean): void;
				public requestLayout(): void;
				public constructor(param0: globalAndroid.content.Context);
				public isSmoothScrollingEnabled(): boolean;
				public dispatchNestedPreFling(param0: number, param1: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: number): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: number): boolean;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public computeScroll(): void;
				public addView(param0: globalAndroid.view.View): void;
				public isFillViewport(): boolean;
				public scrollTo(param0: number, param1: number): void;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: number): boolean;
				public stopNestedScroll(): void;
				public hasNestedScrollingParent(param0: number): boolean;
				public setSmoothScrollingEnabled(param0: boolean): void;
				public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
				public hasNestedScrollingParent(): boolean;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
				public onMeasure(param0: number, param1: number): void;
				public onStopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public onAttachedToWindow(): void;
				public isNestedScrollingEnabled(): boolean;
				public shouldDelayChildPressedState(): boolean;
				public measureChild(param0: globalAndroid.view.View, param1: number, param2: number): void;
			}
			export module NestedScrollView {
				export class androidxcorewidgetNestedScrollViewAccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat {
					public static class: java.lang.Class<androidx.core.widget.NestedScrollView.AccessibilityDelegate>;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
					public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				}
				export type AccessibilityDelegate = androidxcorewidgetNestedScrollViewAccessibilityDelegate;
				export class OnScrollChangeListener {
					public static class: java.lang.Class<androidx.core.widget.NestedScrollView.OnScrollChangeListener>;
					/**
					 * Constructs a new instance of the androidx.core.widget.NestedScrollView$OnScrollChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onScrollChange(param0: androidx.core.widget.NestedScrollView, param1: number, param2: number, param3: number, param4: number): void });
					public constructor();
					public onScrollChange(param0: androidx.core.widget.NestedScrollView, param1: number, param2: number, param3: number, param4: number): void;
				}
				export class SavedState {
					public static class: java.lang.Class<androidx.core.widget.NestedScrollView.SavedState>;
					public scrollPosition: number;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.core.widget.NestedScrollView.SavedState>;
					public toString(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class PopupMenuCompat {
				public static class: java.lang.Class<androidx.core.widget.PopupMenuCompat>;
				public static getDragToOpenListener(param0: any): globalAndroid.view.View.OnTouchListener;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class PopupWindowCompat {
				public static class: java.lang.Class<androidx.core.widget.PopupWindowCompat>;
				public static getWindowLayoutType(param0: globalAndroid.widget.PopupWindow): number;
				public static showAsDropDown(param0: globalAndroid.widget.PopupWindow, param1: globalAndroid.view.View, param2: number, param3: number, param4: number): void;
				public static getOverlapAnchor(param0: globalAndroid.widget.PopupWindow): boolean;
				public static setOverlapAnchor(param0: globalAndroid.widget.PopupWindow, param1: boolean): void;
				public static setWindowLayoutType(param0: globalAndroid.widget.PopupWindow, param1: number): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class ScrollerCompat {
				public static class: java.lang.Class<androidx.core.widget.ScrollerCompat>;
				/** @deprecated */
				public getCurrX(): number;
				/** @deprecated */
				public springBack(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): boolean;
				/** @deprecated */
				public startScroll(param0: number, param1: number, param2: number, param3: number, param4: number): void;
				/** @deprecated */
				public getFinalX(): number;
				/** @deprecated */
				public fling(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number): void;
				/** @deprecated */
				public fling(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
				/** @deprecated */
				public notifyVerticalEdgeReached(param0: number, param1: number, param2: number): void;
				/** @deprecated */
				public static create(param0: globalAndroid.content.Context): androidx.core.widget.ScrollerCompat;
				/** @deprecated */
				public abortAnimation(): void;
				/** @deprecated */
				public getCurrVelocity(): number;
				/** @deprecated */
				public getFinalY(): number;
				/** @deprecated */
				public isFinished(): boolean;
				/** @deprecated */
				public startScroll(param0: number, param1: number, param2: number, param3: number): void;
				/** @deprecated */
				public getCurrY(): number;
				/** @deprecated */
				public notifyHorizontalEdgeReached(param0: number, param1: number, param2: number): void;
				/** @deprecated */
				public isOverScrolled(): boolean;
				/** @deprecated */
				public computeScrollOffset(): boolean;
				/** @deprecated */
				public static create(param0: globalAndroid.content.Context, param1: globalAndroid.view.animation.Interpolator): androidx.core.widget.ScrollerCompat;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class TextViewCompat {
				public static class: java.lang.Class<androidx.core.widget.TextViewCompat>;
				public static AUTO_SIZE_TEXT_TYPE_NONE: number;
				public static AUTO_SIZE_TEXT_TYPE_UNIFORM: number;
				public static setAutoSizeTextTypeWithDefaults(param0: globalAndroid.widget.TextView, param1: number): void;
				public static setPrecomputedText(param0: globalAndroid.widget.TextView, param1: androidx.core.text.PrecomputedTextCompat): void;
				public static setAutoSizeTextTypeUniformWithConfiguration(param0: globalAndroid.widget.TextView, param1: number, param2: number, param3: number, param4: number): void;
				public static setTextMetricsParams(param0: globalAndroid.widget.TextView, param1: androidx.core.text.PrecomputedTextCompat.Params): void;
				public static getMaxLines(param0: globalAndroid.widget.TextView): number;
				public static getAutoSizeTextType(param0: globalAndroid.widget.TextView): number;
				public static setFirstBaselineToTopHeight(param0: globalAndroid.widget.TextView, param1: number): void;
				public static setCompoundDrawablesRelative(param0: globalAndroid.widget.TextView, param1: globalAndroid.graphics.drawable.Drawable, param2: globalAndroid.graphics.drawable.Drawable, param3: globalAndroid.graphics.drawable.Drawable, param4: globalAndroid.graphics.drawable.Drawable): void;
				public static getAutoSizeMinTextSize(param0: globalAndroid.widget.TextView): number;
				public static setLastBaselineToBottomHeight(param0: globalAndroid.widget.TextView, param1: number): void;
				public static setCompoundDrawablesRelativeWithIntrinsicBounds(param0: globalAndroid.widget.TextView, param1: globalAndroid.graphics.drawable.Drawable, param2: globalAndroid.graphics.drawable.Drawable, param3: globalAndroid.graphics.drawable.Drawable, param4: globalAndroid.graphics.drawable.Drawable): void;
				public static getAutoSizeStepGranularity(param0: globalAndroid.widget.TextView): number;
				public static getAutoSizeTextAvailableSizes(param0: globalAndroid.widget.TextView): native.Array<number>;
				public static setTextAppearance(param0: globalAndroid.widget.TextView, param1: number): void;
				public static setLineHeight(param0: globalAndroid.widget.TextView, param1: number): void;
				public static setCompoundDrawablesRelativeWithIntrinsicBounds(param0: globalAndroid.widget.TextView, param1: number, param2: number, param3: number, param4: number): void;
				public static getCompoundDrawablesRelative(param0: globalAndroid.widget.TextView): native.Array<globalAndroid.graphics.drawable.Drawable>;
				public static getFirstBaselineToTopHeight(param0: globalAndroid.widget.TextView): number;
				public static wrapCustomSelectionActionModeCallback(param0: globalAndroid.widget.TextView, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode.Callback;
				public static getAutoSizeMaxTextSize(param0: globalAndroid.widget.TextView): number;
				public static setAutoSizeTextTypeUniformWithPresetSizes(param0: globalAndroid.widget.TextView, param1: native.Array<number>, param2: number): void;
				public static getMinLines(param0: globalAndroid.widget.TextView): number;
				public static setCustomSelectionActionModeCallback(param0: globalAndroid.widget.TextView, param1: globalAndroid.view.ActionMode.Callback): void;
				public static getTextMetricsParams(param0: globalAndroid.widget.TextView): androidx.core.text.PrecomputedTextCompat.Params;
				public static getLastBaselineToBottomHeight(param0: globalAndroid.widget.TextView): number;
			}
			export module TextViewCompat {
				export class AutoSizeTextType {
					public static class: java.lang.Class<androidx.core.widget.TextViewCompat.AutoSizeTextType>;
					/**
					 * Constructs a new instance of the androidx.core.widget.TextViewCompat$AutoSizeTextType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class OreoCallback {
					public static class: java.lang.Class<androidx.core.widget.TextViewCompat.OreoCallback>;
					public onPrepareActionMode(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
					public onActionItemClicked(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.MenuItem): boolean;
					public onDestroyActionMode(param0: globalAndroid.view.ActionMode): void;
					public onCreateActionMode(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class TintableCompoundButton {
				public static class: java.lang.Class<androidx.core.widget.TintableCompoundButton>;
				/**
				 * Constructs a new instance of the androidx.core.widget.TintableCompoundButton interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setSupportButtonTintList(param0: globalAndroid.content.res.ColorStateList): void; getSupportButtonTintList(): globalAndroid.content.res.ColorStateList; setSupportButtonTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void; getSupportButtonTintMode(): globalAndroid.graphics.PorterDuff.Mode });
				public constructor();
				public getSupportButtonTintList(): globalAndroid.content.res.ColorStateList;
				public setSupportButtonTintList(param0: globalAndroid.content.res.ColorStateList): void;
				public getSupportButtonTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportButtonTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
			}
		}
	}
}

declare module androidx {
	export module core {
		export module widget {
			export class TintableImageSourceView {
				public static class: java.lang.Class<androidx.core.widget.TintableImageSourceView>;
				/**
				 * Constructs a new instance of the androidx.core.widget.TintableImageSourceView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { setSupportImageTintList(param0: globalAndroid.content.res.ColorStateList): void; getSupportImageTintList(): globalAndroid.content.res.ColorStateList; setSupportImageTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void; getSupportImageTintMode(): globalAndroid.graphics.PorterDuff.Mode });
				public constructor();
				public getSupportImageTintMode(): globalAndroid.graphics.PorterDuff.Mode;
				public setSupportImageTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
				public getSupportImageTintList(): globalAndroid.content.res.ColorStateList;
				public setSupportImageTintList(param0: globalAndroid.content.res.ColorStateList): void;
			}
		}
	}
}

declare module androidx {
	export module cursoradapter {
		export module widget {
			export abstract class CursorAdapter implements androidx.cursoradapter.widget.CursorFilter.CursorFilterClient {
				public static class: java.lang.Class<androidx.cursoradapter.widget.CursorAdapter>;
				public mDataValid: boolean;
				public mAutoRequery: boolean;
				public mCursor: globalAndroid.database.Cursor;
				public mContext: globalAndroid.content.Context;
				public mRowIDColumn: number;
				public mChangeObserver: androidx.cursoradapter.widget.CursorAdapter.ChangeObserver;
				public mDataSetObserver: globalAndroid.database.DataSetObserver;
				public mCursorFilter: androidx.cursoradapter.widget.CursorFilter;
				public mFilterQueryProvider: globalAndroid.widget.FilterQueryProvider;
				public static FLAG_AUTO_REQUERY: number;
				public static FLAG_REGISTER_CONTENT_OBSERVER: number;
				public getFilterQueryProvider(): globalAndroid.widget.FilterQueryProvider;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: boolean);
				public getCursor(): globalAndroid.database.Cursor;
				public getFilter(): globalAndroid.widget.Filter;
				public getCount(): number;
				public changeCursor(param0: globalAndroid.database.Cursor): void;
				public convertToString(param0: globalAndroid.database.Cursor): string;
				/** @deprecated */
				public init(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: boolean): void;
				public onContentChanged(): void;
				public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public hasStableIds(): boolean;
				public newView(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: number);
				public bindView(param0: globalAndroid.view.View, param1: globalAndroid.content.Context, param2: globalAndroid.database.Cursor): void;
				public swapCursor(param0: globalAndroid.database.Cursor): globalAndroid.database.Cursor;
				public getItemId(param0: number): number;
				public setFilterQueryProvider(param0: globalAndroid.widget.FilterQueryProvider): void;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor);
				public getItem(param0: number): any;
				public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public newDropDownView(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public runQueryOnBackgroundThread(param0: string): globalAndroid.database.Cursor;
			}
			export module CursorAdapter {
				export class ChangeObserver {
					public static class: java.lang.Class<androidx.cursoradapter.widget.CursorAdapter.ChangeObserver>;
					public onChange(param0: boolean): void;
					public deliverSelfNotifications(): boolean;
				}
				export class MyDataSetObserver {
					public static class: java.lang.Class<androidx.cursoradapter.widget.CursorAdapter.MyDataSetObserver>;
					public onChanged(): void;
					public onInvalidated(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module cursoradapter {
		export module widget {
			export class CursorFilter {
				public static class: java.lang.Class<androidx.cursoradapter.widget.CursorFilter>;
				public convertResultToString(param0: any): string;
				public performFiltering(param0: string): globalAndroid.widget.Filter.FilterResults;
				public publishResults(param0: string, param1: globalAndroid.widget.Filter.FilterResults): void;
			}
			export module CursorFilter {
				export class CursorFilterClient {
					public static class: java.lang.Class<androidx.cursoradapter.widget.CursorFilter.CursorFilterClient>;
					/**
					 * Constructs a new instance of the androidx.cursoradapter.widget.CursorFilter$CursorFilterClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { convertToString(param0: globalAndroid.database.Cursor): string; runQueryOnBackgroundThread(param0: string): globalAndroid.database.Cursor; getCursor(): globalAndroid.database.Cursor; changeCursor(param0: globalAndroid.database.Cursor): void });
					public constructor();
					public changeCursor(param0: globalAndroid.database.Cursor): void;
					public convertToString(param0: globalAndroid.database.Cursor): string;
					public getCursor(): globalAndroid.database.Cursor;
					public runQueryOnBackgroundThread(param0: string): globalAndroid.database.Cursor;
				}
			}
		}
	}
}

declare module androidx {
	export module cursoradapter {
		export module widget {
			export abstract class ResourceCursorAdapter extends androidx.cursoradapter.widget.CursorAdapter {
				public static class: java.lang.Class<androidx.cursoradapter.widget.ResourceCursorAdapter>;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: boolean);
				public getCursor(): globalAndroid.database.Cursor;
				public changeCursor(param0: globalAndroid.database.Cursor): void;
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: number);
				public convertToString(param0: globalAndroid.database.Cursor): string;
				public newView(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public setDropDownViewResource(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: number);
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor);
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor);
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: boolean);
				public newDropDownView(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
				public setViewResource(param0: number): void;
				public runQueryOnBackgroundThread(param0: string): globalAndroid.database.Cursor;
			}
		}
	}
}

declare module androidx {
	export module cursoradapter {
		export module widget {
			export class SimpleCursorAdapter extends androidx.cursoradapter.widget.ResourceCursorAdapter {
				public static class: java.lang.Class<androidx.cursoradapter.widget.SimpleCursorAdapter>;
				public mFrom: native.Array<number>;
				public mTo: native.Array<number>;
				public setStringConversionColumn(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: boolean);
				public getCursorToStringConverter(): androidx.cursoradapter.widget.SimpleCursorAdapter.CursorToStringConverter;
				public getStringConversionColumn(): number;
				public getCursor(): globalAndroid.database.Cursor;
				public setCursorToStringConverter(param0: androidx.cursoradapter.widget.SimpleCursorAdapter.CursorToStringConverter): void;
				public changeCursor(param0: globalAndroid.database.Cursor): void;
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: number);
				public convertToString(param0: globalAndroid.database.Cursor): string;
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: native.Array<string>, param4: native.Array<number>, param5: number);
				public getViewBinder(): androidx.cursoradapter.widget.SimpleCursorAdapter.ViewBinder;
				public setViewImage(param0: globalAndroid.widget.ImageView, param1: string): void;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor);
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor, param2: number);
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: native.Array<string>, param4: native.Array<number>);
				public bindView(param0: globalAndroid.view.View, param1: globalAndroid.content.Context, param2: globalAndroid.database.Cursor): void;
				public swapCursor(param0: globalAndroid.database.Cursor): globalAndroid.database.Cursor;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.database.Cursor);
				public setViewText(param0: globalAndroid.widget.TextView, param1: string): void;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.database.Cursor, param3: boolean);
				public setViewBinder(param0: androidx.cursoradapter.widget.SimpleCursorAdapter.ViewBinder): void;
				public runQueryOnBackgroundThread(param0: string): globalAndroid.database.Cursor;
				public changeCursorAndColumns(param0: globalAndroid.database.Cursor, param1: native.Array<string>, param2: native.Array<number>): void;
			}
			export module SimpleCursorAdapter {
				export class CursorToStringConverter {
					public static class: java.lang.Class<androidx.cursoradapter.widget.SimpleCursorAdapter.CursorToStringConverter>;
					/**
					 * Constructs a new instance of the androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { convertToString(param0: globalAndroid.database.Cursor): string });
					public constructor();
					public convertToString(param0: globalAndroid.database.Cursor): string;
				}
				export class ViewBinder {
					public static class: java.lang.Class<androidx.cursoradapter.widget.SimpleCursorAdapter.ViewBinder>;
					/**
					 * Constructs a new instance of the androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { setViewValue(param0: globalAndroid.view.View, param1: globalAndroid.database.Cursor, param2: number): boolean });
					public constructor();
					public setViewValue(param0: globalAndroid.view.View, param1: globalAndroid.database.Cursor, param2: number): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module customview {
		export module view {
			export abstract class AbsSavedState {
				public static class: java.lang.Class<androidx.customview.view.AbsSavedState>;
				public static EMPTY_STATE: androidx.customview.view.AbsSavedState;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.customview.view.AbsSavedState>;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public getSuperState(): globalAndroid.os.Parcelable;
				public describeContents(): number;
				public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
				public constructor(param0: globalAndroid.os.Parcelable);
				public constructor(param0: globalAndroid.os.Parcel);
			}
		}
	}
}

declare module androidx {
	export module customview {
		export module widget {
			export abstract class ExploreByTouchHelper extends androidx.core.view.AccessibilityDelegateCompat {
				public static class: java.lang.Class<androidx.customview.widget.ExploreByTouchHelper>;
				public static INVALID_ID: number;
				public static HOST_ID: number;
				public onVirtualViewKeyboardFocusChanged(param0: number, param1: boolean): void;
				public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public invalidateVirtualView(param0: number, param1: number): void;
				public requestKeyboardFocusForVirtualView(param0: number): boolean;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public constructor();
				public getAccessibilityFocusedVirtualViewId(): number;
				public dispatchHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public onPopulateEventForHost(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public getKeyboardFocusedVirtualViewId(): number;
				public getAccessibilityNodeProvider(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeProviderCompat;
				public onPopulateNodeForHost(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public onPopulateNodeForVirtualView(param0: number, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
				public clearKeyboardFocusForVirtualView(param0: number): boolean;
				public constructor(param0: globalAndroid.view.View);
				public invalidateVirtualView(param0: number): void;
				public onPerformActionForVirtualView(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
				public invalidateRoot(): void;
				public sendEventForVirtualView(param0: number, param1: number): boolean;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public onPopulateEventForVirtualView(param0: number, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public getVisibleVirtualViews(param0: java.util.List<java.lang.Integer>): void;
				/** @deprecated */
				public getFocusedVirtualView(): number;
				public getVirtualViewAt(param0: number, param1: number): number;
			}
			export module ExploreByTouchHelper {
				export class MyNodeProvider extends androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
					public static class: java.lang.Class<androidx.customview.widget.ExploreByTouchHelper.MyNodeProvider>;
					public performAction(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
					public findFocus(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
					public createAccessibilityNodeInfo(param0: number): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
				}
			}
		}
	}
}

declare module androidx {
	export module customview {
		export module widget {
			export class FocusStrategy {
				public static class: java.lang.Class<androidx.customview.widget.FocusStrategy>;
				public static findNextFocusInAbsoluteDirection(param0: any, param1: androidx.customview.widget.FocusStrategy.CollectionAdapter<any, any>, param2: androidx.customview.widget.FocusStrategy.BoundsAdapter<any>, param3: any, param4: globalAndroid.graphics.Rect, param5: number): any;
				public static findNextFocusInRelativeDirection(param0: any, param1: androidx.customview.widget.FocusStrategy.CollectionAdapter<any, any>, param2: androidx.customview.widget.FocusStrategy.BoundsAdapter<any>, param3: any, param4: number, param5: boolean, param6: boolean): any;
			}
			export module FocusStrategy {
				export class BoundsAdapter<T> extends java.lang.Object {
					public static class: java.lang.Class<androidx.customview.widget.FocusStrategy.BoundsAdapter<any>>;
					/**
					 * Constructs a new instance of the androidx.customview.widget.FocusStrategy$BoundsAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { obtainBounds(param0: T, param1: globalAndroid.graphics.Rect): void });
					public constructor();
					public obtainBounds(param0: T, param1: globalAndroid.graphics.Rect): void;
				}
				export class CollectionAdapter<T, V> extends java.lang.Object {
					public static class: java.lang.Class<androidx.customview.widget.FocusStrategy.CollectionAdapter<any, any>>;
					/**
					 * Constructs a new instance of the androidx.customview.widget.FocusStrategy$CollectionAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { get(param0: T, param1: number): V; size(param0: T): number });
					public constructor();
					public get(param0: T, param1: number): V;
					public size(param0: T): number;
				}
				export class SequentialComparator<T> extends java.util.Comparator<any> {
					public static class: java.lang.Class<androidx.customview.widget.FocusStrategy.SequentialComparator<any>>;
					public compare(param0: any, param1: any): number;
				}
			}
		}
	}
}

declare module androidx {
	export module customview {
		export module widget {
			export class ViewDragHelper {
				public static class: java.lang.Class<androidx.customview.widget.ViewDragHelper>;
				public static INVALID_POINTER: number;
				public static STATE_IDLE: number;
				public static STATE_DRAGGING: number;
				public static STATE_SETTLING: number;
				public static EDGE_LEFT: number;
				public static EDGE_RIGHT: number;
				public static EDGE_TOP: number;
				public static EDGE_BOTTOM: number;
				public static EDGE_ALL: number;
				public static DIRECTION_HORIZONTAL: number;
				public static DIRECTION_VERTICAL: number;
				public static DIRECTION_ALL: number;
				public static create(param0: globalAndroid.view.ViewGroup, param1: number, param2: androidx.customview.widget.ViewDragHelper.Callback): androidx.customview.widget.ViewDragHelper;
				public getViewDragState(): number;
				public isPointerDown(param0: number): boolean;
				public getCapturedView(): globalAndroid.view.View;
				public isCapturedViewUnder(param0: number, param1: number): boolean;
				public flingCapturedView(param0: number, param1: number, param2: number, param3: number): void;
				public isEdgeTouched(param0: number, param1: number): boolean;
				public cancel(): void;
				public findTopChildUnder(param0: number, param1: number): globalAndroid.view.View;
				public checkTouchSlop(param0: number, param1: number): boolean;
				public isViewUnder(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public getEdgeSize(): number;
				public static create(param0: globalAndroid.view.ViewGroup, param1: androidx.customview.widget.ViewDragHelper.Callback): androidx.customview.widget.ViewDragHelper;
				public captureChildView(param0: globalAndroid.view.View, param1: number): void;
				public continueSettling(param0: boolean): boolean;
				public abort(): void;
				public checkTouchSlop(param0: number): boolean;
				public canScroll(param0: globalAndroid.view.View, param1: boolean, param2: number, param3: number, param4: number, param5: number): boolean;
				public smoothSlideViewTo(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public processTouchEvent(param0: globalAndroid.view.MotionEvent): void;
				public setMinVelocity(param0: number): void;
				public getActivePointerId(): number;
				public getTouchSlop(): number;
				public settleCapturedViewAt(param0: number, param1: number): boolean;
				public isEdgeTouched(param0: number): boolean;
				public getMinVelocity(): number;
				public shouldInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public setEdgeTrackingEnabled(param0: number): void;
			}
			export module ViewDragHelper {
				export abstract class Callback {
					public static class: java.lang.Class<androidx.customview.widget.ViewDragHelper.Callback>;
					public onEdgeTouched(param0: number, param1: number): void;
					public onEdgeDragStarted(param0: number, param1: number): void;
					public onViewCaptured(param0: globalAndroid.view.View, param1: number): void;
					public clampViewPositionHorizontal(param0: globalAndroid.view.View, param1: number, param2: number): number;
					public onViewPositionChanged(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					public onViewDragStateChanged(param0: number): void;
					public getViewHorizontalDragRange(param0: globalAndroid.view.View): number;
					public constructor();
					public onEdgeLock(param0: number): boolean;
					public getOrderedChildIndex(param0: number): number;
					public clampViewPositionVertical(param0: globalAndroid.view.View, param1: number, param2: number): number;
					public getViewVerticalDragRange(param0: globalAndroid.view.View): number;
					public tryCaptureView(param0: globalAndroid.view.View, param1: number): boolean;
					public onViewReleased(param0: globalAndroid.view.View, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module documentfile {
		export module provider {
			export abstract class DocumentFile {
				public static class: java.lang.Class<androidx.documentfile.provider.DocumentFile>;
				public canWrite(): boolean;
				public getType(): string;
				public canRead(): boolean;
				public isFile(): boolean;
				public lastModified(): number;
				public static isDocumentUri(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
				public length(): number;
				public createDirectory(param0: string): androidx.documentfile.provider.DocumentFile;
				public getName(): string;
				public delete(): boolean;
				public listFiles(): native.Array<androidx.documentfile.provider.DocumentFile>;
				public findFile(param0: string): androidx.documentfile.provider.DocumentFile;
				public static fromSingleUri(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): androidx.documentfile.provider.DocumentFile;
				public createFile(param0: string, param1: string): androidx.documentfile.provider.DocumentFile;
				public getUri(): globalAndroid.net.Uri;
				public renameTo(param0: string): boolean;
				public exists(): boolean;
				public static fromFile(param0: java.io.File): androidx.documentfile.provider.DocumentFile;
				public isDirectory(): boolean;
				public getParentFile(): androidx.documentfile.provider.DocumentFile;
				public static fromTreeUri(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): androidx.documentfile.provider.DocumentFile;
				public isVirtual(): boolean;
			}
		}
	}
}

declare module androidx {
	export module documentfile {
		export module provider {
			export class DocumentsContractApi19 {
				public static class: java.lang.Class<androidx.documentfile.provider.DocumentsContractApi19>;
				public static isDirectory(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
				public static getName(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): string;
				public static getFlags(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): number;
				public static getType(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): string;
				public static lastModified(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): number;
				public static exists(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
				public static isFile(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
				public static canRead(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
				public static isVirtual(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
				public static length(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): number;
				public static canWrite(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): boolean;
			}
		}
	}
}

declare module androidx {
	export module documentfile {
		export module provider {
			export class RawDocumentFile extends androidx.documentfile.provider.DocumentFile {
				public static class: java.lang.Class<androidx.documentfile.provider.RawDocumentFile>;
				public canWrite(): boolean;
				public getType(): string;
				public canRead(): boolean;
				public isFile(): boolean;
				public lastModified(): number;
				public length(): number;
				public createDirectory(param0: string): androidx.documentfile.provider.DocumentFile;
				public getName(): string;
				public delete(): boolean;
				public listFiles(): native.Array<androidx.documentfile.provider.DocumentFile>;
				public createFile(param0: string, param1: string): androidx.documentfile.provider.DocumentFile;
				public getUri(): globalAndroid.net.Uri;
				public renameTo(param0: string): boolean;
				public exists(): boolean;
				public isDirectory(): boolean;
				public isVirtual(): boolean;
			}
		}
	}
}

declare module androidx {
	export module documentfile {
		export module provider {
			export class SingleDocumentFile extends androidx.documentfile.provider.DocumentFile {
				public static class: java.lang.Class<androidx.documentfile.provider.SingleDocumentFile>;
				public canWrite(): boolean;
				public getType(): string;
				public canRead(): boolean;
				public isFile(): boolean;
				public lastModified(): number;
				public length(): number;
				public createDirectory(param0: string): androidx.documentfile.provider.DocumentFile;
				public getName(): string;
				public delete(): boolean;
				public listFiles(): native.Array<androidx.documentfile.provider.DocumentFile>;
				public createFile(param0: string, param1: string): androidx.documentfile.provider.DocumentFile;
				public getUri(): globalAndroid.net.Uri;
				public renameTo(param0: string): boolean;
				public exists(): boolean;
				public isDirectory(): boolean;
				public isVirtual(): boolean;
			}
		}
	}
}

declare module androidx {
	export module documentfile {
		export module provider {
			export class TreeDocumentFile extends androidx.documentfile.provider.DocumentFile {
				public static class: java.lang.Class<androidx.documentfile.provider.TreeDocumentFile>;
				public canWrite(): boolean;
				public getType(): string;
				public canRead(): boolean;
				public isFile(): boolean;
				public lastModified(): number;
				public length(): number;
				public createDirectory(param0: string): androidx.documentfile.provider.DocumentFile;
				public getName(): string;
				public delete(): boolean;
				public listFiles(): native.Array<androidx.documentfile.provider.DocumentFile>;
				public createFile(param0: string, param1: string): androidx.documentfile.provider.DocumentFile;
				public getUri(): globalAndroid.net.Uri;
				public renameTo(param0: string): boolean;
				public exists(): boolean;
				public isDirectory(): boolean;
				public isVirtual(): boolean;
			}
		}
	}
}

declare module androidx {
	export module drawerlayout {
		export module widget {
			export class DrawerLayout {
				public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout>;
				public static STATE_IDLE: number;
				public static STATE_DRAGGING: number;
				public static STATE_SETTLING: number;
				public static LOCK_MODE_UNLOCKED: number;
				public static LOCK_MODE_LOCKED_CLOSED: number;
				public static LOCK_MODE_LOCKED_OPEN: number;
				public static LOCK_MODE_UNDEFINED: number;
				public setStatusBarBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				public closeDrawer(param0: number): void;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public getDrawerTitle(param0: number): string;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public closeDrawer(param0: number, param1: boolean): void;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public setScrimColor(param0: number): void;
				public setChildInsets(param0: any, param1: boolean): void;
				public setDrawerShadow(param0: number, param1: number): void;
				public closeDrawer(param0: globalAndroid.view.View, param1: boolean): void;
				public setStatusBarBackgroundColor(param0: number): void;
				public closeDrawer(param0: globalAndroid.view.View): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setDrawerLockMode(param0: number, param1: number): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getStatusBarBackgroundDrawable(): globalAndroid.graphics.drawable.Drawable;
				public getDrawerLockMode(param0: number): number;
				public setStatusBarBackground(param0: number): void;
				public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number, param2: number): void;
				public onDetachedFromWindow(): void;
				public addDrawerListener(param0: androidx.drawerlayout.widget.DrawerLayout.DrawerListener): void;
				public openDrawer(param0: globalAndroid.view.View): void;
				public isDrawerVisible(param0: number): boolean;
				public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
				public getDrawerLockMode(param0: globalAndroid.view.View): number;
				public openDrawer(param0: globalAndroid.view.View, param1: boolean): void;
				public onRtlPropertiesChanged(param0: number): void;
				public openDrawer(param0: number, param1: boolean): void;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
				/** @deprecated */
				public setDrawerListener(param0: androidx.drawerlayout.widget.DrawerLayout.DrawerListener): void;
				public setDrawerShadow(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
				public setDrawerElevation(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public getDrawerElevation(): number;
				public setDrawerLockMode(param0: number, param1: globalAndroid.view.View): void;
				public isDrawerOpen(param0: number): boolean;
				public dispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public removeDrawerListener(param0: androidx.drawerlayout.widget.DrawerLayout.DrawerListener): void;
				public requestLayout(): void;
				public constructor(param0: globalAndroid.content.Context);
				public setDrawerLockMode(param0: number): void;
				public setDrawerTitle(param0: number, param1: string): void;
				public closeDrawers(): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public isDrawerOpen(param0: globalAndroid.view.View): boolean;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public computeScroll(): void;
				public isDrawerVisible(param0: globalAndroid.view.View): boolean;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public onMeasure(param0: number, param1: number): void;
				public openDrawer(param0: number): void;
				public drawChild(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.view.View, param2: number): boolean;
				public onAttachedToWindow(): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
			}
			export module DrawerLayout {
				export class androidxdrawerlayoutwidgetDrawerLayoutAccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate>;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				}
				export type AccessibilityDelegate = androidxdrawerlayoutwidgetDrawerLayoutAccessibilityDelegate;
				export class ChildAccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.ChildAccessibilityDelegate>;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				}
				export class DrawerListener {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.DrawerListener>;
					/**
					 * Constructs a new instance of the androidx.drawerlayout.widget.DrawerLayout$DrawerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onDrawerSlide(param0: globalAndroid.view.View, param1: number): void; onDrawerOpened(param0: globalAndroid.view.View): void; onDrawerClosed(param0: globalAndroid.view.View): void; onDrawerStateChanged(param0: number): void });
					public constructor();
					public onDrawerClosed(param0: globalAndroid.view.View): void;
					public onDrawerSlide(param0: globalAndroid.view.View, param1: number): void;
					public onDrawerStateChanged(param0: number): void;
					public onDrawerOpened(param0: globalAndroid.view.View): void;
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.LayoutParams>;
					public gravity: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.drawerlayout.widget.DrawerLayout.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: number, param1: number, param2: number);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public constructor(param0: number, param1: number);
				}
				export class SavedState extends androidx.customview.view.AbsSavedState {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.drawerlayout.widget.DrawerLayout.SavedState>;
					public constructor(param0: globalAndroid.os.Parcel);
					public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: globalAndroid.os.Parcelable);
				}
				export abstract class SimpleDrawerListener extends androidx.drawerlayout.widget.DrawerLayout.DrawerListener {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.SimpleDrawerListener>;
					public onDrawerClosed(param0: globalAndroid.view.View): void;
					public constructor();
					public onDrawerSlide(param0: globalAndroid.view.View, param1: number): void;
					public onDrawerStateChanged(param0: number): void;
					public onDrawerOpened(param0: globalAndroid.view.View): void;
				}
				export class ViewDragCallback extends androidx.customview.widget.ViewDragHelper.Callback {
					public static class: java.lang.Class<androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback>;
					public removeCallbacks(): void;
					public setDragger(param0: androidx.customview.widget.ViewDragHelper): void;
					public onEdgeTouched(param0: number, param1: number): void;
					public onEdgeDragStarted(param0: number, param1: number): void;
					public onViewCaptured(param0: globalAndroid.view.View, param1: number): void;
					public clampViewPositionHorizontal(param0: globalAndroid.view.View, param1: number, param2: number): number;
					public onViewPositionChanged(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					public onViewDragStateChanged(param0: number): void;
					public getViewHorizontalDragRange(param0: globalAndroid.view.View): number;
					public onEdgeLock(param0: number): boolean;
					public clampViewPositionVertical(param0: globalAndroid.view.View, param1: number, param2: number): number;
					public tryCaptureView(param0: globalAndroid.view.View, param1: number): boolean;
					public onViewReleased(param0: globalAndroid.view.View, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class BackStackRecord extends androidx.fragment.app.FragmentTransaction implements androidx.fragment.app.FragmentManager.BackStackEntry, androidx.fragment.app.FragmentManagerImpl.OpGenerator {
				public static class: java.lang.Class<androidx.fragment.app.BackStackRecord>;
				public add(param0: androidx.fragment.app.Fragment, param1: string): androidx.fragment.app.FragmentTransaction;
				public show(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public commitAllowingStateLoss(): number;
				public commitNowAllowingStateLoss(): void;
				public replace(param0: number, param1: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public setTransition(param0: number): androidx.fragment.app.FragmentTransaction;
				public isAddToBackStackAllowed(): boolean;
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public getTransition(): number;
				public hide(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public setTransitionStyle(param0: number): androidx.fragment.app.FragmentTransaction;
				public setReorderingAllowed(param0: boolean): androidx.fragment.app.FragmentTransaction;
				public generateOps(param0: java.util.ArrayList<androidx.fragment.app.BackStackRecord>, param1: java.util.ArrayList<java.lang.Boolean>): boolean;
				public replace(param0: number, param1: androidx.fragment.app.Fragment, param2: string): androidx.fragment.app.FragmentTransaction;
				public constructor();
				public add(param0: number, param1: androidx.fragment.app.Fragment, param2: string): androidx.fragment.app.FragmentTransaction;
				public addSharedElement(param0: globalAndroid.view.View, param1: string): androidx.fragment.app.FragmentTransaction;
				public remove(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public runOnCommit(param0: java.lang.Runnable): androidx.fragment.app.FragmentTransaction;
				public runOnCommitRunnables(): void;
				public setBreadCrumbShortTitle(param0: string): androidx.fragment.app.FragmentTransaction;
				public setCustomAnimations(param0: number, param1: number, param2: number, param3: number): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbTitle(param0: number): androidx.fragment.app.FragmentTransaction;
				public addToBackStack(param0: string): androidx.fragment.app.FragmentTransaction;
				public disallowAddToBackStack(): androidx.fragment.app.FragmentTransaction;
				public isEmpty(): boolean;
				public dump(param0: string, param1: java.io.PrintWriter, param2: boolean): void;
				public constructor(param0: androidx.fragment.app.FragmentManagerImpl);
				public commitNow(): void;
				public setPrimaryNavigationFragment(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public detach(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public getId(): number;
				public getName(): string;
				public getBreadCrumbTitle(): string;
				public toString(): string;
				public setCustomAnimations(param0: number, param1: number): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbTitle(param0: string): androidx.fragment.app.FragmentTransaction;
				public commit(): number;
				public add(param0: number, param1: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public attach(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public getBreadCrumbShortTitleRes(): number;
				public getTransitionStyle(): number;
				public getBreadCrumbShortTitle(): string;
				public setAllowOptimization(param0: boolean): androidx.fragment.app.FragmentTransaction;
				public getBreadCrumbTitleRes(): number;
				/** @deprecated */
				public setAllowOptimization(param0: boolean): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbShortTitle(param0: number): androidx.fragment.app.FragmentTransaction;
			}
			export module BackStackRecord {
				export class Op {
					public static class: java.lang.Class<androidx.fragment.app.BackStackRecord.Op>;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class BackStackState {
				public static class: java.lang.Class<androidx.fragment.app.BackStackState>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.fragment.app.BackStackState>;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public constructor(param0: androidx.fragment.app.BackStackRecord);
				public describeContents(): number;
				public constructor(param0: globalAndroid.os.Parcel);
				public instantiate(param0: androidx.fragment.app.FragmentManagerImpl): androidx.fragment.app.BackStackRecord;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class DialogFragment extends androidx.fragment.app.Fragment {
				public static class: java.lang.Class<androidx.fragment.app.DialogFragment>;
				public static STYLE_NORMAL: number;
				public static STYLE_NO_TITLE: number;
				public static STYLE_NO_FRAME: number;
				public static STYLE_NO_INPUT: number;
				public getDialog(): globalAndroid.app.Dialog;
				public getViewModelStore(): androidx.lifecycle.ViewModelStore;
				public onActivityCreated(param0: globalAndroid.os.Bundle): void;
				public dismiss(): void;
				public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public constructor();
				public show(param0: androidx.fragment.app.FragmentTransaction, param1: string): number;
				public show(param0: androidx.fragment.app.FragmentManager, param1: string): void;
				public onStop(): void;
				public dismissAllowingStateLoss(): void;
				public onCancel(param0: globalAndroid.content.DialogInterface): void;
				/** @deprecated */
				public onAttach(param0: globalAndroid.app.Activity): void;
				public setStyle(param0: number, param1: number): void;
				public showNow(param0: androidx.fragment.app.FragmentManager, param1: string): void;
				public getShowsDialog(): boolean;
				public setupDialog(param0: globalAndroid.app.Dialog, param1: number): void;
				public setCancelable(param0: boolean): void;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				public onGetLayoutInflater(param0: globalAndroid.os.Bundle): globalAndroid.view.LayoutInflater;
				public setShowsDialog(param0: boolean): void;
				public onAttach(param0: globalAndroid.content.Context): void;
				public onDismiss(param0: globalAndroid.content.DialogInterface): void;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onStart(): void;
				public getTheme(): number;
				public isCancelable(): boolean;
				public onDestroyView(): void;
				public onDetach(): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class Fragment implements androidx.lifecycle.LifecycleOwner, androidx.lifecycle.ViewModelStoreOwner {
				public static class: java.lang.Class<androidx.fragment.app.Fragment>;
				public onDestroyOptionsMenu(): void;
				public isStateSaved(): boolean;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public setSharedElementEnterTransition(param0: any): void;
				public setUserVisibleHint(param0: boolean): void;
				public hasOptionsMenu(): boolean;
				public isInLayout(): boolean;
				public getEnterTransition(): any;
				public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
				public setInitialSavedState(param0: androidx.fragment.app.Fragment.SavedState): void;
				public onGetLayoutInflater(param0: globalAndroid.os.Bundle): globalAndroid.view.LayoutInflater;
				public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
				public setEnterSharedElementCallback(param0: androidx.core.app.SharedElementCallback): void;
				public onStart(): void;
				public getSharedElementReturnTransition(): any;
				public onMultiWindowModeChanged(param0: boolean): void;
				public getRetainInstance(): boolean;
				public setReturnTransition(param0: any): void;
				public setReenterTransition(param0: any): void;
				public startPostponedEnterTransition(): void;
				/** @deprecated */
				public getLayoutInflater(param0: globalAndroid.os.Bundle): globalAndroid.view.LayoutInflater;
				public getViewModelStore(): androidx.lifecycle.ViewModelStore;
				/** @deprecated */
				public getLoaderManager(): androidx.loader.app.LoaderManager;
				public getString(param0: number): string;
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public startActivityForResult(param0: globalAndroid.content.Intent, param1: number, param2: globalAndroid.os.Bundle): void;
				public isHidden(): boolean;
				public setArguments(param0: globalAndroid.os.Bundle): void;
				public onViewStateRestored(param0: globalAndroid.os.Bundle): void;
				public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				public getActivity(): androidx.fragment.app.FragmentActivity;
				public setRetainInstance(param0: boolean): void;
				public onPictureInPictureModeChanged(param0: boolean): void;
				public requestPermissions(param0: native.Array<string>, param1: number): void;
				public getText(param0: number): string;
				public registerForContextMenu(param0: globalAndroid.view.View): void;
				public getResources(): globalAndroid.content.res.Resources;
				public startActivity(param0: globalAndroid.content.Intent): void;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				public getExitTransition(): any;
				public getReenterTransition(): any;
				public setAllowReturnTransitionOverlap(param0: boolean): void;
				public onCreateAnimation(param0: number, param1: boolean, param2: number): globalAndroid.view.animation.Animation;
				public onAttach(param0: globalAndroid.content.Context): void;
				public setExitSharedElementCallback(param0: androidx.core.app.SharedElementCallback): void;
				public requireHost(): any;
				public requireContext(): globalAndroid.content.Context;
				public onHiddenChanged(param0: boolean): void;
				public isRemoving(): boolean;
				public static instantiate(param0: globalAndroid.content.Context, param1: string): androidx.fragment.app.Fragment;
				public getView(): globalAndroid.view.View;
				public setTargetFragment(param0: androidx.fragment.app.Fragment, param1: number): void;
				public setMenuVisibility(param0: boolean): void;
				public constructor();
				public getAllowReturnTransitionOverlap(): boolean;
				public getTargetRequestCode(): number;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public getFragmentManager(): androidx.fragment.app.FragmentManager;
				public onAttachFragment(param0: androidx.fragment.app.Fragment): void;
				public getSharedElementEnterTransition(): any;
				public shouldShowRequestPermissionRationale(param0: string): boolean;
				public getUserVisibleHint(): boolean;
				public setSharedElementReturnTransition(param0: any): void;
				public onPrepareOptionsMenu(param0: globalAndroid.view.Menu): void;
				public startActivity(param0: globalAndroid.content.Intent, param1: globalAndroid.os.Bundle): void;
				public onResume(): void;
				public getContext(): globalAndroid.content.Context;
				public setEnterTransition(param0: any): void;
				public getViewLifecycleOwner(): androidx.lifecycle.LifecycleOwner;
				public getTag(): string;
				public toString(): string;
				public onCreateOptionsMenu(param0: globalAndroid.view.Menu, param1: globalAndroid.view.MenuInflater): void;
				public unregisterForContextMenu(param0: globalAndroid.view.View): void;
				public setExitTransition(param0: any): void;
				public getHost(): any;
				public isResumed(): boolean;
				public onOptionsMenuClosed(param0: globalAndroid.view.Menu): void;
				public getAllowEnterTransitionOverlap(): boolean;
				/** @deprecated */
				public onInflate(param0: globalAndroid.app.Activity, param1: globalAndroid.util.AttributeSet, param2: globalAndroid.os.Bundle): void;
				public onDestroyView(): void;
				public requireActivity(): androidx.fragment.app.FragmentActivity;
				public onDetach(): void;
				public postponeEnterTransition(): void;
				public isVisible(): boolean;
				public getChildFragmentManager(): androidx.fragment.app.FragmentManager;
				public onActivityCreated(param0: globalAndroid.os.Bundle): void;
				public setAllowEnterTransitionOverlap(param0: boolean): void;
				public onPause(): void;
				public getString(param0: number, param1: native.Array<any>): string;
				public onCreateAnimator(param0: number, param1: boolean, param2: number): globalAndroid.animation.Animator;
				public isMenuVisible(): boolean;
				public onStop(): void;
				public static instantiate(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.os.Bundle): androidx.fragment.app.Fragment;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public getTargetFragment(): androidx.fragment.app.Fragment;
				public getLayoutInflater(): globalAndroid.view.LayoutInflater;
				/** @deprecated */
				public onAttach(param0: globalAndroid.app.Activity): void;
				public getArguments(): globalAndroid.os.Bundle;
				public getViewLifecycleOwnerLiveData(): androidx.lifecycle.LiveData<androidx.lifecycle.LifecycleOwner>;
				public onLowMemory(): void;
				public getId(): number;
				public onInflate(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: globalAndroid.os.Bundle): void;
				public setHasOptionsMenu(param0: boolean): void;
				public startIntentSenderForResult(param0: globalAndroid.content.IntentSender, param1: number, param2: globalAndroid.content.Intent, param3: number, param4: number, param5: number, param6: globalAndroid.os.Bundle): void;
				public requireFragmentManager(): androidx.fragment.app.FragmentManager;
				public getReturnTransition(): any;
				public onCreateContextMenu(param0: globalAndroid.view.ContextMenu, param1: globalAndroid.view.View, param2: globalAndroid.view.ContextMenu.ContextMenuInfo): void;
				public isAdded(): boolean;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public getParentFragment(): androidx.fragment.app.Fragment;
				public startActivityForResult(param0: globalAndroid.content.Intent, param1: number): void;
				public isDetached(): boolean;
				public onDestroy(): void;
				public onContextItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
			}
			export module Fragment {
				export class AnimationInfo {
					public static class: java.lang.Class<androidx.fragment.app.Fragment.AnimationInfo>;
				}
				export class InstantiationException {
					public static class: java.lang.Class<androidx.fragment.app.Fragment.InstantiationException>;
					public constructor(param0: string, param1: java.lang.Exception);
				}
				export class OnStartEnterTransitionListener {
					public static class: java.lang.Class<androidx.fragment.app.Fragment.OnStartEnterTransitionListener>;
					/**
					 * Constructs a new instance of the androidx.fragment.app.Fragment$OnStartEnterTransitionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onStartEnterTransition(): void; startListening(): void });
					public constructor();
					public onStartEnterTransition(): void;
					public startListening(): void;
				}
				export class SavedState {
					public static class: java.lang.Class<androidx.fragment.app.Fragment.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.fragment.app.Fragment.SavedState>;
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentActivity extends androidx.core.app.ComponentActivity implements androidx.lifecycle.ViewModelStoreOwner, androidx.core.app.ActivityCompat.OnRequestPermissionsResultCallback, androidx.core.app.ActivityCompat.RequestPermissionsRequestCodeValidator {
				public static class: java.lang.Class<androidx.fragment.app.FragmentActivity>;
				public supportPostponeEnterTransition(): void;
				/** @deprecated */
				public supportInvalidateOptionsMenu(): void;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public getSupportFragmentManager(): androidx.fragment.app.FragmentManager;
				public constructor();
				public onCreateView(param0: string, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public onAttachFragment(param0: androidx.fragment.app.Fragment): void;
				public supportFinishAfterTransition(): void;
				/** @deprecated */
				public getSupportLoaderManager(): androidx.loader.app.LoaderManager;
				public onPreparePanel(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.Menu): boolean;
				public getLastCustomNonConfigurationInstance(): any;
				public onResume(): void;
				public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
				public setEnterSharedElementCallback(param0: androidx.core.app.SharedElementCallback): void;
				public startActivityFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.Intent, param2: number): void;
				public validateRequestPermissionsRequestCode(param0: number): void;
				public onPanelClosed(param0: number, param1: globalAndroid.view.Menu): void;
				public onPostResume(): void;
				public onStart(): void;
				public onMultiWindowModeChanged(param0: boolean): void;
				public onBackPressed(): void;
				public getViewModelStore(): androidx.lifecycle.ViewModelStore;
				public onMenuItemSelected(param0: number, param1: globalAndroid.view.MenuItem): boolean;
				public onCreatePanelMenu(param0: number, param1: globalAndroid.view.Menu): boolean;
				public onPause(): void;
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public onResumeFragments(): void;
				public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public startActivityForResult(param0: globalAndroid.content.Intent, param1: number, param2: globalAndroid.os.Bundle): void;
				public startIntentSenderForResult(param0: globalAndroid.content.IntentSender, param1: number, param2: globalAndroid.content.Intent, param3: number, param4: number, param5: number): void;
				public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				public onPictureInPictureModeChanged(param0: boolean): void;
				public onStop(): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public startIntentSenderFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.IntentSender, param2: number, param3: globalAndroid.content.Intent, param4: number, param5: number, param6: number, param7: globalAndroid.os.Bundle): void;
				public onLowMemory(): void;
				public startActivityFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.Intent, param2: number, param3: globalAndroid.os.Bundle): void;
				public onStateNotSaved(): void;
				public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
				public startIntentSenderForResult(param0: globalAndroid.content.IntentSender, param1: number, param2: globalAndroid.content.Intent, param3: number, param4: number, param5: number, param6: globalAndroid.os.Bundle): void;
				public onPrepareOptionsPanel(param0: globalAndroid.view.View, param1: globalAndroid.view.Menu): boolean;
				public onRetainCustomNonConfigurationInstance(): any;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public setExitSharedElementCallback(param0: androidx.core.app.SharedElementCallback): void;
				public onNewIntent(param0: globalAndroid.content.Intent): void;
				public startActivityForResult(param0: globalAndroid.content.Intent, param1: number): void;
				public onDestroy(): void;
				public supportStartPostponedEnterTransition(): void;
				public onRetainNonConfigurationInstance(): any;
			}
			export module FragmentActivity {
				export class HostCallbacks extends androidx.fragment.app.FragmentHostCallback<androidx.fragment.app.FragmentActivity> {
					public static class: java.lang.Class<androidx.fragment.app.FragmentActivity.HostCallbacks>;
					public onStartActivityFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.Intent, param2: number): void;
					public onShouldShowRequestPermissionRationale(param0: string): boolean;
					public onGetLayoutInflater(): globalAndroid.view.LayoutInflater;
					public onGetWindowAnimations(): number;
					public constructor(param0: androidx.fragment.app.FragmentActivity);
					public onShouldSaveFragmentState(param0: androidx.fragment.app.Fragment): boolean;
					public onRequestPermissionsFromFragment(param0: androidx.fragment.app.Fragment, param1: native.Array<string>, param2: number): void;
					public onHasWindowAnimations(): boolean;
					public onGetHost(): androidx.fragment.app.FragmentActivity;
					public onHasView(): boolean;
					public onStartActivityFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.Intent, param2: number, param3: globalAndroid.os.Bundle): void;
					public onAttachFragment(param0: androidx.fragment.app.Fragment): void;
					public onGetHost(): any;
					public onFindViewById(param0: number): globalAndroid.view.View;
					public constructor();
					public onSupportInvalidateOptionsMenu(): void;
					public onStartIntentSenderFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.IntentSender, param2: number, param3: globalAndroid.content.Intent, param4: number, param5: number, param6: number, param7: globalAndroid.os.Bundle): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: number);
					public onDump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				}
				export class NonConfigurationInstances {
					public static class: java.lang.Class<androidx.fragment.app.FragmentActivity.NonConfigurationInstances>;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentContainer {
				public static class: java.lang.Class<androidx.fragment.app.FragmentContainer>;
				public onFindViewById(param0: number): globalAndroid.view.View;
				public instantiate(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.os.Bundle): androidx.fragment.app.Fragment;
				public onHasView(): boolean;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentController {
				public static class: java.lang.Class<androidx.fragment.app.FragmentController>;
				public getActiveFragments(param0: java.util.List<androidx.fragment.app.Fragment>): java.util.List<androidx.fragment.app.Fragment>;
				public saveAllState(): globalAndroid.os.Parcelable;
				public dispatchMultiWindowModeChanged(param0: boolean): void;
				public dispatchLowMemory(): void;
				/** @deprecated */
				public restoreAllState(param0: globalAndroid.os.Parcelable, param1: java.util.List<androidx.fragment.app.Fragment>): void;
				public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public dispatchContextItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public getActiveFragmentsCount(): number;
				public dispatchPictureInPictureModeChanged(param0: boolean): void;
				/** @deprecated */
				public doLoaderStop(param0: boolean): void;
				/** @deprecated */
				public restoreLoaderNonConfig(param0: androidx.collection.SimpleArrayMap<string, androidx.loader.app.LoaderManager>): void;
				/** @deprecated */
				public dumpLoaders(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public getSupportFragmentManager(): androidx.fragment.app.FragmentManager;
				public dispatchStop(): void;
				public dispatchOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public noteStateNotSaved(): void;
				public dispatchConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public dispatchPrepareOptionsMenu(param0: globalAndroid.view.Menu): boolean;
				/** @deprecated */
				public dispatchReallyStop(): void;
				public static createController(param0: androidx.fragment.app.FragmentHostCallback<any>): androidx.fragment.app.FragmentController;
				public dispatchResume(): void;
				/** @deprecated */
				public getSupportLoaderManager(): androidx.loader.app.LoaderManager;
				public dispatchDestroy(): void;
				public restoreAllState(param0: globalAndroid.os.Parcelable, param1: androidx.fragment.app.FragmentManagerNonConfig): void;
				/** @deprecated */
				public doLoaderStart(): void;
				/** @deprecated */
				public reportLoaderStart(): void;
				public retainNestedNonConfig(): androidx.fragment.app.FragmentManagerNonConfig;
				public dispatchStart(): void;
				/** @deprecated */
				public doLoaderRetain(): void;
				/** @deprecated */
				public retainLoaderNonConfig(): androidx.collection.SimpleArrayMap<string, androidx.loader.app.LoaderManager>;
				public findFragmentByWho(param0: string): androidx.fragment.app.Fragment;
				public dispatchPause(): void;
				public dispatchCreate(): void;
				/** @deprecated */
				public doLoaderDestroy(): void;
				/** @deprecated */
				public retainNonConfig(): java.util.List<androidx.fragment.app.Fragment>;
				public attachHost(param0: androidx.fragment.app.Fragment): void;
				public dispatchActivityCreated(): void;
				public dispatchDestroyView(): void;
				public dispatchCreateOptionsMenu(param0: globalAndroid.view.Menu, param1: globalAndroid.view.MenuInflater): boolean;
				public execPendingActions(): boolean;
				public dispatchOptionsMenuClosed(param0: globalAndroid.view.Menu): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentHostCallback<E> extends androidx.fragment.app.FragmentContainer {
				public static class: java.lang.Class<androidx.fragment.app.FragmentHostCallback<any>>;
				public onShouldSaveFragmentState(param0: androidx.fragment.app.Fragment): boolean;
				public onSupportInvalidateOptionsMenu(): void;
				public onStartIntentSenderFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.IntentSender, param2: number, param3: globalAndroid.content.Intent, param4: number, param5: number, param6: number, param7: globalAndroid.os.Bundle): void;
				public onStartActivityFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.Intent, param2: number, param3: globalAndroid.os.Bundle): void;
				public onHasView(): boolean;
				public onHasWindowAnimations(): boolean;
				public onDump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public constructor();
				public onFindViewById(param0: number): globalAndroid.view.View;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: number);
				public onRequestPermissionsFromFragment(param0: androidx.fragment.app.Fragment, param1: native.Array<string>, param2: number): void;
				public onGetWindowAnimations(): number;
				public onGetHost(): any;
				public onStartActivityFromFragment(param0: androidx.fragment.app.Fragment, param1: globalAndroid.content.Intent, param2: number): void;
				public onGetLayoutInflater(): globalAndroid.view.LayoutInflater;
				public onShouldShowRequestPermissionRationale(param0: string): boolean;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentManager {
				public static class: java.lang.Class<androidx.fragment.app.FragmentManager>;
				public static POP_BACK_STACK_INCLUSIVE: number;
				/** @deprecated */
				public openTransaction(): androidx.fragment.app.FragmentTransaction;
				public isDestroyed(): boolean;
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public executePendingTransactions(): boolean;
				public removeOnBackStackChangedListener(param0: androidx.fragment.app.FragmentManager.OnBackStackChangedListener): void;
				public isStateSaved(): boolean;
				public constructor();
				public popBackStackImmediate(param0: number, param1: number): boolean;
				public popBackStack(): void;
				public popBackStack(param0: string, param1: number): void;
				public saveFragmentInstanceState(param0: androidx.fragment.app.Fragment): androidx.fragment.app.Fragment.SavedState;
				public getFragment(param0: globalAndroid.os.Bundle, param1: string): androidx.fragment.app.Fragment;
				public static enableDebugLogging(param0: boolean): void;
				public getPrimaryNavigationFragment(): androidx.fragment.app.Fragment;
				public putFragment(param0: globalAndroid.os.Bundle, param1: string, param2: androidx.fragment.app.Fragment): void;
				public popBackStackImmediate(param0: string, param1: number): boolean;
				public getBackStackEntryCount(): number;
				public findFragmentByTag(param0: string): androidx.fragment.app.Fragment;
				public findFragmentById(param0: number): androidx.fragment.app.Fragment;
				public beginTransaction(): androidx.fragment.app.FragmentTransaction;
				public addOnBackStackChangedListener(param0: androidx.fragment.app.FragmentManager.OnBackStackChangedListener): void;
				public popBackStack(param0: number, param1: number): void;
				public getBackStackEntryAt(param0: number): androidx.fragment.app.FragmentManager.BackStackEntry;
				public getFragments(): java.util.List<androidx.fragment.app.Fragment>;
				public popBackStackImmediate(): boolean;
				public registerFragmentLifecycleCallbacks(param0: androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks, param1: boolean): void;
				public unregisterFragmentLifecycleCallbacks(param0: androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks): void;
			}
			export module FragmentManager {
				export class BackStackEntry {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManager.BackStackEntry>;
					/**
					 * Constructs a new instance of the androidx.fragment.app.FragmentManager$BackStackEntry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getId(): number; getName(): string; getBreadCrumbTitleRes(): number; getBreadCrumbShortTitleRes(): number; getBreadCrumbTitle(): string; getBreadCrumbShortTitle(): string });
					public constructor();
					public getBreadCrumbTitle(): string;
					public getName(): string;
					public getBreadCrumbTitleRes(): number;
					public getBreadCrumbShortTitleRes(): number;
					public getId(): number;
					public getBreadCrumbShortTitle(): string;
				}
				export abstract class FragmentLifecycleCallbacks {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks>;
					public onFragmentActivityCreated(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.os.Bundle): void;
					public onFragmentViewCreated(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.view.View, param3: globalAndroid.os.Bundle): void;
					public onFragmentDetached(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public onFragmentPaused(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public onFragmentPreCreated(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.os.Bundle): void;
					public onFragmentCreated(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.os.Bundle): void;
					public onFragmentStarted(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public onFragmentStopped(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public constructor();
					public onFragmentSaveInstanceState(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.os.Bundle): void;
					public onFragmentViewDestroyed(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public onFragmentResumed(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public onFragmentDestroyed(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment): void;
					public onFragmentPreAttached(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.content.Context): void;
					public onFragmentAttached(param0: androidx.fragment.app.FragmentManager, param1: androidx.fragment.app.Fragment, param2: globalAndroid.content.Context): void;
				}
				export class OnBackStackChangedListener {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManager.OnBackStackChangedListener>;
					/**
					 * Constructs a new instance of the androidx.fragment.app.FragmentManager$OnBackStackChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onBackStackChanged(): void });
					public constructor();
					public onBackStackChanged(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentManagerImpl extends androidx.fragment.app.FragmentManager {
				public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl>;
				public static ANIM_STYLE_OPEN_ENTER: number;
				public static ANIM_STYLE_OPEN_EXIT: number;
				public static ANIM_STYLE_CLOSE_ENTER: number;
				public static ANIM_STYLE_CLOSE_EXIT: number;
				public static ANIM_STYLE_FADE_ENTER: number;
				public static ANIM_STYLE_FADE_EXIT: number;
				public dispatchLowMemory(): void;
				public executePendingTransactions(): boolean;
				public removeOnBackStackChangedListener(param0: androidx.fragment.app.FragmentManager.OnBackStackChangedListener): void;
				public isStateSaved(): boolean;
				public dispatchContextItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public dispatchPictureInPictureModeChanged(param0: boolean): void;
				public dispatchStop(): void;
				public popBackStackImmediate(param0: number, param1: number): boolean;
				public allocBackStackIndex(param0: androidx.fragment.app.BackStackRecord): number;
				public onCreateView(param0: string, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public saveFragmentInstanceState(param0: androidx.fragment.app.Fragment): androidx.fragment.app.Fragment.SavedState;
				public dispatchPrepareOptionsMenu(param0: globalAndroid.view.Menu): boolean;
				public removeFragment(param0: androidx.fragment.app.Fragment): void;
				public showFragment(param0: androidx.fragment.app.Fragment): void;
				public getPrimaryNavigationFragment(): androidx.fragment.app.Fragment;
				public getBackStackEntryCount(): number;
				public dispatchStart(): void;
				public attachFragment(param0: androidx.fragment.app.Fragment): void;
				public dispatchPause(): void;
				public toString(): string;
				public beginTransaction(): androidx.fragment.app.FragmentTransaction;
				public static reverseTransit(param0: number): number;
				public addOnBackStackChangedListener(param0: androidx.fragment.app.FragmentManager.OnBackStackChangedListener): void;
				public popBackStackImmediate(): boolean;
				public registerFragmentLifecycleCallbacks(param0: androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks, param1: boolean): void;
				public dispatchActivityCreated(): void;
				public dispatchDestroyView(): void;
				public performPendingDeferredStart(param0: androidx.fragment.app.Fragment): void;
				public execPendingActions(): boolean;
				public dispatchCreateOptionsMenu(param0: globalAndroid.view.Menu, param1: globalAndroid.view.MenuInflater): boolean;
				public hideFragment(param0: androidx.fragment.app.Fragment): void;
				public isDestroyed(): boolean;
				public dispatchMultiWindowModeChanged(param0: boolean): void;
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
				public addFragment(param0: androidx.fragment.app.Fragment, param1: boolean): void;
				public setBackStackIndex(param0: number, param1: androidx.fragment.app.BackStackRecord): void;
				public dispatchOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public noteStateNotSaved(): void;
				public dispatchConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public popBackStack(): void;
				public popBackStack(param0: string, param1: number): void;
				public setPrimaryNavigationFragment(param0: androidx.fragment.app.Fragment): void;
				public getFragment(param0: globalAndroid.os.Bundle, param1: string): androidx.fragment.app.Fragment;
				public freeBackStackIndex(param0: number): void;
				public dispatchResume(): void;
				public dispatchDestroy(): void;
				public putFragment(param0: globalAndroid.os.Bundle, param1: string, param2: androidx.fragment.app.Fragment): void;
				public popBackStackImmediate(param0: string, param1: number): boolean;
				public findFragmentByTag(param0: string): androidx.fragment.app.Fragment;
				public detachFragment(param0: androidx.fragment.app.Fragment): void;
				public static transitToStyleIndex(param0: number, param1: boolean): number;
				public execSingleAction(param0: androidx.fragment.app.FragmentManagerImpl.OpGenerator, param1: boolean): void;
				public findFragmentByWho(param0: string): androidx.fragment.app.Fragment;
				public attachController(param0: androidx.fragment.app.FragmentHostCallback<any>, param1: androidx.fragment.app.FragmentContainer, param2: androidx.fragment.app.Fragment): void;
				public dispatchCreate(): void;
				public findFragmentById(param0: number): androidx.fragment.app.Fragment;
				public enqueueAction(param0: androidx.fragment.app.FragmentManagerImpl.OpGenerator, param1: boolean): void;
				public popBackStack(param0: number, param1: number): void;
				public getBackStackEntryAt(param0: number): androidx.fragment.app.FragmentManager.BackStackEntry;
				public getFragments(): java.util.List<androidx.fragment.app.Fragment>;
				public unregisterFragmentLifecycleCallbacks(param0: androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks): void;
				public dispatchOptionsMenuClosed(param0: globalAndroid.view.Menu): void;
			}
			export module FragmentManagerImpl {
				export class AnimateOnHWLayerIfNeededListener extends androidx.fragment.app.FragmentManagerImpl.AnimationListenerWrapper {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener>;
					public onAnimationEnd(param0: globalAndroid.view.animation.Animation): void;
				}
				export class AnimationListenerWrapper {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.AnimationListenerWrapper>;
					public onAnimationRepeat(param0: globalAndroid.view.animation.Animation): void;
					public onAnimationEnd(param0: globalAndroid.view.animation.Animation): void;
					public onAnimationStart(param0: globalAndroid.view.animation.Animation): void;
				}
				export class AnimationOrAnimator {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.AnimationOrAnimator>;
					public animation: globalAndroid.view.animation.Animation;
					public animator: globalAndroid.animation.Animator;
				}
				export class AnimatorOnHWLayerIfNeededListener {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.AnimatorOnHWLayerIfNeededListener>;
					public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
					public onAnimationStart(param0: globalAndroid.animation.Animator): void;
				}
				export class EndViewTransitionAnimator {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.EndViewTransitionAnimator>;
					public getTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): boolean;
					public getTransformation(param0: number, param1: globalAndroid.view.animation.Transformation, param2: number): boolean;
					public run(): void;
				}
				export class FragmentLifecycleCallbacksHolder {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.FragmentLifecycleCallbacksHolder>;
				}
				export class FragmentTag {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.FragmentTag>;
					public static Fragment: native.Array<number>;
					public static Fragment_id: number;
					public static Fragment_name: number;
					public static Fragment_tag: number;
				}
				export class OpGenerator {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.OpGenerator>;
					/**
					 * Constructs a new instance of the androidx.fragment.app.FragmentManagerImpl$OpGenerator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { generateOps(param0: java.util.ArrayList<androidx.fragment.app.BackStackRecord>, param1: java.util.ArrayList<java.lang.Boolean>): boolean });
					public constructor();
					public generateOps(param0: java.util.ArrayList<androidx.fragment.app.BackStackRecord>, param1: java.util.ArrayList<java.lang.Boolean>): boolean;
				}
				export class PopBackStackState extends androidx.fragment.app.FragmentManagerImpl.OpGenerator {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.PopBackStackState>;
					public generateOps(param0: java.util.ArrayList<androidx.fragment.app.BackStackRecord>, param1: java.util.ArrayList<java.lang.Boolean>): boolean;
				}
				export class StartEnterTransitionListener extends androidx.fragment.app.Fragment.OnStartEnterTransitionListener {
					public static class: java.lang.Class<androidx.fragment.app.FragmentManagerImpl.StartEnterTransitionListener>;
					public isReady(): boolean;
					public cancelTransaction(): void;
					public onStartEnterTransition(): void;
					public startListening(): void;
					public completeTransaction(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentManagerNonConfig {
				public static class: java.lang.Class<androidx.fragment.app.FragmentManagerNonConfig>;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentManagerState {
				public static class: java.lang.Class<androidx.fragment.app.FragmentManagerState>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.fragment.app.FragmentManagerState>;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public describeContents(): number;
				public constructor(param0: globalAndroid.os.Parcel);
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentPagerAdapter extends androidx.viewpager.widget.PagerAdapter {
				public static class: java.lang.Class<androidx.fragment.app.FragmentPagerAdapter>;
				public saveState(): globalAndroid.os.Parcelable;
				/** @deprecated */
				public finishUpdate(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public startUpdate(param0: globalAndroid.view.View): void;
				public startUpdate(param0: globalAndroid.view.ViewGroup): void;
				public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
				public finishUpdate(param0: globalAndroid.view.ViewGroup): void;
				public getItem(param0: number): androidx.fragment.app.Fragment;
				public constructor();
				public setPrimaryItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
				/** @deprecated */
				public instantiateItem(param0: globalAndroid.view.View, param1: number): any;
				/** @deprecated */
				public setPrimaryItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
				/** @deprecated */
				public destroyItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
				public restoreState(param0: globalAndroid.os.Parcelable, param1: java.lang.ClassLoader): void;
				public getItemId(param0: number): number;
				public constructor(param0: androidx.fragment.app.FragmentManager);
				public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
				public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentState {
				public static class: java.lang.Class<androidx.fragment.app.FragmentState>;
				public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.fragment.app.FragmentState>;
				public instantiate(param0: androidx.fragment.app.FragmentHostCallback<any>, param1: androidx.fragment.app.FragmentContainer, param2: androidx.fragment.app.Fragment, param3: androidx.fragment.app.FragmentManagerNonConfig, param4: androidx.lifecycle.ViewModelStore): androidx.fragment.app.Fragment;
				public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				public describeContents(): number;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentStatePagerAdapter extends androidx.viewpager.widget.PagerAdapter {
				public static class: java.lang.Class<androidx.fragment.app.FragmentStatePagerAdapter>;
				public saveState(): globalAndroid.os.Parcelable;
				/** @deprecated */
				public finishUpdate(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public startUpdate(param0: globalAndroid.view.View): void;
				public startUpdate(param0: globalAndroid.view.ViewGroup): void;
				public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
				public finishUpdate(param0: globalAndroid.view.ViewGroup): void;
				public getItem(param0: number): androidx.fragment.app.Fragment;
				public constructor();
				public setPrimaryItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
				/** @deprecated */
				public instantiateItem(param0: globalAndroid.view.View, param1: number): any;
				/** @deprecated */
				public setPrimaryItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
				/** @deprecated */
				public destroyItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
				public restoreState(param0: globalAndroid.os.Parcelable, param1: java.lang.ClassLoader): void;
				public constructor(param0: androidx.fragment.app.FragmentManager);
				public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
				public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentTabHost {
				public static class: java.lang.Class<androidx.fragment.app.FragmentTabHost>;
				public setOnTabChangedListener(param0: globalAndroid.widget.TabHost.OnTabChangeListener): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public setup(param0: globalAndroid.content.Context, param1: androidx.fragment.app.FragmentManager): void;
				public constructor(param0: globalAndroid.content.Context);
				public addTab(param0: globalAndroid.widget.TabHost.TabSpec, param1: java.lang.Class<any>, param2: globalAndroid.os.Bundle): void;
				public onDetachedFromWindow(): void;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				/** @deprecated */
				public setup(): void;
				public onAttachedToWindow(): void;
				public setup(param0: globalAndroid.content.Context, param1: androidx.fragment.app.FragmentManager, param2: number): void;
				public onTabChanged(param0: string): void;
			}
			export module FragmentTabHost {
				export class DummyTabFactory {
					public static class: java.lang.Class<androidx.fragment.app.FragmentTabHost.DummyTabFactory>;
					public constructor(param0: globalAndroid.content.Context);
					public createTabContent(param0: string): globalAndroid.view.View;
				}
				export class SavedState {
					public static class: java.lang.Class<androidx.fragment.app.FragmentTabHost.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.fragment.app.FragmentTabHost.SavedState>;
					public toString(): string;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				}
				export class TabInfo {
					public static class: java.lang.Class<androidx.fragment.app.FragmentTabHost.TabInfo>;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentTransaction {
				public static class: java.lang.Class<androidx.fragment.app.FragmentTransaction>;
				public static TRANSIT_ENTER_MASK: number;
				public static TRANSIT_EXIT_MASK: number;
				public static TRANSIT_UNSET: number;
				public static TRANSIT_NONE: number;
				public static TRANSIT_FRAGMENT_OPEN: number;
				public static TRANSIT_FRAGMENT_CLOSE: number;
				public static TRANSIT_FRAGMENT_FADE: number;
				public add(param0: androidx.fragment.app.Fragment, param1: string): androidx.fragment.app.FragmentTransaction;
				public show(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public commitAllowingStateLoss(): number;
				public commitNowAllowingStateLoss(): void;
				public replace(param0: number, param1: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public setTransition(param0: number): androidx.fragment.app.FragmentTransaction;
				public isAddToBackStackAllowed(): boolean;
				public hide(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public setTransitionStyle(param0: number): androidx.fragment.app.FragmentTransaction;
				public setReorderingAllowed(param0: boolean): androidx.fragment.app.FragmentTransaction;
				public replace(param0: number, param1: androidx.fragment.app.Fragment, param2: string): androidx.fragment.app.FragmentTransaction;
				public constructor();
				public add(param0: number, param1: androidx.fragment.app.Fragment, param2: string): androidx.fragment.app.FragmentTransaction;
				public addSharedElement(param0: globalAndroid.view.View, param1: string): androidx.fragment.app.FragmentTransaction;
				public remove(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public runOnCommit(param0: java.lang.Runnable): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbShortTitle(param0: string): androidx.fragment.app.FragmentTransaction;
				public setCustomAnimations(param0: number, param1: number, param2: number, param3: number): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbTitle(param0: number): androidx.fragment.app.FragmentTransaction;
				public addToBackStack(param0: string): androidx.fragment.app.FragmentTransaction;
				public disallowAddToBackStack(): androidx.fragment.app.FragmentTransaction;
				public isEmpty(): boolean;
				public commitNow(): void;
				public setPrimaryNavigationFragment(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public detach(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public setCustomAnimations(param0: number, param1: number): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbTitle(param0: string): androidx.fragment.app.FragmentTransaction;
				public commit(): number;
				public add(param0: number, param1: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				public attach(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentTransaction;
				/** @deprecated */
				public setAllowOptimization(param0: boolean): androidx.fragment.app.FragmentTransaction;
				public setBreadCrumbShortTitle(param0: number): androidx.fragment.app.FragmentTransaction;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentTransition {
				public static class: java.lang.Class<androidx.fragment.app.FragmentTransition>;
				public static calculateFragments(param0: androidx.fragment.app.BackStackRecord, param1: globalAndroid.util.SparseArray<androidx.fragment.app.FragmentTransition.FragmentContainerTransition>, param2: boolean): void;
				public static calculatePopFragments(param0: androidx.fragment.app.BackStackRecord, param1: globalAndroid.util.SparseArray<androidx.fragment.app.FragmentTransition.FragmentContainerTransition>, param2: boolean): void;
			}
			export module FragmentTransition {
				export class FragmentContainerTransition {
					public static class: java.lang.Class<androidx.fragment.app.FragmentTransition.FragmentContainerTransition>;
					public lastIn: androidx.fragment.app.Fragment;
					public lastInIsPop: boolean;
					public lastInTransaction: androidx.fragment.app.BackStackRecord;
					public firstOut: androidx.fragment.app.Fragment;
					public firstOutIsPop: boolean;
					public firstOutTransaction: androidx.fragment.app.BackStackRecord;
				}
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class FragmentTransitionCompat21 extends androidx.fragment.app.FragmentTransitionImpl {
				public static class: java.lang.Class<androidx.fragment.app.FragmentTransitionCompat21>;
				public addTargets(param0: any, param1: java.util.ArrayList<globalAndroid.view.View>): void;
				public replaceTargets(param0: any, param1: java.util.ArrayList<globalAndroid.view.View>, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public addTarget(param0: any, param1: globalAndroid.view.View): void;
				public swapSharedElementTargets(param0: any, param1: java.util.ArrayList<globalAndroid.view.View>, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public beginDelayedTransition(param0: globalAndroid.view.ViewGroup, param1: any): void;
				public mergeTransitionsTogether(param0: any, param1: any, param2: any): any;
				public wrapTransitionInSet(param0: any): any;
				public cloneTransition(param0: any): any;
				public setEpicenter(param0: any, param1: globalAndroid.graphics.Rect): void;
				public canHandle(param0: any): boolean;
				public setSharedElementTargets(param0: any, param1: globalAndroid.view.View, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public removeTarget(param0: any, param1: globalAndroid.view.View): void;
				public mergeTransitionsInSequence(param0: any, param1: any, param2: any): any;
				public scheduleHideFragmentView(param0: any, param1: globalAndroid.view.View, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public scheduleRemoveTargets(param0: any, param1: any, param2: java.util.ArrayList<globalAndroid.view.View>, param3: any, param4: java.util.ArrayList<globalAndroid.view.View>, param5: any, param6: java.util.ArrayList<globalAndroid.view.View>): void;
				public setEpicenter(param0: any, param1: globalAndroid.view.View): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export abstract class FragmentTransitionImpl {
				public static class: java.lang.Class<androidx.fragment.app.FragmentTransitionImpl>;
				public addTargets(param0: any, param1: java.util.ArrayList<globalAndroid.view.View>): void;
				public replaceTargets(param0: any, param1: java.util.ArrayList<globalAndroid.view.View>, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public addTarget(param0: any, param1: globalAndroid.view.View): void;
				public swapSharedElementTargets(param0: any, param1: java.util.ArrayList<globalAndroid.view.View>, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public beginDelayedTransition(param0: globalAndroid.view.ViewGroup, param1: any): void;
				public mergeTransitionsTogether(param0: any, param1: any, param2: any): any;
				public wrapTransitionInSet(param0: any): any;
				public cloneTransition(param0: any): any;
				public constructor();
				public setEpicenter(param0: any, param1: globalAndroid.graphics.Rect): void;
				public canHandle(param0: any): boolean;
				public setSharedElementTargets(param0: any, param1: globalAndroid.view.View, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public removeTarget(param0: any, param1: globalAndroid.view.View): void;
				public mergeTransitionsInSequence(param0: any, param1: any, param2: any): any;
				public scheduleHideFragmentView(param0: any, param1: globalAndroid.view.View, param2: java.util.ArrayList<globalAndroid.view.View>): void;
				public static isNullOrEmpty(param0: java.util.List): boolean;
				public scheduleRemoveTargets(param0: any, param1: any, param2: java.util.ArrayList<globalAndroid.view.View>, param3: any, param4: java.util.ArrayList<globalAndroid.view.View>, param5: any, param6: java.util.ArrayList<globalAndroid.view.View>): void;
				public static bfsAddViewChildren(param0: java.util.List<globalAndroid.view.View>, param1: globalAndroid.view.View): void;
				public setEpicenter(param0: any, param1: globalAndroid.view.View): void;
				public getBoundsOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class ListFragment extends androidx.fragment.app.Fragment {
				public static class: java.lang.Class<androidx.fragment.app.ListFragment>;
				public setListAdapter(param0: globalAndroid.widget.ListAdapter): void;
				public setSelection(param0: number): void;
				public getViewModelStore(): androidx.lifecycle.ViewModelStore;
				public setListShownNoAnimation(param0: boolean): void;
				public getListAdapter(): globalAndroid.widget.ListAdapter;
				public getListView(): globalAndroid.widget.ListView;
				public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
				public getLifecycle(): androidx.lifecycle.Lifecycle;
				public constructor();
				public onListItemClick(param0: globalAndroid.widget.ListView, param1: globalAndroid.view.View, param2: number, param3: number): void;
				public setListShown(param0: boolean): void;
				public getSelectedItemPosition(): number;
				public setEmptyText(param0: string): void;
				public onDestroyView(): void;
				public getSelectedItemId(): number;
				public onViewCreated(param0: globalAndroid.view.View, param1: globalAndroid.os.Bundle): void;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class OneShotPreDrawListener {
				public static class: java.lang.Class<androidx.fragment.app.OneShotPreDrawListener>;
				public onPreDraw(): boolean;
				public onViewAttachedToWindow(param0: globalAndroid.view.View): void;
				public removeListener(): void;
				public onViewDetachedFromWindow(param0: globalAndroid.view.View): void;
				public static add(param0: globalAndroid.view.View, param1: java.lang.Runnable): androidx.fragment.app.OneShotPreDrawListener;
			}
		}
	}
}

declare module androidx {
	export module fragment {
		export module app {
			export class SuperNotCalledException {
				public static class: java.lang.Class<androidx.fragment.app.SuperNotCalledException>;
				public constructor(param0: string);
			}
		}
	}
}

declare module androidx {
	export module interpolator {
		export module view {
			export module animation {
				export class FastOutLinearInInterpolator extends androidx.interpolator.view.animation.LookupTableInterpolator {
					public static class: java.lang.Class<androidx.interpolator.view.animation.FastOutLinearInInterpolator>;
					public constructor(param0: native.Array<number>);
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module interpolator {
		export module view {
			export module animation {
				export class FastOutSlowInInterpolator extends androidx.interpolator.view.animation.LookupTableInterpolator {
					public static class: java.lang.Class<androidx.interpolator.view.animation.FastOutSlowInInterpolator>;
					public constructor(param0: native.Array<number>);
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module interpolator {
		export module view {
			export module animation {
				export class LinearOutSlowInInterpolator extends androidx.interpolator.view.animation.LookupTableInterpolator {
					public static class: java.lang.Class<androidx.interpolator.view.animation.LinearOutSlowInInterpolator>;
					public constructor(param0: native.Array<number>);
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module interpolator {
		export module view {
			export module animation {
				export abstract class LookupTableInterpolator {
					public static class: java.lang.Class<androidx.interpolator.view.animation.LookupTableInterpolator>;
					public constructor(param0: native.Array<number>);
					public getInterpolation(param0: number): number;
				}
			}
		}
	}
}

declare module androidx {
	export module legacy {
		export module app {
			export class ActionBarDrawerToggle extends androidx.drawerlayout.widget.DrawerLayout.DrawerListener {
				public static class: java.lang.Class<androidx.legacy.app.ActionBarDrawerToggle>;
				public setDrawerIndicatorEnabled(param0: boolean): void;
				public isDrawerIndicatorEnabled(): boolean;
				public syncState(): void;
				public constructor(param0: globalAndroid.app.Activity, param1: androidx.drawerlayout.widget.DrawerLayout, param2: number, param3: number, param4: number);
				public constructor(param0: globalAndroid.app.Activity, param1: androidx.drawerlayout.widget.DrawerLayout, param2: boolean, param3: number, param4: number, param5: number);
				public onDrawerStateChanged(param0: number): void;
				public onDrawerOpened(param0: globalAndroid.view.View): void;
				public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
				public onDrawerSlide(param0: globalAndroid.view.View, param1: number): void;
				public onDrawerClosed(param0: globalAndroid.view.View): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
				public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setHomeAsUpIndicator(param0: number): void;
			}
			export module ActionBarDrawerToggle {
				export class Delegate {
					public static class: java.lang.Class<androidx.legacy.app.ActionBarDrawerToggle.Delegate>;
					/**
					 * Constructs a new instance of the androidx.legacy.app.ActionBarDrawerToggle$Delegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable; setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void; setActionBarDescription(param0: number): void });
					public constructor();
					public setActionBarUpIndicator(param0: globalAndroid.graphics.drawable.Drawable, param1: number): void;
					public getThemeUpIndicator(): globalAndroid.graphics.drawable.Drawable;
					public setActionBarDescription(param0: number): void;
				}
				export class DelegateProvider {
					public static class: java.lang.Class<androidx.legacy.app.ActionBarDrawerToggle.DelegateProvider>;
					/**
					 * Constructs a new instance of the androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getDrawerToggleDelegate(): androidx.legacy.app.ActionBarDrawerToggle.Delegate });
					public constructor();
					public getDrawerToggleDelegate(): androidx.legacy.app.ActionBarDrawerToggle.Delegate;
				}
				export class SetIndicatorInfo {
					public static class: java.lang.Class<androidx.legacy.app.ActionBarDrawerToggle.SetIndicatorInfo>;
				}
				export class SlideDrawable {
					public static class: java.lang.Class<androidx.legacy.app.ActionBarDrawerToggle.SlideDrawable>;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setOffset(param0: number): void;
					public setPosition(param0: number): void;
					public getPosition(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module legacy {
		export module content {
			export abstract class WakefulBroadcastReceiver {
				public static class: java.lang.Class<androidx.legacy.content.WakefulBroadcastReceiver>;
				public static completeWakefulIntent(param0: globalAndroid.content.Intent): boolean;
				public static startWakefulService(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): globalAndroid.content.ComponentName;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module legacy {
		export module widget {
			export class Space {
				public static class: java.lang.Class<androidx.legacy.widget.Space>;
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				/** @deprecated */
				public constructor(param0: globalAndroid.content.Context);
				/** @deprecated */
				public onMeasure(param0: number, param1: number): void;
				/** @deprecated */
				public draw(param0: globalAndroid.graphics.Canvas): void;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class AndroidViewModel extends androidx.lifecycle.ViewModel {
			public static class: java.lang.Class<androidx.lifecycle.AndroidViewModel>;
			public constructor();
			public constructor(param0: globalAndroid.app.Application);
			public getApplication(): globalAndroid.app.Application;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class ClassesInfoCache {
			public static class: java.lang.Class<androidx.lifecycle.ClassesInfoCache>;
		}
		export module ClassesInfoCache {
			export class CallbackInfo {
				public static class: java.lang.Class<androidx.lifecycle.ClassesInfoCache.CallbackInfo>;
			}
			export class MethodReference {
				public static class: java.lang.Class<androidx.lifecycle.ClassesInfoCache.MethodReference>;
				public hashCode(): number;
				public equals(param0: any): boolean;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class CompositeGeneratedAdaptersObserver extends androidx.lifecycle.GenericLifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.CompositeGeneratedAdaptersObserver>;
			public onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export abstract class ComputableLiveData<T> extends java.lang.Object {
			public static class: java.lang.Class<androidx.lifecycle.ComputableLiveData<any>>;
			public constructor(param0: java.util.concurrent.Executor);
			public invalidate(): void;
			public compute(): T;
			public getLiveData(): androidx.lifecycle.LiveData<T>;
			public constructor();
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class FullLifecycleObserver extends androidx.lifecycle.LifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.FullLifecycleObserver>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.FullLifecycleObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { onCreate(param0: androidx.lifecycle.LifecycleOwner): void; onStart(param0: androidx.lifecycle.LifecycleOwner): void; onResume(param0: androidx.lifecycle.LifecycleOwner): void; onPause(param0: androidx.lifecycle.LifecycleOwner): void; onStop(param0: androidx.lifecycle.LifecycleOwner): void; onDestroy(param0: androidx.lifecycle.LifecycleOwner): void });
			public constructor();
			public onDestroy(param0: androidx.lifecycle.LifecycleOwner): void;
			public onStop(param0: androidx.lifecycle.LifecycleOwner): void;
			public onPause(param0: androidx.lifecycle.LifecycleOwner): void;
			public onCreate(param0: androidx.lifecycle.LifecycleOwner): void;
			public onStart(param0: androidx.lifecycle.LifecycleOwner): void;
			public onResume(param0: androidx.lifecycle.LifecycleOwner): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class FullLifecycleObserverAdapter extends androidx.lifecycle.GenericLifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.FullLifecycleObserverAdapter>;
			public onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class GeneratedAdapter {
			public static class: java.lang.Class<androidx.lifecycle.GeneratedAdapter>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.GeneratedAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { callMethods(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event, param2: boolean, param3: androidx.lifecycle.MethodCallsLogger): void });
			public constructor();
			public callMethods(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event, param2: boolean, param3: androidx.lifecycle.MethodCallsLogger): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class GenericLifecycleObserver extends androidx.lifecycle.LifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.GenericLifecycleObserver>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.GenericLifecycleObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void });
			public constructor();
			public onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export abstract class Lifecycle {
			public static class: java.lang.Class<androidx.lifecycle.Lifecycle>;
			public addObserver(param0: androidx.lifecycle.LifecycleObserver): void;
			public constructor();
			public getCurrentState(): androidx.lifecycle.Lifecycle.State;
			public removeObserver(param0: androidx.lifecycle.LifecycleObserver): void;
		}
		export module Lifecycle {
			export class Event {
				public static class: java.lang.Class<androidx.lifecycle.Lifecycle.Event>;
				public static ON_CREATE: androidx.lifecycle.Lifecycle.Event;
				public static ON_START: androidx.lifecycle.Lifecycle.Event;
				public static ON_RESUME: androidx.lifecycle.Lifecycle.Event;
				public static ON_PAUSE: androidx.lifecycle.Lifecycle.Event;
				public static ON_STOP: androidx.lifecycle.Lifecycle.Event;
				public static ON_DESTROY: androidx.lifecycle.Lifecycle.Event;
				public static ON_ANY: androidx.lifecycle.Lifecycle.Event;
				public static values(): native.Array<androidx.lifecycle.Lifecycle.Event>;
				public static valueOf(param0: string): androidx.lifecycle.Lifecycle.Event;
			}
			export class State {
				public static class: java.lang.Class<androidx.lifecycle.Lifecycle.State>;
				public static DESTROYED: androidx.lifecycle.Lifecycle.State;
				public static INITIALIZED: androidx.lifecycle.Lifecycle.State;
				public static CREATED: androidx.lifecycle.Lifecycle.State;
				public static STARTED: androidx.lifecycle.Lifecycle.State;
				public static RESUMED: androidx.lifecycle.Lifecycle.State;
				public isAtLeast(param0: androidx.lifecycle.Lifecycle.State): boolean;
				public static values(): native.Array<androidx.lifecycle.Lifecycle.State>;
				public static valueOf(param0: string): androidx.lifecycle.Lifecycle.State;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class LifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.LifecycleObserver>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.LifecycleObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class LifecycleOwner {
			public static class: java.lang.Class<androidx.lifecycle.LifecycleOwner>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.LifecycleOwner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { getLifecycle(): androidx.lifecycle.Lifecycle });
			public constructor();
			public getLifecycle(): androidx.lifecycle.Lifecycle;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class LifecycleRegistry extends androidx.lifecycle.Lifecycle {
			public static class: java.lang.Class<androidx.lifecycle.LifecycleRegistry>;
			public constructor(param0: androidx.lifecycle.LifecycleOwner);
			public markState(param0: androidx.lifecycle.Lifecycle.State): void;
			public addObserver(param0: androidx.lifecycle.LifecycleObserver): void;
			public getObserverCount(): number;
			public constructor();
			public handleLifecycleEvent(param0: androidx.lifecycle.Lifecycle.Event): void;
			public getCurrentState(): androidx.lifecycle.Lifecycle.State;
			public removeObserver(param0: androidx.lifecycle.LifecycleObserver): void;
		}
		export module LifecycleRegistry {
			export class ObserverWithState {
				public static class: java.lang.Class<androidx.lifecycle.LifecycleRegistry.ObserverWithState>;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class LifecycleRegistryOwner extends androidx.lifecycle.LifecycleOwner {
			public static class: java.lang.Class<androidx.lifecycle.LifecycleRegistryOwner>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.LifecycleRegistryOwner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { getLifecycle(): androidx.lifecycle.LifecycleRegistry; getLifecycle(): androidx.lifecycle.Lifecycle });
			public constructor();
			public getLifecycle(): androidx.lifecycle.LifecycleRegistry;
			public getLifecycle(): androidx.lifecycle.Lifecycle;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class Lifecycling {
			public static class: java.lang.Class<androidx.lifecycle.Lifecycling>;
			public static getAdapterName(param0: string): string;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export abstract class LiveData<T> extends java.lang.Object {
			public static class: java.lang.Class<androidx.lifecycle.LiveData<any>>;
			public onInactive(): void;
			public onActive(): void;
			public postValue(param0: T): void;
			public setValue(param0: T): void;
			public hasObservers(): boolean;
			public observe(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Observer<any>): void;
			public hasActiveObservers(): boolean;
			public removeObserver(param0: androidx.lifecycle.Observer<any>): void;
			public constructor();
			public observeForever(param0: androidx.lifecycle.Observer<any>): void;
			public getValue(): T;
			public removeObservers(param0: androidx.lifecycle.LifecycleOwner): void;
		}
		export module LiveData {
			export class AlwaysActiveObserver extends androidx.lifecycle.LiveData.ObserverWrapper {
				public static class: java.lang.Class<androidx.lifecycle.LiveData.AlwaysActiveObserver>;
			}
			export class LifecycleBoundObserver extends androidx.lifecycle.LiveData.ObserverWrapper implements androidx.lifecycle.GenericLifecycleObserver {
				public static class: java.lang.Class<androidx.lifecycle.LiveData.LifecycleBoundObserver>;
				public onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void;
			}
			export abstract class ObserverWrapper {
				public static class: java.lang.Class<androidx.lifecycle.LiveData.ObserverWrapper>;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class MediatorLiveData<T> extends androidx.lifecycle.MutableLiveData<any> {
			public static class: java.lang.Class<androidx.lifecycle.MediatorLiveData<any>>;
			public onInactive(): void;
			public removeSource(param0: androidx.lifecycle.LiveData<any>): void;
			public onActive(): void;
			public constructor();
			public addSource(param0: androidx.lifecycle.LiveData<any>, param1: androidx.lifecycle.Observer<any>): void;
		}
		export module MediatorLiveData {
			export class Source<V> extends androidx.lifecycle.Observer<any> {
				public static class: java.lang.Class<androidx.lifecycle.MediatorLiveData.Source<any>>;
				public onChanged(param0: any): void;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class MethodCallsLogger {
			public static class: java.lang.Class<androidx.lifecycle.MethodCallsLogger>;
			public constructor();
			public approveCall(param0: string, param1: number): boolean;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class MutableLiveData<T> extends androidx.lifecycle.LiveData<any> {
			public static class: java.lang.Class<androidx.lifecycle.MutableLiveData<any>>;
			public postValue(param0: any): void;
			public constructor();
			public setValue(param0: any): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class Observer<T> extends java.lang.Object {
			public static class: java.lang.Class<androidx.lifecycle.Observer<any>>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.Observer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { onChanged(param0: T): void });
			public constructor();
			public onChanged(param0: T): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class OnLifecycleEvent {
			public static class: java.lang.Class<androidx.lifecycle.OnLifecycleEvent>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.OnLifecycleEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): androidx.lifecycle.Lifecycle.Event });
			public constructor();
			public value(): androidx.lifecycle.Lifecycle.Event;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class ReflectiveGenericLifecycleObserver extends androidx.lifecycle.GenericLifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.ReflectiveGenericLifecycleObserver>;
			public onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class ReportFragment {
			public static class: java.lang.Class<androidx.lifecycle.ReportFragment>;
			public static injectIfNeededIn(param0: globalAndroid.app.Activity): void;
			public onStart(): void;
			public onResume(): void;
			public onPause(): void;
			public constructor();
			public onDestroy(): void;
			public onActivityCreated(param0: globalAndroid.os.Bundle): void;
			public onStop(): void;
		}
		export module ReportFragment {
			export class ActivityInitializationListener {
				public static class: java.lang.Class<androidx.lifecycle.ReportFragment.ActivityInitializationListener>;
				/**
				 * Constructs a new instance of the androidx.lifecycle.ReportFragment$ActivityInitializationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onCreate(): void; onStart(): void; onResume(): void });
				public constructor();
				public onResume(): void;
				public onStart(): void;
				public onCreate(): void;
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class SingleGeneratedAdapterObserver extends androidx.lifecycle.GenericLifecycleObserver {
			public static class: java.lang.Class<androidx.lifecycle.SingleGeneratedAdapterObserver>;
			public onStateChanged(param0: androidx.lifecycle.LifecycleOwner, param1: androidx.lifecycle.Lifecycle.Event): void;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class Transformations {
			public static class: java.lang.Class<androidx.lifecycle.Transformations>;
			public static map(param0: androidx.lifecycle.LiveData<any>, param1: androidx.arch.core.util.Function<any, any>): androidx.lifecycle.LiveData<any>;
			public static switchMap(param0: androidx.lifecycle.LiveData<any>, param1: androidx.arch.core.util.Function<any, any>): androidx.lifecycle.LiveData<any>;
		}
	}
}

declare module androidx {
	export module lifecycle {
		export abstract class ViewModel {
			public static class: java.lang.Class<androidx.lifecycle.ViewModel>;
			public onCleared(): void;
			public constructor();
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class ViewModelProvider {
			public static class: java.lang.Class<androidx.lifecycle.ViewModelProvider>;
			public get(param0: string, param1: java.lang.Class): androidx.lifecycle.ViewModel;
			public constructor(param0: androidx.lifecycle.ViewModelStoreOwner, param1: androidx.lifecycle.ViewModelProvider.Factory);
			public constructor(param0: androidx.lifecycle.ViewModelStore, param1: androidx.lifecycle.ViewModelProvider.Factory);
			public get(param0: java.lang.Class): androidx.lifecycle.ViewModel;
		}
		export module ViewModelProvider {
			export class AndroidViewModelFactory extends androidx.lifecycle.ViewModelProvider.NewInstanceFactory {
				public static class: java.lang.Class<androidx.lifecycle.ViewModelProvider.AndroidViewModelFactory>;
				public constructor(param0: globalAndroid.app.Application);
				public static getInstance(param0: globalAndroid.app.Application): androidx.lifecycle.ViewModelProvider.AndroidViewModelFactory;
				public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
				public constructor();
			}
			export class Factory {
				public static class: java.lang.Class<androidx.lifecycle.ViewModelProvider.Factory>;
				/**
				 * Constructs a new instance of the androidx.lifecycle.ViewModelProvider$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { create(param0: java.lang.Class): androidx.lifecycle.ViewModel });
				public constructor();
				public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
			}
			export class NewInstanceFactory extends androidx.lifecycle.ViewModelProvider.Factory {
				public static class: java.lang.Class<androidx.lifecycle.ViewModelProvider.NewInstanceFactory>;
				public create(param0: java.lang.Class): androidx.lifecycle.ViewModel;
				public constructor();
			}
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class ViewModelStore {
			public static class: java.lang.Class<androidx.lifecycle.ViewModelStore>;
			public clear(): void;
			public constructor();
		}
	}
}

declare module androidx {
	export module lifecycle {
		export class ViewModelStoreOwner {
			public static class: java.lang.Class<androidx.lifecycle.ViewModelStoreOwner>;
			/**
			 * Constructs a new instance of the androidx.lifecycle.ViewModelStoreOwner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { getViewModelStore(): androidx.lifecycle.ViewModelStore });
			public constructor();
			public getViewModelStore(): androidx.lifecycle.ViewModelStore;
		}
	}
}

declare module androidx {
	export module loader {
		export module app {
			export abstract class LoaderManager {
				public static class: java.lang.Class<androidx.loader.app.LoaderManager>;
				public static getInstance(param0: androidx.lifecycle.LifecycleOwner): androidx.loader.app.LoaderManager;
				public markForRedelivery(): void;
				public restartLoader(param0: number, param1: globalAndroid.os.Bundle, param2: androidx.loader.app.LoaderManager.LoaderCallbacks<any>): androidx.loader.content.Loader<any>;
				public getLoader(param0: number): androidx.loader.content.Loader<any>;
				public initLoader(param0: number, param1: globalAndroid.os.Bundle, param2: androidx.loader.app.LoaderManager.LoaderCallbacks<any>): androidx.loader.content.Loader<any>;
				public static enableDebugLogging(param0: boolean): void;
				public destroyLoader(param0: number): void;
				/** @deprecated */
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public hasRunningLoaders(): boolean;
				public constructor();
			}
			export module LoaderManager {
				export class LoaderCallbacks<D> extends java.lang.Object {
					public static class: java.lang.Class<androidx.loader.app.LoaderManager.LoaderCallbacks<any>>;
					/**
					 * Constructs a new instance of the androidx.loader.app.LoaderManager$LoaderCallbacks interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onCreateLoader(param0: number, param1: globalAndroid.os.Bundle): androidx.loader.content.Loader<D>; onLoadFinished(param0: androidx.loader.content.Loader<D>, param1: D): void; onLoaderReset(param0: androidx.loader.content.Loader<D>): void });
					public constructor();
					public onLoadFinished(param0: androidx.loader.content.Loader<D>, param1: D): void;
					public onCreateLoader(param0: number, param1: globalAndroid.os.Bundle): androidx.loader.content.Loader<D>;
					public onLoaderReset(param0: androidx.loader.content.Loader<D>): void;
				}
			}
		}
	}
}

declare module androidx {
	export module loader {
		export module app {
			export class LoaderManagerImpl extends androidx.loader.app.LoaderManager {
				public static class: java.lang.Class<androidx.loader.app.LoaderManagerImpl>;
				public markForRedelivery(): void;
				public restartLoader(param0: number, param1: globalAndroid.os.Bundle, param2: androidx.loader.app.LoaderManager.LoaderCallbacks<any>): androidx.loader.content.Loader<any>;
				public getLoader(param0: number): androidx.loader.content.Loader<any>;
				public initLoader(param0: number, param1: globalAndroid.os.Bundle, param2: androidx.loader.app.LoaderManager.LoaderCallbacks<any>): androidx.loader.content.Loader<any>;
				public destroyLoader(param0: number): void;
				public toString(): string;
				/** @deprecated */
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public hasRunningLoaders(): boolean;
			}
			export module LoaderManagerImpl {
				export class LoaderInfo<D> extends androidx.lifecycle.MutableLiveData<any> implements androidx.loader.content.Loader.OnLoadCompleteListener<any> {
					public static class: java.lang.Class<androidx.loader.app.LoaderManagerImpl.LoaderInfo<any>>;
					public onInactive(): void;
					public removeObserver(param0: androidx.lifecycle.Observer<any>): void;
					public toString(): string;
					public setValue(param0: any): void;
					public onActive(): void;
					public onLoadComplete(param0: androidx.loader.content.Loader<any>, param1: any): void;
					public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				}
				export class LoaderObserver<D> extends androidx.lifecycle.Observer<any> {
					public static class: java.lang.Class<androidx.loader.app.LoaderManagerImpl.LoaderObserver<any>>;
					public toString(): string;
					public onChanged(param0: any): void;
					public dump(param0: string, param1: java.io.PrintWriter): void;
				}
				export class LoaderViewModel extends androidx.lifecycle.ViewModel {
					public static class: java.lang.Class<androidx.loader.app.LoaderManagerImpl.LoaderViewModel>;
					public onCleared(): void;
					public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				}
			}
		}
	}
}

declare module androidx {
	export module loader {
		export module content {
			export abstract class AsyncTaskLoader<D> extends androidx.loader.content.Loader<any> {
				public static class: java.lang.Class<androidx.loader.content.AsyncTaskLoader<any>>;
				public onLoadInBackground(): any;
				public onForceLoad(): void;
				public setUpdateThrottle(param0: number): void;
				public constructor(param0: globalAndroid.content.Context);
				public onCancelLoad(): boolean;
				public cancelLoadInBackground(): void;
				public onCanceled(param0: any): void;
				public loadInBackground(): any;
				public isLoadInBackgroundCanceled(): boolean;
				public waitForLoader(): void;
				/** @deprecated */
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
			}
			export module AsyncTaskLoader {
				export class LoadTask extends androidx.loader.content.ModernAsyncTask<java.lang.Void, java.lang.Void, any> implements java.lang.Runnable {
					public static class: java.lang.Class<androidx.loader.content.AsyncTaskLoader.LoadTask>;
					public onCancelled(param0: any): void;
					public run(): void;
					public doInBackground(param0: native.Array<java.lang.Void>): any;
					public onCancelled(): void;
					public doInBackground(param0: native.Array<any>): any;
					public onPostExecute(param0: any): void;
					public waitForLoader(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module loader {
		export module content {
			export class CursorLoader extends androidx.loader.content.AsyncTaskLoader<globalAndroid.database.Cursor> {
				public static class: java.lang.Class<androidx.loader.content.CursorLoader>;
				public onStartLoading(): void;
				public deliverResult(param0: any): void;
				public onStopLoading(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: native.Array<string>, param3: string, param4: native.Array<string>, param5: string);
				public setSelectionArgs(param0: native.Array<string>): void;
				public getSortOrder(): string;
				public getSelection(): string;
				public cancelLoadInBackground(): void;
				public getProjection(): native.Array<string>;
				public onCanceled(param0: any): void;
				public loadInBackground(): any;
				public setUri(param0: globalAndroid.net.Uri): void;
				public loadInBackground(): globalAndroid.database.Cursor;
				/** @deprecated */
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public setProjection(param0: native.Array<string>): void;
				public onReset(): void;
				public getUri(): globalAndroid.net.Uri;
				public onCanceled(param0: globalAndroid.database.Cursor): void;
				public deliverResult(param0: globalAndroid.database.Cursor): void;
				public getSelectionArgs(): native.Array<string>;
				public constructor(param0: globalAndroid.content.Context);
				public setSortOrder(param0: string): void;
				public setSelection(param0: string): void;
			}
		}
	}
}

declare module androidx {
	export module loader {
		export module content {
			export class Loader<D> extends java.lang.Object {
				public static class: java.lang.Class<androidx.loader.content.Loader<any>>;
				public onStartLoading(): void;
				public rollbackContentChanged(): void;
				public onStopLoading(): void;
				public isStarted(): boolean;
				public takeContentChanged(): boolean;
				public isAbandoned(): boolean;
				public stopLoading(): void;
				public reset(): void;
				public constructor(param0: globalAndroid.content.Context);
				public unregisterListener(param0: androidx.loader.content.Loader.OnLoadCompleteListener<D>): void;
				public onCancelLoad(): boolean;
				public onAbandon(): void;
				public startLoading(): void;
				public dataToString(param0: D): string;
				public onForceLoad(): void;
				public getContext(): globalAndroid.content.Context;
				public deliverResult(param0: D): void;
				public getId(): number;
				public cancelLoad(): boolean;
				public toString(): string;
				/** @deprecated */
				public dump(param0: string, param1: java.io.FileDescriptor, param2: java.io.PrintWriter, param3: native.Array<string>): void;
				public onReset(): void;
				public onContentChanged(): void;
				public registerOnLoadCanceledListener(param0: androidx.loader.content.Loader.OnLoadCanceledListener<D>): void;
				public deliverCancellation(): void;
				public registerListener(param0: number, param1: androidx.loader.content.Loader.OnLoadCompleteListener<D>): void;
				public commitContentChanged(): void;
				public abandon(): void;
				public isReset(): boolean;
				public unregisterOnLoadCanceledListener(param0: androidx.loader.content.Loader.OnLoadCanceledListener<D>): void;
				public forceLoad(): void;
			}
			export module Loader {
				export class ForceLoadContentObserver {
					public static class: java.lang.Class<androidx.loader.content.Loader.ForceLoadContentObserver>;
					public onChange(param0: boolean): void;
					public deliverSelfNotifications(): boolean;
					public constructor(param0: androidx.loader.content.Loader<any>);
				}
				export class OnLoadCanceledListener<D> extends java.lang.Object {
					public static class: java.lang.Class<androidx.loader.content.Loader.OnLoadCanceledListener<any>>;
					/**
					 * Constructs a new instance of the androidx.loader.content.Loader$OnLoadCanceledListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onLoadCanceled(param0: androidx.loader.content.Loader<D>): void });
					public constructor();
					public onLoadCanceled(param0: androidx.loader.content.Loader<D>): void;
				}
				export class OnLoadCompleteListener<D> extends java.lang.Object {
					public static class: java.lang.Class<androidx.loader.content.Loader.OnLoadCompleteListener<any>>;
					/**
					 * Constructs a new instance of the androidx.loader.content.Loader$OnLoadCompleteListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onLoadComplete(param0: androidx.loader.content.Loader<D>, param1: D): void });
					public constructor();
					public onLoadComplete(param0: androidx.loader.content.Loader<D>, param1: D): void;
				}
			}
		}
	}
}

declare module androidx {
	export module loader {
		export module content {
			export abstract class ModernAsyncTask<Params, Progress, Result> extends java.lang.Object {
				public static class: java.lang.Class<androidx.loader.content.ModernAsyncTask<any, any, any>>;
				public static THREAD_POOL_EXECUTOR: java.util.concurrent.Executor;
				public onPostExecute(param0: Result): void;
				public getStatus(): androidx.loader.content.ModernAsyncTask.Status;
				public onProgressUpdate(param0: native.Array<Progress>): void;
				public get(): Result;
				public execute(param0: native.Array<Params>): androidx.loader.content.ModernAsyncTask<Params, Progress, Result>;
				public static setDefaultExecutor(param0: java.util.concurrent.Executor): void;
				public doInBackground(param0: native.Array<Params>): Result;
				public executeOnExecutor(param0: java.util.concurrent.Executor, param1: native.Array<Params>): androidx.loader.content.ModernAsyncTask<Params, Progress, Result>;
				public publishProgress(param0: native.Array<Progress>): void;
				public onPreExecute(): void;
				public static execute(param0: java.lang.Runnable): void;
				public onCancelled(param0: Result): void;
				public cancel(param0: boolean): boolean;
				public onCancelled(): void;
				public isCancelled(): boolean;
				public get(param0: number, param1: java.util.concurrent.TimeUnit): Result;
			}
			export module ModernAsyncTask {
				export class AsyncTaskResult<Data> extends java.lang.Object {
					public static class: java.lang.Class<androidx.loader.content.ModernAsyncTask.AsyncTaskResult<any>>;
				}
				export class InternalHandler {
					public static class: java.lang.Class<androidx.loader.content.ModernAsyncTask.InternalHandler>;
					public handleMessage(param0: globalAndroid.os.Message): void;
				}
				export class Status {
					public static class: java.lang.Class<androidx.loader.content.ModernAsyncTask.Status>;
					public static PENDING: androidx.loader.content.ModernAsyncTask.Status;
					public static RUNNING: androidx.loader.content.ModernAsyncTask.Status;
					public static FINISHED: androidx.loader.content.ModernAsyncTask.Status;
					public static values(): native.Array<androidx.loader.content.ModernAsyncTask.Status>;
					public static valueOf(param0: string): androidx.loader.content.ModernAsyncTask.Status;
				}
				export abstract class WorkerRunnable<Params, Result> extends java.util.concurrent.Callable<any> {
					public static class: java.lang.Class<androidx.loader.content.ModernAsyncTask.WorkerRunnable<any, any>>;
				}
			}
		}
	}
}

declare module androidx {
	export module localbroadcastmanager {
		export module content {
			export class LocalBroadcastManager {
				public static class: java.lang.Class<androidx.localbroadcastmanager.content.LocalBroadcastManager>;
				public static getInstance(param0: globalAndroid.content.Context): androidx.localbroadcastmanager.content.LocalBroadcastManager;
				public registerReceiver(param0: globalAndroid.content.BroadcastReceiver, param1: globalAndroid.content.IntentFilter): void;
				public sendBroadcast(param0: globalAndroid.content.Intent): boolean;
				public unregisterReceiver(param0: globalAndroid.content.BroadcastReceiver): void;
				public sendBroadcastSync(param0: globalAndroid.content.Intent): void;
			}
			export module LocalBroadcastManager {
				export class BroadcastRecord {
					public static class: java.lang.Class<androidx.localbroadcastmanager.content.LocalBroadcastManager.BroadcastRecord>;
				}
				export class ReceiverRecord {
					public static class: java.lang.Class<androidx.localbroadcastmanager.content.LocalBroadcastManager.ReceiverRecord>;
					public toString(): string;
				}
			}
		}
	}
}

declare module androidx {
	export module print {
		export class PrintHelper {
			public static class: java.lang.Class<androidx.print.PrintHelper>;
			public static SCALE_MODE_FIT: number;
			public static SCALE_MODE_FILL: number;
			public static COLOR_MODE_MONOCHROME: number;
			public static COLOR_MODE_COLOR: number;
			public static ORIENTATION_LANDSCAPE: number;
			public static ORIENTATION_PORTRAIT: number;
			public getScaleMode(): number;
			public static systemSupportsPrint(): boolean;
			public printBitmap(param0: string, param1: globalAndroid.graphics.Bitmap, param2: androidx.print.PrintHelper.OnPrintFinishCallback): void;
			public printBitmap(param0: string, param1: globalAndroid.graphics.Bitmap): void;
			public setScaleMode(param0: number): void;
			public constructor(param0: globalAndroid.content.Context);
			public getColorMode(): number;
			public getOrientation(): number;
			public printBitmap(param0: string, param1: globalAndroid.net.Uri): void;
			public setColorMode(param0: number): void;
			public setOrientation(param0: number): void;
			public printBitmap(param0: string, param1: globalAndroid.net.Uri, param2: androidx.print.PrintHelper.OnPrintFinishCallback): void;
		}
		export module PrintHelper {
			export class OnPrintFinishCallback {
				public static class: java.lang.Class<androidx.print.PrintHelper.OnPrintFinishCallback>;
				/**
				 * Constructs a new instance of the androidx.print.PrintHelper$OnPrintFinishCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { onFinish(): void });
				public constructor();
				public onFinish(): void;
			}
			export class PrintBitmapAdapter {
				public static class: java.lang.Class<androidx.print.PrintHelper.PrintBitmapAdapter>;
				public onLayout(param0: any, param1: any, param2: globalAndroid.os.CancellationSignal, param3: any, param4: globalAndroid.os.Bundle): void;
				public onWrite(param0: native.Array<any>, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.CancellationSignal, param3: any): void;
				public onFinish(): void;
			}
			export class PrintUriAdapter {
				public static class: java.lang.Class<androidx.print.PrintHelper.PrintUriAdapter>;
				public onLayout(param0: any, param1: any, param2: globalAndroid.os.CancellationSignal, param3: any, param4: globalAndroid.os.Bundle): void;
				public onWrite(param0: native.Array<any>, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.CancellationSignal, param3: any): void;
				public onFinish(): void;
			}
		}
	}
}

declare module androidx {
	export module slidingpanelayout {
		export module widget {
			export class SlidingPaneLayout {
				public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout>;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
				public setPanelSlideListener(param0: androidx.slidingpanelayout.widget.SlidingPaneLayout.PanelSlideListener): void;
				public setSliderFadeColor(param0: number): void;
				public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public openPane(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				/** @deprecated */
				public canSlide(): boolean;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public canScroll(param0: globalAndroid.view.View, param1: boolean, param2: number, param3: number, param4: number): boolean;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public getParallaxDistance(): number;
				public getCoveredFadeColor(): number;
				public constructor(param0: globalAndroid.content.Context);
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public closePane(): boolean;
				public setShadowDrawableLeft(param0: globalAndroid.graphics.drawable.Drawable): void;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public setCoveredFadeColor(param0: number): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public getSliderFadeColor(): number;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public setShadowResourceRight(param0: number): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				/** @deprecated */
				public smoothSlideClosed(): void;
				public computeScroll(): void;
				public setParallaxDistance(param0: number): void;
				public setShadowDrawableRight(param0: globalAndroid.graphics.drawable.Drawable): void;
				public isSlideable(): boolean;
				/** @deprecated */
				public setShadowResource(param0: number): void;
				public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
				public onMeasure(param0: number, param1: number): void;
				public onDetachedFromWindow(): void;
				/** @deprecated */
				public smoothSlideOpen(): void;
				public isOpen(): boolean;
				public drawChild(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.view.View, param2: number): boolean;
				/** @deprecated */
				public setShadowDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setShadowResourceLeft(param0: number): void;
				public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
				public onAttachedToWindow(): void;
			}
			export module SlidingPaneLayout {
				export class androidxslidingpanelayoutwidgetSlidingPaneLayoutAccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.AccessibilityDelegate>;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
					public filter(param0: globalAndroid.view.View): boolean;
				}
				export type AccessibilityDelegate = androidxslidingpanelayoutwidgetSlidingPaneLayoutAccessibilityDelegate;
				export class DisableLayerRunnable {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.DisableLayerRunnable>;
					public run(): void;
				}
				export class DragHelperCallback extends androidx.customview.widget.ViewDragHelper.Callback {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.DragHelperCallback>;
					public onViewCaptured(param0: globalAndroid.view.View, param1: number): void;
					public clampViewPositionHorizontal(param0: globalAndroid.view.View, param1: number, param2: number): number;
					public onViewPositionChanged(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					public onViewDragStateChanged(param0: number): void;
					public getViewHorizontalDragRange(param0: globalAndroid.view.View): number;
					public clampViewPositionVertical(param0: globalAndroid.view.View, param1: number, param2: number): number;
					public onEdgeDragStarted(param0: number, param1: number): void;
					public tryCaptureView(param0: globalAndroid.view.View, param1: number): boolean;
					public onViewReleased(param0: globalAndroid.view.View, param1: number, param2: number): void;
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.LayoutParams>;
					public weight: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor(param0: androidx.slidingpanelayout.widget.SlidingPaneLayout.LayoutParams);
					public constructor();
					public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
					public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
					public constructor(param0: number, param1: number);
				}
				export class PanelSlideListener {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.PanelSlideListener>;
					/**
					 * Constructs a new instance of the androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onPanelSlide(param0: globalAndroid.view.View, param1: number): void; onPanelOpened(param0: globalAndroid.view.View): void; onPanelClosed(param0: globalAndroid.view.View): void });
					public constructor();
					public onPanelSlide(param0: globalAndroid.view.View, param1: number): void;
					public onPanelClosed(param0: globalAndroid.view.View): void;
					public onPanelOpened(param0: globalAndroid.view.View): void;
				}
				export class SavedState extends androidx.customview.view.AbsSavedState {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.slidingpanelayout.widget.SlidingPaneLayout.SavedState>;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
				}
				export class SimplePanelSlideListener extends androidx.slidingpanelayout.widget.SlidingPaneLayout.PanelSlideListener {
					public static class: java.lang.Class<androidx.slidingpanelayout.widget.SlidingPaneLayout.SimplePanelSlideListener>;
					public onPanelSlide(param0: globalAndroid.view.View, param1: number): void;
					public onPanelClosed(param0: globalAndroid.view.View): void;
					public constructor();
					public onPanelOpened(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module androidx {
	export module swiperefreshlayout {
		export module widget {
			export class CircleImageView {
				public static class: java.lang.Class<androidx.swiperefreshlayout.widget.CircleImageView>;
				public setBackgroundColor(param0: number): void;
				public onAnimationEnd(): void;
				public setAnimationListener(param0: globalAndroid.view.animation.Animation.AnimationListener): void;
				public onMeasure(param0: number, param1: number): void;
				public setBackgroundColorRes(param0: number): void;
				public onAnimationStart(): void;
			}
			export module CircleImageView {
				export class OvalShadow {
					public static class: java.lang.Class<androidx.swiperefreshlayout.widget.CircleImageView.OvalShadow>;
					public draw(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.Paint): void;
					public onResize(param0: number, param1: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module swiperefreshlayout {
		export module widget {
			export class CircularProgressDrawable {
				public static class: java.lang.Class<androidx.swiperefreshlayout.widget.CircularProgressDrawable>;
				public static LARGE: number;
				public static DEFAULT: number;
				public getArrowWidth(): number;
				public setArrowDimensions(param0: number, param1: number): void;
				public setColorSchemeColors(param0: native.Array<number>): void;
				public getEndTrim(): number;
				public getArrowEnabled(): boolean;
				public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
				public getStrokeWidth(): number;
				public getStartTrim(): number;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public getAlpha(): number;
				public setStartEndTrim(param0: number, param1: number): void;
				public setProgressRotation(param0: number): void;
				public getColorSchemeColors(): native.Array<number>;
				public constructor(param0: globalAndroid.content.Context);
				public start(): void;
				public getArrowScale(): number;
				public setArrowEnabled(param0: boolean): void;
				public isRunning(): boolean;
				public getCenterRadius(): number;
				public getArrowHeight(): number;
				public setStrokeWidth(param0: number): void;
				public setBackgroundColor(param0: number): void;
				public setArrowScale(param0: number): void;
				public setAlpha(param0: number): void;
				public setStrokeCap(param0: globalAndroid.graphics.Paint.Cap): void;
				public getBackgroundColor(): number;
				public setStyle(param0: number): void;
				public stop(): void;
				public getStrokeCap(): globalAndroid.graphics.Paint.Cap;
				public getProgressRotation(): number;
				public getOpacity(): number;
				public setCenterRadius(param0: number): void;
			}
			export module CircularProgressDrawable {
				export class ProgressDrawableSize {
					public static class: java.lang.Class<androidx.swiperefreshlayout.widget.CircularProgressDrawable.ProgressDrawableSize>;
					/**
					 * Constructs a new instance of the androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class Ring {
					public static class: java.lang.Class<androidx.swiperefreshlayout.widget.CircularProgressDrawable.Ring>;
				}
			}
		}
	}
}

declare module androidx {
	export module swiperefreshlayout {
		export module widget {
			export class SwipeRefreshLayout implements androidx.core.view.NestedScrollingParent, androidx.core.view.NestedScrollingChild {
				public static class: java.lang.Class<androidx.swiperefreshlayout.widget.SwipeRefreshLayout>;
				public static LARGE: number;
				public static DEFAULT: number;
				public static DEFAULT_SLINGSHOT_DISTANCE: number;
				public mFrom: number;
				public mOriginalOffsetTop: number;
				public setColorSchemeColors(param0: native.Array<number>): void;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public setSlingshotDistance(param0: number): void;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				public getProgressCircleDiameter(): number;
				public setOnChildScrollUpCallback(param0: androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnChildScrollUpCallback): void;
				public setSize(param0: number): void;
				public setEnabled(param0: boolean): void;
				public setProgressViewEndTarget(param0: boolean, param1: number): void;
				public setOnRefreshListener(param0: androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnRefreshListener): void;
				/** @deprecated */
				public setProgressBackgroundColor(param0: number): void;
				public setDistanceToTriggerSync(param0: number): void;
				public setRefreshing(param0: boolean): void;
				public setNestedScrollingEnabled(param0: boolean): void;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public canChildScrollUp(): boolean;
				public getNestedScrollAxes(): number;
				public dispatchNestedPreFling(param0: number, param1: number): boolean;
				public isRefreshing(): boolean;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public getProgressViewStartOffset(): number;
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public setColorSchemeResources(param0: native.Array<number>): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setProgressBackgroundColorSchemeColor(param0: number): void;
				public setProgressViewOffset(param0: boolean, param1: number, param2: number): void;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public getProgressViewEndOffset(): number;
				public getChildDrawingOrder(param0: number, param1: number): number;
				public stopNestedScroll(): void;
				public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
				public startNestedScroll(param0: number): boolean;
				public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
				public hasNestedScrollingParent(): boolean;
				public onMeasure(param0: number, param1: number): void;
				/** @deprecated */
				public setColorScheme(param0: native.Array<number>): void;
				public onDetachedFromWindow(): void;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public setProgressBackgroundColorSchemeResource(param0: number): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
				public isNestedScrollingEnabled(): boolean;
			}
			export module SwipeRefreshLayout {
				export class OnChildScrollUpCallback {
					public static class: java.lang.Class<androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnChildScrollUpCallback>;
					/**
					 * Constructs a new instance of the androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { canChildScrollUp(param0: androidx.swiperefreshlayout.widget.SwipeRefreshLayout, param1: globalAndroid.view.View): boolean });
					public constructor();
					public canChildScrollUp(param0: androidx.swiperefreshlayout.widget.SwipeRefreshLayout, param1: globalAndroid.view.View): boolean;
				}
				export class OnRefreshListener {
					public static class: java.lang.Class<androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnRefreshListener>;
					/**
					 * Constructs a new instance of the androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onRefresh(): void });
					public constructor();
					public onRefresh(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class AndroidResources {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AndroidResources>;
					public static STYLEABLE_ANIMATOR: native.Array<number>;
					public static STYLEABLE_ANIMATOR_INTERPOLATOR: number;
					public static STYLEABLE_ANIMATOR_DURATION: number;
					public static STYLEABLE_ANIMATOR_START_OFFSET: number;
					public static STYLEABLE_ANIMATOR_REPEAT_COUNT: number;
					public static STYLEABLE_ANIMATOR_REPEAT_MODE: number;
					public static STYLEABLE_ANIMATOR_VALUE_FROM: number;
					public static STYLEABLE_ANIMATOR_VALUE_TO: number;
					public static STYLEABLE_ANIMATOR_VALUE_TYPE: number;
					public static STYLEABLE_ANIMATOR_SET: native.Array<number>;
					public static STYLEABLE_ANIMATOR_SET_ORDERING: number;
					public static STYLEABLE_PROPERTY_VALUES_HOLDER: native.Array<number>;
					public static STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM: number;
					public static STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO: number;
					public static STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE: number;
					public static STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME: number;
					public static STYLEABLE_KEYFRAME: native.Array<number>;
					public static STYLEABLE_KEYFRAME_VALUE: number;
					public static STYLEABLE_KEYFRAME_INTERPOLATOR: number;
					public static STYLEABLE_KEYFRAME_VALUE_TYPE: number;
					public static STYLEABLE_KEYFRAME_FRACTION: number;
					public static STYLEABLE_PROPERTY_ANIMATOR: native.Array<number>;
					public static STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME: number;
					public static STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA: number;
					public static STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME: number;
					public static STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME: number;
					public static STYLEABLE_PATH_INTERPOLATOR: native.Array<number>;
					public static STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1: number;
					public static STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1: number;
					public static STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2: number;
					public static STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2: number;
					public static STYLEABLE_PATH_INTERPOLATOR_PATH_DATA: number;
					public static FAST_OUT_LINEAR_IN: number;
					public static FAST_OUT_SLOW_IN: number;
					public static LINEAR_OUT_SLOW_IN: number;
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class Animatable2Compat {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.Animatable2Compat>;
					/**
					 * Constructs a new instance of the androidx.vectordrawable.graphics.drawable.Animatable2Compat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { registerAnimationCallback(param0: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): void; unregisterAnimationCallback(param0: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): boolean; clearAnimationCallbacks(): void });
					public constructor();
					public clearAnimationCallbacks(): void;
					public registerAnimationCallback(param0: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): void;
					public unregisterAnimationCallback(param0: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): boolean;
				}
				export module Animatable2Compat {
					export abstract class AnimationCallback {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback>;
						public constructor();
						public onAnimationStart(param0: globalAndroid.graphics.drawable.Drawable): void;
						public onAnimationEnd(param0: globalAndroid.graphics.drawable.Drawable): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class AnimatedVectorDrawableCompat extends androidx.vectordrawable.graphics.drawable.VectorDrawableCommon implements androidx.vectordrawable.graphics.drawable.Animatable2Compat {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat>;
					public clearAnimationCallbacks(): void;
					public inflate(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public inflate(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public isStateful(): boolean;
					public static create(param0: globalAndroid.content.Context, param1: number): androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;
					public onLevelChange(param0: number): boolean;
					public unregisterAnimationCallback(param0: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): boolean;
					public getIntrinsicWidth(): number;
					public start(): void;
					public static registerAnimationCallback(param0: globalAndroid.graphics.drawable.Drawable, param1: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): void;
					public static unregisterAnimationCallback(param0: globalAndroid.graphics.drawable.Drawable, param1: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): boolean;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public registerAnimationCallback(param0: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback): void;
					public getChangingConfigurations(): number;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public canApplyTheme(): boolean;
					public setTint(param0: number): void;
					public setAutoMirrored(param0: boolean): void;
					public getOpacity(): number;
					public getAlpha(): number;
					public getConstantState(): globalAndroid.graphics.drawable.Drawable.ConstantState;
					public getIntrinsicHeight(): number;
					public setAlpha(param0: number): void;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public isAutoMirrored(): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
					public isRunning(): boolean;
					public stop(): void;
					public static clearAnimationCallbacks(param0: globalAndroid.graphics.drawable.Drawable): void;
					public static createFromXmlInner(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: org.xmlpull.v1.XmlPullParser, param3: globalAndroid.util.AttributeSet, param4: globalAndroid.content.res.Resources.Theme): androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;
				}
				export module AnimatedVectorDrawableCompat {
					export class AnimatedVectorDrawableCompatState {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableCompatState>;
						public constructor(param0: globalAndroid.content.Context, param1: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableCompatState, param2: globalAndroid.graphics.drawable.Drawable.Callback, param3: globalAndroid.content.res.Resources);
						public getChangingConfigurations(): number;
						public setupAnimatorSet(): void;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
					export class AnimatedVectorDrawableDelegateState {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableDelegateState>;
						public newDrawable(param0: globalAndroid.content.res.Resources, param1: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
						public getChangingConfigurations(): number;
						public constructor(param0: globalAndroid.graphics.drawable.Drawable.ConstantState);
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public canApplyTheme(): boolean;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class AnimationUtilsCompat {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat>;
					public static loadInterpolator(param0: globalAndroid.content.Context, param1: number): globalAndroid.view.animation.Interpolator;
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class AnimatorInflaterCompat {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat>;
					public static loadAnimator(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: globalAndroid.content.res.Resources.Theme, param3: number, param4: number): globalAndroid.animation.Animator;
					public static loadAnimator(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: globalAndroid.content.res.Resources.Theme, param3: number): globalAndroid.animation.Animator;
					public static loadAnimator(param0: globalAndroid.content.Context, param1: number): globalAndroid.animation.Animator;
				}
				export module AnimatorInflaterCompat {
					export class PathDataEvaluator extends globalAndroid.animation.TypeEvaluator<native.Array<androidx.core.graphics.PathParser.PathDataNode>> {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.PathDataEvaluator>;
						public evaluate(param0: number, param1: native.Array<androidx.core.graphics.PathParser.PathDataNode>, param2: native.Array<androidx.core.graphics.PathParser.PathDataNode>): native.Array<androidx.core.graphics.PathParser.PathDataNode>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class ArgbEvaluator {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.ArgbEvaluator>;
					public static getInstance(): androidx.vectordrawable.graphics.drawable.ArgbEvaluator;
					public constructor();
					public evaluate(param0: number, param1: any, param2: any): any;
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class PathInterpolatorCompat {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat>;
					public static MAX_NUM_POINTS: number;
					public static EPSILON: number;
					public constructor(param0: globalAndroid.content.res.Resources, param1: globalAndroid.content.res.Resources.Theme, param2: globalAndroid.util.AttributeSet, param3: org.xmlpull.v1.XmlPullParser);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: org.xmlpull.v1.XmlPullParser);
					public getInterpolation(param0: number): number;
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export abstract class VectorDrawableCommon implements androidx.core.graphics.drawable.TintAwareDrawable {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon>;
					public getMinimumWidth(): number;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public jumpToCurrentState(): void;
					public getTransparentRegion(): globalAndroid.graphics.Region;
					public onLevelChange(param0: number): boolean;
					public getCurrent(): globalAndroid.graphics.drawable.Drawable;
					public setHotspotBounds(param0: number, param1: number, param2: number, param3: number): void;
					public setHotspot(param0: number, param1: number): void;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public clearColorFilter(): void;
					public setFilterBitmap(param0: boolean): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public setState(param0: native.Array<number>): boolean;
					public getColorFilter(): globalAndroid.graphics.ColorFilter;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
					public getState(): native.Array<number>;
					public getMinimumHeight(): number;
					public setTint(param0: number): void;
					public setChangingConfigurations(param0: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module vectordrawable {
		export module graphics {
			export module drawable {
				export class VectorDrawableCompat extends androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
					public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat>;
					public invalidateSelf(): void;
					public inflate(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public inflate(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public isStateful(): boolean;
					public getIntrinsicWidth(): number;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public static createFromXmlInner(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;
					public getChangingConfigurations(): number;
					public unscheduleSelf(param0: java.lang.Runnable): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public canApplyTheme(): boolean;
					public setTint(param0: number): void;
					public setAutoMirrored(param0: boolean): void;
					public getOpacity(): number;
					public getAlpha(): number;
					public scheduleSelf(param0: java.lang.Runnable, param1: number): void;
					public getConstantState(): globalAndroid.graphics.drawable.Drawable.ConstantState;
					public getIntrinsicHeight(): number;
					public setAlpha(param0: number): void;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public isAutoMirrored(): boolean;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public static create(param0: globalAndroid.content.res.Resources, param1: number, param2: globalAndroid.content.res.Resources.Theme): androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;
					public getPixelSize(): number;
				}
				export module VectorDrawableCompat {
					export class VClipPath extends androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath>;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath);
						public constructor();
						public isClipPath(): boolean;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath);
						public inflate(param0: globalAndroid.content.res.Resources, param1: globalAndroid.util.AttributeSet, param2: globalAndroid.content.res.Resources.Theme, param3: org.xmlpull.v1.XmlPullParser): void;
					}
					export class VFullPath extends androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath>;
						public constructor();
						public isStateful(): boolean;
						public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
						public onStateChanged(param0: native.Array<number>): boolean;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath);
						public inflate(param0: globalAndroid.content.res.Resources, param1: globalAndroid.util.AttributeSet, param2: globalAndroid.content.res.Resources.Theme, param3: org.xmlpull.v1.XmlPullParser): void;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath);
						public canApplyTheme(): boolean;
					}
					export class VGroup extends androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VObject {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VGroup>;
						public getTranslateY(): number;
						public constructor();
						public getScaleX(): number;
						public setScaleX(param0: number): void;
						public onStateChanged(param0: native.Array<number>): boolean;
						public inflate(param0: globalAndroid.content.res.Resources, param1: globalAndroid.util.AttributeSet, param2: globalAndroid.content.res.Resources.Theme, param3: org.xmlpull.v1.XmlPullParser): void;
						public setScaleY(param0: number): void;
						public getGroupName(): string;
						public setPivotX(param0: number): void;
						public getPivotY(): number;
						public setPivotY(param0: number): void;
						public getTranslateX(): number;
						public getLocalMatrix(): globalAndroid.graphics.Matrix;
						public isStateful(): boolean;
						public setRotation(param0: number): void;
						public setTranslateX(param0: number): void;
						public getScaleY(): number;
						public setTranslateY(param0: number): void;
						public getPivotX(): number;
						public getRotation(): number;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VGroup, param1: androidx.collection.ArrayMap<string, any>);
					}
					export abstract class VObject {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VObject>;
						public isStateful(): boolean;
						public onStateChanged(param0: native.Array<number>): boolean;
					}
					export abstract class VPath extends androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VObject {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath>;
						public mNodes: native.Array<androidx.core.graphics.PathParser.PathDataNode>;
						public nodesToString(param0: native.Array<androidx.core.graphics.PathParser.PathDataNode>): string;
						public constructor();
						public isClipPath(): boolean;
						public setPathData(param0: native.Array<androidx.core.graphics.PathParser.PathDataNode>): void;
						public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath);
						public getPathName(): string;
						public toPath(param0: globalAndroid.graphics.Path): void;
						public canApplyTheme(): boolean;
						public getPathData(): native.Array<androidx.core.graphics.PathParser.PathDataNode>;
						public printVPath(param0: number): void;
					}
					export class VPathRenderer {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer>;
						public constructor();
						public isStateful(): boolean;
						public onStateChanged(param0: native.Array<number>): boolean;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer);
						public getAlpha(): number;
						public setRootAlpha(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas, param1: number, param2: number, param3: globalAndroid.graphics.ColorFilter): void;
						public setAlpha(param0: number): void;
						public getRootAlpha(): number;
					}
					export class VectorDrawableCompatState {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState>;
						public getPaint(param0: globalAndroid.graphics.ColorFilter): globalAndroid.graphics.Paint;
						public constructor();
						public getChangingConfigurations(): number;
						public hasTranslucentRoot(): boolean;
						public onStateChanged(param0: native.Array<number>): boolean;
						public constructor(param0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState);
						public updateCacheStates(): void;
						public drawCachedBitmapWithRootAlpha(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.ColorFilter, param2: globalAndroid.graphics.Rect): void;
						public createCachedBitmapIfNeeded(param0: number, param1: number): void;
						public isStateful(): boolean;
						public updateCachedBitmap(param0: number, param1: number): void;
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
						public canReuseBitmap(param0: number, param1: number): boolean;
						public canReuseCache(): boolean;
					}
					export class VectorDrawableDelegateState {
						public static class: java.lang.Class<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableDelegateState>;
						public newDrawable(param0: globalAndroid.content.res.Resources, param1: globalAndroid.content.res.Resources.Theme): globalAndroid.graphics.drawable.Drawable;
						public getChangingConfigurations(): number;
						public constructor(param0: globalAndroid.graphics.drawable.Drawable.ConstantState);
						public newDrawable(): globalAndroid.graphics.drawable.Drawable;
						public canApplyTheme(): boolean;
						public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export abstract class CustomVersionedParcelable extends androidx.versionedparcelable.VersionedParcelable {
			public static class: java.lang.Class<androidx.versionedparcelable.CustomVersionedParcelable>;
			public onPostParceling(): void;
			public constructor();
			public onPreParceling(param0: boolean): void;
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class NonParcelField {
			public static class: java.lang.Class<androidx.versionedparcelable.NonParcelField>;
			/**
			 * Constructs a new instance of the androidx.versionedparcelable.NonParcelField interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class ParcelField {
			public static class: java.lang.Class<androidx.versionedparcelable.ParcelField>;
			/**
			 * Constructs a new instance of the androidx.versionedparcelable.ParcelField interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { value(): number });
			public constructor();
			public value(): number;
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class ParcelImpl {
			public static class: java.lang.Class<androidx.versionedparcelable.ParcelImpl>;
			public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.versionedparcelable.ParcelImpl>;
			public describeContents(): number;
			public constructor(param0: androidx.versionedparcelable.VersionedParcelable);
			public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
			public getVersionedParcel(): androidx.versionedparcelable.VersionedParcelable;
			public constructor(param0: globalAndroid.os.Parcel);
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class ParcelUtils {
			public static class: java.lang.Class<androidx.versionedparcelable.ParcelUtils>;
			public static fromParcelable(param0: globalAndroid.os.Parcelable): androidx.versionedparcelable.VersionedParcelable;
			public static toOutputStream(param0: androidx.versionedparcelable.VersionedParcelable, param1: java.io.OutputStream): void;
			public static toParcelable(param0: androidx.versionedparcelable.VersionedParcelable): globalAndroid.os.Parcelable;
			public static fromInputStream(param0: java.io.InputStream): androidx.versionedparcelable.VersionedParcelable;
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export abstract class VersionedParcel {
			public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcel>;
			public readList(param0: java.util.List, param1: number): java.util.List;
			public writeException(param0: java.lang.Exception, param1: number): void;
			public readString(): string;
			public readSizeF(param0: any, param1: number): any;
			public writeFloatArray(param0: native.Array<number>, param1: number): void;
			public writeSerializable(param0: java.io.Serializable, param1: number): void;
			public writeFloat(param0: number): void;
			public readLongArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public isStream(): boolean;
			public readInt(): number;
			public readFloat(): number;
			public readSparseBooleanArray(param0: globalAndroid.util.SparseBooleanArray, param1: number): globalAndroid.util.SparseBooleanArray;
			public readDoubleArray(): native.Array<number>;
			public writeLong(param0: number): void;
			public writeByteArray(param0: native.Array<number>, param1: number, param2: number, param3: number): void;
			public readParcelable(): globalAndroid.os.Parcelable;
			public readDoubleArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public constructor();
			public readIntArray(): native.Array<number>;
			public readSize(param0: any, param1: number): any;
			public writeStrongInterface(param0: globalAndroid.os.IInterface): void;
			public readBoolean(): boolean;
			public static readFromParcel(param0: string, param1: androidx.versionedparcelable.VersionedParcel): androidx.versionedparcelable.VersionedParcelable;
			public writeBooleanArray(param0: native.Array<boolean>): void;
			public static getRootCause(param0: java.lang.Throwable): java.lang.Throwable;
			public setSerializationFlags(param0: boolean, param1: boolean): void;
			public readFloatArray(): native.Array<number>;
			public readLong(param0: number, param1: number): number;
			public writeByte(param0: number, param1: number): void;
			public writeSparseBooleanArray(param0: globalAndroid.util.SparseBooleanArray, param1: number): void;
			public readArray(param0: native.Array<any>, param1: number): native.Array<any>;
			public readFloat(param0: number, param1: number): number;
			public readField(param0: number): boolean;
			public readVersionedParcelable(): androidx.versionedparcelable.VersionedParcelable;
			public readSerializable(): java.io.Serializable;
			public readBoolean(param0: boolean, param1: number): boolean;
			public readStrongBinder(): globalAndroid.os.IBinder;
			public readSet(param0: java.util.Set, param1: number): java.util.Set;
			public readByte(param0: number, param1: number): number;
			public writeLong(param0: number, param1: number): void;
			public readByteArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public readStrongBinder(param0: globalAndroid.os.IBinder, param1: number): globalAndroid.os.IBinder;
			public setOutputField(param0: number): void;
			public readString(param0: string, param1: number): string;
			public writeBundle(param0: globalAndroid.os.Bundle): void;
			public static writeToParcel(param0: androidx.versionedparcelable.VersionedParcelable, param1: androidx.versionedparcelable.VersionedParcel): void;
			public readCharArray(param0: native.Array<string>, param1: number): native.Array<string>;
			public readIntArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public readArray(param0: native.Array<any>): native.Array<any>;
			public closeField(): void;
			public writeBoolean(param0: boolean, param1: number): void;
			public writeIntArray(param0: native.Array<number>): void;
			public readDouble(param0: number, param1: number): number;
			public writeDouble(param0: number, param1: number): void;
			public readParcelable(param0: globalAndroid.os.Parcelable, param1: number): globalAndroid.os.Parcelable;
			public writeLongArray(param0: native.Array<number>): void;
			public readVersionedParcelable(param0: androidx.versionedparcelable.VersionedParcelable, param1: number): androidx.versionedparcelable.VersionedParcelable;
			public writeString(param0: string, param1: number): void;
			public writeBooleanArray(param0: native.Array<boolean>, param1: number): void;
			public writeIntArray(param0: native.Array<number>, param1: number): void;
			public writeFloatArray(param0: native.Array<number>): void;
			public readInt(param0: number, param1: number): number;
			public writeLongArray(param0: native.Array<number>, param1: number): void;
			public writeParcelable(param0: globalAndroid.os.Parcelable, param1: number): void;
			public writeByteArray(param0: native.Array<number>): void;
			public writeInt(param0: number, param1: number): void;
			public createSubParcel(): androidx.versionedparcelable.VersionedParcel;
			public writeSizeF(param0: any, param1: number): void;
			public writeParcelable(param0: globalAndroid.os.Parcelable): void;
			public writeBoolean(param0: boolean): void;
			public readException(param0: java.lang.Exception, param1: number): java.lang.Exception;
			public readBundle(): globalAndroid.os.Bundle;
			public writeByteArray(param0: native.Array<number>, param1: number): void;
			public writeVersionedParcelable(param0: androidx.versionedparcelable.VersionedParcelable, param1: number): void;
			public writeVersionedParcelable(param0: androidx.versionedparcelable.VersionedParcelable): void;
			public readBooleanArray(param0: native.Array<boolean>, param1: number): native.Array<boolean>;
			public writeByteArray(param0: native.Array<number>, param1: number, param2: number): void;
			public readBooleanArray(): native.Array<boolean>;
			public writeList(param0: java.util.List, param1: number): void;
			public writeBundle(param0: globalAndroid.os.Bundle, param1: number): void;
			public writeString(param0: string): void;
			public writeCharArray(param0: native.Array<string>, param1: number): void;
			public writeDoubleArray(param0: native.Array<number>, param1: number): void;
			public readDouble(): number;
			public writeStrongBinder(param0: globalAndroid.os.IBinder): void;
			public writeSet(param0: java.util.Set, param1: number): void;
			public writeFloat(param0: number, param1: number): void;
			public writeNoException(): void;
			public writeInt(param0: number): void;
			public writeStrongInterface(param0: globalAndroid.os.IInterface, param1: number): void;
			public readLong(): number;
			public readLongArray(): native.Array<number>;
			public writeDouble(param0: number): void;
			public readByteArray(): native.Array<number>;
			public writeDoubleArray(param0: native.Array<number>): void;
			public writeArray(param0: native.Array<any>): void;
			public writeArray(param0: native.Array<any>, param1: number): void;
			public readFloatArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public writeSize(param0: any, param1: number): void;
			public readBundle(param0: globalAndroid.os.Bundle, param1: number): globalAndroid.os.Bundle;
			public writeStrongBinder(param0: globalAndroid.os.IBinder, param1: number): void;
		}
		export module VersionedParcel {
			export class ParcelException {
				public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcel.ParcelException>;
				public constructor(param0: java.lang.Throwable);
			}
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class VersionedParcelParcel extends androidx.versionedparcelable.VersionedParcel {
			public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcelParcel>;
			public writeByteArray(param0: native.Array<number>, param1: number, param2: number): void;
			public closeField(): void;
			public writeBoolean(param0: boolean, param1: number): void;
			public readString(): string;
			public readFloat(param0: number, param1: number): number;
			public readDouble(param0: number, param1: number): number;
			public readField(param0: number): boolean;
			public writeDouble(param0: number, param1: number): void;
			public readParcelable(param0: globalAndroid.os.Parcelable, param1: number): globalAndroid.os.Parcelable;
			public writeFloat(param0: number): void;
			public readBoolean(param0: boolean, param1: number): boolean;
			public writeString(param0: string, param1: number): void;
			public readStrongBinder(): globalAndroid.os.IBinder;
			public writeBundle(param0: globalAndroid.os.Bundle, param1: number): void;
			public writeString(param0: string): void;
			public readDouble(): number;
			public writeLong(param0: number, param1: number): void;
			public readInt(param0: number, param1: number): number;
			public writeStrongBinder(param0: globalAndroid.os.IBinder): void;
			public writeParcelable(param0: globalAndroid.os.Parcelable, param1: number): void;
			public readByteArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public writeFloat(param0: number, param1: number): void;
			public readInt(): number;
			public readFloat(): number;
			public writeByteArray(param0: native.Array<number>): void;
			public writeInt(param0: number, param1: number): void;
			public readStrongBinder(param0: globalAndroid.os.IBinder, param1: number): globalAndroid.os.IBinder;
			public setOutputField(param0: number): void;
			public readString(param0: string, param1: number): string;
			public createSubParcel(): androidx.versionedparcelable.VersionedParcel;
			public writeInt(param0: number): void;
			public writeLong(param0: number): void;
			public writeStrongInterface(param0: globalAndroid.os.IInterface, param1: number): void;
			public writeByteArray(param0: native.Array<number>, param1: number, param2: number, param3: number): void;
			public readLong(): number;
			public writeDouble(param0: number): void;
			public readParcelable(): globalAndroid.os.Parcelable;
			public readByteArray(): native.Array<number>;
			public writeParcelable(param0: globalAndroid.os.Parcelable): void;
			public writeBoolean(param0: boolean): void;
			public writeStrongInterface(param0: globalAndroid.os.IInterface): void;
			public readBundle(): globalAndroid.os.Bundle;
			public readBoolean(): boolean;
			public writeByteArray(param0: native.Array<number>, param1: number): void;
			public writeBundle(param0: globalAndroid.os.Bundle): void;
			public readBundle(param0: globalAndroid.os.Bundle, param1: number): globalAndroid.os.Bundle;
			public writeStrongBinder(param0: globalAndroid.os.IBinder, param1: number): void;
			public readLong(param0: number, param1: number): number;
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class VersionedParcelStream extends androidx.versionedparcelable.VersionedParcel {
			public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcelStream>;
			public closeField(): void;
			public writeBoolean(param0: boolean, param1: number): void;
			public readString(): string;
			public readDouble(param0: number, param1: number): number;
			public writeDouble(param0: number, param1: number): void;
			public readParcelable(param0: globalAndroid.os.Parcelable, param1: number): globalAndroid.os.Parcelable;
			public writeFloat(param0: number): void;
			public writeString(param0: string, param1: number): void;
			public isStream(): boolean;
			public readInt(param0: number, param1: number): number;
			public writeParcelable(param0: globalAndroid.os.Parcelable, param1: number): void;
			public readInt(): number;
			public readFloat(): number;
			public writeByteArray(param0: native.Array<number>): void;
			public writeInt(param0: number, param1: number): void;
			public createSubParcel(): androidx.versionedparcelable.VersionedParcel;
			public writeLong(param0: number): void;
			public writeByteArray(param0: native.Array<number>, param1: number, param2: number, param3: number): void;
			public readParcelable(): globalAndroid.os.Parcelable;
			public constructor();
			public writeParcelable(param0: globalAndroid.os.Parcelable): void;
			public writeBoolean(param0: boolean): void;
			public writeStrongInterface(param0: globalAndroid.os.IInterface): void;
			public readBoolean(): boolean;
			public readBundle(): globalAndroid.os.Bundle;
			public constructor(param0: java.io.InputStream, param1: java.io.OutputStream);
			public writeByteArray(param0: native.Array<number>, param1: number): void;
			public setSerializationFlags(param0: boolean, param1: boolean): void;
			public readLong(param0: number, param1: number): number;
			public writeByteArray(param0: native.Array<number>, param1: number, param2: number): void;
			public readFloat(param0: number, param1: number): number;
			public readField(param0: number): boolean;
			public readBoolean(param0: boolean, param1: number): boolean;
			public readStrongBinder(): globalAndroid.os.IBinder;
			public writeBundle(param0: globalAndroid.os.Bundle, param1: number): void;
			public writeString(param0: string): void;
			public readDouble(): number;
			public writeLong(param0: number, param1: number): void;
			public writeStrongBinder(param0: globalAndroid.os.IBinder): void;
			public readByteArray(param0: native.Array<number>, param1: number): native.Array<number>;
			public writeFloat(param0: number, param1: number): void;
			public readStrongBinder(param0: globalAndroid.os.IBinder, param1: number): globalAndroid.os.IBinder;
			public setOutputField(param0: number): void;
			public readString(param0: string, param1: number): string;
			public writeInt(param0: number): void;
			public writeStrongInterface(param0: globalAndroid.os.IInterface, param1: number): void;
			public readLong(): number;
			public writeDouble(param0: number): void;
			public readByteArray(): native.Array<number>;
			public writeBundle(param0: globalAndroid.os.Bundle): void;
			public readBundle(param0: globalAndroid.os.Bundle, param1: number): globalAndroid.os.Bundle;
			public writeStrongBinder(param0: globalAndroid.os.IBinder, param1: number): void;
		}
		export module VersionedParcelStream {
			export class FieldBuffer {
				public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcelStream.FieldBuffer>;
			}
			export class InputBuffer {
				public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcelStream.InputBuffer>;
			}
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class VersionedParcelable {
			public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcelable>;
			/**
			 * Constructs a new instance of the androidx.versionedparcelable.VersionedParcelable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {});
			public constructor();
		}
	}
}

declare module androidx {
	export module versionedparcelable {
		export class VersionedParcelize {
			public static class: java.lang.Class<androidx.versionedparcelable.VersionedParcelize>;
			/**
			 * Constructs a new instance of the androidx.versionedparcelable.VersionedParcelize interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: { allowSerialization(): boolean; ignoreParcelables(): boolean; isCustom(): boolean; deprecatedIds(): native.Array<number>; jetifyAs(): string });
			public constructor();
			public jetifyAs(): string;
			public ignoreParcelables(): boolean;
			public isCustom(): boolean;
			public allowSerialization(): boolean;
			public deprecatedIds(): native.Array<number>;
		}
	}
}

declare module androidx {
	export module viewpager {
		export module widget {
			export abstract class PagerAdapter {
				public static class: java.lang.Class<androidx.viewpager.widget.PagerAdapter>;
				public static POSITION_UNCHANGED: number;
				public static POSITION_NONE: number;
				public saveState(): globalAndroid.os.Parcelable;
				public registerDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
				/** @deprecated */
				public finishUpdate(param0: globalAndroid.view.View): void;
				public notifyDataSetChanged(): void;
				/** @deprecated */
				public startUpdate(param0: globalAndroid.view.View): void;
				public startUpdate(param0: globalAndroid.view.ViewGroup): void;
				public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
				public finishUpdate(param0: globalAndroid.view.ViewGroup): void;
				public getCount(): number;
				public constructor();
				public setPrimaryItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
				public getItemPosition(param0: any): number;
				/** @deprecated */
				public instantiateItem(param0: globalAndroid.view.View, param1: number): any;
				/** @deprecated */
				public setPrimaryItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
				public unregisterDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
				/** @deprecated */
				public destroyItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
				public restoreState(param0: globalAndroid.os.Parcelable, param1: java.lang.ClassLoader): void;
				public getPageTitle(param0: number): string;
				public getPageWidth(param0: number): number;
				public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
				public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
			}
		}
	}
}

declare module androidx {
	export module viewpager {
		export module widget {
			export class PagerTabStrip extends androidx.viewpager.widget.PagerTitleStrip {
				public static class: java.lang.Class<androidx.viewpager.widget.PagerTabStrip>;
				public setBackgroundColor(param0: number): void;
				public getDrawFullUnderline(): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public setTabIndicatorColorResource(param0: number): void;
				public getTabIndicatorColor(): number;
				public setTextSpacing(param0: number): void;
				public setDrawFullUnderline(param0: boolean): void;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public setTabIndicatorColor(param0: number): void;
				public setPadding(param0: number, param1: number, param2: number, param3: number): void;
				public constructor(param0: globalAndroid.content.Context);
				public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public setBackgroundResource(param0: number): void;
			}
		}
	}
}

declare module androidx {
	export module viewpager {
		export module widget {
			export class PagerTitleStrip {
				public static class: java.lang.Class<androidx.viewpager.widget.PagerTitleStrip>;
				public setTextColor(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setTextSize(param0: number, param1: number): void;
				public setTextSpacing(param0: number): void;
				public requestLayout(): void;
				public constructor(param0: globalAndroid.content.Context);
				public onMeasure(param0: number, param1: number): void;
				public getTextSpacing(): number;
				public onDetachedFromWindow(): void;
				public setGravity(param0: number): void;
				public setNonPrimaryAlpha(param0: number): void;
				public onAttachedToWindow(): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
			}
			export module PagerTitleStrip {
				export class PageListener implements androidx.viewpager.widget.ViewPager.OnPageChangeListener, androidx.viewpager.widget.ViewPager.OnAdapterChangeListener {
					public static class: java.lang.Class<androidx.viewpager.widget.PagerTitleStrip.PageListener>;
					public onPageSelected(param0: number): void;
					public onChanged(): void;
					public onPageScrolled(param0: number, param1: number, param2: number): void;
					public onAdapterChanged(param0: androidx.viewpager.widget.ViewPager, param1: androidx.viewpager.widget.PagerAdapter, param2: androidx.viewpager.widget.PagerAdapter): void;
					public onPageScrollStateChanged(param0: number): void;
				}
				export class SingleLineAllCapsTransform {
					public static class: java.lang.Class<androidx.viewpager.widget.PagerTitleStrip.SingleLineAllCapsTransform>;
					public getTransformation(param0: string, param1: globalAndroid.view.View): string;
				}
			}
		}
	}
}

declare module androidx {
	export module viewpager {
		export module widget {
			export class ViewPager {
				public static class: java.lang.Class<androidx.viewpager.widget.ViewPager>;
				public static SCROLL_STATE_IDLE: number;
				public static SCROLL_STATE_DRAGGING: number;
				public static SCROLL_STATE_SETTLING: number;
				public canScrollHorizontally(param0: number): boolean;
				public setAdapter(param0: androidx.viewpager.widget.PagerAdapter): void;
				public setPageTransformer(param0: boolean, param1: androidx.viewpager.widget.ViewPager.PageTransformer, param2: number): void;
				public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				public setPageMarginDrawable(param0: number): void;
				public onPageScrolled(param0: number, param1: number, param2: number): void;
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public setOffscreenPageLimit(param0: number): void;
				public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
				public onRequestFocusInDescendants(param0: number, param1: globalAndroid.graphics.Rect): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public setCurrentItem(param0: number, param1: boolean): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public setPageMargin(param0: number): void;
				public getChildDrawingOrder(param0: number, param1: number): number;
				public removeOnAdapterChangeListener(param0: androidx.viewpager.widget.ViewPager.OnAdapterChangeListener): void;
				public getCurrentItem(): number;
				public getOffscreenPageLimit(): number;
				public executeKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number, param2: number): void;
				public onDetachedFromWindow(): void;
				public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
				public arrowScroll(param0: number): boolean;
				public drawableStateChanged(): void;
				public getPageMargin(): number;
				public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
				public isFakeDragging(): boolean;
				public endFakeDrag(): void;
				public removeView(param0: globalAndroid.view.View): void;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public canScroll(param0: globalAndroid.view.View, param1: boolean, param2: number, param3: number, param4: number): boolean;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public setPageTransformer(param0: boolean, param1: androidx.viewpager.widget.ViewPager.PageTransformer): void;
				/** @deprecated */
				public setOnPageChangeListener(param0: androidx.viewpager.widget.ViewPager.OnPageChangeListener): void;
				public beginFakeDrag(): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public fakeDragBy(param0: number): void;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public addOnAdapterChangeListener(param0: androidx.viewpager.widget.ViewPager.OnAdapterChangeListener): void;
				public clearOnPageChangeListeners(): void;
				public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
				public onSaveInstanceState(): globalAndroid.os.Parcelable;
				public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public setCurrentItem(param0: number): void;
				public computeScroll(): void;
				public removeOnPageChangeListener(param0: androidx.viewpager.widget.ViewPager.OnPageChangeListener): void;
				public onDraw(param0: globalAndroid.graphics.Canvas): void;
				public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
				public onMeasure(param0: number, param1: number): void;
				public addOnPageChangeListener(param0: androidx.viewpager.widget.ViewPager.OnPageChangeListener): void;
				public setPageMarginDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public onAttachedToWindow(): void;
				public getAdapter(): androidx.viewpager.widget.PagerAdapter;
				public addTouchables(param0: java.util.ArrayList<globalAndroid.view.View>): void;
			}
			export module ViewPager {
				export class DecorView {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.DecorView>;
					/**
					 * Constructs a new instance of the androidx.viewpager.widget.ViewPager$DecorView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
				export class ItemInfo {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.ItemInfo>;
				}
				export class LayoutParams {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.LayoutParams>;
					public isDecor: boolean;
					public gravity: number;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public constructor();
				}
				export class MyAccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.MyAccessibilityDelegate>;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
					public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				}
				export class OnAdapterChangeListener {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.OnAdapterChangeListener>;
					/**
					 * Constructs a new instance of the androidx.viewpager.widget.ViewPager$OnAdapterChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onAdapterChanged(param0: androidx.viewpager.widget.ViewPager, param1: androidx.viewpager.widget.PagerAdapter, param2: androidx.viewpager.widget.PagerAdapter): void });
					public constructor();
					public onAdapterChanged(param0: androidx.viewpager.widget.ViewPager, param1: androidx.viewpager.widget.PagerAdapter, param2: androidx.viewpager.widget.PagerAdapter): void;
				}
				export class OnPageChangeListener {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.OnPageChangeListener>;
					/**
					 * Constructs a new instance of the androidx.viewpager.widget.ViewPager$OnPageChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onPageScrolled(param0: number, param1: number, param2: number): void; onPageSelected(param0: number): void; onPageScrollStateChanged(param0: number): void });
					public constructor();
					public onPageSelected(param0: number): void;
					public onPageScrolled(param0: number, param1: number, param2: number): void;
					public onPageScrollStateChanged(param0: number): void;
				}
				export class PageTransformer {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.PageTransformer>;
					/**
					 * Constructs a new instance of the androidx.viewpager.widget.ViewPager$PageTransformer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { transformPage(param0: globalAndroid.view.View, param1: number): void });
					public constructor();
					public transformPage(param0: globalAndroid.view.View, param1: number): void;
				}
				export class PagerObserver {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.PagerObserver>;
					public onChanged(): void;
					public onInvalidated(): void;
				}
				export class SavedState extends androidx.customview.view.AbsSavedState {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.SavedState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.viewpager.widget.ViewPager.SavedState>;
					public constructor(param0: globalAndroid.os.Parcel);
					public toString(): string;
					public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: globalAndroid.os.Parcelable);
				}
				export class SimpleOnPageChangeListener extends androidx.viewpager.widget.ViewPager.OnPageChangeListener {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.SimpleOnPageChangeListener>;
					public onPageSelected(param0: number): void;
					public onPageScrolled(param0: number, param1: number, param2: number): void;
					public constructor();
					public onPageScrollStateChanged(param0: number): void;
				}
				export class ViewPositionComparator extends java.util.Comparator<globalAndroid.view.View> {
					public static class: java.lang.Class<androidx.viewpager.widget.ViewPager.ViewPositionComparator>;
					public compare(param0: globalAndroid.view.View, param1: globalAndroid.view.View): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class DefaultDateTypeAdapter extends com.google.gson.TypeAdapter<java.util.Date> {
				public static class: java.lang.Class<com.google.gson.DefaultDateTypeAdapter>;
				public constructor(param0: number, param1: number);
				public read(param0: com.google.gson.stream.JsonReader): any;
				public read(param0: com.google.gson.stream.JsonReader): java.util.Date;
				public write(param0: com.google.gson.stream.JsonWriter, param1: java.util.Date): void;
				public write(param0: com.google.gson.stream.JsonWriter, param1: any): void;
				public constructor(param0: java.lang.Class<any>, param1: number, param2: number);
				public toString(): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class ExclusionStrategy {
				public static class: java.lang.Class<com.google.gson.ExclusionStrategy>;
				/**
				 * Constructs a new instance of the com.google.gson.ExclusionStrategy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { shouldSkipField(param0: com.google.gson.FieldAttributes): boolean; shouldSkipClass(param0: java.lang.Class<any>): boolean });
				public constructor();
				public shouldSkipField(param0: com.google.gson.FieldAttributes): boolean;
				public shouldSkipClass(param0: java.lang.Class<any>): boolean;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class FieldAttributes {
				public static class: java.lang.Class<com.google.gson.FieldAttributes>;
				public getAnnotation(param0: java.lang.Class): java.lang.annotation.Annotation;
				public hasModifier(param0: number): boolean;
				public constructor(param0: java.lang.reflect.Field);
				public getDeclaredClass(): java.lang.Class<any>;
				public getDeclaredType(): java.lang.reflect.Type;
				public getName(): string;
				public getAnnotations(): java.util.Collection<java.lang.annotation.Annotation>;
				public getDeclaringClass(): java.lang.Class<any>;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export abstract class FieldNamingPolicy extends com.google.gson.FieldNamingStrategy {
				public static class: java.lang.Class<com.google.gson.FieldNamingPolicy>;
				public static IDENTITY: com.google.gson.FieldNamingPolicy;
				public static UPPER_CAMEL_CASE: com.google.gson.FieldNamingPolicy;
				public static UPPER_CAMEL_CASE_WITH_SPACES: com.google.gson.FieldNamingPolicy;
				public static LOWER_CASE_WITH_UNDERSCORES: com.google.gson.FieldNamingPolicy;
				public static LOWER_CASE_WITH_DASHES: com.google.gson.FieldNamingPolicy;
				public static LOWER_CASE_WITH_DOTS: com.google.gson.FieldNamingPolicy;
				public static valueOf(param0: string): com.google.gson.FieldNamingPolicy;
				public translateName(param0: java.lang.reflect.Field): string;
				public static values(): native.Array<com.google.gson.FieldNamingPolicy>;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class FieldNamingStrategy {
				public static class: java.lang.Class<com.google.gson.FieldNamingStrategy>;
				/**
				 * Constructs a new instance of the com.google.gson.FieldNamingStrategy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { translateName(param0: java.lang.reflect.Field): string });
				public constructor();
				public translateName(param0: java.lang.reflect.Field): string;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class Gson {
				public static class: java.lang.Class<com.google.gson.Gson>;
				public excluder(): com.google.gson.internal.Excluder;
				public getDelegateAdapter(param0: com.google.gson.TypeAdapterFactory, param1: com.google.gson.reflect.TypeToken<any>): com.google.gson.TypeAdapter<any>;
				public getAdapter(param0: java.lang.Class): com.google.gson.TypeAdapter<any>;
				public serializeNulls(): boolean;
				public newJsonReader(param0: java.io.Reader): com.google.gson.stream.JsonReader;
				public fromJson(param0: java.io.Reader, param1: java.lang.reflect.Type): any;
				public toJson(param0: com.google.gson.JsonElement, param1: com.google.gson.stream.JsonWriter): void;
				public fromJson(param0: string, param1: java.lang.Class): any;
				public fromJson(param0: com.google.gson.JsonElement, param1: java.lang.Class): any;
				public htmlSafe(): boolean;
				public fromJson(param0: string, param1: java.lang.reflect.Type): any;
				public constructor();
				public toJsonTree(param0: any, param1: java.lang.reflect.Type): com.google.gson.JsonElement;
				public newJsonWriter(param0: java.io.Writer): com.google.gson.stream.JsonWriter;
				public fieldNamingStrategy(): com.google.gson.FieldNamingStrategy;
				public fromJson(param0: com.google.gson.stream.JsonReader, param1: java.lang.reflect.Type): any;
				public toJson(param0: com.google.gson.JsonElement, param1: java.lang.Appendable): void;
				public fromJson(param0: java.io.Reader, param1: java.lang.Class): any;
				public newBuilder(): com.google.gson.GsonBuilder;
				public toJson(param0: any, param1: java.lang.Appendable): void;
				public toJson(param0: any): string;
				public toJson(param0: any, param1: java.lang.reflect.Type, param2: com.google.gson.stream.JsonWriter): void;
				public toJson(param0: any, param1: java.lang.reflect.Type): string;
				public toJsonTree(param0: any): com.google.gson.JsonElement;
				public toString(): string;
				public toJson(param0: any, param1: java.lang.reflect.Type, param2: java.lang.Appendable): void;
				public toJson(param0: com.google.gson.JsonElement): string;
				public getAdapter(param0: com.google.gson.reflect.TypeToken<any>): com.google.gson.TypeAdapter<any>;
				public fromJson(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type): any;
			}
			export module Gson {
				export class FutureTypeAdapter<T> extends com.google.gson.TypeAdapter<any> {
					public static class: java.lang.Class<com.google.gson.Gson.FutureTypeAdapter<any>>;
					public write(param0: com.google.gson.stream.JsonWriter, param1: any): void;
					public setDelegate(param0: com.google.gson.TypeAdapter<any>): void;
					public read(param0: com.google.gson.stream.JsonReader): any;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class GsonBuilder {
				public static class: java.lang.Class<com.google.gson.GsonBuilder>;
				public setPrettyPrinting(): com.google.gson.GsonBuilder;
				public setDateFormat(param0: number, param1: number): com.google.gson.GsonBuilder;
				public setLenient(): com.google.gson.GsonBuilder;
				public registerTypeAdapter(param0: java.lang.reflect.Type, param1: any): com.google.gson.GsonBuilder;
				public constructor();
				public registerTypeHierarchyAdapter(param0: java.lang.Class<any>, param1: any): com.google.gson.GsonBuilder;
				public generateNonExecutableJson(): com.google.gson.GsonBuilder;
				public excludeFieldsWithoutExposeAnnotation(): com.google.gson.GsonBuilder;
				public setDateFormat(param0: number): com.google.gson.GsonBuilder;
				public addSerializationExclusionStrategy(param0: com.google.gson.ExclusionStrategy): com.google.gson.GsonBuilder;
				public serializeNulls(): com.google.gson.GsonBuilder;
				public serializeSpecialFloatingPointValues(): com.google.gson.GsonBuilder;
				public addDeserializationExclusionStrategy(param0: com.google.gson.ExclusionStrategy): com.google.gson.GsonBuilder;
				public setExclusionStrategies(param0: native.Array<com.google.gson.ExclusionStrategy>): com.google.gson.GsonBuilder;
				public enableComplexMapKeySerialization(): com.google.gson.GsonBuilder;
				public create(): com.google.gson.Gson;
				public registerTypeAdapterFactory(param0: com.google.gson.TypeAdapterFactory): com.google.gson.GsonBuilder;
				public disableInnerClassSerialization(): com.google.gson.GsonBuilder;
				public disableHtmlEscaping(): com.google.gson.GsonBuilder;
				public setFieldNamingPolicy(param0: com.google.gson.FieldNamingPolicy): com.google.gson.GsonBuilder;
				public excludeFieldsWithModifiers(param0: native.Array<number>): com.google.gson.GsonBuilder;
				public setFieldNamingStrategy(param0: com.google.gson.FieldNamingStrategy): com.google.gson.GsonBuilder;
				public setLongSerializationPolicy(param0: com.google.gson.LongSerializationPolicy): com.google.gson.GsonBuilder;
				public setDateFormat(param0: string): com.google.gson.GsonBuilder;
				public setVersion(param0: number): com.google.gson.GsonBuilder;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class InstanceCreator<T> extends java.lang.Object {
				public static class: java.lang.Class<com.google.gson.InstanceCreator<any>>;
				/**
				 * Constructs a new instance of the com.google.gson.InstanceCreator<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { createInstance(param0: java.lang.reflect.Type): T });
				public constructor();
				public createInstance(param0: java.lang.reflect.Type): T;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonArray extends com.google.gson.JsonElement implements java.lang.Iterable<com.google.gson.JsonElement> {
				public static class: java.lang.Class<com.google.gson.JsonArray>;
				public addAll(param0: com.google.gson.JsonArray): void;
				public getAsLong(): number;
				public deepCopy(): com.google.gson.JsonArray;
				public getAsShort(): number;
				public getAsBigDecimal(): java.math.BigDecimal;
				public constructor();
				public remove(param0: number): com.google.gson.JsonElement;
				public getAsInt(): number;
				public getAsBoolean(): boolean;
				public add(param0: com.google.gson.JsonElement): void;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public getAsDouble(): number;
				public iterator(): java.util.Iterator<com.google.gson.JsonElement>;
				public getAsString(): string;
				public set(param0: number, param1: com.google.gson.JsonElement): com.google.gson.JsonElement;
				public getAsCharacter(): string;
				public contains(param0: com.google.gson.JsonElement): boolean;
				public add(param0: string): void;
				public size(): number;
				public deepCopy(): com.google.gson.JsonElement;
				public getAsBigInteger(): java.math.BigInteger;
				public getAsByte(): number;
				public add(param0: java.lang.Number): void;
				public remove(param0: com.google.gson.JsonElement): boolean;
				public get(param0: number): com.google.gson.JsonElement;
				public constructor(param0: number);
				public getAsFloat(): number;
				public add(param0: java.lang.Boolean): void;
				public add(param0: java.lang.Character): void;
				public getAsNumber(): java.lang.Number;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonDeserializationContext {
				public static class: java.lang.Class<com.google.gson.JsonDeserializationContext>;
				/**
				 * Constructs a new instance of the com.google.gson.JsonDeserializationContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type): any });
				public constructor();
				public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type): any;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonDeserializer<T> extends java.lang.Object {
				public static class: java.lang.Class<com.google.gson.JsonDeserializer<any>>;
				/**
				 * Constructs a new instance of the com.google.gson.JsonDeserializer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): T });
				public constructor();
				public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): T;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export abstract class JsonElement {
				public static class: java.lang.Class<com.google.gson.JsonElement>;
				public isJsonArray(): boolean;
				public getAsJsonArray(): com.google.gson.JsonArray;
				public getAsJsonPrimitive(): com.google.gson.JsonPrimitive;
				public getAsLong(): number;
				public getAsCharacter(): string;
				public isJsonPrimitive(): boolean;
				public getAsShort(): number;
				public toString(): string;
				public getAsBigDecimal(): java.math.BigDecimal;
				public constructor();
				public getAsJsonNull(): com.google.gson.JsonNull;
				public deepCopy(): com.google.gson.JsonElement;
				public getAsByte(): number;
				public getAsBigInteger(): java.math.BigInteger;
				public getAsBoolean(): boolean;
				public getAsInt(): number;
				public isJsonObject(): boolean;
				public getAsJsonObject(): com.google.gson.JsonObject;
				public isJsonNull(): boolean;
				public getAsDouble(): number;
				public getAsFloat(): number;
				public getAsString(): string;
				public getAsNumber(): java.lang.Number;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonIOException extends com.google.gson.JsonParseException {
				public static class: java.lang.Class<com.google.gson.JsonIOException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonNull extends com.google.gson.JsonElement {
				public static class: java.lang.Class<com.google.gson.JsonNull>;
				public static INSTANCE: com.google.gson.JsonNull;
				public deepCopy(): com.google.gson.JsonElement;
				/** @deprecated */
				public constructor();
				public deepCopy(): com.google.gson.JsonNull;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonObject extends com.google.gson.JsonElement {
				public static class: java.lang.Class<com.google.gson.JsonObject>;
				public addProperty(param0: string, param1: java.lang.Number): void;
				public getAsJsonArray(): com.google.gson.JsonArray;
				public getAsJsonPrimitive(): com.google.gson.JsonPrimitive;
				public keySet(): java.util.Set<string>;
				public get(param0: string): com.google.gson.JsonElement;
				public getAsJsonPrimitive(param0: string): com.google.gson.JsonPrimitive;
				public getAsJsonObject(param0: string): com.google.gson.JsonObject;
				public entrySet(): java.util.Set<java.util.Map.Entry<string, com.google.gson.JsonElement>>;
				public remove(param0: string): com.google.gson.JsonElement;
				public constructor();
				public size(): number;
				public deepCopy(): com.google.gson.JsonElement;
				public addProperty(param0: string, param1: java.lang.Character): void;
				public getAsJsonArray(param0: string): com.google.gson.JsonArray;
				public deepCopy(): com.google.gson.JsonObject;
				public hashCode(): number;
				public getAsJsonObject(): com.google.gson.JsonObject;
				public add(param0: string, param1: com.google.gson.JsonElement): void;
				public equals(param0: any): boolean;
				public addProperty(param0: string, param1: string): void;
				public has(param0: string): boolean;
				public addProperty(param0: string, param1: java.lang.Boolean): void;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonParseException {
				public static class: java.lang.Class<com.google.gson.JsonParseException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonParser {
				public static class: java.lang.Class<com.google.gson.JsonParser>;
				public parse(param0: java.io.Reader): com.google.gson.JsonElement;
				public parse(param0: string): com.google.gson.JsonElement;
				public parse(param0: com.google.gson.stream.JsonReader): com.google.gson.JsonElement;
				public constructor();
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonPrimitive extends com.google.gson.JsonElement {
				public static class: java.lang.Class<com.google.gson.JsonPrimitive>;
				public deepCopy(): com.google.gson.JsonPrimitive;
				public getAsLong(): number;
				public getAsCharacter(): string;
				public isNumber(): boolean;
				public getAsShort(): number;
				public constructor(param0: java.lang.Number);
				public getAsBigDecimal(): java.math.BigDecimal;
				public constructor(param0: string);
				public constructor();
				public deepCopy(): com.google.gson.JsonElement;
				public getAsBigInteger(): java.math.BigInteger;
				public getAsByte(): number;
				public getAsBoolean(): boolean;
				public getAsInt(): number;
				public hashCode(): number;
				public isString(): boolean;
				public equals(param0: any): boolean;
				public constructor(param0: java.lang.Character);
				public getAsDouble(): number;
				public getAsFloat(): number;
				public isBoolean(): boolean;
				public getAsString(): string;
				public constructor(param0: java.lang.Boolean);
				public getAsNumber(): java.lang.Number;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonSerializationContext {
				public static class: java.lang.Class<com.google.gson.JsonSerializationContext>;
				/**
				 * Constructs a new instance of the com.google.gson.JsonSerializationContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { serialize(param0: any): com.google.gson.JsonElement; serialize(param0: any, param1: java.lang.reflect.Type): com.google.gson.JsonElement });
				public constructor();
				public serialize(param0: any, param1: java.lang.reflect.Type): com.google.gson.JsonElement;
				public serialize(param0: any): com.google.gson.JsonElement;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonSerializer<T> extends java.lang.Object {
				public static class: java.lang.Class<com.google.gson.JsonSerializer<any>>;
				/**
				 * Constructs a new instance of the com.google.gson.JsonSerializer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { serialize(param0: T, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement });
				public constructor();
				public serialize(param0: T, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonStreamParser extends java.util.Iterator<com.google.gson.JsonElement> {
				public static class: java.lang.Class<com.google.gson.JsonStreamParser>;
				public remove(): void;
				public hasNext(): boolean;
				public next(): com.google.gson.JsonElement;
				public constructor(param0: java.io.Reader);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class JsonSyntaxException extends com.google.gson.JsonParseException {
				public static class: java.lang.Class<com.google.gson.JsonSyntaxException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export abstract class LongSerializationPolicy {
				public static class: java.lang.Class<com.google.gson.LongSerializationPolicy>;
				public static DEFAULT: com.google.gson.LongSerializationPolicy;
				public static STRING: com.google.gson.LongSerializationPolicy;
				public serialize(param0: java.lang.Long): com.google.gson.JsonElement;
				public static values(): native.Array<com.google.gson.LongSerializationPolicy>;
				public static valueOf(param0: string): com.google.gson.LongSerializationPolicy;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export abstract class TypeAdapter<T> extends java.lang.Object {
				public static class: java.lang.Class<com.google.gson.TypeAdapter<any>>;
				public write(param0: com.google.gson.stream.JsonWriter, param1: T): void;
				public fromJson(param0: java.io.Reader): T;
				public toJsonTree(param0: T): com.google.gson.JsonElement;
				public toJson(param0: T): string;
				public nullSafe(): com.google.gson.TypeAdapter<T>;
				public fromJson(param0: string): T;
				public toJson(param0: java.io.Writer, param1: T): void;
				public fromJsonTree(param0: com.google.gson.JsonElement): T;
				public read(param0: com.google.gson.stream.JsonReader): T;
				public constructor();
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export class TypeAdapterFactory {
				public static class: java.lang.Class<com.google.gson.TypeAdapterFactory>;
				/**
				 * Constructs a new instance of the com.google.gson.TypeAdapterFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { create(param0: com.google.gson.Gson, param1: com.google.gson.reflect.TypeToken<any>): com.google.gson.TypeAdapter<any> });
				public constructor();
				public create(param0: com.google.gson.Gson, param1: com.google.gson.reflect.TypeToken<any>): com.google.gson.TypeAdapter<any>;
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export module annotations {
				export class Expose {
					public static class: java.lang.Class<com.google.gson.annotations.Expose>;
					/**
					 * Constructs a new instance of the com.google.gson.annotations.Expose interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { serialize(): boolean; deserialize(): boolean });
					public constructor();
					public deserialize(): boolean;
					public serialize(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export module annotations {
				export class JsonAdapter {
					public static class: java.lang.Class<com.google.gson.annotations.JsonAdapter>;
					/**
					 * Constructs a new instance of the com.google.gson.annotations.JsonAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { value(): java.lang.Class<any>; nullSafe(): boolean });
					public constructor();
					public value(): java.lang.Class<any>;
					public nullSafe(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export module annotations {
				export class SerializedName {
					public static class: java.lang.Class<com.google.gson.annotations.SerializedName>;
					/**
					 * Constructs a new instance of the com.google.gson.annotations.SerializedName interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { value(): string; alternate(): native.Array<string> });
					public constructor();
					public value(): string;
					public alternate(): native.Array<string>;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module gson {
			export module annotations {
				export class Since {
					public static class: java.lang.Class<com.google.gson.annotations.Since>;
					/**
					 * Constructs a new instance of the com.google.gson.annotations.Since interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { value(): number });
					public constructor();
					public value(): number;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module aad {
			export module adal {
				export class IBrokerAccountService {
					public static class: java.lang.Class<com.microsoft.aad.adal.IBrokerAccountService>;
					/**
					 * Constructs a new instance of the com.microsoft.aad.adal.IBrokerAccountService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getBrokerUsers(): globalAndroid.os.Bundle; acquireTokenSilently(param0: java.util.Map): globalAndroid.os.Bundle; getIntentForInteractiveRequest(): globalAndroid.content.Intent; removeAccounts(): void; getInactiveBrokerKey(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle });
					public constructor();
					public acquireTokenSilently(param0: java.util.Map): globalAndroid.os.Bundle;
					public getIntentForInteractiveRequest(): globalAndroid.content.Intent;
					public getInactiveBrokerKey(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					public getBrokerUsers(): globalAndroid.os.Bundle;
					public removeAccounts(): void;
				}
				export module IBrokerAccountService {
					export abstract class Stub implements com.microsoft.aad.adal.IBrokerAccountService {
						public static class: java.lang.Class<com.microsoft.aad.adal.IBrokerAccountService.Stub>;
						public removeAccounts(): void;
						public constructor();
						public getInactiveBrokerKey(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						public getBrokerUsers(): globalAndroid.os.Bundle;
						public acquireTokenSilently(param0: java.util.Map): globalAndroid.os.Bundle;
						public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
						public getIntentForInteractiveRequest(): globalAndroid.content.Intent;
						public asBinder(): globalAndroid.os.IBinder;
						public static asInterface(param0: globalAndroid.os.IBinder): com.microsoft.aad.adal.IBrokerAccountService;
					}
					export module Stub {
						export class Proxy extends com.microsoft.aad.adal.IBrokerAccountService {
							public static class: java.lang.Class<com.microsoft.aad.adal.IBrokerAccountService.Stub.Proxy>;
							public getInterfaceDescriptor(): string;
							public getIntentForInteractiveRequest(): globalAndroid.content.Intent;
							public asBinder(): globalAndroid.os.IBinder;
							public acquireTokenSilently(param0: java.util.Map): globalAndroid.os.Bundle;
							public getBrokerUsers(): globalAndroid.os.Bundle;
							public getInactiveBrokerKey(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
							public removeAccounts(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class Account extends com.microsoft.identity.client.IAccount {
					public static class: java.lang.Class<com.microsoft.identity.client.Account>;
					public getUsername(): string;
					public getId(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
					public constructor(param0: string, param1: com.microsoft.identity.common.internal.providers.oauth2.IDToken);
					public getAuthority(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class AccountAdapter {
					public static class: java.lang.Class<com.microsoft.identity.client.AccountAdapter>;
				}
				export module AccountAdapter {
					export class CacheRecordFilter {
						public static class: java.lang.Class<com.microsoft.identity.client.AccountAdapter.CacheRecordFilter>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.AccountAdapter$CacheRecordFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { filter(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord> });
						public constructor();
						public filter(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
					}
					export class GuestAccountFilter extends com.microsoft.identity.client.AccountAdapter.CacheRecordFilter {
						public static class: java.lang.Class<com.microsoft.identity.client.AccountAdapter.GuestAccountFilter>;
						public filter(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
					}
					export class HomeAccountFilter extends com.microsoft.identity.client.AccountAdapter.CacheRecordFilter {
						public static class: java.lang.Class<com.microsoft.identity.client.AccountAdapter.HomeAccountFilter>;
						public filter(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class AcquireTokenParameters extends com.microsoft.identity.client.TokenParameters {
					public static class: java.lang.Class<com.microsoft.identity.client.AcquireTokenParameters>;
					public getPrompt(): com.microsoft.identity.client.Prompt;
					public getCallback(): com.microsoft.identity.client.AuthenticationCallback;
					public constructor(param0: com.microsoft.identity.client.TokenParameters.Builder<any>);
					public getExtraScopesToConsent(): java.util.List<string>;
					public getExtraQueryStringParameters(): java.util.List<globalAndroid.util.Pair<string, string>>;
					public getFragment(): androidx.fragment.app.Fragment;
					public getLoginHint(): string;
					public constructor(param0: com.microsoft.identity.client.AcquireTokenParameters.Builder);
					public getActivity(): globalAndroid.app.Activity;
				}
				export module AcquireTokenParameters {
					export class Builder extends com.microsoft.identity.client.TokenParameters.Builder<com.microsoft.identity.client.AcquireTokenParameters.Builder> {
						public static class: java.lang.Class<com.microsoft.identity.client.AcquireTokenParameters.Builder>;
						public withOtherScopesToAuthorize(param0: java.util.List<string>): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public constructor();
						public build(): com.microsoft.identity.client.TokenParameters;
						public startAuthorizationFromActivity(param0: globalAndroid.app.Activity): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public withPrompt(param0: com.microsoft.identity.client.Prompt): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public withAuthorizationQueryStringParameters(param0: java.util.List<globalAndroid.util.Pair<string, string>>): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public withCallback(param0: com.microsoft.identity.client.AuthenticationCallback): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public self(): any;
						public withFragment(param0: androidx.fragment.app.Fragment): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public self(): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public withLoginHint(param0: string): com.microsoft.identity.client.AcquireTokenParameters.Builder;
						public build(): com.microsoft.identity.client.AcquireTokenParameters;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class AcquireTokenSilentParameters extends com.microsoft.identity.client.TokenParameters {
					public static class: java.lang.Class<com.microsoft.identity.client.AcquireTokenSilentParameters>;
					public constructor(param0: com.microsoft.identity.client.TokenParameters.Builder<any>);
					public getForceRefresh(): boolean;
					public getCallback(): com.microsoft.identity.client.SilentAuthenticationCallback;
					public setForceRefresh(param0: boolean): void;
					public constructor(param0: com.microsoft.identity.client.AcquireTokenSilentParameters.Builder);
				}
				export module AcquireTokenSilentParameters {
					export class Builder extends com.microsoft.identity.client.TokenParameters.Builder<com.microsoft.identity.client.AcquireTokenSilentParameters.Builder> {
						public static class: java.lang.Class<com.microsoft.identity.client.AcquireTokenSilentParameters.Builder>;
						public constructor();
						public build(): com.microsoft.identity.client.TokenParameters;
						public withCallback(param0: com.microsoft.identity.client.SilentAuthenticationCallback): com.microsoft.identity.client.AcquireTokenSilentParameters.Builder;
						public self(): any;
						public self(): com.microsoft.identity.client.AcquireTokenSilentParameters.Builder;
						public build(): com.microsoft.identity.client.AcquireTokenSilentParameters;
						public forceRefresh(param0: boolean): com.microsoft.identity.client.AcquireTokenSilentParameters.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class AuthenticationCallback extends com.microsoft.identity.client.SilentAuthenticationCallback {
					public static class: java.lang.Class<com.microsoft.identity.client.AuthenticationCallback>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.AuthenticationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onCancel(): void; onSuccess(param0: com.microsoft.identity.client.IAuthenticationResult): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
					public constructor();
					public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					public onCancel(): void;
					public onSuccess(param0: com.microsoft.identity.client.IAuthenticationResult): void;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class AuthenticationResult extends com.microsoft.identity.client.IAuthenticationResult {
					public static class: java.lang.Class<com.microsoft.identity.client.AuthenticationResult>;
					public getAuthorizationHeader(): string;
					public getScope(): native.Array<string>;
					public getTenantId(): string;
					public getAccessToken(): string;
					public getAccount(): com.microsoft.identity.client.IAccount;
					public getExpiresOn(): java.util.Date;
					public getAuthenticationScheme(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class AuthenticationResultAdapter {
					public static class: java.lang.Class<com.microsoft.identity.client.AuthenticationResultAdapter>;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export abstract class AuthenticationScheme extends com.microsoft.identity.common.internal.authscheme.INameable {
					public static class: java.lang.Class<com.microsoft.identity.client.AuthenticationScheme>;
					public constructor(param0: string);
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class BearerAuthenticationScheme extends com.microsoft.identity.client.AuthenticationScheme {
					public static class: java.lang.Class<com.microsoft.identity.client.BearerAuthenticationScheme>;
					public constructor(param0: string);
					public constructor();
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class BrowserTabActivity {
					public static class: java.lang.Class<com.microsoft.identity.client.BrowserTabActivity>;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class ClientInfo {
					public static class: java.lang.Class<com.microsoft.identity.client.ClientInfo>;
				}
				export module ClientInfo {
					export class ClientInfoClaim {
						public static class: java.lang.Class<com.microsoft.identity.client.ClientInfo.ClientInfoClaim>;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class Constants {
					public static class: java.lang.Class<com.microsoft.identity.client.Constants>;
					public static REQUEST_URL_KEY: string;
					public static REQUEST_ID: string;
					public static TELEMETRY_REQUEST_ID: string;
					public static CUSTOM_TAB_REDIRECT: string;
					public static AUTHORIZATION_FINAL_URL: string;
					public static WEBVIEW_SELECTION: string;
				}
				export module Constants {
					export class MsalErrorMessage {
						public static class: java.lang.Class<com.microsoft.identity.client.Constants.MsalErrorMessage>;
					}
					export class MsalInternalError {
						public static class: java.lang.Class<com.microsoft.identity.client.Constants.MsalInternalError>;
					}
					export class UIResponse {
						public static class: java.lang.Class<com.microsoft.identity.client.Constants.UIResponse>;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class CurrentAccountResult extends com.microsoft.identity.client.ICurrentAccountResult {
					public static class: java.lang.Class<com.microsoft.identity.client.CurrentAccountResult>;
					public getPriorAccount(): com.microsoft.identity.client.IAccount;
					public constructor(param0: com.microsoft.identity.client.IAccount, param1: com.microsoft.identity.client.IAccount, param2: boolean);
					public getCurrentAccount(): com.microsoft.identity.client.IAccount;
					public didAccountChange(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class HttpMethod {
					public static class: java.lang.Class<com.microsoft.identity.client.HttpMethod>;
					public static GET: com.microsoft.identity.client.HttpMethod;
					public static HEAD: com.microsoft.identity.client.HttpMethod;
					public static POST: com.microsoft.identity.client.HttpMethod;
					public static PUT: com.microsoft.identity.client.HttpMethod;
					public static DELETE: com.microsoft.identity.client.HttpMethod;
					public static CONNECT: com.microsoft.identity.client.HttpMethod;
					public static OPTIONS: com.microsoft.identity.client.HttpMethod;
					public static TRACE: com.microsoft.identity.client.HttpMethod;
					public static PATCH: com.microsoft.identity.client.HttpMethod;
					public static values(): native.Array<com.microsoft.identity.client.HttpMethod>;
					public static valueOf(param0: string): com.microsoft.identity.client.HttpMethod;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IAccount extends com.microsoft.identity.client.IClaimable {
					public static class: java.lang.Class<com.microsoft.identity.client.IAccount>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IAccount interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getId(): string; getAuthority(): string; getIdToken(): string; getClaims(): java.util.Map<string, any>; getUsername(): string; getTenantId(): string });
					public constructor();
					public getUsername(): string;
					public getId(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
					public getAuthority(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IAuthenticationResult {
					public static class: java.lang.Class<com.microsoft.identity.client.IAuthenticationResult>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IAuthenticationResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getAccessToken(): string; getAuthorizationHeader(): string; getAuthenticationScheme(): string; getExpiresOn(): java.util.Date; getTenantId(): string; getAccount(): com.microsoft.identity.client.IAccount; getScope(): native.Array<string> });
					public constructor();
					public getAuthorizationHeader(): string;
					public getScope(): native.Array<string>;
					public getTenantId(): string;
					public getAccessToken(): string;
					public getAccount(): com.microsoft.identity.client.IAccount;
					public getExpiresOn(): java.util.Date;
					public getAuthenticationScheme(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IClaimable {
					public static class: java.lang.Class<com.microsoft.identity.client.IClaimable>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IClaimable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getIdToken(): string; getClaims(): java.util.Map<string, any>; getUsername(): string; getTenantId(): string });
					public constructor();
					public getUsername(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class ICurrentAccountResult {
					public static class: java.lang.Class<com.microsoft.identity.client.ICurrentAccountResult>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.ICurrentAccountResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getCurrentAccount(): com.microsoft.identity.client.IAccount; getPriorAccount(): com.microsoft.identity.client.IAccount; didAccountChange(): boolean });
					public constructor();
					public getPriorAccount(): com.microsoft.identity.client.IAccount;
					public getCurrentAccount(): com.microsoft.identity.client.IAccount;
					public didAccountChange(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class ILoggerCallback {
					public static class: java.lang.Class<com.microsoft.identity.client.ILoggerCallback>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.ILoggerCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { log(param0: string, param1: com.microsoft.identity.client.Logger.LogLevel, param2: string, param3: boolean): void });
					public constructor();
					public log(param0: string, param1: com.microsoft.identity.client.Logger.LogLevel, param2: string, param3: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IMicrosoftAuthService {
					public static class: java.lang.Class<com.microsoft.identity.client.IMicrosoftAuthService>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IMicrosoftAuthService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						hello(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						getAccounts(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						acquireTokenSilently(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						getIntentForInteractiveRequest(): globalAndroid.content.Intent;
						removeAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						getDeviceMode(): globalAndroid.os.Bundle;
						getCurrentAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						removeAccountFromSharedDevice(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					});
					public constructor();
					public removeAccountFromSharedDevice(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					public getAccounts(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					public acquireTokenSilently(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					public getIntentForInteractiveRequest(): globalAndroid.content.Intent;
					public getDeviceMode(): globalAndroid.os.Bundle;
					public getCurrentAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					public hello(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					public removeAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
				}
				export module IMicrosoftAuthService {
					export abstract class Stub implements com.microsoft.identity.client.IMicrosoftAuthService {
						public static class: java.lang.Class<com.microsoft.identity.client.IMicrosoftAuthService.Stub>;
						public constructor();
						public getCurrentAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						public static asInterface(param0: globalAndroid.os.IBinder): com.microsoft.identity.client.IMicrosoftAuthService;
						public getDeviceMode(): globalAndroid.os.Bundle;
						public hello(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						public getAccounts(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						public removeAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						public acquireTokenSilently(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
						public getIntentForInteractiveRequest(): globalAndroid.content.Intent;
						public asBinder(): globalAndroid.os.IBinder;
						public removeAccountFromSharedDevice(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
					}
					export module Stub {
						export class Proxy extends com.microsoft.identity.client.IMicrosoftAuthService {
							public static class: java.lang.Class<com.microsoft.identity.client.IMicrosoftAuthService.Stub.Proxy>;
							public getInterfaceDescriptor(): string;
							public getIntentForInteractiveRequest(): globalAndroid.content.Intent;
							public asBinder(): globalAndroid.os.IBinder;
							public removeAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
							public getDeviceMode(): globalAndroid.os.Bundle;
							public getCurrentAccount(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
							public hello(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
							public getAccounts(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
							public removeAccountFromSharedDevice(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
							public acquireTokenSilently(param0: globalAndroid.os.Bundle): globalAndroid.os.Bundle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IMsalEventReceiver {
					public static class: java.lang.Class<com.microsoft.identity.client.IMsalEventReceiver>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IMsalEventReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onEventsReceived(param0: java.util.List<java.util.Map<string, string>>): void });
					public constructor();
					public onEventsReceived(param0: java.util.List<java.util.Map<string, string>>): void;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IMultiTenantAccount extends com.microsoft.identity.client.IAccount {
					public static class: java.lang.Class<com.microsoft.identity.client.IMultiTenantAccount>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IMultiTenantAccount interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getTenantProfiles(): java.util.Map<string, com.microsoft.identity.client.ITenantProfile>; getId(): string; getAuthority(): string; getIdToken(): string; getClaims(): java.util.Map<string, any>; getUsername(): string; getTenantId(): string });
					public constructor();
					public getUsername(): string;
					public getTenantProfiles(): java.util.Map<string, com.microsoft.identity.client.ITenantProfile>;
					public getId(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
					public getAuthority(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IMultipleAccountPublicClientApplication extends com.microsoft.identity.client.IPublicClientApplication {
					public static class: java.lang.Class<com.microsoft.identity.client.IMultipleAccountPublicClientApplication>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IMultipleAccountPublicClientApplication interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAccounts(param0: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback): void;
						getAccounts(): java.util.List<com.microsoft.identity.client.IAccount>;
						getAccount(param0: string, param1: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback): void;
						getAccount(param0: string): com.microsoft.identity.client.IAccount;
						removeAccount(param0: com.microsoft.identity.client.IAccount, param1: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback): void;
						removeAccount(param0: com.microsoft.identity.client.IAccount): boolean;
						acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: string, param3: com.microsoft.identity.client.AuthenticationCallback): void;
						acquireTokenSilent(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string): com.microsoft.identity.client.IAuthenticationResult;
						acquireTokenSilentAsync(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string, param3: com.microsoft.identity.client.SilentAuthenticationCallback): void;
						acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
						acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
						acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
						acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
						getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
						isSharedDevice(): boolean;
					});
					public constructor();
					public acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public isSharedDevice(): boolean;
					public removeAccount(param0: com.microsoft.identity.client.IAccount, param1: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback): void;
					public acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireTokenSilentAsync(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string, param3: com.microsoft.identity.client.SilentAuthenticationCallback): void;
					public acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: string, param3: com.microsoft.identity.client.AuthenticationCallback): void;
					public getAccount(param0: string, param1: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback): void;
					public acquireTokenSilent(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string): com.microsoft.identity.client.IAuthenticationResult;
					public getAccounts(param0: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback): void;
					public getAccounts(): java.util.List<com.microsoft.identity.client.IAccount>;
					public getAccount(param0: string): com.microsoft.identity.client.IAccount;
					public removeAccount(param0: com.microsoft.identity.client.IAccount): boolean;
				}
				export module IMultipleAccountPublicClientApplication {
					export class GetAccountCallback extends com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<com.microsoft.identity.client.IAccount, com.microsoft.identity.client.exception.MsalException> {
						public static class: java.lang.Class<com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.IMultipleAccountPublicClientApplication$GetAccountCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onTaskCompleted(param0: com.microsoft.identity.client.IAccount): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void; onError(param0: any): void; onTaskCompleted(param0: any): void });
						public constructor();
						public onTaskCompleted(param0: any): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
						public onError(param0: any): void;
						public onTaskCompleted(param0: com.microsoft.identity.client.IAccount): void;
					}
					export class RemoveAccountCallback {
						public static class: java.lang.Class<com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.IMultipleAccountPublicClientApplication$RemoveAccountCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onRemoved(): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onRemoved(): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class IPublicClientApplication {
					public static class: java.lang.Class<com.microsoft.identity.client.IPublicClientApplication>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.IPublicClientApplication interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
						acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
						acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
						acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
						getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
						isSharedDevice(): boolean;
					});
					public constructor();
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
					public acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public isSharedDevice(): boolean;
					public acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
				}
				export module IPublicClientApplication {
					export class ApplicationCreatedListener {
						public static class: java.lang.Class<com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.IPublicClientApplication$ApplicationCreatedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onCreated(param0: com.microsoft.identity.client.IPublicClientApplication): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onCreated(param0: com.microsoft.identity.client.IPublicClientApplication): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					}
					export class IMultipleAccountApplicationCreatedListener {
						public static class: java.lang.Class<com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.IPublicClientApplication$IMultipleAccountApplicationCreatedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onCreated(param0: com.microsoft.identity.client.IMultipleAccountPublicClientApplication): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onCreated(param0: com.microsoft.identity.client.IMultipleAccountPublicClientApplication): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					}
					export class ISingleAccountApplicationCreatedListener {
						public static class: java.lang.Class<com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.IPublicClientApplication$ISingleAccountApplicationCreatedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onCreated(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onCreated(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					}
					export class LoadAccountsCallback extends com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<java.util.List<com.microsoft.identity.client.IAccount>, com.microsoft.identity.client.exception.MsalException> {
						public static class: java.lang.Class<com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.IPublicClientApplication$LoadAccountsCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onTaskCompleted(param0: java.util.List<com.microsoft.identity.client.IAccount>): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void; onError(param0: any): void; onTaskCompleted(param0: any): void });
						public constructor();
						public onTaskCompleted(param0: java.util.List<com.microsoft.identity.client.IAccount>): void;
						public onTaskCompleted(param0: any): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
						public onError(param0: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class ISingleAccountPublicClientApplication extends com.microsoft.identity.client.IPublicClientApplication {
					public static class: java.lang.Class<com.microsoft.identity.client.ISingleAccountPublicClientApplication>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.ISingleAccountPublicClientApplication interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCurrentAccountAsync(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback): void;
						getCurrentAccount(): com.microsoft.identity.client.ICurrentAccountResult;
						signIn(param0: globalAndroid.app.Activity, param1: string, param2: native.Array<string>, param3: com.microsoft.identity.client.AuthenticationCallback): void;
						signIn(param0: globalAndroid.app.Activity, param1: string, param2: native.Array<string>, param3: com.microsoft.identity.client.Prompt, param4: com.microsoft.identity.client.AuthenticationCallback): void;
						signInAgain(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.Prompt, param3: com.microsoft.identity.client.AuthenticationCallback): void;
						signOut(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback): void;
						signOut(): boolean;
						acquireTokenSilentAsync(param0: native.Array<string>, param1: string, param2: com.microsoft.identity.client.SilentAuthenticationCallback): void;
						acquireTokenSilent(param0: native.Array<string>, param1: string): com.microsoft.identity.client.IAuthenticationResult;
						acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
						acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
						acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
						acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
						getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
						isSharedDevice(): boolean;
					});
					public constructor();
					public acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public isSharedDevice(): boolean;
					public acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public getCurrentAccountAsync(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback): void;
					public signIn(param0: globalAndroid.app.Activity, param1: string, param2: native.Array<string>, param3: com.microsoft.identity.client.AuthenticationCallback): void;
					public getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public signIn(param0: globalAndroid.app.Activity, param1: string, param2: native.Array<string>, param3: com.microsoft.identity.client.Prompt, param4: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
					public getCurrentAccount(): com.microsoft.identity.client.ICurrentAccountResult;
					public signOut(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback): void;
					public acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
					public signOut(): boolean;
					public acquireTokenSilentAsync(param0: native.Array<string>, param1: string, param2: com.microsoft.identity.client.SilentAuthenticationCallback): void;
					public signInAgain(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.Prompt, param3: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireTokenSilent(param0: native.Array<string>, param1: string): com.microsoft.identity.client.IAuthenticationResult;
				}
				export module ISingleAccountPublicClientApplication {
					export class CurrentAccountCallback {
						public static class: java.lang.Class<com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.ISingleAccountPublicClientApplication$CurrentAccountCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onAccountLoaded(param0: com.microsoft.identity.client.IAccount): void; onAccountChanged(param0: com.microsoft.identity.client.IAccount, param1: com.microsoft.identity.client.IAccount): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onAccountChanged(param0: com.microsoft.identity.client.IAccount, param1: com.microsoft.identity.client.IAccount): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
						public onAccountLoaded(param0: com.microsoft.identity.client.IAccount): void;
					}
					export class SignOutCallback {
						public static class: java.lang.Class<com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.ISingleAccountPublicClientApplication$SignOutCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onSignOut(): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onSignOut(): void;
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class ITenantProfile extends com.microsoft.identity.client.IAccount {
					public static class: java.lang.Class<com.microsoft.identity.client.ITenantProfile>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.ITenantProfile interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getId(): string; getAuthority(): string; getIdToken(): string; getClaims(): java.util.Map<string, any>; getUsername(): string; getTenantId(): string });
					public constructor();
					public getUsername(): string;
					public getId(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
					public getAuthority(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class ITokenShare extends com.microsoft.identity.common.adal.internal.tokensharing.ITokenShareInternal {
					public static class: java.lang.Class<com.microsoft.identity.client.ITokenShare>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.ITokenShare interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getOrgIdFamilyRefreshToken(param0: string): string; saveOrgIdFamilyRefreshToken(param0: string): void; getMsaFamilyRefreshToken(param0: string): string; saveMsaFamilyRefreshToken(param0: string): void; getOrgIdFamilyRefreshToken(param0: string): string; saveOrgIdFamilyRefreshToken(param0: string): void; getMsaFamilyRefreshToken(param0: string): string; saveMsaFamilyRefreshToken(param0: string): void });
					public constructor();
					public getMsaFamilyRefreshToken(param0: string): string;
					public saveOrgIdFamilyRefreshToken(param0: string): void;
					public saveMsaFamilyRefreshToken(param0: string): void;
					public getOrgIdFamilyRefreshToken(param0: string): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class Logger {
					public static class: java.lang.Class<com.microsoft.identity.client.Logger>;
					public setExternalLogger(param0: com.microsoft.identity.client.ILoggerCallback): void;
					public setEnablePII(param0: boolean): void;
					public constructor();
					public setEnableLogcatLog(param0: boolean): void;
					public setLogLevel(param0: com.microsoft.identity.client.Logger.LogLevel): void;
					public static getInstance(): com.microsoft.identity.client.Logger;
				}
				export module Logger {
					export class LogLevel {
						public static class: java.lang.Class<com.microsoft.identity.client.Logger.LogLevel>;
						public static ERROR: com.microsoft.identity.client.Logger.LogLevel;
						public static WARNING: com.microsoft.identity.client.Logger.LogLevel;
						public static INFO: com.microsoft.identity.client.Logger.LogLevel;
						public static VERBOSE: com.microsoft.identity.client.Logger.LogLevel;
						public static values(): native.Array<com.microsoft.identity.client.Logger.LogLevel>;
						public static valueOf(param0: string): com.microsoft.identity.client.Logger.LogLevel;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class MsalChromeCustomTabManager {
					public static class: java.lang.Class<com.microsoft.identity.client.MsalChromeCustomTabManager>;
					public unbindCustomTabsService(): void;
					public verifyChromeTabOrBrowser(): void;
					public launchChromeTabOrBrowserForUrl(param0: string): void;
					public constructor(param0: globalAndroid.app.Activity);
					public bindCustomTabsService(): void;
				}
				export module MsalChromeCustomTabManager {
					export class MsalCustomTabsServiceConnection extends androidx.browser.customtabs.CustomTabsServiceConnection {
						public static class: java.lang.Class<com.microsoft.identity.client.MsalChromeCustomTabManager.MsalCustomTabsServiceConnection>;
						public onCustomTabsServiceConnected(param0: globalAndroid.content.ComponentName, param1: androidx.browser.customtabs.CustomTabsClient): void;
						public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class MultiTenantAccount extends com.microsoft.identity.client.Account implements com.microsoft.identity.client.IMultiTenantAccount {
					public static class: java.lang.Class<com.microsoft.identity.client.MultiTenantAccount>;
					public getUsername(): string;
					public getTenantProfiles(): java.util.Map<string, com.microsoft.identity.client.ITenantProfile>;
					public getId(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
					public getAuthority(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class MultipleAccountPublicClientApplication extends com.microsoft.identity.client.PublicClientApplication implements com.microsoft.identity.client.IMultipleAccountPublicClientApplication {
					public static class: java.lang.Class<com.microsoft.identity.client.MultipleAccountPublicClientApplication>;
					public getMsaFamilyRefreshToken(param0: string): string;
					public acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public isSharedDevice(): boolean;
					public removeAccount(param0: com.microsoft.identity.client.IAccount, param1: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback): void;
					public acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public getOrgIdFamilyRefreshToken(param0: string): string;
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireTokenSilentAsync(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string, param3: com.microsoft.identity.client.SilentAuthenticationCallback): void;
					public acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
					public constructor(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration);
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: string, param3: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireTokenSilent(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string): com.microsoft.identity.client.IAuthenticationResult;
					public getAccount(param0: string, param1: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback): void;
					public getAccounts(param0: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback): void;
					public saveOrgIdFamilyRefreshToken(param0: string): void;
					public getAccounts(): java.util.List<com.microsoft.identity.client.IAccount>;
					public getAccount(param0: string): com.microsoft.identity.client.IAccount;
					public saveMsaFamilyRefreshToken(param0: string): void;
					public removeAccount(param0: com.microsoft.identity.client.IAccount): boolean;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class PoPAuthenticationScheme extends com.microsoft.identity.client.AuthenticationScheme implements com.microsoft.identity.common.internal.authscheme.IPoPAuthenticationSchemeParams {
					public static class: java.lang.Class<com.microsoft.identity.client.PoPAuthenticationScheme>;
					public getNonce(): string;
					public getName(): string;
					public static builder(): com.microsoft.identity.client.PoPAuthenticationScheme.Builder;
					public getHttpMethod(): string;
					public getUrl(): java.net.URL;
				}
				export module PoPAuthenticationScheme {
					export class Builder {
						public static class: java.lang.Class<com.microsoft.identity.client.PoPAuthenticationScheme.Builder>;
						public withUrl(param0: java.net.URL): com.microsoft.identity.client.PoPAuthenticationScheme.Builder;
						public build(): com.microsoft.identity.client.PoPAuthenticationScheme;
						public withHttpMethod(param0: com.microsoft.identity.client.HttpMethod): com.microsoft.identity.client.PoPAuthenticationScheme.Builder;
						public withNonce(param0: string): com.microsoft.identity.client.PoPAuthenticationScheme.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class Prompt {
					public static class: java.lang.Class<com.microsoft.identity.client.Prompt>;
					public static SELECT_ACCOUNT: com.microsoft.identity.client.Prompt;
					public static LOGIN: com.microsoft.identity.client.Prompt;
					public static CONSENT: com.microsoft.identity.client.Prompt;
					public static WHEN_REQUIRED: com.microsoft.identity.client.Prompt;
					public toString(): string;
					public static values(): native.Array<com.microsoft.identity.client.Prompt>;
					public static valueOf(param0: string): com.microsoft.identity.client.Prompt;
					public toOpenIdConnectPromptParameter(): com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class PublicClientApplication implements com.microsoft.identity.client.IPublicClientApplication, com.microsoft.identity.client.ITokenShare {
					public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplication>;
					public mPublicClientConfiguration: com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public mTokenShareUtility: com.microsoft.identity.common.adal.internal.tokensharing.TokenShareUtility;
					public homeAccountMatcher: com.microsoft.identity.client.PublicClientApplication.AccountMatcher;
					public localAccountMatcher: com.microsoft.identity.client.PublicClientApplication.AccountMatcher;
					public usernameMatcher: com.microsoft.identity.client.PublicClientApplication.AccountMatcher;
					public acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public static createMultipleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: number): com.microsoft.identity.client.IMultipleAccountPublicClientApplication;
					public static create(param0: globalAndroid.content.Context, param1: number): com.microsoft.identity.client.IPublicClientApplication;
					public static createSingleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: java.io.File): com.microsoft.identity.client.ISingleAccountPublicClientApplication;
					public acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
					public postAuthResult(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult, param1: com.microsoft.identity.client.TokenParameters, param2: com.microsoft.identity.client.SilentAuthenticationCallback): void;
					public validateAcquireTokenParameters(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public static createSingleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: number, param2: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener): void;
					public static createMultipleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: java.io.File): com.microsoft.identity.client.IMultipleAccountPublicClientApplication;
					public saveMsaFamilyRefreshToken(param0: string): void;
					public static create(param0: globalAndroid.content.Context, param1: java.io.File, param2: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener): void;
					public getMsaFamilyRefreshToken(param0: string): string;
					public isSharedDevice(): boolean;
					public acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public static create(param0: globalAndroid.content.Context, param1: number, param2: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener): void;
					public buildAcquireTokenSilentParameters(param0: native.Array<string>, param1: com.microsoft.identity.client.IAccount, param2: string, param3: boolean, param4: com.microsoft.identity.client.claims.ClaimsRequest, param5: com.microsoft.identity.client.SilentAuthenticationCallback): com.microsoft.identity.client.AcquireTokenSilentParameters;
					public getCommandCallback(param0: com.microsoft.identity.client.SilentAuthenticationCallback, param1: com.microsoft.identity.client.TokenParameters): com.microsoft.identity.common.internal.commands.CommandCallback<any, any>;
					public static createMultipleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: number, param2: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener): void;
					public getOrgIdFamilyRefreshToken(param0: string): string;
					public getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
					public validateAcquireTokenSilentParameters(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public constructor(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration);
					public static createSingleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: number): com.microsoft.identity.client.ISingleAccountPublicClientApplication;
					public static getSdkVersion(): string;
					public static createSingleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: java.io.File, param2: com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener): void;
					public static createMultipleAccountPublicClientApplication(param0: globalAndroid.content.Context, param1: java.io.File, param2: com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener): void;
					public saveOrgIdFamilyRefreshToken(param0: string): void;
					public static create(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string, param4: com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener): void;
				}
				export module PublicClientApplication {
					export class AccountMatcher {
						public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplication.AccountMatcher>;
					}
					export class BrokerDeviceModeCallback {
						public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplication.BrokerDeviceModeCallback>;
						/**
						 * Constructs a new instance of the com.microsoft.identity.client.PublicClientApplication$BrokerDeviceModeCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { onGetMode(param0: boolean): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
						public constructor();
						public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
						public onGetMode(param0: boolean): void;
					}
					export class NONNULL_CONSTANTS {
						public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplication.NONNULL_CONSTANTS>;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class PublicClientApplicationConfiguration {
					public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplicationConfiguration>;
					public checkIntentFilterAddedToAppManifestForBrokerFlow(): void;
					public getMultipleCloudsSupported(): java.lang.Boolean;
					public getEnvironment(): com.microsoft.identity.common.internal.authorities.Environment;
					public getAuthorities(): java.util.List<com.microsoft.identity.common.internal.authorities.Authority>;
					public getTelemetryConfiguration(): com.microsoft.identity.common.internal.telemetry.TelemetryConfiguration;
					public getClientCapabilities(): string;
					public getLoggerConfiguration(): com.microsoft.identity.client.configuration.LoggerConfiguration;
					public isPowerOptCheckForEnabled(): java.lang.Boolean;
					public isWebViewZoomControlsEnabled(): boolean;
					public getAccountMode(): com.microsoft.identity.client.configuration.AccountMode;
					public constructor();
					public isDefaultAuthorityConfigured(): boolean;
					public setWebViewZoomControlsEnabled(param0: boolean): void;
					public setPowerOptCheckEnabled(param0: java.lang.Boolean): void;
					public getAuthorizationAgent(): com.microsoft.identity.common.internal.ui.AuthorizationAgent;
					public getUseBroker(): java.lang.Boolean;
					public getHttpConfiguration(): com.microsoft.identity.client.configuration.HttpConfiguration;
					public getIsSharedDevice(): boolean;
					public getClientId(): string;
					public setClientId(param0: string): void;
					public getRequiredBrokerProtocolVersion(): string;
					public getRedirectUri(): string;
					public setTokenCacheSecretKeys(param0: native.Array<number>): void;
					public getBrowserSafeList(): java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>;
					public getAppContext(): globalAndroid.content.Context;
					public isWebViewZoomEnabled(): boolean;
					public getDefaultAuthority(): com.microsoft.identity.common.internal.authorities.Authority;
					public setRedirectUri(param0: string): void;
					public setWebViewZoomEnabled(param0: boolean): void;
				}
				export module PublicClientApplicationConfiguration {
					export class SerializedNames {
						public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplicationConfiguration.SerializedNames>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class PublicClientApplicationConfigurationFactory {
					public static class: java.lang.Class<com.microsoft.identity.client.PublicClientApplicationConfigurationFactory>;
					public static initializeConfiguration(param0: globalAndroid.content.Context): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public constructor();
					public static initializeConfiguration(param0: globalAndroid.content.Context, param1: java.io.File): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public static initializeConfiguration(param0: globalAndroid.content.Context, param1: number): com.microsoft.identity.client.PublicClientApplicationConfiguration;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class SilentAuthenticationCallback {
					public static class: java.lang.Class<com.microsoft.identity.client.SilentAuthenticationCallback>;
					/**
					 * Constructs a new instance of the com.microsoft.identity.client.SilentAuthenticationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { onSuccess(param0: com.microsoft.identity.client.IAuthenticationResult): void; onError(param0: com.microsoft.identity.client.exception.MsalException): void });
					public constructor();
					public onError(param0: com.microsoft.identity.client.exception.MsalException): void;
					public onSuccess(param0: com.microsoft.identity.client.IAuthenticationResult): void;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class SingleAccountPublicClientApplication extends com.microsoft.identity.client.PublicClientApplication implements com.microsoft.identity.client.ISingleAccountPublicClientApplication {
					public static class: java.lang.Class<com.microsoft.identity.client.SingleAccountPublicClientApplication>;
					public static SINGLE_ACCOUNT_CREDENTIAL_SHARED_PREFERENCES: string;
					public static CURRENT_ACCOUNT_SHARED_PREFERENCE_KEY: string;
					public getMsaFamilyRefreshToken(param0: string): string;
					public acquireToken(param0: com.microsoft.identity.client.AcquireTokenParameters): void;
					public isSharedDevice(): boolean;
					public acquireTokenSilentAsync(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): void;
					public getCurrentAccountAsync(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback): void;
					public getCommandCallback(param0: com.microsoft.identity.client.SilentAuthenticationCallback, param1: com.microsoft.identity.client.TokenParameters): com.microsoft.identity.common.internal.commands.CommandCallback<any, any>;
					public signIn(param0: globalAndroid.app.Activity, param1: string, param2: native.Array<string>, param3: com.microsoft.identity.client.AuthenticationCallback): void;
					public getConfiguration(): com.microsoft.identity.client.PublicClientApplicationConfiguration;
					public getOrgIdFamilyRefreshToken(param0: string): string;
					public signIn(param0: globalAndroid.app.Activity, param1: string, param2: native.Array<string>, param3: com.microsoft.identity.client.Prompt, param4: com.microsoft.identity.client.AuthenticationCallback): void;
					public acquireToken(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.AuthenticationCallback): void;
					public getCurrentAccount(): com.microsoft.identity.client.ICurrentAccountResult;
					public signOut(param0: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback): void;
					public acquireTokenSilent(param0: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.client.IAuthenticationResult;
					public constructor(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration);
					public signOut(): boolean;
					public getCommandCallback(param0: com.microsoft.identity.client.SilentAuthenticationCallback, param1: com.microsoft.identity.client.TokenParameters): com.microsoft.identity.common.internal.commands.CommandCallback<com.microsoft.identity.common.internal.result.ILocalAuthenticationResult, com.microsoft.identity.common.exception.BaseException>;
					public acquireTokenSilentAsync(param0: native.Array<string>, param1: string, param2: com.microsoft.identity.client.SilentAuthenticationCallback): void;
					public saveOrgIdFamilyRefreshToken(param0: string): void;
					public signInAgain(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.microsoft.identity.client.Prompt, param3: com.microsoft.identity.client.AuthenticationCallback): void;
					public saveMsaFamilyRefreshToken(param0: string): void;
					public acquireTokenSilent(param0: native.Array<string>, param1: string): com.microsoft.identity.client.IAuthenticationResult;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class TenantProfile extends com.microsoft.identity.client.Account implements com.microsoft.identity.client.ITenantProfile {
					public static class: java.lang.Class<com.microsoft.identity.client.TenantProfile>;
					public getUsername(): string;
					public getId(): string;
					public getClaims(): java.util.Map<string, any>;
					public getTenantId(): string;
					public getIdToken(): string;
					public constructor(param0: string, param1: com.microsoft.identity.common.internal.providers.oauth2.IDToken);
					public getAuthority(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export abstract class TokenParameters {
					public static class: java.lang.Class<com.microsoft.identity.client.TokenParameters>;
					public getAuthenticationScheme(): com.microsoft.identity.client.AuthenticationScheme;
					public constructor(param0: com.microsoft.identity.client.TokenParameters.Builder<any>);
					public getScopes(): java.util.List<string>;
					public getClaimsRequest(): com.microsoft.identity.client.claims.ClaimsRequest;
					public getAccountRecord(): com.microsoft.identity.common.internal.dto.AccountRecord;
					public getAccount(): com.microsoft.identity.client.IAccount;
					public getAuthority(): string;
				}
				export module TokenParameters {
					export abstract class Builder<B> extends java.lang.Object {
						public static class: java.lang.Class<com.microsoft.identity.client.TokenParameters.Builder<any>>;
						public constructor();
						public build(): com.microsoft.identity.client.TokenParameters;
						public withClaims(param0: com.microsoft.identity.client.claims.ClaimsRequest): B;
						public self(): B;
						public withAuthenticationScheme(param0: com.microsoft.identity.client.AuthenticationScheme): B;
						public withScopes(param0: java.util.List<string>): B;
						public withResource(param0: string): B;
						public fromAuthority(param0: string): B;
						public forAccount(param0: com.microsoft.identity.client.IAccount): B;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class TokenParametersAdapter {
					public static class: java.lang.Class<com.microsoft.identity.client.TokenParametersAdapter>;
					public static silentParametersFromInteractive(param0: com.microsoft.identity.client.AcquireTokenParameters, param1: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult): com.microsoft.identity.client.AcquireTokenSilentParameters;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export class WebViewSelection {
					public static class: java.lang.Class<com.microsoft.identity.client.WebViewSelection>;
					public static EMBEDDED_WEBVIEW: com.microsoft.identity.client.WebViewSelection;
					public static SYSTEM_BROWSER: com.microsoft.identity.client.WebViewSelection;
					public static values(): native.Array<com.microsoft.identity.client.WebViewSelection>;
					public static valueOf(param0: string): com.microsoft.identity.client.WebViewSelection;
					public getId(): number;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class ClaimsRequest {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.ClaimsRequest>;
						public static USERINFO: string;
						public static ID_TOKEN: string;
						public static ACCESS_TOKEN: string;
						public getUserInfoClaimsRequested(): java.util.List<com.microsoft.identity.client.claims.RequestedClaim>;
						public constructor();
						public static getClaimsRequestFromJsonString(param0: string): com.microsoft.identity.client.claims.ClaimsRequest;
						public getAccessTokenClaimsRequested(): java.util.List<com.microsoft.identity.client.claims.RequestedClaim>;
						public requestClaimInUserInfo(param0: string, param1: com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public static getJsonStringFromClaimsRequest(param0: com.microsoft.identity.client.claims.ClaimsRequest): string;
						public requestClaimInAccessToken(param0: string, param1: com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation): void;
						public getIdTokenClaimsRequested(): java.util.List<com.microsoft.identity.client.claims.RequestedClaim>;
						public requestClaimInIdToken(param0: string, param1: com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class ClaimsRequestDeserializer extends com.google.gson.JsonDeserializer<com.microsoft.identity.client.claims.ClaimsRequest> {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.ClaimsRequestDeserializer>;
						public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
						public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.client.claims.ClaimsRequest;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class ClaimsRequestSerializer extends com.google.gson.JsonSerializer<com.microsoft.identity.client.claims.ClaimsRequest> {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.ClaimsRequestSerializer>;
						public addPropertiesToObject(param0: java.util.List<com.microsoft.identity.client.claims.RequestedClaim>, param1: com.google.gson.JsonObject, param2: com.google.gson.JsonSerializationContext): void;
						public serialize(param0: com.microsoft.identity.client.claims.ClaimsRequest, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
						public serialize(param0: any, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class RequestClaimAdditionalInformationSerializer extends com.google.gson.JsonSerializer<com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation> {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.RequestClaimAdditionalInformationSerializer>;
						public serialize(param0: com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
						public serialize(param0: any, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class RequestedClaim {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.RequestedClaim>;
						public constructor();
						public setAdditionalInformation(param0: com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation): void;
						public setName(param0: string): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getAdditionalInformation(): com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class RequestedClaimAdditionalInformation {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation>;
						public setValues(param0: java.util.List<any>): void;
						public constructor();
						public getValue(): any;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getEssential(): java.lang.Boolean;
						public setEssential(param0: java.lang.Boolean): void;
						public getValues(): java.util.List<any>;
						public setValue(param0: any): void;
					}
					export module RequestedClaimAdditionalInformation {
						export class SerializedNames {
							public static class: java.lang.Class<com.microsoft.identity.client.claims.RequestedClaimAdditionalInformation.SerializedNames>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module claims {
					export class WWWAuthenticateHeader {
						public static class: java.lang.Class<com.microsoft.identity.client.claims.WWWAuthenticateHeader>;
						public constructor();
						public static getClaimsRequestFromWWWAuthenticateHeaderValue(param0: string): com.microsoft.identity.client.claims.ClaimsRequest;
						public static hasClaimsDirective(param0: string): java.lang.Boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module configuration {
					export class AccountMode {
						public static class: java.lang.Class<com.microsoft.identity.client.configuration.AccountMode>;
						public static SINGLE: com.microsoft.identity.client.configuration.AccountMode;
						public static MULTIPLE: com.microsoft.identity.client.configuration.AccountMode;
						public static values(): native.Array<com.microsoft.identity.client.configuration.AccountMode>;
						public static valueOf(param0: string): com.microsoft.identity.client.configuration.AccountMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module configuration {
					export class HttpConfiguration {
						public static class: java.lang.Class<com.microsoft.identity.client.configuration.HttpConfiguration>;
						public constructor();
						public setConnectTimeout(param0: number): void;
						public getReadTimeout(): number;
						public getConnectTimeout(): number;
						public setReadTimeout(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module configuration {
					export class LoggerConfiguration {
						public static class: java.lang.Class<com.microsoft.identity.client.configuration.LoggerConfiguration>;
						public constructor();
						public isPiiEnabled(): boolean;
						public getLogLevel(): com.microsoft.identity.client.Logger.LogLevel;
						public isLogcatEnabled(): boolean;
					}
					export module LoggerConfiguration {
						export class SerializedNames {
							public static class: java.lang.Class<com.microsoft.identity.client.configuration.LoggerConfiguration.SerializedNames>;
							public static PII_ENABLED: string;
							public static LOG_LEVEL: string;
							public static LOGCAT_ENABLED: string;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class BrokerCommunicationException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.BrokerCommunicationException>;
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalArgumentException extends com.microsoft.identity.client.exception.MsalException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalArgumentException>;
						public static ACQUIRE_TOKEN_OPERATION_NAME: string;
						public static ACQUIRE_TOKEN_SILENT_OPERATION_NAME: string;
						public static SCOPE_ARGUMENT_NAME: string;
						public static IACCOUNT_ARGUMENT_NAME: string;
						public static AUTHORITY_REQUIRED_FOR_SILENT: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: string);
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getArgumentName(): string;
						public getOperationName(): string;
						public constructor(param0: string);
						public constructor(param0: string, param1: string, param2: string, param3: java.lang.Throwable);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalClientException extends com.microsoft.identity.client.exception.MsalException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalClientException>;
						public static INVALID_PARAMETER: string;
						public static MULTIPLE_MATCHING_TOKENS_DETECTED: string;
						public static DEVICE_NETWORK_NOT_AVAILABLE: string;
						public static SCOPE_EMPTY_OR_NULL: string;
						public static JSON_PARSE_FAILURE: string;
						public static IO_ERROR: string;
						public static MALFORMED_URL: string;
						public static UNKNOWN_AUTHORITY: string;
						public static UNSUPPORTED_ENCODING: string;
						public static NO_SUCH_ALGORITHM: string;
						public static INVALID_JWT: string;
						public static STATE_MISMATCH: string;
						public static UNSUPPORTED_URL: string;
						public static AUTHORITY_VALIDATION_NOT_SUPPORTED: string;
						public static CHROME_NOT_INSTALLED: string;
						public static USER_MISMATCH: string;
						public static DUPLICATE_QUERY_PARAMETER: string;
						public static BROKER_BIND_FAILURE: string;
						public static UNKNOWN_ERROR: string;
						public static BROKER_NOT_INSTALLED: string;
						public static NOT_ELIGIBLE_TO_USE_BROKER: string;
						public static NO_CURRENT_ACCOUNT: string;
						public static NO_CURRENT_ACCOUNT_ERROR_MESSAGE: string;
						public static CURRENT_ACCOUNT_MISMATCH: string;
						public static CURRENT_ACCOUNT_MISMATCH_ERROR_MESSAGE: string;
						public static DUPLICATE_COMMAND: string;
						public static APP_MANIFEST_VALIDATION_ERROR: string;
						public static REDIRECT_URI_VALIDATION_ERROR: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalDeclinedScopeException extends com.microsoft.identity.client.exception.MsalException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalDeclinedScopeException>;
						public constructor();
						public getSilentParametersForGrantedScopes(): com.microsoft.identity.client.AcquireTokenSilentParameters;
						public getGrantedScopes(): java.util.List<string>;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public constructor(param0: java.util.List<string>, param1: java.util.List<string>, param2: com.microsoft.identity.client.AcquireTokenSilentParameters);
						public getDeclinedScopes(): java.util.List<string>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalException>;
						public getMessage(): string;
						public getErrorCode(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalIntuneAppProtectionPolicyRequiredException extends com.microsoft.identity.client.exception.MsalServiceException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalIntuneAppProtectionPolicyRequiredException>;
						public constructor(param0: com.microsoft.identity.common.exception.IntuneAppProtectionPolicyRequiredException);
						public getAccountUpn(): string;
						public constructor(param0: string, param1: string, param2: number, param3: java.lang.Throwable);
						public constructor();
						public getAuthorityUrl(): string;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getAccountUserId(): string;
						public constructor(param0: string);
						public getTenantId(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalServiceException extends com.microsoft.identity.client.exception.MsalException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalServiceException>;
						public static INVALID_REQUEST: string;
						public static UNAUTHORIZED_CLIENT: string;
						public static ACCESS_DENIED: string;
						public static INVALID_SCOPE: string;
						public static SERVICE_NOT_AVAILABLE: string;
						public static REQUEST_TIMEOUT: string;
						public static INVALID_INSTANCE: string;
						public static UNKNOWN_ERROR: string;
						public static DEFAULT_STATUS_CODE: number;
						public constructor();
						public constructor(param0: string, param1: string, param2: number, param3: java.lang.Throwable);
						public getHttpStatusCode(): number;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalUiRequiredException extends com.microsoft.identity.client.exception.MsalException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalUiRequiredException>;
						public static INVALID_GRANT: string;
						public static NO_TOKENS_FOUND: string;
						public static NO_ACCOUNT_FOUND: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module exception {
					export class MsalUserCancelException extends com.microsoft.identity.client.exception.MsalException {
						public static class: java.lang.Class<com.microsoft.identity.client.exception.MsalUserCancelException>;
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export class AsyncResult<T> extends java.lang.Object {
						public static class: java.lang.Class<com.microsoft.identity.client.internal.AsyncResult<any>>;
						public getSuccess(): boolean;
						public getException(): com.microsoft.identity.client.exception.MsalException;
						public constructor(param0: T, param1: com.microsoft.identity.client.exception.MsalException);
						public getResult(): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export class CommandParametersAdapter {
						public static class: java.lang.Class<com.microsoft.identity.client.internal.CommandParametersAdapter>;
						public static CLIENT_CAPABILITIES_CLAIM: string;
						public constructor();
						public static createInteractiveTokenCommandParameters(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>, param2: com.microsoft.identity.client.AcquireTokenParameters): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters;
						public static addClientCapabilitiesToClaimsRequest(param0: com.microsoft.identity.client.claims.ClaimsRequest, param1: string): com.microsoft.identity.client.claims.ClaimsRequest;
						public static createCommandParameters(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>): com.microsoft.identity.common.internal.commands.parameters.CommandParameters;
						public static createSilentTokenCommandParameters(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>, param2: com.microsoft.identity.client.AcquireTokenSilentParameters): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters;
						public static createRemoveAccountCommandParameters(param0: com.microsoft.identity.client.PublicClientApplicationConfiguration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>, param2: com.microsoft.identity.common.internal.dto.AccountRecord): com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export class IntuneAcquireTokenParameters extends com.microsoft.identity.client.AcquireTokenParameters {
						public static class: java.lang.Class<com.microsoft.identity.client.internal.IntuneAcquireTokenParameters>;
						public isBrokerBrowserSupportEnabled(): boolean;
					}
					export module IntuneAcquireTokenParameters {
						export class Builder extends com.microsoft.identity.client.AcquireTokenParameters.Builder {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.IntuneAcquireTokenParameters.Builder>;
							public constructor();
							public self(): any;
							public self(): com.microsoft.identity.client.AcquireTokenParameters.Builder;
							public build(): com.microsoft.identity.client.AcquireTokenParameters;
							public self(): com.microsoft.identity.client.internal.IntuneAcquireTokenParameters.Builder;
							public build(): com.microsoft.identity.client.internal.IntuneAcquireTokenParameters;
							public brokerBrowserSupportEnabled(param0: boolean): com.microsoft.identity.client.internal.IntuneAcquireTokenParameters.Builder;
							public build(): com.microsoft.identity.client.TokenParameters;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export class MsalUtils {
						public static class: java.lang.Class<com.microsoft.identity.client.internal.MsalUtils>;
						public static ENCODING_UTF8: string;
						public static DEFAULT_EXPIRATION_TIME_SEC: number;
						public static CHROME_PACKAGE: string;
						public static QUERY_STRING_SYMBOL: string;
						public static QUERY_STRING_DELIMITER: string;
						public static extractJsonObjectIntoMap(param0: string): java.util.Map<string, string>;
						public static base64UrlEncodeToString(param0: string): string;
						public static getUniqueUserIdentifier(param0: string, param1: string): string;
						public static validateNonNullArgument(param0: any, param1: string): void;
						public static decodeUrlToMap(param0: string, param1: string): java.util.Map<string, string>;
						public static calculateExpiresOn(param0: string): java.util.Date;
						public static isScopeIntersects(param0: java.util.Set<string>, param1: java.util.Set<string>): boolean;
						public static getChromePackage(param0: globalAndroid.content.Context): string;
						public static createHash(param0: string): string;
						public static urlFormEncode(param0: string): string;
						public static appendQueryParameterToUrl(param0: string, param1: java.util.Map<string, string>): string;
						public static convertArrayToSet(param0: native.Array<string>): java.util.Set<string>;
						public static getExpiryOrDefault(param0: string): number;
						public static urlFormDecode(param0: string): string;
						public static getUrl(param0: string): java.net.URL;
						public static getExpiresOn(param0: number): number;
						public static throwOnMainThread(param0: string): void;
						public static hasCustomTabRedirectActivity(param0: globalAndroid.content.Context, param1: string): boolean;
						public static getApplicationInfo(param0: globalAndroid.content.Context): globalAndroid.content.pm.ApplicationInfo;
						public static getChromePackageWithCustomTabSupport(param0: globalAndroid.content.Context): string;
						public static validateNonNullArg(param0: any, param1: string): void;
						public static getScopesAsSet(param0: string): java.util.Set<string>;
						public static isEmpty(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module configuration {
						export class LogLevelDeserializer extends com.google.gson.JsonDeserializer<com.microsoft.identity.client.Logger.LogLevel> {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.configuration.LogLevelDeserializer>;
							public constructor();
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.client.Logger.LogLevel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class BrokerAccountManagerStrategy extends com.microsoft.identity.client.internal.controllers.BrokerBaseStrategy {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerAccountManagerStrategy>;
							public constructor();
							public removeBrokerAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: string): void;
							public getBrokerAccounts(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public invokeBrokerAccountManagerOperation(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.client.internal.controllers.BrokerAccountManagerStrategy.OperationInfo<any, any>): any;
						}
						export module BrokerAccountManagerStrategy {
							export class OperationInfo<T, U> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerAccountManagerStrategy.OperationInfo<any, any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.client.internal.controllers.BrokerAccountManagerStrategy$OperationInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getRequestBundle(param0: T): globalAndroid.os.Bundle; getMethodName(): string; getResultFromBundle(param0: globalAndroid.os.Bundle): U });
								public constructor();
								public getResultFromBundle(param0: globalAndroid.os.Bundle): U;
								public getRequestBundle(param0: T): globalAndroid.os.Bundle;
								public getMethodName(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class BrokerActivity {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerActivity>;
							public static BROKER_INTENT: string;
							public constructor();
							public onStop(): void;
							public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public onCreate(param0: globalAndroid.os.Bundle): void;
							public onResume(): void;
							public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class BrokerAuthServiceStrategy extends com.microsoft.identity.client.internal.controllers.BrokerBaseStrategy {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerAuthServiceStrategy>;
							public constructor();
							public removeBrokerAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: string): void;
							public getDeviceMode(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: string): boolean;
							public getBrokerAccounts(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public signOutFromSharedDevice(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: string): void;
							public getCurrentAccountInSharedDevice(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
						}
						export module BrokerAuthServiceStrategy {
							export class AuthServiceOperation<T> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerAuthServiceStrategy.AuthServiceOperation<any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.client.internal.controllers.BrokerAuthServiceStrategy$AuthServiceOperation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { perform(param0: com.microsoft.identity.client.IMicrosoftAuthService): T; getOperationName(): string });
								public constructor();
								public perform(param0: com.microsoft.identity.client.IMicrosoftAuthService): T;
								public getOperationName(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export abstract class BrokerBaseStrategy {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerBaseStrategy>;
							public mRequestAdapter: com.microsoft.identity.common.internal.request.MsalBrokerRequestAdapter;
							public mResultAdapter: com.microsoft.identity.common.internal.result.MsalBrokerResultAdapter;
							public completeInteractiveRequestIntent(param0: globalAndroid.content.Intent, param1: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters, param2: string): globalAndroid.content.Intent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class BrokerContentProviderStrategy extends com.microsoft.identity.client.internal.controllers.BrokerBaseStrategy {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerContentProviderStrategy>;
							public constructor();
						}
						export module BrokerContentProviderStrategy {
							export class ContentProviderOperation<T, U> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerContentProviderStrategy.ContentProviderOperation<any, any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.client.internal.controllers.BrokerContentProviderStrategy$ContentProviderOperation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getRequestBundle(param0: T): globalAndroid.os.Bundle; getMethodName(): string; getUriPath(): string; getResultFromBundle(param0: globalAndroid.os.Bundle): U });
								public constructor();
								public getResultFromBundle(param0: globalAndroid.os.Bundle): U;
								public getRequestBundle(param0: T): globalAndroid.os.Bundle;
								public getMethodName(): string;
								public getUriPath(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class BrokerMsalController extends com.microsoft.identity.common.internal.controllers.BaseController {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerMsalController>;
							public constructor();
							public removeCurrentAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters): boolean;
							public completeAcquireToken(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public getDeviceMode(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): boolean;
							public getAccounts(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getCurrentAccount(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public acquireTokenSilent(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public removeAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters): boolean;
							public constructor(param0: globalAndroid.content.Context);
							public acquireToken(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.result.AcquireTokenResult;
						}
						export module BrokerMsalController {
							export class BrokerOperationInfo<T, U> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.BrokerMsalController.BrokerOperationInfo<any, any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.client.internal.controllers.BrokerMsalController$BrokerOperationInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { perform(param0: com.microsoft.identity.client.internal.controllers.BrokerBaseStrategy, param1: T, param2: string): U; getMethodName(): string; getTelemetryApiId(): string; putValueInSuccessEvent(param0: com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent, param1: U): void });
								public constructor();
								public perform(param0: com.microsoft.identity.client.internal.controllers.BrokerBaseStrategy, param1: T, param2: string): U;
								public putValueInSuccessEvent(param0: com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent, param1: U): void;
								public getMethodName(): string;
								public getTelemetryApiId(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class LocalMSALController extends com.microsoft.identity.common.internal.controllers.BaseController {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.LocalMSALController>;
							public constructor();
							public removeCurrentAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters): boolean;
							public completeAcquireToken(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public getDeviceMode(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): boolean;
							public getAccounts(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getCurrentAccount(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public acquireTokenSilent(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public removeAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters): boolean;
							public acquireToken(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.result.AcquireTokenResult;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class MSALControllerFactory {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.MSALControllerFactory>;
							public constructor();
							public static brokerEligible(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.authorities.Authority, param2: com.microsoft.identity.client.PublicClientApplicationConfiguration): boolean;
							public static brokerInstalled(param0: globalAndroid.content.Context): boolean;
							public static getAllControllers(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.authorities.Authority, param2: com.microsoft.identity.client.PublicClientApplicationConfiguration): java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>;
							public static getDefaultController(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.authorities.Authority, param2: com.microsoft.identity.client.PublicClientApplicationConfiguration): com.microsoft.identity.common.internal.controllers.BaseController;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class MsalExceptionAdapter {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.MsalExceptionAdapter>;
							public constructor();
							public static msalExceptionFromBaseException(param0: com.microsoft.identity.common.exception.BaseException): com.microsoft.identity.client.exception.MsalException;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module client {
				export module internal {
					export module controllers {
						export class RequestCodes {
							public static class: java.lang.Class<com.microsoft.identity.client.internal.controllers.RequestCodes>;
							public static LOCAL_AUTHORIZATION_REQUEST: number;
							public static BROKER_AUTHORIZATION_REQUEST: number;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export abstract class BaseAccount extends com.microsoft.identity.common.internal.dto.IAccountRecord {
					public static class: java.lang.Class<com.microsoft.identity.common.BaseAccount>;
					public getUniqueIdentifier(): string;
					public getRealm(): string;
					public getFamilyName(): string;
					public getHomeAccountId(): string;
					public getLocalAccountId(): string;
					public getAuthorityType(): string;
					public getClientInfo(): string;
					public getUsername(): string;
					public getAlternativeAccountId(): string;
					public getCacheIdentifiers(): java.util.List<string>;
					public getFirstName(): string;
					public constructor();
					public getName(): string;
					public getEnvironment(): string;
					public getMiddleName(): string;
					public getAvatarUrl(): string;
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export class BuildConfig {
					public static class: java.lang.Class<com.microsoft.identity.common.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public static AZURE_AUTHENTICATOR_APP_SIGNATURE: string;
					public static COMPANY_PORTAL_APP_PACKAGE_NAME: string;
					public static COMPANY_PORTAL_APP_SIGNATURE: string;
					public static DC: string;
					public static SLICE: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class ADALError {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.ADALError>;
							public static DEVELOPER_AUTHORITY_CAN_NOT_BE_VALIDED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_AUTHORITY_IS_NOT_VALID_INSTANCE: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_AUTHORITY_IS_NOT_VALID_URL: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_AUTHORITY_IS_EMPTY: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_ASYNC_TASK_REUSED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_RESOURCE_IS_EMPTY: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_CONTEXT_IS_NOT_PROVIDED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_BEARER_HEADER_MULTIPLE_ITEMS: com.microsoft.identity.common.adal.internal.ADALError;
							public static CALLBACK_IS_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_ACTIVITY_IS_NOT_RESOLVED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_INTERNET_PERMISSION_MISSING: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_BROKER_PERMISSIONS_MISSING: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_CALLING_ON_MAIN_THREAD: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_DIALOG_LAYOUT_INVALID: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_DIALOG_INFLATION_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static SERVER_INVALID_REQUEST: com.microsoft.identity.common.adal.internal.ADALError;
							public static SERVER_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static IO_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static SOCKET_TIMEOUT_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static ARGUMENT_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static ERROR_FAILED_SSL_HANDSHAKE: com.microsoft.identity.common.adal.internal.ADALError;
							public static ERROR_WEBVIEW: com.microsoft.identity.common.adal.internal.ADALError;
							public static ACTIVITY_REQUEST_INTENT_DATA_IS_NULL: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROADCAST_RECEIVER_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_REFRESH_FAILED_PROMPT_NOT_ALLOWED: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_SERVER_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_NO_RESOURCES: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_NO_STATE: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_BAD_STATE: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_NO_TOKEN: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_CANCELLED: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_INTERNAL_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_USER_MISMATCH: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_FAILED_INTUNE_POLICY_REQUIRED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_INTERNET_IS_NOT_AVAILABLE: com.microsoft.identity.common.adal.internal.ADALError;
							public static NO_NETWORK_CONNECTION_POWER_OPTIMIZATION: com.microsoft.identity.common.adal.internal.ADALError;
							public static ON_ACTIVITY_RESULT_INTENT_NULL: com.microsoft.identity.common.adal.internal.ADALError;
							public static ON_ACTIVITY_RESULT_CALLBACK_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_SHARED_PREF_IS_NOT_AVAILABLE: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CACHE_IS_NOT_WORKING: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_FILE_CACHE_IS_NOT_LOADED_FROM_FILE: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_FILE_CACHE_IS_NOT_WRITING_TO_FILE: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_FILE_CACHE_FORMAT_IS_WRONG: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CONNECTION_IS_NOT_AVAILABLE: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_PRNG_FIX_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static IDTOKEN_PARSING_FAILURE: com.microsoft.identity.common.adal.internal.ADALError;
							public static DATE_PARSING_FAILURE: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTHORIZATION_CODE_NOT_EXCHANGED_FOR_TOKEN: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROADCAST_CANCEL_NOT_SUCCESSFUL: com.microsoft.identity.common.adal.internal.ADALError;
							public static CORRELATION_ID_FORMAT: com.microsoft.identity.common.adal.internal.ADALError;
							public static CORRELATION_ID_NOT_MATCHING_REQUEST_RESPONSE: com.microsoft.identity.common.adal.internal.ADALError;
							public static ENCODING_IS_NOT_SUPPORTED: com.microsoft.identity.common.adal.internal.ADALError;
							public static SERVER_INVALID_JSON_RESPONSE: com.microsoft.identity.common.adal.internal.ADALError;
							public static AUTH_REFRESH_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static ENCRYPTION_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DECRYPTION_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static ANDROIDKEYSTORE_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static ANDROIDKEYSTORE_KEYPAIR_GENERATOR_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DISCOVERY_NOT_SUPPORTED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_PACKAGE_NAME_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_PRT_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_NOT_RESPONDING: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_OPERATION_CANCEL: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_ERROR_GETAUTHTOKEN: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_BAD_ARGUMENTS: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_BAD_AUTHENTICATION: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_UNSUPPORTED_OPERATION: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_IO_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATOR_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_VERIFICATION_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static PACKAGE_NAME_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static DIGEST_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_AUTHENTICATION_REQUEST_IS_NULL: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_APP_VERIFICATION_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACTIVITY_INFO_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_SIGNATURE_NOT_SAVED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACCOUNT_DEVICE_REGISTRY_FAILURE: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACCOUNT_FAILED_RESOLVED_INTERRUPT: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_NO_SUCH_ALGORITHM: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_ALGORITHM_PADDING_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static APP_PACKAGE_NAME_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static ENCRYPTION_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACTIVITY_IS_NOT_RESOLVED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACTIVITY_INVALID_REQUEST: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACCOUNT_SAVE_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_ACCOUNT_DOES_NOT_EXIST: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_SINGLE_USER_EXPECTED: com.microsoft.identity.common.adal.internal.ADALError;
							public static KEY_CHAIN_PRIVATE_KEY_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static SIGNATURE_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CERTIFICATE_RESPONSE_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static WEBVIEW_RETURNED_AUTHENTICATION_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static WEBVIEW_RETURNED_INVALID_AUTHENTICATION_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static WEBVIEW_RETURNED_EMPTY_REDIRECT_URL: com.microsoft.identity.common.adal.internal.ADALError;
							public static WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CERTIFICATE_API_EXCEPTION: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CERTIFICATE_REQUEST_INVALID: com.microsoft.identity.common.adal.internal.ADALError;
							public static RESOURCE_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static CERTIFICATE_ENCODING_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static ERROR_SILENT_REQUEST: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVELOPER_REDIRECTURI_INVALID: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CHALLENGE_FAILURE: com.microsoft.identity.common.adal.internal.ADALError;
							public static RESOURCE_AUTHENTICATION_CHALLENGE_FAILURE: com.microsoft.identity.common.adal.internal.ADALError;
							public static INVALID_TOKEN_CACHE_ITEM: com.microsoft.identity.common.adal.internal.ADALError;
							public static FAIL_TO_EXPORT: com.microsoft.identity.common.adal.internal.ADALError;
							public static FAIL_TO_IMPORT: com.microsoft.identity.common.adal.internal.ADALError;
							public static INCOMPATIBLE_BLOB_VERSION: com.microsoft.identity.common.adal.internal.ADALError;
							public static TOKEN_CACHE_ITEM_NOT_FOUND: com.microsoft.identity.common.adal.internal.ADALError;
							public static JSON_PARSE_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static DRS_METADATA_URL_INVALID: com.microsoft.identity.common.adal.internal.ADALError;
							public static DRS_FAILED_SERVER_ERROR: com.microsoft.identity.common.adal.internal.ADALError;
							public static DRS_DISCOVERY_FAILED_UNKNOWN_HOST: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_APP_INSTALLATION_STARTED: com.microsoft.identity.common.adal.internal.ADALError;
							public static PARALLEL_UI_REQUESTS: com.microsoft.identity.common.adal.internal.ADALError;
							public static X_MS_CLITELEM_VERSION_UNRECOGNIZED: com.microsoft.identity.common.adal.internal.ADALError;
							public static X_MS_CLITELEM_MALFORMED: com.microsoft.identity.common.adal.internal.ADALError;
							public static DEVICE_CERT_PROXY_UNINITIALIZED: com.microsoft.identity.common.adal.internal.ADALError;
							public static BROKER_BIND_SERVICE_FAILED: com.microsoft.identity.common.adal.internal.ADALError;
							public static MAPPING_FAILURE: com.microsoft.identity.common.adal.internal.ADALError;
							public static MDM_REQUIRED: com.microsoft.identity.common.adal.internal.ADALError;
							public static values(): native.Array<com.microsoft.identity.common.adal.internal.ADALError>;
							public static valueOf(param0: string): com.microsoft.identity.common.adal.internal.ADALError;
							public getLocalizedDescription(param0: globalAndroid.content.Context): string;
							public getDescription(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class ADALUserInfo {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.ADALUserInfo>;
							public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccount);
							public constructor(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult);
							public getIdentityProvider(): string;
							public getGivenName(): string;
							public getUserId(): string;
							public getDisplayableId(): string;
							public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
							public toString(): string;
							public getPasswordChangeUrl(): globalAndroid.net.Uri;
							public getFamilyName(): string;
							public getPasswordExpiresOn(): java.util.Date;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class AuthenticationConstants {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants>;
							public static ADAL_PACKAGE_NAME: string;
							public static MS_FAMILY_ID: string;
							public static ENCODING_UTF8: string;
							public static BUNDLE_MESSAGE: string;
							public static DEFAULT_EXPIRATION_TIME_SEC: number;
						}
						export module AuthenticationConstants {
							export class AAD {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.AAD>;
								public static RESOURCE: string;
								public static BEARER: string;
								public static AUTHORIZATION: string;
								public static AUTHORIZATION_URI: string;
								public static REALM: string;
								public static LOGIN_HINT: string;
								public static WEB_UI_CANCEL: string;
								public static CORRELATION_ID: string;
								public static CLIENT_REQUEST_ID: string;
								public static RETURN_CLIENT_REQUEST_ID: string;
								public static QUERY_PROMPT: string;
								public static QUERY_PROMPT_VALUE: string;
								public static QUERY_PROMPT_REFRESH_SESSION_VALUE: string;
								public static ADAL_ID_PLATFORM: string;
								public static ADAL_ID_VERSION: string;
								public static ADAL_ID_CPU: string;
								public static ADAL_ID_OS_VER: string;
								public static ADAL_ID_DM: string;
								public static ADAL_ID_PLATFORM_VALUE: string;
								public static REQUEST_ID_HEADER: string;
								public static ADAL_BROKER_VERSION: string;
								public static APP_PACKAGE_NAME: string;
								public static APP_VERSION: string;
							}
							export class AuthorizationIntentAction {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.AuthorizationIntentAction>;
								public static CANCEL_INTERACTIVE_REQUEST: string;
								public static RETURN_INTERACTIVE_REQUEST_RESULT: string;
								public constructor();
							}
							export class AuthorizationIntentKey {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.AuthorizationIntentKey>;
								public static AUTH_INTENT: string;
								public static REQUEST_URL: string;
								public static REDIRECT_URI: string;
								public static REQUEST_HEADERS: string;
								public static POST_PAGE_LOADED_URL: string;
								public static AUTHORIZATION_AGENT: string;
								public static REQUEST_ID: string;
								public static AUTHORIZATION_FINAL_URL: string;
								public static RESULT_CODE: string;
								public static REQUEST_CODE: string;
								public static REQUEST_CANCELLED_BY_USER: string;
								public static WEB_VIEW_ZOOM_CONTROLS_ENABLED: string;
								public static WEB_VIEW_ZOOM_ENABLED: string;
								public constructor();
							}
							export class Broker {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker>;
								public static BROKER_FEATURE_MULTI_USER: string;
								public static BROKER_REQUEST_ID: number;
								public static BROKER_REQUEST: string;
								public static BROKER_REQUEST_RESUME: string;
								public static BROKER_RETURN_JSON: string;
								public static BROKER_ACCOUNT_TYPE: string;
								public static ACCOUNT_INITIAL_NAME: string;
								public static BACKGROUND_REQUEST_MESSAGE: string;
								public static ACCOUNT_DEFAULT_NAME: string;
								public static BROKER_VERSION: string;
								public static BROKER_PACKAGE_NAME: string;
								public static BROKER_ACTIVITY_NAME: string;
								public static BROKER_PROTOCOL_VERSION_CODE: string;
								public static CLIENT_ADVERTISED_MAXIMUM_BP_VERSION_KEY: string;
								public static CLIENT_CONFIGURED_MINIMUM_BP_VERSION_KEY: string;
								public static NEGOTIATED_BP_VERSION_KEY: string;
								public static BROKER_PROTOCOL_VERSION: string;
								public static BROKER_SKIP_CACHE: string;
								public static BROKER_RESULT_RETURNED: string;
								public static BROKER_REDIRECT_URI: string;
								public static BROKER_CLIENT_ID: string;
								public static AUTHTOKEN_TYPE: string;
								public static BROKER_FINAL_URL: string;
								public static DEFAULT_BROWSER_PACKAGE_NAME: string;
								public static ACCOUNT_INITIAL_REQUEST: string;
								public static ACCOUNT_CLIENTID_KEY: string;
								public static ACCOUNT_CLIENT_SECRET_KEY: string;
								public static ACCOUNT_CORRELATIONID: string;
								public static ACCOUNT_PROMPT: string;
								public static ACCOUNT_EXTRA_QUERY_PARAM: string;
								public static ACCOUNT_CLAIMS: string;
								public static BROKER_FORCE_REFRESH: string;
								public static ACCOUNT_LOGIN_HINT: string;
								public static ACCOUNT_RESOURCE: string;
								public static ACCOUNT_REDIRECT: string;
								public static ACCOUNT_AUTHORITY: string;
								public static ACCOUNT_REFRESH_TOKEN: string;
								public static ACCOUNT_ACCESS_TOKEN: string;
								public static ACCOUNT_EXPIREDATE: string;
								public static ACCOUNT_RESULT: string;
								public static ACCOUNT_REMOVE_TOKENS: string;
								public static ACCOUNT_REMOVE_TOKENS_VALUE: string;
								public static MULTI_RESOURCE_TOKEN: string;
								public static ACCOUNT_NAME: string;
								public static ACCOUNT_HOME_ACCOUNT_ID: string;
								public static ACCOUNT_IDTOKEN: string;
								public static ACCOUNT_USERINFO_USERID: string;
								public static ACCOUNT_USERINFO_USERID_LIST: string;
								public static ACCOUNT_USERINFO_GIVEN_NAME: string;
								public static ACCOUNT_USERINFO_FAMILY_NAME: string;
								public static ACCOUNT_USERINFO_IDENTITY_PROVIDER: string;
								public static ACCOUNT_USERINFO_USERID_DISPLAYABLE: string;
								public static ACCOUNT_USERINFO_TENANTID: string;
								public static ACCOUNT_USERINFO_ENVIRONMENT: string;
								public static ACCOUNT_USERINFO_AUTHORITY_TYPE: string;
								public static ACCOUNT_USERINFO_ID_TOKEN: string;
								public static ADAL_VERSION_KEY: string;
								public static ACCOUNT_UID_CACHES: string;
								public static ACCOUNT_ADD_NEW: string;
								public static ACCOUNT_RESOLVE_INTERRUPT: string;
								public static USERDATA_PREFIX: string;
								public static USERDATA_UID_KEY: string;
								public static USERDATA_BROKER_RT: string;
								public static USERDATA_BROKER_PRT_RT: string;
								public static USERDATA_BROKER_PRT_SESSION_KEY: string;
								public static USERDATA_CALLER_CACHEKEYS: string;
								public static CALLER_CACHEKEY_PREFIX: string;
								public static CLIENT_TLS_NOT_SUPPORTED: string;
								public static CHALLENGE_REQUEST_HEADER: string;
								public static CHALLENGE_RESPONSE_HEADER: string;
								public static CHALLENGE_RESPONSE_TYPE: string;
								public static CHALLENGE_RESPONSE_TOKEN: string;
								public static CHALLENGE_RESPONSE_CONTEXT: string;
								public static PKCE_CHALLENGE: string;
								public static CHALLENGE_REQUEST_CERT_AUTH_DELIMETER: string;
								public static COMPANY_PORTAL_APP_PACKAGE_NAME: string;
								public static COMPANY_PORTAL_APP_SIGNATURE: string;
								public static AZURE_AUTHENTICATOR_APP_SIGNATURE: string;
								public static AZURE_AUTHENTICATOR_APP_PACKAGE_NAME: string;
								public static IPPHONE_APP_PACKAGE_NAME: string;
								public static IPPHONE_APP_SIGNATURE: string;
								public static PKEYAUTH_REDIRECT: string;
								public static CHALLENGE_TLS_INCAPABLE: string;
								public static CHALLENGE_TLS_INCAPABLE_VERSION: string;
								public static REDIRECT_PREFIX: string;
								public static DEVICE_REGISTRATION_REDIRECT_URI_HOSTNAME: string;
								public static REDIRECT_DELIMETER_ENCODED: any;
								public static BROWSER_EXT_PREFIX: string;
								public static BROWSER_EXT_INSTALL_PREFIX: string;
								public static BROWSER_DEVICE_CA_URL_QUERY_STRING_PARAMETER: string;
								public static COMPANY_PORTAL_APP_LAUNCH_ACTIVITY_NAME: string;
								public static INSTALL_URL_KEY: string;
								public static INSTALL_UPN_KEY: string;
								public static PRT_NONCE: string;
								public static ACCOUNT_REQUEST_TYPE: string;
								public static PRT_RESPONSE_HEADER: string;
								public static CALLER_INFO_UID: string;
								public static CALLER_INFO_PACKAGE: string;
								public static BROKER_REQUEST_V2: string;
								public static BROKER_REQUEST_V2_COMPRESSED: string;
								public static BROKER_RESULT_V2: string;
								public static BROKER_RESULT_V2_COMPRESSED: string;
								public static BROKER_DEVICE_MODE: string;
								public static BROKER_REQUEST_V2_SUCCESS: string;
								public static REDIRECT_SSL_PREFIX: string;
								public static EXPIRATION_BUFFER: string;
								public static AUTH_SCOPE: string;
								public static AUTH_STATE: string;
								public static AUTH_RESPONSE_TYPE: string;
								public static LIB_NAME: string;
								public static LIB_VERSION: string;
								public static CLIENT_APP_PACKAGE_NAME: string;
								public static ENVIRONMENT: string;
								public static BROKER_ACCOUNTS: string;
								public static BROKER_ACCOUNTS_COMPRESSED: string;
								public static BROKER_CURRENT_ACCOUNT: string;
								public static BROKER_KEYSTORE_SYMMETRIC_KEY: string;
								public static BROKER_ACCOUNT_MANAGER_OPERATION_KEY: string;
							}
							export module Broker {
								export class CliTelemInfo {
									public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.CliTelemInfo>;
									public static SERVER_ERROR: string;
									public static SERVER_SUBERROR: string;
									public static RT_AGE: string;
									public static SPE_RING: string;
									public constructor();
								}
							}
							export class BrokerAccountManagerOperation {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.BrokerAccountManagerOperation>;
								public static HELLO: string;
								public static GET_ACCOUNTS: string;
								public static ACQUIRE_TOKEN_SILENT: string;
								public static GET_INTENT_FOR_INTERACTIVE_REQUEST: string;
								public static REMOVE_ACCOUNT: string;
								public static GET_DEVICE_MODE: string;
								public static GET_CURRENT_ACCOUNT: string;
								public static REMOVE_ACCOUNT_FROM_SHARED_DEVICE: string;
							}
							export class BrokerContentProvider {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.BrokerContentProvider>;
								public static CONTENT_SCHEME: string;
								public static AUTHORITY: string;
								public static HELLO_PATH: string;
								public static ACQUIRE_TOKEN_INTERACTIVE_PATH: string;
								public static ACQUIRE_TOKEN_SILENT_PATH: string;
								public static GET_ACCOUNTS_PATH: string;
								public static REMOVE_ACCOUNTS_PATH: string;
								public static GET_CURRENT_ACCOUNT_SHARED_DEVICE_PATH: string;
								public static GET_DEVICE_MODE_PATH: string;
								public static SIGN_OUT_FROM_SHARED_DEVICE_PATH: string;
								public static HELLO_URI_CODE: number;
								public static ACQUIRE_TOKEN_INTERACTIVE_CODE: number;
								public static ACQUIRE_TOKEN_SILENT_CODE: number;
								public static GET_ACCOUNTS_CODE: number;
								public static REMOVE_ACCOUNTS_CODE: number;
								public static GET_CURRENT_ACCOUNT_SHARED_DEVICE_CODE: number;
								public static GET_DEVICE_MODE_CODE: number;
								public static SIGN_OUT_FROM_SHARED_DEVICE_CODE: number;
							}
							export class Browser {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.Browser>;
								public static REQUEST_MESSAGE: string;
								public static RESPONSE_REQUEST_INFO: string;
								public static RESPONSE_ERROR_CODE: string;
								public static RESPONSE_ERROR_SUBCODE: string;
								public static RESPONSE_ERROR_MESSAGE: string;
								public static RESPONSE_AUTHENTICATION_EXCEPTION: string;
								public static RESPONSE_FINAL_URL: string;
								public static RESPONSE: string;
								public static WEBVIEW_INVALID_REQUEST: string;
								public static ACTION_CANCEL: string;
								public static REQUEST_ID: string;
								public static SUB_ERROR_UI_CANCEL: string;
								public static LOGOUT_ENDPOINT_V2: string;
							}
							export class HeaderField {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.HeaderField>;
								public static ACCEPT: string;
								public static X_MS_CLITELEM: string;
								public constructor();
							}
							export class MediaType {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.MediaType>;
								public static APPLICATION_JSON: string;
								public constructor();
							}
							export class OAuth2 {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.OAuth2>;
								public static ACCESS_TOKEN: string;
								public static AUTHORITY: string;
								public static AUTHORIZATION_CODE: string;
								public static CLIENT_ID: string;
								public static CLIENT_SECRET: string;
								public static CLIENT_INFO: string;
								public static CLIENT_INFO_TRUE: string;
								public static AAD_VERSION: string;
								public static AAD_VERSION_V1: string;
								public static AAD_VERSION_V2: string;
								public static AAD_PREFERRED_USERNAME: string;
								public static CODE: string;
								public static ERROR: string;
								public static SUBERROR: string;
								public static ERROR_DESCRIPTION: string;
								public static ERROR_CODES: string;
								public static EXPIRES_IN: string;
								public static GRANT_TYPE: string;
								public static REDIRECT_URI: string;
								public static REFRESH_TOKEN: string;
								public static RESPONSE_TYPE: string;
								public static SCOPE: string;
								public static STATE: string;
								public static TOKEN_TYPE: string;
								public static HTTP_RESPONSE_BODY: string;
								public static HTTP_RESPONSE_HEADER: string;
								public static HTTP_STATUS_CODE: string;
								public static ID_TOKEN: string;
								public static ID_TOKEN_SUBJECT: string;
								public static ID_TOKEN_TENANTID: string;
								public static ID_TOKEN_UPN: string;
								public static ID_TOKEN_GIVEN_NAME: string;
								public static ID_TOKEN_FAMILY_NAME: string;
								public static ID_TOKEN_UNIQUE_NAME: string;
								public static ID_TOKEN_EMAIL: string;
								public static ID_TOKEN_IDENTITY_PROVIDER: string;
								public static ID_TOKEN_OBJECT_ID: string;
								public static ID_TOKEN_PASSWORD_EXPIRATION: string;
								public static ID_TOKEN_PASSWORD_CHANGE_URL: string;
								public static ADAL_CLIENT_FAMILY_ID: string;
								public static HAS_CHROME: string;
								public static EXT_EXPIRES_IN: string;
								public static CLAIMS: string;
								public static CLIENT_CAPABILITIES_CLAIMS_LIST: string;
								public static CLIENT_CAPABILITY_ACCESS_TOKEN: string;
								public static CLOUD_INSTANCE_HOST_NAME: string;
								public static SESSION_KEY_JWE: string;
								public static IT_VER_PARAM: string;
							}
							export class OAuth2ErrorCode {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.OAuth2ErrorCode>;
								public static INVALID_GRANT: string;
								public static UNAUTHORIZED_CLIENT: string;
								public static INTERACTION_REQUIRED: string;
								public constructor();
							}
							export class OAuth2Scopes {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.OAuth2Scopes>;
								public static OPEN_ID_SCOPE: string;
								public static OFFLINE_ACCESS_SCOPE: string;
								public static PROFILE_SCOPE: string;
								public static AZA_SCOPE: string;
								public static EMAIL: string;
							}
							export class OAuth2SubErrorCode {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.OAuth2SubErrorCode>;
								public static PROTECTION_POLICY_REQUIRED: string;
								public static BAD_TOKEN: string;
								public static DEVICE_AUTHENTICATION_FAILED: string;
								public constructor();
							}
							export class TelemetryEvents {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.TelemetryEvents>;
								public static DECRYPTION_ERROR: string;
								public static KEYCHAIN_WRITE_START: string;
								public static KEYCHAIN_WRITE_END: string;
								public static KEYCHAIN_READ_START: string;
								public static KEYCHAIN_READ_END: string;
								public static KEY_RETRIEVAL_START: string;
								public static KEY_RETRIEVAL_END: string;
								public static KEY_DISTRIBUTION_START: string;
								public static KEY_DISTRIBUTION_END: string;
								public static KEY_CREATED: string;
								public static SHARED_DEVICE_REGISTERED: string;
								public static USER_SIGNED_INTO_SHARED_DEVICE: string;
								public static USER_SIGNED_OUT_FROM_SHARED_DEVICE: string;
								public constructor();
							}
							export class UIRequest {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.UIRequest>;
								public static BROWSER_FLOW: number;
								public static TOKEN_FLOW: number;
								public static BROKER_FLOW: number;
							}
							export class UIResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationConstants.UIResponse>;
								public static BROWSER_CODE_CANCEL: number;
								public static BROWSER_CODE_ERROR: number;
								public static BROWSER_CODE_COMPLETE: number;
								public static TOKEN_BROKER_RESPONSE: number;
								public static BROWSER_CODE_AUTHENTICATION_EXCEPTION: number;
								public static BROKER_REQUEST_RESUME: number;
								public static BROWSER_CODE_DEVICE_REGISTER: number;
								public static BROWSER_CODE_SDK_CANCEL: number;
								public static BROWSER_CODE_MDM: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class AuthenticationSettings {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.AuthenticationSettings>;
							public static INSTANCE: com.microsoft.identity.common.adal.internal.AuthenticationSettings;
							public getBrokerSecretKeys(): java.util.Map<string, native.Array<number>>;
							public getBrokerPackageName(): string;
							public getConnectTimeOut(): number;
							public setDisableWebViewHardwareAcceleration(param0: boolean): void;
							public setActivityPackageName(param0: string): void;
							public getUseBroker(): boolean;
							public getActivityPackageName(): string;
							/** @deprecated */
							public getSkipBroker(): boolean;
							public setSecretKey(param0: native.Array<number>): void;
							public setBrokerSecretKeys(param0: java.util.Map<string, native.Array<number>>): void;
							public getExpirationBuffer(): number;
							public clearSecretKeysForTestCases(): void;
							public getDeviceCertificateProxy(): java.lang.Class<any>;
							public setConnectTimeOut(param0: number): void;
							public setUseBroker(param0: boolean): void;
							public setReadTimeOut(param0: number): void;
							public getDisableWebViewHardwareAcceleration(): boolean;
							public static values(): native.Array<com.microsoft.identity.common.adal.internal.AuthenticationSettings>;
							public getSecretKeyData(): native.Array<number>;
							public setDeviceCertificateProxyClass(param0: java.lang.Class): void;
							public static valueOf(param0: string): com.microsoft.identity.common.adal.internal.AuthenticationSettings;
							public clearBrokerSecretKeys(): void;
							public setBrokerSignature(param0: string): void;
							public setExpirationBuffer(param0: number): void;
							public setBrokerPackageName(param0: string): void;
							public setSharedPrefPackageName(param0: string): void;
							public getBrokerSignature(): string;
							public getSharedPrefPackageName(): string;
							public getReadTimeOut(): number;
							/** @deprecated */
							public setSkipBroker(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class IDeviceCertificate {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.IDeviceCertificate>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.adal.internal.IDeviceCertificate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { isValidIssuer(param0: java.util.List<string>): boolean; getCertificate(): java.security.cert.X509Certificate; getRSAPrivateKey(): java.security.interfaces.RSAPrivateKey; getThumbPrint(): string; getRSAPublicKey(): java.security.interfaces.RSAPublicKey });
							public constructor();
							public isValidIssuer(param0: java.util.List<string>): boolean;
							public getRSAPrivateKey(): java.security.interfaces.RSAPrivateKey;
							public getCertificate(): java.security.cert.X509Certificate;
							public getThumbPrint(): string;
							public getRSAPublicKey(): java.security.interfaces.RSAPublicKey;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class JWSBuilder {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.JWSBuilder>;
							public constructor();
							public generateSignedJWT(param0: string, param1: string, param2: java.security.interfaces.RSAPrivateKey, param3: java.security.interfaces.RSAPublicKey, param4: java.security.cert.X509Certificate): string;
						}
						export module JWSBuilder {
							export class Claims {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.JWSBuilder.Claims>;
							}
							export class JwsHeader {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.JWSBuilder.JwsHeader>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class PowerManagerWrapper {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.PowerManagerWrapper>;
							public constructor();
							public static getInstance(): com.microsoft.identity.common.adal.internal.PowerManagerWrapper;
							public isIgnoringBatteryOptimizations(param0: globalAndroid.content.Context): boolean;
							public static setInstance(param0: com.microsoft.identity.common.adal.internal.PowerManagerWrapper): void;
							public isDeviceIdleMode(param0: globalAndroid.content.Context): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export class UsageStatsManagerWrapper {
							public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.UsageStatsManagerWrapper>;
							public constructor();
							public static setInstance(param0: com.microsoft.identity.common.adal.internal.UsageStatsManagerWrapper): void;
							public static getInstance(): com.microsoft.identity.common.adal.internal.UsageStatsManagerWrapper;
							public isAppInactive(param0: globalAndroid.content.Context): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module cache {
							export class CacheKey {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.CacheKey>;
								public toString(): string;
								public getAuthority(): string;
								public getUserId(): string;
								public static createCacheKeyForFRT(param0: string, param1: string, param2: string): string;
								public constructor();
								public static createCacheKeyForRTEntry(param0: string, param1: string, param2: string, param3: string): string;
								public getResource(): string;
								public getClientId(): string;
								public static createCacheKeyForMRRT(param0: string, param1: string, param2: string): string;
								public static createCacheKey(param0: string, param1: string, param2: string, param3: boolean, param4: string, param5: string): string;
								public getIsMultipleResourceRefreshToken(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module cache {
							export class DateTimeAdapter extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.DateTimeAdapter>;
								public serialize(param0: java.util.Date, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
								public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): java.util.Date;
								public constructor();
								public serialize(param0: any, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
								public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module cache {
							export class IStorageHelper {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.IStorageHelper>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.adal.internal.cache.IStorageHelper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { encrypt(param0: string): string; decrypt(param0: string): string; loadSecretKeyForEncryption(): javax.crypto.SecretKey });
								public constructor();
								public decrypt(param0: string): string;
								public encrypt(param0: string): string;
								public loadSecretKeyForEncryption(): javax.crypto.SecretKey;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module cache {
							export class IWpjTelemetryCallback {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.IWpjTelemetryCallback>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.adal.internal.cache.IWpjTelemetryCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { logEvent(param0: globalAndroid.content.Context, param1: string, param2: java.lang.Boolean, param3: string): void });
								public constructor();
								public logEvent(param0: globalAndroid.content.Context, param1: string, param2: java.lang.Boolean, param3: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module cache {
							export class StorageHelper extends com.microsoft.identity.common.adal.internal.cache.IStorageHelper {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.StorageHelper>;
								public static sShouldEncryptWithKeyStoreKey: boolean;
								public static DATA_KEY_LENGTH: number;
								public static HMAC_LENGTH: number;
								public static VERSION_ANDROID_KEY_STORE: string;
								public static VERSION_USER_DEFINED: string;
								public getEncryptionType(param0: string): com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType;
								public generateKeyStoreEncryptedKey(): javax.crypto.SecretKey;
								public saveKeyStoreEncryptedKey(param0: javax.crypto.SecretKey): void;
								public generateSecretKey(): javax.crypto.SecretKey;
								public decrypt(param0: string): string;
								public serializeSecretKey(param0: javax.crypto.SecretKey): string;
								public loadSecretKey(param0: com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType): javax.crypto.SecretKey;
								public constructor(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.adal.internal.cache.IWpjTelemetryCallback);
								public getPackageName(): string;
								public deleteKeyFile(): void;
								public encrypt(param0: string): string;
								public loadSecretKeyForEncryption(): javax.crypto.SecretKey;
								public resetKeyPairFromAndroidKeyStore(): void;
								public deserializeSecretKey(param0: string): javax.crypto.SecretKey;
								public constructor(param0: globalAndroid.content.Context);
								public setBlobVersion(param0: string): void;
								public getKeysForDecryptionType(param0: string, param1: string): java.util.List<com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType>;
							}
							export module StorageHelper {
								export class EncryptionType {
									public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType>;
									public static USER_DEFINED: com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType;
									public static ANDROID_KEY_STORE: com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType;
									public static UNENCRYPTED: com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType;
									public static values(): native.Array<com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType>;
									public static valueOf(param0: string): com.microsoft.identity.common.adal.internal.cache.StorageHelper.EncryptionType;
								}
								export class KeyType {
									public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType>;
									public static LEGACY_AUTHENTICATOR_APP_KEY: com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType;
									public static LEGACY_COMPANY_PORTAL_KEY: com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType;
									public static ADAL_USER_DEFINED_KEY: com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType;
									public static KEYSTORE_ENCRYPTED_KEY: com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType;
									public static values(): native.Array<com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType>;
									public static valueOf(param0: string): com.microsoft.identity.common.adal.internal.cache.StorageHelper.KeyType;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class DefaultConnectionService extends com.microsoft.identity.common.adal.internal.net.IConnectionService {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.DefaultConnectionService>;
								public isNetworkDisabledFromOptimizations(): boolean;
								public constructor(param0: globalAndroid.content.Context);
								public isConnectionAvailable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class HttpUrlConnectionFactory {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.HttpUrlConnectionFactory>;
								public static getMockedConnectionOpenUrl(): java.net.URL;
								public static createHttpUrlConnection(param0: java.net.URL): java.net.HttpURLConnection;
								public static setMockedHttpUrlConnection(param0: java.net.HttpURLConnection): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class HttpWebRequest {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.HttpWebRequest>;
								public constructor(param0: java.net.URL, param1: string, param2: java.util.Map<string, string>);
								public send(): com.microsoft.identity.common.adal.internal.net.HttpWebResponse;
								public static throwIfNetworkNotAvailable(param0: globalAndroid.content.Context, param1: boolean): void;
								public constructor(param0: java.net.URL, param1: string, param2: java.util.Map<string, string>, param3: native.Array<number>, param4: string);
								public static throwIfNetworkNotAvailable(param0: globalAndroid.content.Context): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class HttpWebResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.HttpWebResponse>;
								public constructor(param0: number, param1: string, param2: java.util.Map<string, java.util.List<string>>);
								public getStatusCode(): number;
								public getResponseHeaders(): java.util.Map<string, java.util.List<string>>;
								public getBody(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class IConnectionService {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.IConnectionService>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.adal.internal.net.IConnectionService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { isConnectionAvailable(): boolean });
								public constructor();
								public isConnectionAvailable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class IWebRequestHandler {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.IWebRequestHandler>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.adal.internal.net.IWebRequestHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { sendGet(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.adal.internal.net.HttpWebResponse; sendPost(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.adal.internal.net.HttpWebResponse; setRequestCorrelationId(param0: java.util.UUID): void; setClientVersion(param0: string): void });
								public constructor();
								public sendGet(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.adal.internal.net.HttpWebResponse;
								public sendPost(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.adal.internal.net.HttpWebResponse;
								public setClientVersion(param0: string): void;
								public setRequestCorrelationId(param0: java.util.UUID): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module net {
							export class WebRequestHandler extends com.microsoft.identity.common.adal.internal.net.IWebRequestHandler {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.net.WebRequestHandler>;
								public static HEADER_ACCEPT: string;
								public static HEADER_ACCEPT_JSON: string;
								public sendGet(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.adal.internal.net.HttpWebResponse;
								public constructor();
								public sendPost(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.adal.internal.net.HttpWebResponse;
								public setClientVersion(param0: string): void;
								public setRequestCorrelationId(param0: java.util.UUID): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module tokensharing {
							export class ITokenShareInternal {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.tokensharing.ITokenShareInternal>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.adal.internal.tokensharing.ITokenShareInternal interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getOrgIdFamilyRefreshToken(param0: string): string; saveOrgIdFamilyRefreshToken(param0: string): void; getMsaFamilyRefreshToken(param0: string): string; saveMsaFamilyRefreshToken(param0: string): void });
								public constructor();
								public getOrgIdFamilyRefreshToken(param0: string): string;
								public saveOrgIdFamilyRefreshToken(param0: string): void;
								public saveMsaFamilyRefreshToken(param0: string): void;
								public getMsaFamilyRefreshToken(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module tokensharing {
							export class SSOStateSerializer {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.tokensharing.SSOStateSerializer>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module tokensharing {
							export class TokenCacheItemSerializationAdapater extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.tokensharing.TokenCacheItemSerializationAdapater>;
								public serialize(param0: com.microsoft.identity.common.internal.cache.ADALTokenCacheItem, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
								public constructor();
								public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;
								public serialize(param0: any, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
								public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module tokensharing {
							export class TokenShareUtility extends com.microsoft.identity.common.adal.internal.tokensharing.ITokenShareInternal {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.tokensharing.TokenShareUtility>;
								public getOrgIdFamilyRefreshToken(param0: string): string;
								public saveOrgIdFamilyRefreshToken(param0: string): void;
								public saveMsaFamilyRefreshToken(param0: string): void;
								public constructor(param0: string, param1: string, param2: string, param3: com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<any, any, any, any, any>);
								public getMsaFamilyRefreshToken(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module util {
							export class DateExtensions {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.util.DateExtensions>;
								public static createCopy(param0: java.util.Date): java.util.Date;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module util {
							export class ExceptionExtensions {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.util.ExceptionExtensions>;
								public static getExceptionMessage(param0: java.lang.Exception): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module util {
							export class HashMapExtensions {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.util.HashMapExtensions>;
								public static getJsonResponse(param0: com.microsoft.identity.common.adal.internal.net.HttpWebResponse): java.util.HashMap<string, string>;
								public static getJsonResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): java.util.HashMap<string, string>;
								public static urlFormDecode(param0: string): java.util.HashMap<string, string>;
								public static jsonStringAsMapList(param0: string): java.util.HashMap<string, java.util.List<string>>;
								public static jsonStringAsMap(param0: string): java.util.HashMap<string, string>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module util {
							export class JsonExtensions {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.util.JsonExtensions>;
								public static extractJsonObjectIntoMap(param0: string): java.util.Map<string, string>;
								public static getJsonStringFromICacheRecordList(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>): string;
								public static getICacheRecordListFromJsonString(param0: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
								public static getBrokerResultFromJsonString(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module adal {
					export module internal {
						export module util {
							export class StringExtensions {
								public static class: java.lang.Class<com.microsoft.identity.common.adal.internal.util.StringExtensions>;
								public static ENCODING_UTF8: string;
								public static base64UrlEncodeToString(param0: string): string;
								public static removeQuoteInHeaderValue(param0: string): string;
								public static hasPrefixInHeader(param0: string, param1: string): boolean;
								public static urlFormEncode(param0: string): string;
								public static splitWithQuotes(param0: string, param1: string): java.util.ArrayList<string>;
								public static encodeBase64URLSafeString(param0: native.Array<number>): string;
								public static createHash(param0: string): string;
								public static getStringTokens(param0: string, param1: string): java.util.List<string>;
								public static appendQueryParameterToUrl(param0: string, param1: java.util.Map<string, string>): string;
								public static isNullOrBlank(param0: string): boolean;
								public static urlFormDecode(param0: string): string;
								public static getUrlParameters(param0: string): java.util.HashMap<string, string>;
								public static getUrl(param0: string): java.net.URL;
								public static removeQueryParameterFromUrl(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class ArgumentException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.ArgumentException>;
						public static sName: string;
						public static ACQUIRE_TOKEN_OPERATION_NAME: string;
						public static ACQUIRE_TOKEN_SILENT_OPERATION_NAME: string;
						public static BROKER_TOKEN_REQUEST_OPERATION_NAME: string;
						public static SCOPE_ARGUMENT_NAME: string;
						public static AUTHORITY_ARGUMENT_NAME: string;
						public static IACCOUNT_ARGUMENT_NAME: string;
						public static AUTHENTICATION_SCHEME_ARGUMENT_NAME: string;
						public static ILLEGAL_ARGUMENT_ERROR_CODE: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: string);
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getArgumentName(): string;
						public getOperationName(): string;
						public getExceptionName(): string;
						public constructor(param0: string);
						public constructor(param0: string, param1: string, param2: string, param3: java.lang.Throwable);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class BaseException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.BaseException>;
						public static sName: string;
						public getMessage(): string;
						public constructor();
						public getCliTelemErrorCode(): string;
						public setCliTelemSubErrorCode(param0: string): void;
						public getRefreshTokenAge(): string;
						public getErrorCode(): string;
						public getCorrelationId(): string;
						public getExceptionName(): string;
						public getCliTelemSubErrorCode(): string;
						public setRefreshTokenAge(param0: string): void;
						public setSpeRing(param0: string): void;
						public setCliTelemErrorCode(param0: string): void;
						public setCorrelationId(param0: string): void;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getSpeRing(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class ClientException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.ClientException>;
						public static sName: string;
						public static TOKEN_CACHE_ITEM_NOT_FOUND: string;
						public static TOKEN_SHARING_DESERIALIZATION_ERROR: string;
						public static TOKEN_SHARING_MSA_PERSISTENCE_ERROR: string;
						public static MULTIPLE_MATCHING_TOKENS_DETECTED: string;
						public static DEVICE_NETWORK_NOT_AVAILABLE: string;
						public static SCOPE_EMPTY_OR_NULL: string;
						public static JSON_PARSE_FAILURE: string;
						public static IO_ERROR: string;
						public static MALFORMED_URL: string;
						public static UNKNOWN_AUTHORITY: string;
						public static UNSUPPORTED_ENCODING: string;
						public static NO_SUCH_ALGORITHM: string;
						public static INVALID_JWT: string;
						public static STATE_MISMATCH: string;
						public static UNSUPPORTED_URL: string;
						public static AUTHORITY_VALIDATION_NOT_SUPPORTED: string;
						public static CHROME_NOT_INSTALLED: string;
						public static USER_MISMATCH: string;
						public static BRT_TENANT_MISMATCH: string;
						public static DUPLICATE_QUERY_PARAMETER: string;
						public static UNKNOWN_ERROR: string;
						public static DUPLICATE_COMMAND: string;
						public static BAD_KEY_SIZE: string;
						public static ANDROID_KEYSTORE_UNAVAILABLE: string;
						public static INVALID_ALG: string;
						public static KEYSTORE_NOT_INITIALIZED: string;
						public static INVALID_PROTECTION_PARAMS: string;
						public static THUMBPRINT_COMPUTATION_FAILURE: string;
						public static JSON_CONSTRUCTION_FAILED: string;
						public static INTERRUPTED_OPERATION: string;
						public static JWT_SIGNING_FAILURE: string;
						public static AUTH_SCHEME_MISMATCH: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getExceptionName(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class DeviceRegistrationRequiredException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.DeviceRegistrationRequiredException>;
						public static sName: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: string);
						public setUsername(param0: string): void;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public getUsername(): string;
						public constructor(param0: string, param1: string);
						public getExceptionName(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class ErrorStrings {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.ErrorStrings>;
						public static NO_TOKENS_FOUND: string;
						public static NO_ACCOUNT_FOUND: string;
						public static MULTIPLE_MATCHING_TOKENS_DETECTED: string;
						public static DEVICE_NETWORK_NOT_AVAILABLE: string;
						public static NO_NETWORK_CONNECTION_POWER_OPTIMIZATION: string;
						public static JSON_PARSE_FAILURE: string;
						public static IO_ERROR: string;
						public static SOCKET_TIMEOUT: string;
						public static MALFORMED_URL: string;
						public static UNSUPPORTED_ENCODING: string;
						public static NO_SUCH_ALGORITHM: string;
						public static INVALID_JWT: string;
						public static STATE_MISMATCH: string;
						public static UNRESOLVABLE_INTENT: string;
						public static UNSUPPORTED_URL: string;
						public static AUTHORITY_VALIDATION_NOT_SUPPORTED: string;
						public static CHROME_NOT_INSTALLED: string;
						public static USER_MISMATCH: string;
						public static DUPLICATE_QUERY_PARAMETER: string;
						public static ANDROIDKEYSTORE_FAILED: string;
						public static AUTHORITY_URL_NOT_VALID: string;
						public static ENCRYPTION_ERROR: string;
						public static DECRYPTION_ERROR: string;
						public static INVALID_REQUEST: string;
						public static UNAUTHORIZED_CLIENT: string;
						public static ACCESS_DENIED: string;
						public static INVALID_SCOPE: string;
						public static SERVICE_NOT_AVAILABLE: string;
						public static REQUEST_TIMEOUT: string;
						public static INVALID_INSTANCE: string;
						public static UNKNOWN_ERROR: string;
						public static ACCOUNT_IS_SCHEMA_NONCOMPLIANT: string;
						public static CREDENTIAL_IS_SCHEMA_NONCOMPLIANT: string;
						public static DEVICE_CERTIFICATE_REQUEST_INVALID: string;
						public static CERTIFICATE_ENCODING_ERROR: string;
						public static KEY_CHAIN_PRIVATE_KEY_EXCEPTION: string;
						public static SIGNATURE_EXCEPTION: string;
						public static DEVICE_CERTIFICATE_API_EXCEPTION: string;
						public static DEVELOPER_REDIRECTURI_INVALID: string;
						public static WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED: string;
						public static PACKAGE_NAME_NOT_FOUND: string;
						public static BROKER_APP_VERIFICATION_FAILED: string;
						public static APP_PACKAGE_NAME_NOT_FOUND: string;
						public static BROKER_VERIFICATION_FAILED: string;
						public static BROKER_APP_NOT_RESPONDING: string;
						public static BROKER_BIND_SERVICE_FAILED: string;
						public static FAILED_TO_GET_CAPABILITIES: string;
						public static ANDROID_CONTEXT_IS_NULL: string;
						public static AUTHORIZATION_INTENT_IS_NULL: string;
						public static NO_AVAILABLE_BROWSER_FOUND: string;
						public static AUTH_REFRESH_FAILED: string;
						public static STK_PATCHING_FAILED: string;
						public static BROKER_PRT_REFRESH_FAILED: string;
						public static INVALID_BROKER_REFRESH_TOKEN: string;
						public static ERROR_RETRIEVING_DEVICE_STATE: string;
						public static DEVICE_REGISTRATION_FAILED: string;
						public static BROKER_REQUEST_CANCELLED: string;
						public static USER_CANCELLED: string;
						public static UNSUPPORTED_BROKER_VERSION_ERROR_CODE: string;
						public static UNSUPPORTED_BROKER_VERSION_ERROR_MESSAGE: string;
						public static DECRYPTION_FAILED: string;
						public static UNKNOWN_CALLER: string;
						public static KEY_NOT_FOUND: string;
						public static MULTIPLE_ACCOUNT_PCA_INIT_FAIL_ON_SHARED_DEVICE_ERROR_CODE: string;
						public static MULTIPLE_ACCOUNT_PCA_INIT_FAIL_ON_SHARED_DEVICE_ERROR_MESSAGE: string;
						public static MULTIPLE_ACCOUNT_PCA_INIT_FAIL_UNKNOWN_REASON_ERROR_CODE: string;
						public static MULTIPLE_ACCOUNT_PCA_INIT_FAIL_UNKNOWN_REASON_ERROR_MESSAGE: string;
						public static MULTIPLE_ACCOUNT_PCA_INIT_FAIL_ACCOUNT_MODE_ERROR_CODE: string;
						public static MULTIPLE_ACCOUNT_PCA_INIT_FAIL_ACCOUNT_MODE_ERROR_MESSAGE: string;
						public static SINGLE_ACCOUNT_PCA_INIT_FAIL_ACCOUNT_MODE_ERROR_CODE: string;
						public static SINGLE_ACCOUNT_PCA_INIT_FAIL_ACCOUNT_MODE_ERROR_MESSAGE: string;
						public static SINGLE_ACCOUNT_PCA_INIT_FAIL_UNKNOWN_REASON_ERROR_CODE: string;
						public static SINGLE_ACCOUNT_PCA_INIT_FAIL_UNKNOWN_REASON_ERROR_MESSAGE: string;
						public static DECLINED_SCOPE_ERROR_CODE: string;
						public static DECLINED_SCOPE_ERROR_MESSAGE: string;
						public static REGISTERED_SHARED_DEVICE_DELETED_ON_SERVER_ERROR_CODE: string;
						public static REGISTERED_SHARED_DEVICE_DELETED_ON_SERVER_ERROR_MESSAGE: string;
						public static BRT_TENANT_MISMATCH_ERROR_MESSAGE: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class IntuneAppProtectionPolicyRequiredException extends com.microsoft.identity.common.exception.ServiceException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.IntuneAppProtectionPolicyRequiredException>;
						public static sName: string;
						public getAccountUpn(): string;
						public constructor(param0: string, param1: string, param2: number, param3: java.lang.Throwable);
						public constructor();
						public setAccountUpn(param0: string): void;
						public getAccountUserId(): string;
						public getExceptionName(): string;
						public getTenantId(): string;
						public setAccountUserId(param0: string): void;
						public getAuthorityUrl(): string;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public setAuthorityUrl(param0: string): void;
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
						public setTenantId(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class ServiceException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.ServiceException>;
						public static sName: string;
						public static OPENID_PROVIDER_CONFIGURATION_FAILED_TO_LOAD: string;
						public static INVALID_REQUEST: string;
						public static UNAUTHORIZED_CLIENT: string;
						public static ACCESS_DENIED: string;
						public static INVALID_SCOPE: string;
						public static SERVICE_NOT_AVAILABLE: string;
						public static REQUEST_TIMEOUT: string;
						public static INVALID_INSTANCE: string;
						public static UNKNOWN_ERROR: string;
						public static DEFAULT_STATUS_CODE: number;
						public setHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): void;
						public constructor();
						public constructor(param0: string, param1: string, param2: number, param3: java.lang.Throwable);
						public getOAuthSubErrorCode(): string;
						public getHttpResponseHeaders(): java.util.HashMap<string, java.util.List<string>>;
						public getExceptionName(): string;
						public setHttpResponseHeaders(param0: java.util.HashMap<string, java.util.List<string>>): void;
						public getHttpStatusCode(): number;
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public getHttpResponseBody(): java.util.HashMap<string, string>;
						public constructor(param0: string, param1: string);
						public setOauthSubErrorCode(param0: string): void;
						public setHttpResponseBody(param0: java.util.HashMap<string, string>): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class UiRequiredException extends com.microsoft.identity.common.exception.ServiceException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.UiRequiredException>;
						public static sName: string;
						public constructor(param0: string, param1: string, param2: number, param3: java.lang.Throwable);
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getExceptionName(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module exception {
					export class UserCancelException extends com.microsoft.identity.common.exception.BaseException {
						public static class: java.lang.Class<com.microsoft.identity.common.exception.UserCancelException>;
						public static sName: string;
						public constructor();
						public constructor(param0: string, param1: string, param2: java.lang.Throwable);
						public constructor(param0: string, param1: string);
						public getExceptionName(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AccountsInOneOrganization extends com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AccountsInOneOrganization>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class ActiveDirectoryFederationServicesAuthority extends com.microsoft.identity.common.internal.authorities.Authority {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.ActiveDirectoryFederationServicesAuthority>;
							public getAuthorityUri(): globalAndroid.net.Uri;
							public getAuthorityURL(): java.net.URL;
							public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters): com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AllAccounts extends com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AllAccounts>;
							public static ALL_ACCOUNTS_TENANT_ID: string;
							public constructor();
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AnyOrganizationalAccount extends com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AnyOrganizationalAccount>;
							public constructor();
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AnyPersonalAccount extends com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AnyPersonalAccount>;
							public static ANY_PERSONAL_ACCOUNT_TENANT_ID: string;
							public constructor();
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export abstract class Authority {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.Authority>;
							public static B2C: string;
							public mKnownToMicrosoft: boolean;
							public mKnownToDeveloper: boolean;
							public mIsDefault: boolean;
							public mAuthorityTypeString: string;
							public mAuthorityUrl: string;
							public mSlice: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice;
							public constructor();
							public setDefault(param0: java.lang.Boolean): void;
							public static getAuthorityFromAuthorityUrl(param0: string): com.microsoft.identity.common.internal.authorities.Authority;
							public hashCode(): number;
							public setSlice(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice): void;
							public static addKnownAuthorities(param0: java.util.List<com.microsoft.identity.common.internal.authorities.Authority>): void;
							public getAuthorityUri(): globalAndroid.net.Uri;
							public getKnownToDeveloper(): boolean;
							public getSlice(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice;
							public static isKnownAuthority(param0: com.microsoft.identity.common.internal.authorities.Authority): boolean;
							public getKnownToMicrosoft(): boolean;
							public getAuthorityTypeString(): string;
							public static getKnownAuthorityResult(param0: com.microsoft.identity.common.internal.authorities.Authority): com.microsoft.identity.common.internal.authorities.Authority.KnownAuthorityResult;
							public getAuthorityURL(): java.net.URL;
							public equals(param0: any): boolean;
							public getDefault(): boolean;
							public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters): com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>;
						}
						export module Authority {
							export class KnownAuthorityResult {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.Authority.KnownAuthorityResult>;
								public getClientException(): com.microsoft.identity.common.exception.ClientException;
								public getKnown(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AuthorityDeserializer extends com.google.gson.JsonDeserializer<com.microsoft.identity.common.internal.authorities.Authority> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AuthorityDeserializer>;
							public constructor();
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.common.internal.authorities.Authority;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export abstract class AzureActiveDirectoryAudience {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience>;
							public static ORGANIZATIONS: string;
							public static CONSUMERS: string;
							public static ALL: string;
							public static MSA_MEGA_TENANT_ID: string;
							public constructor();
							public getCloudUrl(): string;
							public setTenantId(param0: string): void;
							public setCloudUrl(param0: string): void;
							public static getAzureActiveDirectoryAudience(param0: string, param1: string): com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience;
							public static isHomeTenantAlias(param0: string): boolean;
							public getTenantUuidForAlias(param0: string): string;
							public getTenantId(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AzureActiveDirectoryAudienceDeserializer extends com.google.gson.JsonDeserializer<com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudienceDeserializer>;
							public constructor();
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AzureActiveDirectoryAuthority extends com.microsoft.identity.common.internal.authorities.Authority {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAuthority>;
							public mAudience: com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience;
							public mFlightParameters: java.util.Map<string, string>;
							public mMultipleCloudsSupported: boolean;
							public constructor();
							public getFlightParameters(): java.util.Map<string, string>;
							public constructor(param0: com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience);
							public getAuthorityUri(): globalAndroid.net.Uri;
							public getAudience(): com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience;
							public createOAuth2Configuration(): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration;
							public setMultipleCloudsSupported(param0: boolean): void;
							public getMultipleCloudsSupported(): boolean;
							public getAuthorityURL(): java.net.URL;
							public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters): com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AzureActiveDirectoryB2CAuthority extends com.microsoft.identity.common.internal.authorities.Authority {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryB2CAuthority>;
							public constructor();
							public constructor(param0: string);
							public getAuthorityUri(): globalAndroid.net.Uri;
							public createOAuth2Configuration(): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration;
							public getAuthorityURL(): java.net.URL;
							public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters): com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class AzureActiveDirectorySlice {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.AzureActiveDirectorySlice>;
							public constructor();
							public getSlice(): string;
							public getDC(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class Environment {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.Environment>;
							public static PreProduction: com.microsoft.identity.common.internal.authorities.Environment;
							public static Production: com.microsoft.identity.common.internal.authorities.Environment;
							public static valueOf(param0: string): com.microsoft.identity.common.internal.authorities.Environment;
							public static values(): native.Array<com.microsoft.identity.common.internal.authorities.Environment>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class UnknownAudience extends com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAudience {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.UnknownAudience>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authorities {
						export class UnknownAuthority extends com.microsoft.identity.common.internal.authorities.Authority {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authorities.UnknownAuthority>;
							public constructor();
							public getAuthorityUri(): globalAndroid.net.Uri;
							public getAuthorityURL(): java.net.URL;
							public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters): com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export abstract class AbstractAuthenticationScheme extends com.microsoft.identity.common.internal.authscheme.INameable {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme>;
							public hashCode(): number;
							public constructor(param0: string);
							public getName(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public canEqual(param0: any): boolean;
						}
						export module AbstractAuthenticationScheme {
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme.SerializedNames>;
								public static NAME: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class AuthenticationSchemeFactory {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.AuthenticationSchemeFactory>;
							public constructor();
							public static createScheme(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.authscheme.INameable): com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class BearerAuthenticationSchemeInternal extends com.microsoft.identity.common.internal.authscheme.TokenAuthenticationScheme implements com.microsoft.identity.common.internal.authscheme.ITokenAuthenticationSchemeInternal {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.BearerAuthenticationSchemeInternal>;
							public static SCHEME_BEARER: string;
							public constructor();
							public constructor(param0: string);
							public getAccessTokenForScheme(param0: string): string;
							public getName(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class INameable {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.INameable>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.authscheme.INameable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getName(): string });
							public constructor();
							public getName(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class INonced {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.INonced>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.authscheme.INonced interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getNonce(): string });
							public constructor();
							public getNonce(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class IPoPAuthenticationSchemeParams extends com.microsoft.identity.common.internal.authscheme.INonced {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.IPoPAuthenticationSchemeParams>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.authscheme.IPoPAuthenticationSchemeParams interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getHttpMethod(): string; getUrl(): java.net.URL; getNonce(): string });
							public constructor();
							public getUrl(): java.net.URL;
							public getNonce(): string;
							public getHttpMethod(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class ITokenAuthenticationSchemeInternal {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.ITokenAuthenticationSchemeInternal>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.authscheme.ITokenAuthenticationSchemeInternal interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getAccessTokenForScheme(param0: string): string });
							public constructor();
							public getAccessTokenForScheme(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export class PopAuthenticationSchemeInternal extends com.microsoft.identity.common.internal.authscheme.TokenAuthenticationScheme implements com.microsoft.identity.common.internal.authscheme.IPoPAuthenticationSchemeParams {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.PopAuthenticationSchemeInternal>;
							public static SCHEME_POP: string;
							public getAccessTokenForScheme(param0: string): string;
							public getName(): string;
							public getUrl(): java.net.URL;
							public setClockSkewManager(param0: com.microsoft.identity.common.internal.util.IClockSkewManager): void;
							public getNonce(): string;
							public getHttpMethod(): string;
						}
						export module PopAuthenticationSchemeInternal {
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.PopAuthenticationSchemeInternal.SerializedNames>;
								public static HTTP_METHOD: string;
								public static URL: string;
								public static NONCE: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module authscheme {
						export abstract class TokenAuthenticationScheme extends com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme implements com.microsoft.identity.common.internal.authscheme.ITokenAuthenticationSchemeInternal {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.authscheme.TokenAuthenticationScheme>;
							public static SCHEME_DELIMITER: string;
							public getAccessTokenForScheme(param0: string): string;
							public getName(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerAccountServiceConnection {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerAccountServiceConnection>;
							public constructor(param0: com.microsoft.identity.common.internal.broker.BrokerAccountServiceFuture);
							public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
							public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerAccountServiceFuture extends java.util.concurrent.Future<com.microsoft.aad.adal.IBrokerAccountService> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerAccountServiceFuture>;
							public constructor();
							public setBrokerAccountService(param0: com.microsoft.aad.adal.IBrokerAccountService): void;
							public get(): com.microsoft.aad.adal.IBrokerAccountService;
							public cancel(param0: boolean): boolean;
							public isCancelled(): boolean;
							public isDone(): boolean;
							public get(param0: number, param1: java.util.concurrent.TimeUnit): com.microsoft.aad.adal.IBrokerAccountService;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerData {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerData>;
							public packageName: string;
							public signatureHash: string;
							public static getBrokerDataForBrokerApp(param0: globalAndroid.content.Context, param1: string): com.microsoft.identity.common.internal.broker.BrokerData;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerRequest {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerRequest>;
							public getUserName(): string;
							public getForceRefresh(): boolean;
							public getRedirect(): string;
							public getScope(): string;
							public getAuthorizationAgent(): string;
							public getAuthenticationScheme(): com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme;
							public getMultipleCloudsSupported(): boolean;
							public getEnvironment(): string;
							public getClaims(): string;
							public getPrompt(): string;
							public getApplicationName(): string;
							public getApplicationVersion(): string;
							public getHomeAccountId(): string;
							public isPowerOptCheckEnabled(): boolean;
							public getExtraQueryStringParameter(): string;
							public getMsalVersion(): string;
							public getLocalAccountId(): string;
							public getAuthority(): string;
							public getClientId(): string;
							public getCorrelationId(): string;
						}
						export module BrokerRequest {
							export class Builder {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerRequest.Builder>;
								public authority(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public scope(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public powerOptCheckEnabled(param0: boolean): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public redirect(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public extraQueryStringParameter(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public multipleCloudsSupported(param0: boolean): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public msalVersion(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public authenticationScheme(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public constructor();
								public applicationVersion(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public claims(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public correlationId(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public applicationName(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public forceRefresh(param0: boolean): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public homeAccountId(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public environment(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public prompt(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public username(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public clientId(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public localAccountId(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
								public build(): com.microsoft.identity.common.internal.broker.BrokerRequest;
								public authorizationAgent(param0: string): com.microsoft.identity.common.internal.broker.BrokerRequest.Builder;
							}
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerRequest.SerializedNames>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerResult {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerResult>;
							public getExtendedExpiresOn(): number;
							public getUserName(): string;
							public getSpeRing(): string;
							public getTenantProfileData(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getEnvironment(): string;
							public getErrorMessage(): string;
							public getExpiresOn(): number;
							public getHomeAccountId(): string;
							public getSubErrorCode(): string;
							public isServicedFromCache(): boolean;
							public getTenantId(): string;
							public getExceptionType(): string;
							public getCliTelemErrorCode(): string;
							public getHttpResponseBody(): string;
							public getScope(): string;
							public getHttpResponseHeaders(): string;
							public getRefreshToken(): string;
							public getFamilyId(): string;
							public getHttpStatusCode(): number;
							public getCachedAt(): number;
							public getCliTelemSubErrorCode(): string;
							public getRefreshTokenAge(): string;
							public getClientInfo(): string;
							public getTokenType(): string;
							public getErrorCode(): string;
							public getLocalAccountId(): string;
							public getAccessToken(): string;
							public getAuthority(): string;
							public isSuccess(): boolean;
							public getCorrelationId(): string;
							public getClientId(): string;
							public getIdToken(): string;
						}
						export module BrokerResult {
							export class Builder {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerResult.Builder>;
								public clientInfo(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public tenantId(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public authority(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public extendedExpiresOn(param0: number): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public build(): com.microsoft.identity.common.internal.broker.BrokerResult;
								public servicedFromCache(param0: boolean): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public expiresOn(param0: number): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public speRing(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public cachedAt(param0: number): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public success(param0: boolean): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public environment(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public httpStatusCode(param0: number): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public exceptionType(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public refreshToken(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public localAccountId(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public tenantProfileRecords(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public cliTelemSubErrorCode(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public refreshTokenAge(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public correlationId(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public constructor();
								public clientId(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public tokenType(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public userName(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public errorMessage(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public negotiatedBrokerProtocolVersion(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public cliTelemErrorCode(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public accessToken(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public familyId(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public httpResponseHeaders(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public idToken(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public oauthSubErrorCode(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public httpResponseBody(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public homeAccountId(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public scope(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
								public errorCode(param0: string): com.microsoft.identity.common.internal.broker.BrokerResult.Builder;
							}
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerResult.SerializedNames>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerResultFuture extends java.util.concurrent.Future<globalAndroid.os.Bundle> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerResultFuture>;
							public constructor();
							public cancel(param0: boolean): boolean;
							public isCancelled(): boolean;
							public isDone(): boolean;
							public setResultBundle(param0: globalAndroid.os.Bundle): void;
							public get(): globalAndroid.os.Bundle;
							public get(param0: number, param1: java.util.concurrent.TimeUnit): globalAndroid.os.Bundle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class BrokerValidator {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.BrokerValidator>;
							public getCurrentActiveBrokerPackageName(): string;
							public static getBrokerRedirectUri(param0: globalAndroid.content.Context, param1: string): string;
							public verifySignature(param0: string): boolean;
							public static isValidBrokerRedirect(param0: string, param1: globalAndroid.content.Context, param2: string): boolean;
							public verifySignatureAndThrow(param0: string): string;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class InactiveBrokerClient {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.InactiveBrokerClient>;
							public disconnect(): void;
							public connect(): com.microsoft.identity.common.internal.broker.BrokerAccountServiceFuture;
							public constructor(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.broker.BrokerData);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class MicrosoftAuthClient {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.MicrosoftAuthClient>;
							public getIntentForAuthService(param0: globalAndroid.content.Context): globalAndroid.content.Intent;
							public disconnect(): void;
							public connect(): com.microsoft.identity.common.internal.broker.MicrosoftAuthServiceFuture;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class MicrosoftAuthServiceConnection {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.MicrosoftAuthServiceConnection>;
							public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
							public constructor(param0: com.microsoft.identity.common.internal.broker.MicrosoftAuthServiceFuture);
							public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class MicrosoftAuthServiceFuture extends java.util.concurrent.Future<com.microsoft.identity.client.IMicrosoftAuthService> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.MicrosoftAuthServiceFuture>;
							public constructor();
							public get(param0: number, param1: java.util.concurrent.TimeUnit): com.microsoft.identity.client.IMicrosoftAuthService;
							public cancel(param0: boolean): boolean;
							public isCancelled(): boolean;
							public isDone(): boolean;
							public setMicrosoftAuthService(param0: com.microsoft.identity.client.IMicrosoftAuthService): void;
							public get(): com.microsoft.identity.client.IMicrosoftAuthService;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module broker {
						export class PackageHelper {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.broker.PackageHelper>;
							public static getBrokerRedirectUrl(param0: string, param1: string): string;
							public getUIDForPackage(param0: string): number;
							public isPackageInstalledAndEnabled(param0: globalAndroid.content.Context, param1: string): boolean;
							public getCurrentSignatureForPackage(param0: string): string;
							public constructor(param0: globalAndroid.content.pm.PackageManager);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ADALOAuth2TokenCache extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Strategy, com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest, com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse> implements com.microsoft.identity.common.internal.cache.IShareSingleSignOnState<any, any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ADALOAuth2TokenCache>;
							public removeAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
							public getAccountsWithAggregatedAccountData(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.microsoft.identity.common.internal.cache.IShareSingleSignOnState<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>>);
							public save(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Strategy, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest, param2: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public getIdTokensForAccountRecord(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.IdTokenRecord>;
							public getSingleSignOnState(param0: any): any;
							public saveAndLoadAggregatedAccountData(param0: any, param1: any, param2: any): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getAccountByHomeAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAllTenantAccountsForAccountByClientId(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getAllClientIds(): java.util.Set<string>;
							public clearAll(): void;
							public saveAndLoadAggregatedAccountData(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Strategy, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest, param2: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getAccountWithAggregatedAccountDataByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public getSingleSignOnState(param0: com.microsoft.identity.common.BaseAccount): com.microsoft.identity.common.internal.providers.oauth2.RefreshToken;
							public save(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public getAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public save(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: com.microsoft.identity.common.internal.dto.IdTokenRecord): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
							public getAccountByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public setSingleSignOnState(param0: com.microsoft.identity.common.BaseAccount, param1: com.microsoft.identity.common.internal.providers.oauth2.RefreshToken): void;
							public getAccountsWithAggregatedAccountData(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public setSingleSignOnState(param0: any, param1: any): void;
							public initializeSharedPreferencesFileManager(param0: string): void;
							public load(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public loadWithAggregatedAccountData(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public constructor(param0: globalAndroid.content.Context);
							public getAccounts(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ADALTokenCacheItem extends com.microsoft.identity.common.internal.cache.ITokenCacheItem {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>;
							public getExtendedExpiresOn(): java.util.Date;
							public setRefreshToken(param0: string): void;
							public getResource(): string;
							public setAccessToken(param0: string): void;
							public setFamilyClientId(param0: string): void;
							public static getAsMRRTTokenCacheItem(param0: com.microsoft.identity.common.internal.cache.ADALTokenCacheItem): com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;
							public setExpiresOn(param0: java.util.Date): void;
							public getIsMultiResourceRefreshToken(): boolean;
							public getRawIdToken(): string;
							public getFamilyClientId(): string;
							public getTenantId(): string;
							public constructor();
							public setAuthority(param0: string): void;
							public setResource(param0: string): void;
							public setIsMultiResourceRefreshToken(param0: boolean): void;
							public setClientId(param0: string): void;
							public getRefreshToken(): string;
							public setRawIdToken(param0: string): void;
							public getUserInfo(): com.microsoft.identity.common.adal.internal.ADALUserInfo;
							public setUserInfo(param0: com.microsoft.identity.common.adal.internal.ADALUserInfo): void;
							public setTenantId(param0: string): void;
							public getExpiresOn(): java.util.Date;
							public getAccessToken(): string;
							public setExtendedExpiresOn(param0: java.util.Date): void;
							public getAuthority(): string;
							public getClientId(): string;
							public static getAsFRTTokenCacheItem(param0: com.microsoft.identity.common.internal.cache.ADALTokenCacheItem): com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export abstract class AbstractAccountCredentialCache extends com.microsoft.identity.common.internal.cache.IAccountCredentialCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.AbstractAccountCredentialCache>;
							public constructor();
							public getAccountsFilteredByInternal(param0: string, param1: string, param2: string, param3: java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getAccountsFilteredBy(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getCredentialsFilteredBy(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.CredentialType, param3: string, param4: string, param5: string, param6: string): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public removeAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): boolean;
							public getAccount(param0: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getTargetClassForCredentialType(param0: string, param1: com.microsoft.identity.common.internal.dto.CredentialType): java.lang.Class<any>;
							public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
							public getCredentials(): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public getCredentialsFilteredByInternal(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.CredentialType, param3: string, param4: string, param5: string, param6: string, param7: java.util.List<com.microsoft.identity.common.internal.dto.Credential>): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public saveAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): void;
							public saveCredential(param0: com.microsoft.identity.common.internal.dto.Credential): void;
							public getAccounts(): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public clearAll(): void;
							public getCredential(param0: string): com.microsoft.identity.common.internal.dto.Credential;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export abstract class AbstractApplicationMetadata {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.AbstractApplicationMetadata>;
							public constructor();
							public setUid(param0: number): void;
							public hashCode(): number;
							public setEnvironment(param0: string): void;
							public equals(param0: any): boolean;
							public setClientId(param0: string): void;
							public getEnvironment(): string;
							public getClientId(): string;
							public getUid(): number;
						}
						export module AbstractApplicationMetadata {
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.AbstractApplicationMetadata.SerializedNames>;
								public static CLIENT_ID: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class AccountDeletionRecord extends java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.AccountDeletionRecord>;
							public contains(param0: any): boolean;
							public size(): number;
							public containsAll(param0: java.util.Collection<any>): boolean;
							public add(param0: number, param1: com.microsoft.identity.common.internal.dto.AccountRecord): void;
							public lastIndexOf(param0: any): number;
							public remove(param0: any): boolean;
							public iterator(): java.util.Iterator<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public clear(): void;
							public toArray(): native.Array<any>;
							public indexOf(param0: any): number;
							public addAll(param0: java.util.Collection<any>): boolean;
							public addAll(param0: number, param1: java.util.Collection<any>): boolean;
							public listIterator(param0: number): java.util.ListIterator<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public subList(param0: number, param1: number): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public add(param0: com.microsoft.identity.common.internal.dto.AccountRecord): boolean;
							public removeAll(param0: java.util.Collection<any>): boolean;
							public get(param0: number): com.microsoft.identity.common.internal.dto.AccountRecord;
							public toArray(param0: native.Array<any>): native.Array<any>;
							public set(param0: number, param1: com.microsoft.identity.common.internal.dto.AccountRecord): com.microsoft.identity.common.internal.dto.AccountRecord;
							public isEmpty(): boolean;
							public listIterator(): java.util.ListIterator<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public remove(param0: number): com.microsoft.identity.common.internal.dto.AccountRecord;
							public retainAll(param0: java.util.Collection<any>): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class BrokerApplicationMetadata extends com.microsoft.identity.common.internal.cache.AbstractApplicationMetadata {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata>;
							public constructor();
							public hashCode(): number;
							public getFoci(): string;
							public setFoci(param0: string): void;
							public equals(param0: any): boolean;
						}
						export module BrokerApplicationMetadata {
							export class SerializedNames extends com.microsoft.identity.common.internal.cache.AbstractApplicationMetadata.SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata.SerializedNames>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class BrokerOAuth2TokenCache<GenericOAuth2Strategy, GenericAuthorizationRequest, GenericTokenResponse, GenericAccount, GenericRefreshToken> extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.BrokerOAuth2TokenCache<any, any, any, any, any>>;
							public removeAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
							public getAccountsWithAggregatedAccountData(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getIdTokensForAccountRecord(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.IdTokenRecord>;
							public setSingleSignOnState(param0: string, param1: any, param2: any): void;
							public isClientIdKnownToCache(param0: string): boolean;
							public saveAndLoadAggregatedAccountData(param0: any, param1: any, param2: any): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getAccountByHomeAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAllTenantAccountsForAccountByClientId(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getAccounts(): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getAllClientIds(): java.util.Set<string>;
							public clearAll(): void;
							public getAccountWithAggregatedAccountDataByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public save(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public save(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: com.microsoft.identity.common.internal.dto.IdTokenRecord, param2: com.microsoft.identity.common.internal.dto.AccessTokenRecord, param3: string): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public getFociCacheRecords(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public constructor(param0: globalAndroid.content.Context, param1: number, param2: com.microsoft.identity.common.internal.cache.IBrokerApplicationMetadataCache, param3: com.microsoft.identity.common.internal.cache.BrokerOAuth2TokenCache.ProcessUidCacheFactory, param4: com.microsoft.identity.common.internal.cache.MicrosoftFamilyOAuth2TokenCache<any, any, any, any, any>);
							public save(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: com.microsoft.identity.common.internal.dto.IdTokenRecord): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
							public getAccountByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAccountsWithAggregatedAccountData(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public constructor(param0: globalAndroid.content.Context, param1: number, param2: com.microsoft.identity.common.internal.cache.IBrokerApplicationMetadataCache);
							public removeAccountFromDevice(param0: com.microsoft.identity.common.internal.dto.AccountRecord): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
							public saveAndLoadAggregatedAccountData(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: com.microsoft.identity.common.internal.dto.IdTokenRecord, param2: com.microsoft.identity.common.internal.dto.AccessTokenRecord, param3: string, param4: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public load(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public loadWithAggregatedAccountData(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public constructor(param0: globalAndroid.content.Context);
							public getAccounts(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
						}
						export module BrokerOAuth2TokenCache {
							export class ProcessUidCacheFactory {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.BrokerOAuth2TokenCache.ProcessUidCacheFactory>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.BrokerOAuth2TokenCache$ProcessUidCacheFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getTokenCache(param0: globalAndroid.content.Context, param1: number): com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<any, any, any, any, any> });
								public constructor();
								public getTokenCache(param0: globalAndroid.content.Context, param1: number): com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<any, any, any, any, any>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class CacheKeyValueDelegate extends com.microsoft.identity.common.internal.cache.ICacheKeyValueDelegate {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.CacheKeyValueDelegate>;
							public static CACHE_VALUE_SEPARATOR: string;
							public constructor();
							public generateCacheValue(param0: com.microsoft.identity.common.internal.dto.AccountRecord): string;
							public fromCacheValue(param0: string, param1: java.lang.Class): com.microsoft.identity.common.internal.dto.AccountCredentialBase;
							public generateCacheValue(param0: com.microsoft.identity.common.internal.dto.Credential): string;
							public generateCacheKey(param0: com.microsoft.identity.common.internal.dto.Credential): string;
							public generateCacheKey(param0: com.microsoft.identity.common.internal.dto.AccountRecord): string;
						}
						export module CacheKeyValueDelegate {
							export class CacheKeyReplacements {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.CacheKeyValueDelegate.CacheKeyReplacements>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class CacheRecord extends com.microsoft.identity.common.internal.cache.ICacheRecord {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.CacheRecord>;
							public constructor();
							public setV1IdToken(param0: com.microsoft.identity.common.internal.dto.IdTokenRecord): void;
							public hashCode(): number;
							public getV1IdToken(): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public getAccount(): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getRefreshToken(): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public setIdToken(param0: com.microsoft.identity.common.internal.dto.IdTokenRecord): void;
							public getAccessToken(): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public setAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): void;
							public setAccessToken(param0: com.microsoft.identity.common.internal.dto.AccessTokenRecord): void;
							public equals(param0: any): boolean;
							public getIdToken(): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public setRefreshToken(param0: com.microsoft.identity.common.internal.dto.RefreshTokenRecord): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class IAccountCredentialAdapter<T, U, V, W, X> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.IAccountCredentialAdapter<any, any, any, any, any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.IAccountCredentialAdapter<any,any,any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createAccount(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.AccountRecord;
								createAccessToken(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
								createRefreshToken(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
								createIdToken(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.IdTokenRecord;
								asRefreshToken(param0: X): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
								asAccount(param0: W): com.microsoft.identity.common.internal.dto.AccountRecord;
								asIdToken(param0: W, param1: X): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							});
							public constructor();
							public createRefreshToken(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public createAccessToken(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public asRefreshToken(param0: X): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public asIdToken(param0: W, param1: X): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public createAccount(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.AccountRecord;
							public asAccount(param0: W): com.microsoft.identity.common.internal.dto.AccountRecord;
							public createIdToken(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.dto.IdTokenRecord;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class IAccountCredentialCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.IAccountCredentialCache>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.IAccountCredentialCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								saveAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): void;
								saveCredential(param0: com.microsoft.identity.common.internal.dto.Credential): void;
								getAccount(param0: string): com.microsoft.identity.common.internal.dto.AccountRecord;
								getCredential(param0: string): com.microsoft.identity.common.internal.dto.Credential;
								getAccounts(): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
								getAccountsFilteredBy(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
								getCredentials(): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
								getCredentialsFilteredBy(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.CredentialType, param3: string, param4: string, param5: string, param6: string): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
								removeAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): boolean;
								removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
								clearAll(): void;
							});
							public constructor();
							public getAccountsFilteredBy(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public saveAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): void;
							public saveCredential(param0: com.microsoft.identity.common.internal.dto.Credential): void;
							public getCredentialsFilteredBy(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.CredentialType, param3: string, param4: string, param5: string, param6: string): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public removeAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): boolean;
							public getAccount(param0: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAccounts(): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
							public clearAll(): void;
							public getCredentials(): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public getCredential(param0: string): com.microsoft.identity.common.internal.dto.Credential;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class IBrokerApplicationMetadataCache extends com.microsoft.identity.common.internal.cache.ISimpleCache<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.IBrokerApplicationMetadataCache>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.IBrokerApplicationMetadataCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getAllClientIds(): java.util.Set<string>; getAllFociClientIds(): java.util.Set<string>; getAllNonFociClientIds(): java.util.Set<string>; getAllFociApplicationMetadata(): java.util.List<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata>; getMetadata(param0: string, param1: string, param2: number): com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata; insert(param0: any): boolean; remove(param0: any): boolean; getAll(): java.util.List<any>; clear(): boolean });
							public constructor();
							public remove(param0: any): boolean;
							public getAllClientIds(): java.util.Set<string>;
							public insert(param0: any): boolean;
							public clear(): boolean;
							public getAllFociClientIds(): java.util.Set<string>;
							public getAllNonFociClientIds(): java.util.Set<string>;
							public getAll(): java.util.List<any>;
							public getAllFociApplicationMetadata(): java.util.List<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata>;
							public getMetadata(param0: string, param1: string, param2: number): com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ICacheKeyValueDelegate {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ICacheKeyValueDelegate>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.ICacheKeyValueDelegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { generateCacheKey(param0: com.microsoft.identity.common.internal.dto.AccountRecord): string; generateCacheValue(param0: com.microsoft.identity.common.internal.dto.AccountRecord): string; generateCacheKey(param0: com.microsoft.identity.common.internal.dto.Credential): string; generateCacheValue(param0: com.microsoft.identity.common.internal.dto.Credential): string; fromCacheValue(param0: string, param1: java.lang.Class): com.microsoft.identity.common.internal.dto.AccountCredentialBase });
							public constructor();
							public generateCacheValue(param0: com.microsoft.identity.common.internal.dto.AccountRecord): string;
							public fromCacheValue(param0: string, param1: java.lang.Class): com.microsoft.identity.common.internal.dto.AccountCredentialBase;
							public generateCacheValue(param0: com.microsoft.identity.common.internal.dto.Credential): string;
							public generateCacheKey(param0: com.microsoft.identity.common.internal.dto.Credential): string;
							public generateCacheKey(param0: com.microsoft.identity.common.internal.dto.AccountRecord): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ICacheRecord {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.ICacheRecord interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getAccount(): com.microsoft.identity.common.internal.dto.AccountRecord; getAccessToken(): com.microsoft.identity.common.internal.dto.AccessTokenRecord; getRefreshToken(): com.microsoft.identity.common.internal.dto.RefreshTokenRecord; getIdToken(): com.microsoft.identity.common.internal.dto.IdTokenRecord; getV1IdToken(): com.microsoft.identity.common.internal.dto.IdTokenRecord });
							public constructor();
							public getAccessToken(): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public getV1IdToken(): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public getAccount(): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getIdToken(): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public getRefreshToken(): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class IShareSingleSignOnState<T, U> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.IShareSingleSignOnState<any, any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.IShareSingleSignOnState<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { setSingleSignOnState(param0: T, param1: U): void; getSingleSignOnState(param0: T): U });
							public constructor();
							public setSingleSignOnState(param0: T, param1: U): void;
							public getSingleSignOnState(param0: T): U;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ISharedPreferencesFileManager {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ISharedPreferencesFileManager>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.ISharedPreferencesFileManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { putString(param0: string, param1: string): void; getString(param0: string): string; putLong(param0: string, param1: number): void; getLong(param0: string): number; getSharedPreferencesFileName(): string; getAll(): java.util.Map<string, string>; contains(param0: string): boolean; clear(): void; remove(param0: string): void });
							public constructor();
							public putLong(param0: string, param1: number): void;
							public getSharedPreferencesFileName(): string;
							public getAll(): java.util.Map<string, string>;
							public getLong(param0: string): number;
							public getString(param0: string): string;
							public clear(): void;
							public putString(param0: string, param1: string): void;
							public contains(param0: string): boolean;
							public remove(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ISimpleCache<T> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ISimpleCache<any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.ISimpleCache<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { insert(param0: T): boolean; remove(param0: T): boolean; getAll(): java.util.List<T>; clear(): boolean });
							public constructor();
							public remove(param0: T): boolean;
							public clear(): boolean;
							public getAll(): java.util.List<T>;
							public insert(param0: T): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class ITokenCacheItem {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.ITokenCacheItem>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.ITokenCacheItem interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getAuthority(): string; getClientId(): string; getRefreshToken(): string; getResource(): string });
							public constructor();
							public getResource(): string;
							public getAuthority(): string;
							public getRefreshToken(): string;
							public getClientId(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class MicrosoftFamilyOAuth2TokenCache<GenericOAuth2Strategy, GenericAuthorizationRequest, GenericTokenResponse, GenericAccount, GenericRefreshToken> extends com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<any, any, any, any, any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.MicrosoftFamilyOAuth2TokenCache<any, any, any, any, any>>;
							public setSingleSignOnState(param0: any, param1: any): void;
							public loadByFamilyId(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public loadByFamilyIdWithAggregatedAccountData(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public constructor(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.cache.IAccountCredentialCache, param2: com.microsoft.identity.common.internal.cache.IAccountCredentialAdapter<any, any, any, any, any>);
							public getSingleSignOnState(param0: any): any;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class MicrosoftStsAccountCredentialAdapter extends com.microsoft.identity.common.internal.cache.IAccountCredentialAdapter<
							com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy,
							com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest,
							com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse,
							com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount,
							com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken
						> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.MicrosoftStsAccountCredentialAdapter>;
							public constructor();
							public createAccount(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, param2: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.dto.AccountRecord;
							public asRefreshToken(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public createAccessToken(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, param2: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public createRefreshToken(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public asAccount(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount): com.microsoft.identity.common.internal.dto.AccountRecord;
							public createAccessToken(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public createRefreshToken(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, param2: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public createAccount(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.dto.AccountRecord;
							public asAccount(param0: any): com.microsoft.identity.common.internal.dto.AccountRecord;
							public asRefreshToken(param0: any): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public asIdToken(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, param1: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public asIdToken(param0: any, param1: any): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public createIdToken(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, param2: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.dto.IdTokenRecord;
							public createIdToken(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.dto.IdTokenRecord;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class MsalCppOAuth2TokenCache<GenericOAuth2Strategy, GenericAuthorizationRequest, GenericTokenResponse, GenericAccount, GenericRefreshToken> extends com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<any, any, any, any, any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.MsalCppOAuth2TokenCache<any, any, any, any, any>>;
							public saveCredentials(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: native.Array<com.microsoft.identity.common.internal.dto.Credential>): void;
							public setSingleSignOnState(param0: any, param1: any): void;
							public getAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public removeAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
							public removeAccount(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
							public static create(
								param0: globalAndroid.content.Context
							): com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>;
							public saveAccountRecord(param0: com.microsoft.identity.common.internal.dto.AccountRecord): void;
							public getAccount(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAllAccounts(): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public static create(param0: globalAndroid.content.Context): com.microsoft.identity.common.internal.cache.MsalCppOAuth2TokenCache<any, any, any, any, any>;
							public clearCache(): void;
							public getSingleSignOnState(param0: any): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class MsalOAuth2TokenCache<GenericOAuth2Strategy, GenericAuthorizationRequest, GenericTokenResponse, GenericAccount, GenericRefreshToken> extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any> implements com.microsoft.identity.common.internal.cache.IShareSingleSignOnState<any, any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<any, any, any, any, any>>;
							public removeAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
							public getAccountsWithAggregatedAccountData(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getFamilyRefreshTokenForHomeAccountId(param0: string): com.microsoft.identity.common.internal.dto.RefreshTokenRecord;
							public getIdTokensForAccountRecord(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.IdTokenRecord>;
							public getSingleSignOnState(param0: any): any;
							public getAccountCredentialCache(): com.microsoft.identity.common.internal.cache.IAccountCredentialCache;
							public saveAndLoadAggregatedAccountData(param0: any, param1: any, param2: any): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getAccountByHomeAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAllTenantAccountsForAccountByClientId(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getAllClientIds(): java.util.Set<string>;
							public clearAll(): void;
							public getAccountWithAggregatedAccountDataByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public save(param0: any, param1: any, param2: any): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public getAccountsByUsername(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public save(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: com.microsoft.identity.common.internal.dto.IdTokenRecord): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public constructor(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.cache.IAccountCredentialCache, param2: com.microsoft.identity.common.internal.cache.IAccountCredentialAdapter<any, any, any, any, any>);
							public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
							public getAccountByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public getAccountsWithAggregatedAccountData(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public setSingleSignOnState(param0: any, param1: any): void;
							public static create(
								param0: globalAndroid.content.Context
							): com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>;
							public load(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public loadWithAggregatedAccountData(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public constructor(param0: globalAndroid.content.Context);
							public getAccounts(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class SchemaUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.SchemaUtil>;
							public static MISSING_FROM_THE_TOKEN_RESPONSE: string;
							public static getDisplayableId(param0: java.util.Map<string, any>): string;
							public static getIdentityProvider(param0: string): string;
							public static getHomeAccountId(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo): string;
							public static getCredentialTypeFromVersion(param0: string): string;
							public static getAvatarUrl(param0: com.microsoft.identity.common.internal.providers.oauth2.IDToken): string;
							public static getAlternativeAccountId(param0: com.microsoft.identity.common.internal.providers.oauth2.IDToken): string;
							public static getTenantId(param0: string, param1: string): string;
							public static getAuthority(param0: com.microsoft.identity.common.internal.providers.oauth2.IDToken): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class SharedPreferencesAccountCredentialCache extends com.microsoft.identity.common.internal.cache.AbstractAccountCredentialCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.SharedPreferencesAccountCredentialCache>;
							public static DEFAULT_ACCOUNT_CREDENTIAL_SHARED_PREFERENCES: string;
							public static BROKER_FOCI_ACCOUNT_CREDENTIAL_SHARED_PREFERENCES: string;
							public constructor();
							public getAccountsFilteredBy(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public getCredentialsFilteredBy(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.CredentialType, param3: string, param4: string, param5: string, param6: string): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public removeAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): boolean;
							public static getBrokerUidSequesteredFilename(param0: number): string;
							public constructor(param0: com.microsoft.identity.common.internal.cache.ICacheKeyValueDelegate, param1: com.microsoft.identity.common.internal.cache.ISharedPreferencesFileManager);
							public getAccount(param0: string): com.microsoft.identity.common.internal.dto.AccountRecord;
							public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
							public getCredentials(): java.util.List<com.microsoft.identity.common.internal.dto.Credential>;
							public saveAccount(param0: com.microsoft.identity.common.internal.dto.AccountRecord): void;
							public saveCredential(param0: com.microsoft.identity.common.internal.dto.Credential): void;
							public getAccounts(): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public static getCredentialTypeForCredentialCacheKey(param0: string): com.microsoft.identity.common.internal.dto.CredentialType;
							public clearAll(): void;
							public getCredential(param0: string): com.microsoft.identity.common.internal.dto.Credential;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class SharedPreferencesBrokerApplicationMetadataCache extends com.microsoft.identity.common.internal.cache.SharedPreferencesSimpleCacheImpl<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata> implements com.microsoft.identity.common.internal.cache.IBrokerApplicationMetadataCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.SharedPreferencesBrokerApplicationMetadataCache>;
							public remove(param0: any): boolean;
							public getAllClientIds(): java.util.Set<string>;
							public insert(param0: any): boolean;
							public clear(): boolean;
							public getAllFociClientIds(): java.util.Set<string>;
							public getListTypeToken(): java.lang.reflect.Type;
							public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
							public getAllNonFociClientIds(): java.util.Set<string>;
							public getAll(): java.util.List<any>;
							public getAllFociApplicationMetadata(): java.util.List<com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata>;
							public getMetadata(param0: string, param1: string, param2: number): com.microsoft.identity.common.internal.cache.BrokerApplicationMetadata;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export class SharedPreferencesFileManager extends com.microsoft.identity.common.internal.cache.ISharedPreferencesFileManager {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.SharedPreferencesFileManager>;
							public putLong(param0: string, param1: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: string, param2: number);
							public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: com.microsoft.identity.common.adal.internal.cache.IStorageHelper);
							public clear(): void;
							public contains(param0: string): boolean;
							public remove(param0: string): void;
							public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.microsoft.identity.common.adal.internal.cache.IStorageHelper);
							public getSharedPreferencesFileName(): string;
							public getAll(): java.util.Map<string, string>;
							public getLong(param0: string): number;
							public getString(param0: string): string;
							public putString(param0: string, param1: string): void;
							public constructor(param0: globalAndroid.content.Context, param1: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export abstract class SharedPreferencesSimpleCacheImpl<T> extends com.microsoft.identity.common.internal.cache.ISimpleCache<any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.SharedPreferencesSimpleCacheImpl<any>>;
							public remove(param0: any): boolean;
							public insert(param0: any): boolean;
							public clear(): boolean;
							public getListTypeToken(): java.lang.reflect.Type;
							public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
							public getAll(): java.util.List<any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export module registry {
							export class BrokerApplicationRegistryData extends com.microsoft.identity.common.internal.cache.AbstractApplicationMetadata {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData>;
								public equals(param0: any): boolean;
								public constructor();
								public setWpjAccountAccessAllowed(param0: boolean): void;
								public hashCode(): number;
								public isWpjAccountAccessAllowed(): boolean;
							}
							export module BrokerApplicationRegistryData {
								export class SerializedNames extends com.microsoft.identity.common.internal.cache.AbstractApplicationMetadata.SerializedNames {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData.SerializedNames>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export module registry {
							export class DefaultBrokerApplicationRegistry extends com.microsoft.identity.common.internal.cache.SharedPreferencesSimpleCacheImpl<com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData> implements com.microsoft.identity.common.internal.cache.registry.IBrokerApplicationRegistry {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.registry.DefaultBrokerApplicationRegistry>;
								public remove(param0: any): boolean;
								public clear(): boolean;
								public getMetadata(param0: string, param1: string, param2: number): com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData;
								public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
								public constructor(param0: globalAndroid.content.Context);
								public getAll(): java.util.List<any>;
								public getListTypeToken(): java.lang.reflect.Type;
								public insert(param0: any): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module cache {
						export module registry {
							export class IBrokerApplicationRegistry extends com.microsoft.identity.common.internal.cache.ISimpleCache<com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.cache.registry.IBrokerApplicationRegistry>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.cache.registry.IBrokerApplicationRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getMetadata(param0: string, param1: string, param2: number): com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData; insert(param0: any): boolean; remove(param0: any): boolean; getAll(): java.util.List<any>; clear(): boolean });
								public constructor();
								public remove(param0: any): boolean;
								public clear(): boolean;
								public getMetadata(param0: string, param1: string, param2: number): com.microsoft.identity.common.internal.cache.registry.BrokerApplicationRegistryData;
								public getAll(): java.util.List<any>;
								public insert(param0: any): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export abstract class BaseCommand<T> extends com.microsoft.identity.common.internal.commands.Command<any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.BaseCommand<any>>;
							public getParameters(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters;
							public hashCode(): number;
							public execute(): any;
							public isEligibleForCaching(): boolean;
							public isEligibleForEstsTelemetry(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public getCallback(): com.microsoft.identity.common.internal.commands.CommandCallback<any, any>;
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public getControllers(): java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>;
							public equals(param0: any): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public getPublicApiId(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class Command<T> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.Command<any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.commands.Command<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { execute(): T; isEligibleForEstsTelemetry(): boolean; getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController; isEligibleForCaching(): boolean });
							public constructor();
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public execute(): T;
							public isEligibleForCaching(): boolean;
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class CommandCallback<T, U> extends com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<any, any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.CommandCallback<any, any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.commands.CommandCallback<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { onCancel(): void; onError(param0: any): void; onTaskCompleted(param0: any): void });
							public constructor();
							public onError(param0: any): void;
							public onTaskCompleted(param0: any): void;
							public onCancel(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class GetCurrentAccountCommand extends com.microsoft.identity.common.internal.commands.BaseCommand<java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.GetCurrentAccountCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public hashCode(): number;
							public execute(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public execute(): any;
							public equals(param0: any): boolean;
							public isEligibleForCaching(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class GetDeviceModeCommand extends com.microsoft.identity.common.internal.commands.BaseCommand<java.lang.Boolean> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.GetDeviceModeCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public execute(): java.lang.Boolean;
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public hashCode(): number;
							public execute(): any;
							public equals(param0: any): boolean;
							public isEligibleForCaching(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class InteractiveTokenCommand extends com.microsoft.identity.common.internal.commands.TokenCommand {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.InteractiveTokenCommand>;
							public notify(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public hashCode(): number;
							public execute(): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public execute(): any;
							public isEligibleForCaching(): boolean;
							public isEligibleForEstsTelemetry(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public equals(param0: any): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class LoadAccountCommand extends com.microsoft.identity.common.internal.commands.BaseCommand<java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.LoadAccountCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public hashCode(): number;
							public execute(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public execute(): any;
							public equals(param0: any): boolean;
							public isEligibleForCaching(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class RemoveAccountCommand extends com.microsoft.identity.common.internal.commands.BaseCommand<java.lang.Boolean> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.RemoveAccountCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public execute(): java.lang.Boolean;
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public hashCode(): number;
							public execute(): any;
							public equals(param0: any): boolean;
							public isEligibleForCaching(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class RemoveCurrentAccountCommand extends com.microsoft.identity.common.internal.commands.BaseCommand<java.lang.Boolean> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.RemoveCurrentAccountCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public execute(): java.lang.Boolean;
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public hashCode(): number;
							public execute(): any;
							public equals(param0: any): boolean;
							public isEligibleForCaching(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export class SilentTokenCommand extends com.microsoft.identity.common.internal.commands.TokenCommand {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.SilentTokenCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public notify(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public hashCode(): number;
							public execute(): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public execute(): any;
							public isEligibleForCaching(): boolean;
							public isEligibleForEstsTelemetry(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public equals(param0: any): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export abstract class TokenCommand extends com.microsoft.identity.common.internal.commands.BaseCommand<com.microsoft.identity.common.internal.result.AcquireTokenResult> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.TokenCommand>;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public getDefaultController(): com.microsoft.identity.common.internal.controllers.BaseController;
							public hashCode(): number;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, param1: com.microsoft.identity.common.internal.controllers.BaseController, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public execute(): any;
							public equals(param0: any): boolean;
							public isEligibleForCaching(): boolean;
							public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: java.util.List<com.microsoft.identity.common.internal.controllers.BaseController>, param2: com.microsoft.identity.common.internal.commands.CommandCallback<any, any>, param3: string);
							public canEqual(param0: any): boolean;
							public isEligibleForEstsTelemetry(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class BrokerInteractiveTokenCommandParameters extends com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public getCallerAppVersion(): string;
								public getNegotiatedBrokerProtocolVersion(): string;
								public getCallerPackageName(): string;
								public equals(param0: any): boolean;
								public isRequestFromBroker(): boolean;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder<any, any>);
								public isShouldResolveInterrupt(): boolean;
								public getRequestType(): com.microsoft.identity.common.internal.request.BrokerRequestType;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder<any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>);
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>;
								public canEqual(param0: any): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>;
								public getBrokerVersion(): string;
								public validate(): void;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public getCallerUid(): number;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder<any, any>;
								public hashCode(): number;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>);
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
							}
							export module BrokerInteractiveTokenCommandParameters {
								export abstract class BrokerInteractiveTokenCommandParametersBuilder<C, B> extends com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder<any, any>>;
									public constructor();
									public build(): any;
									public self(): any;
									public requestType(param0: com.microsoft.identity.common.internal.request.BrokerRequestType): any;
									public $fillValuesFrom(param0: any): any;
									public negotiatedBrokerProtocolVersion(param0: string): any;
									public toString(): string;
									public callerUid(param0: number): any;
									public callerPackageName(param0: string): any;
									public callerAppVersion(param0: string): any;
									public brokerVersion(param0: string): any;
									public shouldResolveInterrupt(param0: boolean): any;
								}
								export class BrokerInteractiveTokenCommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters, com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilderImpl>;
									public build(): any;
									public self(): any;
									public build(): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters;
									public self(): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilderImpl;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class BrokerSilentTokenCommandParameters extends com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters>;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>;
								public getLoginHint(): string;
								public getCallerPackageName(): string;
								public equals(param0: any): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilder<any, any>;
								public canEqual(param0: any): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>);
								public getLocalAccountId(): string;
								public getBrokerVersion(): string;
								public validate(): void;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilder<any, any>);
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>);
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public getCallerAppVersion(): string;
								public getNegotiatedBrokerProtocolVersion(): string;
								public getSleepTimeBeforePrtAcquisition(): number;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilder<any, any>;
								public getAccountManagerAccount(): globalAndroid.accounts.Account;
								public getCallerUid(): number;
								public hashCode(): number;
								public getHomeAccountId(): string;
							}
							export module BrokerSilentTokenCommandParameters {
								export abstract class BrokerSilentTokenCommandParametersBuilder<C, B> extends com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilder<any, any>>;
									public constructor();
									public localAccountId(param0: string): any;
									public $fillValuesFrom(param0: any): any;
									public negotiatedBrokerProtocolVersion(param0: string): any;
									public toString(): string;
									public callerUid(param0: number): any;
									public callerPackageName(param0: string): any;
									public brokerVersion(param0: string): any;
									public sleepTimeBeforePrtAcquisition(param0: number): any;
									public build(): any;
									public homeAccountId(param0: string): any;
									public self(): any;
									public accountManagerAccount(param0: globalAndroid.accounts.Account): any;
									public callerAppVersion(param0: string): any;
									public loginHint(param0: string): any;
								}
								export class BrokerSilentTokenCommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters, com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilderImpl>;
									public build(): any;
									public self(): any;
									public build(): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters;
									public self(): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilderImpl;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class CommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.CommandParameters>;
								public getRequiredBrokerProtocolVersion(): string;
								public isPowerOptCheckEnabled(): boolean;
								public getOAuth2TokenCache(): com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public getSdkVersion(): string;
								public getRedirectUri(): string;
								public equals(param0: any): boolean;
								public getApplicationName(): string;
								public getSdkType(): com.microsoft.identity.common.internal.request.SdkType;
								public getAndroidApplicationContext(): globalAndroid.content.Context;
								public getClientId(): string;
								public getApplicationVersion(): string;
								public isSharedDevice(): boolean;
								public setCorrelationId(param0: string): void;
								public canEqual(param0: any): boolean;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public getCorrelationId(): string;
								public hashCode(): number;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
							}
							export module CommandParameters {
								export abstract class CommandParametersBuilder<C, B> extends java.lang.Object {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>>;
									public constructor();
									public redirectUri(param0: string): B;
									public powerOptCheckEnabled(param0: boolean): B;
									public applicationVersion(param0: string): B;
									public $fillValuesFrom(param0: C): B;
									public toString(): string;
									public oAuth2TokenCache(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>): B;
									public isSharedDevice(param0: boolean): B;
									public applicationName(param0: string): B;
									public requiredBrokerProtocolVersion(param0: string): B;
									public androidApplicationContext(param0: globalAndroid.content.Context): B;
									public build(): C;
									public correlationId(param0: string): B;
									public sdkType(param0: com.microsoft.identity.common.internal.request.SdkType): B;
									public sdkVersion(param0: string): B;
									public self(): B;
									public clientId(param0: string): B;
								}
								export class CommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.CommandParameters, com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilderImpl>;
									public self(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilderImpl;
									public build(): any;
									public build(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters;
									public self(): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class InteractiveTokenCommandParameters extends com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public getLoginHint(): string;
								public getBrowserSafeList(): java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>;
								public isWebViewZoomEnabled(): boolean;
								public equals(param0: any): boolean;
								public getExtraScopesToConsent(): java.util.List<string>;
								public getActivity(): globalAndroid.app.Activity;
								public getRequestHeaders(): java.util.HashMap<string, string>;
								public getAuthorizationAgent(): com.microsoft.identity.common.internal.ui.AuthorizationAgent;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>);
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>;
								public canEqual(param0: any): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>;
								public getExtraQueryStringParameters(): java.util.List<globalAndroid.util.Pair<string, string>>;
								public isBrokerBrowserSupportEnabled(): boolean;
								public isWebViewZoomControlsEnabled(): boolean;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public getFragment(): androidx.fragment.app.Fragment;
								public getPrompt(): com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public hashCode(): number;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>);
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
							}
							export module InteractiveTokenCommandParameters {
								export abstract class InteractiveTokenCommandParametersBuilder<C, B> extends com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<any, any>>;
									public constructor();
									public browserSafeList(param0: java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>): any;
									public requestHeaders(param0: java.util.HashMap<string, string>): any;
									public prompt(param0: com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter): any;
									public $fillValuesFrom(param0: any): any;
									public toString(): string;
									public extraQueryStringParameters(param0: java.util.List<globalAndroid.util.Pair<string, string>>): any;
									public extraScopesToConsent(param0: java.util.List<string>): any;
									public build(): any;
									public brokerBrowserSupportEnabled(param0: boolean): any;
									public self(): any;
									public activity(param0: globalAndroid.app.Activity): any;
									public authorizationAgent(param0: com.microsoft.identity.common.internal.ui.AuthorizationAgent): any;
									public fragment(param0: androidx.fragment.app.Fragment): any;
									public isWebViewZoomEnabled(param0: boolean): any;
									public isWebViewZoomControlsEnabled(param0: boolean): any;
									public loginHint(param0: string): any;
								}
								export class InteractiveTokenCommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters, com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilderImpl>;
									public self(): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilderImpl;
									public build(): any;
									public self(): any;
									public build(): com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class RemoveAccountCommandParameters extends com.microsoft.identity.common.internal.commands.parameters.CommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public canEqual(param0: any): boolean;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilder<any, any>;
								public getAccount(): com.microsoft.identity.common.internal.dto.IAccountRecord;
								public getBrowserSafeList(): java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>;
								public equals(param0: any): boolean;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilder<any, any>);
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public hashCode(): number;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilder<any, any>;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
							}
							export module RemoveAccountCommandParameters {
								export abstract class RemoveAccountCommandParametersBuilder<C, B> extends com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilder<any, any>>;
									public constructor();
									public build(): any;
									public account(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public browserSafeList(param0: java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>): any;
									public self(): any;
									public $fillValuesFrom(param0: any): any;
									public toString(): string;
								}
								export class RemoveAccountCommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilderImpl>;
									public build(): any;
									public self(): any;
									public self(): com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilderImpl;
									public build(): com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class SilentTokenCommandParameters extends com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>;
								public equals(param0: any): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public canEqual(param0: any): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>);
								public validate(): void;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public hashCode(): number;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>);
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
							}
							export module SilentTokenCommandParameters {
								export abstract class SilentTokenCommandParametersBuilder<C, B> extends com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<any, any>>;
									public constructor();
									public build(): any;
									public self(): any;
									public $fillValuesFrom(param0: any): any;
									public toString(): string;
								}
								export class SilentTokenCommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters, com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilderImpl>;
									public build(): any;
									public self(): any;
									public self(): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilderImpl;
									public build(): com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module commands {
						export module parameters {
							export class TokenCommandParameters extends com.microsoft.identity.common.internal.commands.parameters.CommandParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters>;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>);
								public getAccount(): com.microsoft.identity.common.internal.dto.IAccountRecord;
								public equals(param0: any): boolean;
								public getScopes(): java.util.Set<string>;
								public isForceRefresh(): boolean;
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public canEqual(param0: any): boolean;
								public getClaimsRequestJson(): string;
								public validate(): void;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>;
								public toBuilder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
								public getAuthenticationScheme(): com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme;
								public getAuthority(): com.microsoft.identity.common.internal.authorities.Authority;
								public hashCode(): number;
								public constructor(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>);
								public static builder(): com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any>;
							}
							export module TokenCommandParameters {
								export abstract class TokenCommandParametersBuilder<C, B> extends com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder<any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<any, any>>;
									public constructor();
									public build(): any;
									public authority(param0: com.microsoft.identity.common.internal.authorities.Authority): any;
									public account(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public forceRefresh(param0: boolean): any;
									public self(): any;
									public authenticationScheme(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public $fillValuesFrom(param0: any): any;
									public scopes(param0: java.util.Set<string>): any;
									public toString(): string;
									public claimsRequestJson(param0: string): any;
								}
								export class TokenCommandParametersBuilderImpl extends com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder<com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters, com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilderImpl> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilderImpl>;
									public build(): any;
									public self(): any;
									public self(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilderImpl;
									public build(): com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export abstract class BaseController {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.BaseController>;
							public static DEFAULT_SCOPES: java.util.Set<string>;
							public static logExposedFieldsOfObject(param0: string, param1: any): void;
							public idTokenIsNull(param0: com.microsoft.identity.common.internal.cache.ICacheRecord, param1: com.microsoft.identity.common.internal.request.SdkType): boolean;
							public accessTokenIsNull(param0: com.microsoft.identity.common.internal.cache.ICacheRecord): boolean;
							public getAccounts(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getCachedAccountRecord(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.dto.AccountRecord;
							public removeAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters): boolean;
							public acquireToken(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public addDefaultScopes(param0: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters): java.util.Set<string>;
							public renewAccessToken(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters, param1: com.microsoft.identity.common.internal.result.AcquireTokenResult, param2: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>, param3: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>, param4: com.microsoft.identity.common.internal.cache.ICacheRecord): void;
							public getDeviceMode(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): boolean;
							public isRequestAuthorityRealmSameAsATRealm(param0: com.microsoft.identity.common.internal.authorities.Authority, param1: com.microsoft.identity.common.internal.dto.AccessTokenRecord): boolean;
							public acquireTokenSilent(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public performTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param2: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse, param3: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
							public constructor();
							public logParameters(param0: string, param1: any): void;
							public static logResult(param0: string, param1: com.microsoft.identity.common.internal.providers.oauth2.IResult): void;
							public refreshTokenIsNull(param0: com.microsoft.identity.common.internal.cache.ICacheRecord): boolean;
							public removeCurrentAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters): boolean;
							public completeAcquireToken(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							public finalizeCacheRecordForResult(param0: com.microsoft.identity.common.internal.cache.ICacheRecord, param1: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.cache.ICacheRecord;
							public static getDelimitedDefaultScopeString(): string;
							public getAuthorizationRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>, param1: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>;
							public saveTokens(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param2: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse, param3: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getCurrentAccount(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public isMsaAccount(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse): boolean;
							public initializeAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>, param1: com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
							public performSilentTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>, param1: com.microsoft.identity.common.internal.dto.RefreshTokenRecord, param2: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class CommandDispatcher {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.CommandDispatcher>;
							public constructor();
							public static getCachedResultCount(): number;
							public static submitSilent(param0: com.microsoft.identity.common.internal.commands.BaseCommand<any>): void;
							public static initializeDiagnosticContext(param0: string): string;
							public static beginInteractive(param0: com.microsoft.identity.common.internal.commands.InteractiveTokenCommand): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class CommandResult {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.CommandResult>;
							public getStatus(): com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus;
							public getResult(): any;
							public constructor(param0: com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus, param1: any);
						}
						export module CommandResult {
							export class ResultStatus {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus>;
								public static CANCEL: com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus;
								public static COMPLETED: com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus;
								public static ERROR: com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus;
								public static values(): native.Array<com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus>;
								public static valueOf(param0: string): com.microsoft.identity.common.internal.controllers.CommandResult.ResultStatus;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class CommandResultCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.CommandResultCache>;
							public constructor();
							public get(param0: com.microsoft.identity.common.internal.commands.BaseCommand<any>): com.microsoft.identity.common.internal.controllers.CommandResult;
							public getSize(): number;
							public put(param0: com.microsoft.identity.common.internal.commands.BaseCommand<any>, param1: com.microsoft.identity.common.internal.controllers.CommandResult): void;
							public clear(): void;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class CommandResultCacheItem {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.CommandResultCacheItem>;
							public constructor(param0: com.microsoft.identity.common.internal.controllers.CommandResult);
							public getValue(): com.microsoft.identity.common.internal.controllers.CommandResult;
							public isExpired(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class ExceptionAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.ExceptionAdapter>;
							public constructor();
							public static applyCliTelemInfo(param0: com.microsoft.identity.common.internal.telemetry.CliTelemInfo, param1: com.microsoft.identity.common.exception.BaseException): void;
							public static exceptionFromTokenResult(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResult): com.microsoft.identity.common.exception.ServiceException;
							public static baseExceptionFromException(param0: java.lang.Exception): com.microsoft.identity.common.exception.BaseException;
							public static exceptionFromAcquireTokenResult(param0: com.microsoft.identity.common.internal.result.AcquireTokenResult): com.microsoft.identity.common.exception.BaseException;
							public static getExceptionFromTokenErrorResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenErrorResponse): com.microsoft.identity.common.exception.ServiceException;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class TaskCompletedCallback<T> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.TaskCompletedCallback<any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.controllers.TaskCompletedCallback<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { onTaskCompleted(param0: T): void });
							public constructor();
							public onTaskCompleted(param0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module controllers {
						export class TaskCompletedCallbackWithError<T, U> extends com.microsoft.identity.common.internal.controllers.TaskCompletedCallback<any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<any, any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { onError(param0: any): void; onTaskCompleted(param0: any): void });
							public constructor();
							public onError(param0: any): void;
							public onTaskCompleted(param0: any): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class AccessTokenRecord extends com.microsoft.identity.common.internal.dto.Credential {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.AccessTokenRecord>;
							public constructor();
							public setKid(param0: string): void;
							public setAuthority(param0: string): void;
							public setTarget(param0: string): void;
							public getAccessTokenType(): string;
							public getKid(): string;
							public setRealm(param0: string): void;
							public setAccessTokenType(param0: string): void;
							public setExpiresOn(param0: string): void;
							public getTarget(): string;
							public setExtendedExpiresOn(param0: string): void;
							public isExpired(): boolean;
							public getAuthority(): string;
							public getRealm(): string;
							public getExtendedExpiresOn(): string;
							public getExpiresOn(): string;
						}
						export module AccessTokenRecord {
							export class SerializedNames extends com.microsoft.identity.common.internal.dto.Credential.SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.AccessTokenRecord.SerializedNames>;
								public static ACCESS_TOKEN_TYPE: string;
								public static AUTHORITY: string;
								public static EXTENDED_EXPIRES_ON: string;
								public static REALM: string;
								public static TARGET: string;
								public static KID: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export abstract class AccountCredentialBase {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.AccountCredentialBase>;
							public constructor();
							public getAdditionalFields(): java.util.Map<string, com.google.gson.JsonElement>;
							public toString(): string;
							public setAdditionalFields(param0: java.util.Map<string, com.google.gson.JsonElement>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class AccountRecord extends com.microsoft.identity.common.internal.dto.AccountCredentialBase implements com.microsoft.identity.common.internal.dto.IAccountRecord {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.AccountRecord>;
							public hashCode(): number;
							public getUsername(): string;
							public getEnvironment(): string;
							public setFirstName(param0: string): void;
							public setAuthorityType(param0: string): void;
							public getMiddleName(): string;
							public getFirstName(): string;
							public setRealm(param0: string): void;
							public getHomeAccountId(): string;
							public setEnvironment(param0: string): void;
							public getAuthorityType(): string;
							public constructor();
							public setFamilyName(param0: string): void;
							public setLocalAccountId(param0: string): void;
							public setClientInfo(param0: string): void;
							public setHomeAccountId(param0: string): void;
							public setName(param0: string): void;
							public constructor(param0: com.microsoft.identity.common.internal.dto.IAccountRecord);
							public getAvatarUrl(): string;
							public setAlternativeAccountId(param0: string): void;
							public getName(): string;
							public getClientInfo(): string;
							public getLocalAccountId(): string;
							public setMiddleName(param0: string): void;
							public getAlternativeAccountId(): string;
							public equals(param0: any): boolean;
							public getRealm(): string;
							public setUsername(param0: string): void;
							public getFamilyName(): string;
							public setAvatarUrl(param0: string): void;
						}
						export module AccountRecord {
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.AccountRecord.SerializedNames>;
								public static HOME_ACCOUNT_ID: string;
								public static ENVIRONMENT: string;
								public static REALM: string;
								public static LOCAL_ACCOUNT_ID: string;
								public static USERNAME: string;
								public static AUTHORITY_TYPE: string;
								public static ALTERNATIVE_ACCOUNT_ID: string;
								public static FIRST_NAME: string;
								public static FAMILY_NAME: string;
								public static MIDDLE_NAME: string;
								public static NAME: string;
								public static AVATAR_URL: string;
								public static CLIENT_INFO: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export abstract class Credential extends com.microsoft.identity.common.internal.dto.AccountCredentialBase {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.Credential>;
							public constructor();
							public hashCode(): number;
							public setHomeAccountId(param0: string): void;
							public getSecret(): string;
							public setCachedAt(param0: string): void;
							public getEnvironment(): string;
							public setClientId(param0: string): void;
							public getHomeAccountId(): string;
							public getCachedAt(): string;
							public getCredentialType(): string;
							public setCredentialType(param0: string): void;
							public isExpired(): boolean;
							public setEnvironment(param0: string): void;
							public equals(param0: any): boolean;
							public getClientId(): string;
							public setSecret(param0: string): void;
						}
						export module Credential {
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.Credential.SerializedNames>;
								public static CLIENT_ID: string;
								public static CREDENTIAL_TYPE: string;
								public static ENVIRONMENT: string;
								public static SECRET: string;
								public static HOME_ACCOUNT_ID: string;
								public static CACHED_AT: string;
								public static EXPIRES_ON: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class CredentialType {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.CredentialType>;
							public static RefreshToken: com.microsoft.identity.common.internal.dto.CredentialType;
							public static AccessToken: com.microsoft.identity.common.internal.dto.CredentialType;
							public static IdToken: com.microsoft.identity.common.internal.dto.CredentialType;
							public static V1IdToken: com.microsoft.identity.common.internal.dto.CredentialType;
							public static Password: com.microsoft.identity.common.internal.dto.CredentialType;
							public static Cookie: com.microsoft.identity.common.internal.dto.CredentialType;
							public static Certificate: com.microsoft.identity.common.internal.dto.CredentialType;
							public static AccessToken_With_AuthScheme: com.microsoft.identity.common.internal.dto.CredentialType;
							public static ID_TOKEN_TYPES: native.Array<com.microsoft.identity.common.internal.dto.CredentialType>;
							public static valueSet(): java.util.Set<string>;
							public static valueOf(param0: string): com.microsoft.identity.common.internal.dto.CredentialType;
							public static values(): native.Array<com.microsoft.identity.common.internal.dto.CredentialType>;
							public static fromString(param0: string): com.microsoft.identity.common.internal.dto.CredentialType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class IAccountRecord {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.IAccountRecord>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.dto.IAccountRecord interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getHomeAccountId(): string; getEnvironment(): string; getRealm(): string; getLocalAccountId(): string; getUsername(): string; getAuthorityType(): string; getAlternativeAccountId(): string; getFirstName(): string; getFamilyName(): string; getMiddleName(): string; getName(): string; getAvatarUrl(): string; getClientInfo(): string });
							public constructor();
							public getUsername(): string;
							public getEnvironment(): string;
							public getMiddleName(): string;
							public getAvatarUrl(): string;
							public getFirstName(): string;
							public getHomeAccountId(): string;
							public getName(): string;
							public getClientInfo(): string;
							public getLocalAccountId(): string;
							public getAlternativeAccountId(): string;
							public getRealm(): string;
							public getAuthorityType(): string;
							public getFamilyName(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class IRefreshTokenRecord {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.IRefreshTokenRecord>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.dto.IRefreshTokenRecord interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getHomeAccountId(): string; getEnvironment(): string; getClientId(): string; getSecret(): string; getTarget(): string; getFamilyId(): string });
							public constructor();
							public getHomeAccountId(): string;
							public getTarget(): string;
							public getSecret(): string;
							public getEnvironment(): string;
							public getClientId(): string;
							public getFamilyId(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class IdTokenRecord extends com.microsoft.identity.common.internal.dto.Credential {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.IdTokenRecord>;
							public constructor();
							public setRealm(param0: string): void;
							public hashCode(): number;
							public setAuthority(param0: string): void;
							public isExpired(): boolean;
							public getAuthority(): string;
							public equals(param0: any): boolean;
							public getRealm(): string;
						}
						export module IdTokenRecord {
							export class SerializedNames extends com.microsoft.identity.common.internal.dto.Credential.SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.IdTokenRecord.SerializedNames>;
								public static REALM: string;
								public static AUTHORITY: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module dto {
						export class RefreshTokenRecord extends com.microsoft.identity.common.internal.dto.Credential {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.RefreshTokenRecord>;
							public constructor();
							public hashCode(): number;
							public getTarget(): string;
							public setTarget(param0: string): void;
							public isExpired(): boolean;
							public toString(): string;
							public setFamilyId(param0: string): void;
							public equals(param0: any): boolean;
							public getFamilyId(): string;
						}
						export module RefreshTokenRecord {
							export class SerializedNames extends com.microsoft.identity.common.internal.dto.Credential.SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.dto.RefreshTokenRecord.SerializedNames>;
								public static FAMILY_ID: string;
								public static TARGET: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class CurrentRequestTelemetry extends com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry implements com.microsoft.identity.common.internal.eststelemetry.ICurrentTelemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.CurrentRequestTelemetry>;
							public put(param0: string, param1: string): void;
							public getCompleteHeaderString(): string;
							public copySharedValues(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry;
							public getHeaderStringForFields(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class EstsTelemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.EstsTelemetry>;
							public getTelemetryHeaders(): java.util.Map<string, string>;
							public initTelemetryForCommand(param0: com.microsoft.identity.common.internal.commands.BaseCommand<any>): void;
							public emitForceRefresh(param0: boolean): void;
							public emit(param0: java.util.Map<string, string>): void;
							public emitApiId(param0: string): void;
							public flush(param0: com.microsoft.identity.common.internal.commands.BaseCommand<any>, param1: com.microsoft.identity.common.internal.controllers.CommandResult): void;
							public static getInstance(): com.microsoft.identity.common.internal.eststelemetry.EstsTelemetry;
							public emit(param0: string, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class FailedRequest {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.FailedRequest>;
							public hashCode(): number;
							public toErrorCodeString(): string;
							public constructor(param0: string, param1: string, param2: string);
							public equals(param0: any): boolean;
							public toApiIdCorrelationString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class ICurrentTelemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.ICurrentTelemetry>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.eststelemetry.ICurrentTelemetry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { put(param0: string, param1: string): void });
							public constructor();
							public put(param0: string, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class IRequestTelemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.IRequestTelemetry>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.eststelemetry.IRequestTelemetry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { getHeaderStringForFields(): string; getCompleteHeaderString(): string; copySharedValues(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry });
							public constructor();
							public getCompleteHeaderString(): string;
							public copySharedValues(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry;
							public getHeaderStringForFields(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class IRequestTelemetryCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.IRequestTelemetryCache>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.eststelemetry.IRequestTelemetryCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { saveRequestTelemetryToCache(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): void; getRequestTelemetryFromCache(): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry });
							public constructor();
							public saveRequestTelemetryToCache(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): void;
							public getRequestTelemetryFromCache(): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class LastRequestTelemetry extends com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.LastRequestTelemetry>;
							public getCompleteHeaderString(): string;
							public copySharedValues(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry;
							public getHeaderStringForFields(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class PublicApiId {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.PublicApiId>;
							public static PCA_ACQUIRE_TOKEN_SILENT_WITH_PARAMETERS: string;
							public static PCA_ACQUIRE_TOKEN_SILENT_ASYNC_WITH_PARAMETERS: string;
							public static SINGLE_ACCOUNT_PCA_ACQUIRE_TOKEN_SILENT_WITH_PARAMETERS: string;
							public static SINGLE_ACCOUNT_PCA_ACQUIRE_TOKEN_SILENT_ASYNC_WITH_PARAMETERS: string;
							public static SINGLE_ACCOUNT_PCA_ACQUIRE_TOKEN_SILENT_WITH_SCOPES_AUTHORITY: string;
							public static SINGLE_ACCOUNT_PCA_ACQUIRE_TOKEN_SILENT_ASYNC_WITH_SCOPES_AUTHORITY_CALLBACK: string;
							public static MULTIPLE_ACCOUNT_PCA_ACQUIRE_TOKEN_SILENT_WITH_SCOPES_ACCOUNT_AUTHORITY: string;
							public static MULTIPLE_ACCOUNT_PCA_ACQUIRE_TOKEN_SILENT_ASYNC_WITH_SCOPES_ACCOUNT_AUTHORITY_CALLBACK: string;
							public static BROKER_ACQUIRE_TOKEN_SILENT_WITH_PARAMETERS_CALLBACK: string;
							public static PCA_ACQUIRE_TOKEN_WITH_PARAMETERS: string;
							public static PCA_ACQUIRE_TOKEN_WITH_ACTIVITY_SCOPES_CALLBACK: string;
							public static SINGLE_ACCOUNT_PCA_SIGN_IN: string;
							public static SINGLE_ACCOUNT_PCA_SIGN_IN_WITH_PROMPT: string;
							public static SINGLE_ACCOUNT_PCA_EXISTING_SIGN_IN_WITH_PROMPT: string;
							public static SINGLE_ACCOUNT_PCA_ACQUIRE_TOKEN_WITH_PARAMETERS: string;
							public static SINGLE_ACCOUNT_PCA_ACQUIRE_TOKEN_WITH_ACTIVITY_SCOPES_CALLBACK: string;
							public static MULTIPLE_ACCOUNT_PCA_ACQUIRE_TOKEN_WITH_ACTIVITY_SCOPES_LOGINHINT_CALLBACK: string;
							public static BROKER_ACQUIRE_TOKEN_WITH_PARAMETERS_CALLBACK: string;
							public static BROKER_ADD_ACCOUNT_WITH_ACTIVITY: string;
							public static BROKER_CHOOSE_ACCOUNT_WITH_ACTIVITY_ACCOUNTNAME: string;
							public static SINGLE_ACCOUNT_PCA_GET_CURRENT_ACCOUNT: string;
							public static SINGLE_ACCOUNT_PCA_GET_CURRENT_ACCOUNT_ASYNC: string;
							public static MULTIPLE_ACCOUNT_PCA_GET_ACCOUNTS: string;
							public static MULTIPLE_ACCOUNT_PCA_GET_ACCOUNTS_WITH_CALLBACK: string;
							public static MULTIPLE_ACCOUNT_PCA_GET_ACCOUNT_WITH_IDENTIFIER: string;
							public static MULTIPLE_ACCOUNT_PCA_GET_ACCOUNT_WITH_IDENTIFIER_CALLBACK: string;
							public static SINGLE_ACCOUNT_PCA_SIGN_OUT: string;
							public static SINGLE_ACCOUNT_PCA_SIGN_OUT_WITH_CALLBACK: string;
							public static MULTIPLE_ACCOUNT_PCA_REMOVE_ACCOUNT_WITH_ACCOUNT: string;
							public static MULTIPLE_ACCOUNT_PCA_REMOVE_ACCOUNT_WITH_ACCOUNT_CALLBACK: string;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export abstract class RequestTelemetry extends com.microsoft.identity.common.internal.eststelemetry.IRequestTelemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry>;
							public getCompleteHeaderString(): string;
							public copySharedValues(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry;
							public getHeaderStringForFields(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class SchemaConstants {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.SchemaConstants>;
							public static SCHEMA_VERSION_KEY: string;
							public static CURRENT_SCHEMA_VERSION: string;
							public static CURRENT_REQUEST_HEADER_NAME: string;
							public static LAST_REQUEST_HEADER_NAME: string;
							public static SEPARATOR_PIPE: string;
							public static SEPARATOR_COMMA: string;
							public static HEADER_DATA_LIMIT: number;
							public constructor();
						}
						export module SchemaConstants {
							export class Key {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.SchemaConstants.Key>;
								public static API_ID: string;
								public static FORCE_REFRESH: string;
								public static CORRELATION_ID: string;
								public static ERROR_CODE: string;
								public static ACCOUNT_STATUS: string;
								public static ID_TOKEN_STATUS: string;
								public static AT_STATUS: string;
								public static RT_STATUS: string;
								public static FRT_STATUS: string;
								public static MRRT_STATUS: string;
								public static ALL_TELEMETRY_DATA_SENT: string;
								public constructor();
							}
							export class Value {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.SchemaConstants.Value>;
								public static TRUE: string;
								public static FALSE: string;
								public static EMPTY: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class SharedPreferencesLastRequestTelemetryCache extends com.microsoft.identity.common.internal.eststelemetry.IRequestTelemetryCache {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.SharedPreferencesLastRequestTelemetryCache>;
							public saveRequestTelemetryToCache(param0: com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry): void;
							public getRequestTelemetryFromCache(): com.microsoft.identity.common.internal.eststelemetry.RequestTelemetry;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module eststelemetry {
						export class TelemetryUtils {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.eststelemetry.TelemetryUtils>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module logging {
						export class DiagnosticContext {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.logging.DiagnosticContext>;
							public static CORRELATION_ID: string;
							public static clear(): void;
							public static setRequestContext(param0: com.microsoft.identity.common.internal.logging.IRequestContext): void;
							public static getRequestContext(): com.microsoft.identity.common.internal.logging.IRequestContext;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module logging {
						export class ILoggerCallback {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.logging.ILoggerCallback>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.logging.ILoggerCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { log(param0: string, param1: com.microsoft.identity.common.internal.logging.Logger.LogLevel, param2: string, param3: boolean): void });
							public constructor();
							public log(param0: string, param1: com.microsoft.identity.common.internal.logging.Logger.LogLevel, param2: string, param3: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module logging {
						export class IRequestContext extends java.util.Map<string, string> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.logging.IRequestContext>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.logging.IRequestContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { toJsonString(): string });
							public constructor();
							public toJsonString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module logging {
						export class Logger {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.logging.Logger>;
							public constructor();
							public static verbosePII(param0: string, param1: string, param2: string): void;
							public static setAllowLogcat(param0: boolean): void;
							public static info(param0: string, param1: string, param2: string): void;
							public static verbose(param0: string, param1: string, param2: string): void;
							public static getInstance(): com.microsoft.identity.common.internal.logging.Logger;
							public static info(param0: string, param1: string): void;
							public static warnPII(param0: string, param1: string, param2: string): void;
							public static getAllowLogcat(): boolean;
							public static errorPII(param0: string, param1: string, param2: java.lang.Throwable): void;
							public static error(param0: string, param1: string, param2: java.lang.Throwable): void;
							public static error(param0: string, param1: string, param2: string, param3: java.lang.Throwable): void;
							public static warn(param0: string, param1: string, param2: string): void;
							public setLogLevel(param0: com.microsoft.identity.common.internal.logging.Logger.LogLevel): void;
							public static getAllowPii(): boolean;
							public setExternalLogger(param0: com.microsoft.identity.common.internal.logging.ILoggerCallback): void;
							public static verbose(param0: string, param1: string): void;
							public static warnPII(param0: string, param1: string): void;
							public static errorPII(param0: string, param1: string, param2: string, param3: java.lang.Throwable): void;
							public static infoPII(param0: string, param1: string): void;
							public static infoPII(param0: string, param1: string, param2: string): void;
							public static setAllowPii(param0: boolean): void;
							public static warn(param0: string, param1: string): void;
							public static verbosePII(param0: string, param1: string): void;
						}
						export module Logger {
							export class LogLevel {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.logging.Logger.LogLevel>;
								public static ERROR: com.microsoft.identity.common.internal.logging.Logger.LogLevel;
								public static WARN: com.microsoft.identity.common.internal.logging.Logger.LogLevel;
								public static INFO: com.microsoft.identity.common.internal.logging.Logger.LogLevel;
								public static VERBOSE: com.microsoft.identity.common.internal.logging.Logger.LogLevel;
								public static values(): native.Array<com.microsoft.identity.common.internal.logging.Logger.LogLevel>;
								public static valueOf(param0: string): com.microsoft.identity.common.internal.logging.Logger.LogLevel;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module logging {
						export class RequestContext extends java.util.HashMap<string, string> implements com.microsoft.identity.common.internal.logging.IRequestContext {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.logging.RequestContext>;
							public constructor();
							public toJsonString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module migration {
						export class AdalMigrationAdapter extends com.microsoft.identity.common.internal.migration.IMigrationAdapter<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.migration.AdalMigrationAdapter>;
							public adapt(param0: java.util.Map<string, string>): java.util.List<globalAndroid.util.Pair<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>>;
							public setMigrationStatus(param0: boolean): void;
							public constructor(param0: globalAndroid.content.Context, param1: java.util.Map<string, string>, param2: boolean);
							public static createAccount(param0: com.microsoft.identity.common.internal.cache.ADALTokenCacheItem): com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount;
							public adapt(param0: java.util.Map<string, string>): java.util.List<globalAndroid.util.Pair<any, any>>;
							public static loadCloudDiscoveryMetadata(): boolean;
							public getMigrationStatus(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module migration {
						export class IMigrationAdapter<T, U> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.migration.IMigrationAdapter<any, any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.migration.IMigrationAdapter<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { adapt(param0: java.util.Map<string, string>): java.util.List<globalAndroid.util.Pair<T, U>> });
							public constructor();
							public adapt(param0: java.util.Map<string, string>): java.util.List<globalAndroid.util.Pair<T, U>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module migration {
						export class TokenCacheItemMigrationAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.migration.TokenCacheItemMigrationAdapter>;
							public static sBackgroundExecutor: java.util.concurrent.ExecutorService;
							public constructor();
							public static logTokenResultError(param0: java.util.UUID, param1: com.microsoft.identity.common.internal.providers.oauth2.TokenResult): void;
							public static tryFociTokenWithGivenClientId(param0: com.microsoft.identity.common.internal.cache.BrokerOAuth2TokenCache<any, any, any, any, any>, param1: string, param2: string, param3: com.microsoft.identity.common.internal.cache.ICacheRecord): boolean;
							public static findMrrt(param0: java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>): com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;
							public static renewToken(param0: string, param1: com.microsoft.identity.common.internal.cache.ITokenCacheItem): globalAndroid.util.Pair<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>;
							public static findFrt(param0: java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>): com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;
							public static getScopeFromResource(param0: string): string;
							public static migrateTokens(param0: java.util.Map<string, string>, param1: java.util.Collection<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>): java.util.List<globalAndroid.util.Pair<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount, com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>>;
							public static createTokenRequest(param0: string, param1: string, param2: string, param3: string, param4: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, param5: java.util.UUID, param6: string): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest;
							public static filterDuplicateTokens(param0: java.util.Collection<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>): java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>;
							public static findRt(param0: java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>): com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;
							public static tryFociTokenWithGivenClientId(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>, param1: string, param2: string, param3: com.microsoft.identity.common.internal.dto.RefreshTokenRecord, param4: com.microsoft.identity.common.internal.dto.IAccountRecord): boolean;
							public static splitTokensByClientId(param0: java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>): java.util.Map<string, java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>>;
							public static preferentiallySelectTokens(param0: java.util.Map<string, java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>>): java.util.Map<string, java.util.List<com.microsoft.identity.common.internal.cache.ADALTokenCacheItem>>;
							public static getScopesForTokenRequest(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module migration {
						export class TokenMigrationCallback {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.migration.TokenMigrationCallback>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.migration.TokenMigrationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { onMigrationFinished(param0: number): void });
							public constructor();
							public onMigrationFinished(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module migration {
						export class TokenMigrationUtility<T, U> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.migration.TokenMigrationUtility<any, any>>;
							public constructor();
							public _import(param0: com.microsoft.identity.common.internal.migration.IMigrationAdapter<T, U>, param1: java.util.Map<string, string>, param2: com.microsoft.identity.common.internal.cache.IShareSingleSignOnState<T, U>, param3: com.microsoft.identity.common.internal.migration.TokenMigrationCallback): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class HttpClient {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpClient>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.net.HttpClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								method(param0: string, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
								method(param0: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
								put(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
								patch(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
								options(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
								post(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
								delete(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
								get(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
								head(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
								trace(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							});
							public constructor();
							public delete(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public put(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public patch(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public method(param0: string, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public post(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public options(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public method(param0: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public get(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public head(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public trace(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
						}
						export module HttpClient {
							export class HttpMethod {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpClient.HttpMethod>;
								public static GET: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static HEAD: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static PUT: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static POST: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static OPTIONS: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static PATCH: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static DELETE: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static TRACE: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static values(): native.Array<com.microsoft.identity.common.internal.net.HttpClient.HttpMethod>;
								public static valueOf(param0: string): com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
								public static validateAndNormalizeMethod(param0: string): com.microsoft.identity.common.internal.net.HttpClient.HttpMethod;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class HttpConstants {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpConstants>;
							public constructor();
						}
						export module HttpConstants {
							export class HeaderField {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpConstants.HeaderField>;
							}
							export class MediaType {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpConstants.MediaType>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class HttpRequest {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpRequest>;
							public static READ_TIMEOUT: number;
							public static CONNECT_TIMEOUT: number;
							public static REQUEST_METHOD_GET: string;
							public static REQUEST_METHOD_POST: string;
							public static REQUEST_METHOD_HEAD: string;
							public static REQUEST_METHOD_PUT: string;
							public static REQUEST_METHOD_DELETE: string;
							public static REQUEST_METHOD_TRACE: string;
							public static REQUEST_METHOD_OPTIONS: string;
							public static REQUEST_METHOD_PATCH: string;
							/** @deprecated */
							public static sendDelete(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendPatch(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendWithMethod(param0: string, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>, param4: string): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendHead(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendPost(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendPut(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>, param3: string): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendOptions(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendGet(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							/** @deprecated */
							public static sendTrace(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class HttpResponse {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpResponse>;
							public getStatusCode(): number;
							public constructor(param0: java.util.Date, param1: number, param2: string, param3: java.util.Map<string, java.util.List<string>>);
							public toString(): string;
							public constructor(param0: number, param1: string, param2: java.util.Map<string, java.util.List<string>>);
							public getBody(): string;
							public getDate(): java.util.Date;
							public getHeaders(): java.util.Map<string, java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class HttpUrlConnectionFactory {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.HttpUrlConnectionFactory>;
							public static clearMockedConnectionQueue(): void;
							public static createHttpURLConnection(param0: java.net.URL): java.net.HttpURLConnection;
							public static addMockedConnection(param0: java.net.HttpURLConnection): void;
							public static getMockedConnectionCountInQueue(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class NoRetryPolicy extends com.microsoft.identity.common.internal.net.RetryPolicy<com.microsoft.identity.common.internal.net.HttpResponse> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.NoRetryPolicy>;
							public constructor();
							public attempt(param0: java.util.concurrent.Callable<any>): any;
							public attempt(param0: java.util.concurrent.Callable<com.microsoft.identity.common.internal.net.HttpResponse>): com.microsoft.identity.common.internal.net.HttpResponse;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class ObjectMapper {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.ObjectMapper>;
							public static ENCODING_SCHEME: string;
							public static TAG: string;
							public static serializeObjectToJsonString(param0: any): string;
							public static deserializeJsonStringToObject(param0: string, param1: java.lang.Class): any;
							public static deserializeQueryStringToMap(param0: string): java.util.Map<string, string>;
							public static serializeExposedFieldsOfObjectToJsonString(param0: any): string;
							public static serializeObjectToFormUrlEncoded(param0: any): string;
							public static serializeObjectHashMap(param0: any): java.util.Map<string, any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class RetryFailedException {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.RetryFailedException>;
							public constructor(param0: java.lang.Exception);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class RetryPolicy<T> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.RetryPolicy<any>>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.net.RetryPolicy<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { attempt(param0: java.util.concurrent.Callable<T>): T });
							public constructor();
							public attempt(param0: java.util.concurrent.Callable<T>): T;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class StatusCodeAndExceptionRetry extends com.microsoft.identity.common.internal.net.RetryPolicy<com.microsoft.identity.common.internal.net.HttpResponse> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry>;
							public attempt(param0: java.util.concurrent.Callable<any>): any;
							public constructor(param0: androidx.arch.core.util.Function<java.lang.Exception, java.lang.Boolean>, param1: androidx.arch.core.util.Function<com.microsoft.identity.common.internal.net.HttpResponse, java.lang.Boolean>, param2: androidx.arch.core.util.Function<com.microsoft.identity.common.internal.net.HttpResponse, java.lang.Boolean>, param3: number, param4: number, param5: number);
							public static builder(): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
							public attempt(param0: java.util.concurrent.Callable<com.microsoft.identity.common.internal.net.HttpResponse>): com.microsoft.identity.common.internal.net.HttpResponse;
						}
						export module StatusCodeAndExceptionRetry {
							export class StatusCodeAndExceptionRetryBuilder {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder>;
								public toString(): string;
								public extensionFactor(param0: number): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
								public number(param0: number): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
								public initialDelay(param0: number): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
								public isAcceptable(param0: androidx.arch.core.util.Function<com.microsoft.identity.common.internal.net.HttpResponse, java.lang.Boolean>): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
								public isRetryableException(param0: androidx.arch.core.util.Function<java.lang.Exception, java.lang.Boolean>): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
								public isRetryable(param0: androidx.arch.core.util.Function<com.microsoft.identity.common.internal.net.HttpResponse, java.lang.Boolean>): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry.StatusCodeAndExceptionRetryBuilder;
								public build(): com.microsoft.identity.common.internal.net.StatusCodeAndExceptionRetry;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export class UrlConnectionHttpClient extends com.microsoft.identity.common.internal.net.HttpClient {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.net.UrlConnectionHttpClient>;
							public delete(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public put(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public constructor(param0: com.microsoft.identity.common.internal.net.RetryPolicy<com.microsoft.identity.common.internal.net.HttpResponse>, param1: number, param2: number, param3: com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier<java.lang.Integer>, param4: com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier<java.lang.Integer>, param5: number);
							public method(param0: string, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public static builder(): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
							public options(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public method(param0: com.microsoft.identity.common.internal.net.HttpClient.HttpMethod, param1: java.net.URL, param2: java.util.Map<string, string>, param3: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public get(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public head(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public trace(param0: java.net.URL, param1: java.util.Map<string, string>): com.microsoft.identity.common.internal.net.HttpResponse;
							public static supplierOf(param0: any): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier<any>;
							public static getDefaultInstance(): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient;
							public patch(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
							public post(param0: java.net.URL, param1: java.util.Map<string, string>, param2: native.Array<number>): com.microsoft.identity.common.internal.net.HttpResponse;
						}
						export module UrlConnectionHttpClient {
							export class Supplier<T> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier<any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.net.UrlConnectionHttpClient$Supplier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { get(): T });
								public constructor();
								public get(): T;
							}
							export class UrlConnectionHttpClientBuilder {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder>;
								public readTimeoutMs(param0: number): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
								public toString(): string;
								public build(): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient;
								public retryPolicy(param0: com.microsoft.identity.common.internal.net.RetryPolicy<com.microsoft.identity.common.internal.net.HttpResponse>): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
								public connectTimeoutMsSupplier(param0: com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier<java.lang.Integer>): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
								public streamBufferSize(param0: number): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
								public connectTimeoutMs(param0: number): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
								public readTimeoutMsSupplier(param0: com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier<java.lang.Integer>): com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.UrlConnectionHttpClientBuilder;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module net {
						export module cache {
							export class HttpCache {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.net.cache.HttpCache>;
								public static DEFAULT_HTTP_CACHE_NAME: string;
								public static DEFAULT_HTTP_CACHE_CAPACITY_BYTES: number;
								public static initialize(param0: java.io.File): boolean;
								public static flush(): void;
								public constructor();
								public static getInstalled(): globalAndroid.net.http.HttpResponseCache;
								public static initialize(param0: java.io.File, param1: string, param2: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module platform {
						export class Device {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.Device>;
							public static getPlatformIdParameters(): java.util.Map<string, string>;
							public static getApiLevel(): number;
							public static getDevicePoPManagerInstance(): com.microsoft.identity.common.internal.platform.IDevicePopManager;
							public static getManufacturer(): string;
							public static getModel(): string;
						}
						export module Device {
							export class PlatformIdParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.Device.PlatformIdParameters>;
								public static PRODUCT: string;
								public static PRODUCT_NAME: string;
								public static PRODUCT_VERSION: string;
								public static VERSION: string;
								public static CPU_PLATFORM: string;
								public static OS: string;
								public static DEVICE_MODEL: string;
								public static BROKER_VERSION: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module platform {
						export class DevicePopManager extends com.microsoft.identity.common.internal.platform.IDevicePopManager {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.DevicePopManager>;
							public mintSignedAccessToken(param0: string, param1: number, param2: java.net.URL, param3: string, param4: string): string;
							public generateAsymmetricKey(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<string, com.microsoft.identity.common.exception.ClientException>): void;
							public asymmetricKeyExists(param0: string): boolean;
							public getRequestConfirmation(param0: com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<string, com.microsoft.identity.common.exception.ClientException>): void;
							public getAsymmetricKeyThumbprint(): string;
							public getRequestConfirmation(): string;
							public asymmetricKeyExists(): boolean;
							public generateAsymmetricKey(param0: globalAndroid.content.Context): string;
							public clearAsymmetricKey(): boolean;
						}
						export module DevicePopManager {
							export class CertificateProperties {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.DevicePopManager.CertificateProperties>;
							}
							export class KeyPairGeneratorAlgorithms {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.DevicePopManager.KeyPairGeneratorAlgorithms>;
							}
							export class SignedHttpRequestJwtClaims {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.DevicePopManager.SignedHttpRequestJwtClaims>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module platform {
						export class IDevicePopManager {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.platform.IDevicePopManager>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.platform.IDevicePopManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								asymmetricKeyExists(): boolean;
								asymmetricKeyExists(param0: string): boolean;
								getAsymmetricKeyThumbprint(): string;
								generateAsymmetricKey(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<string, com.microsoft.identity.common.exception.ClientException>): void;
								generateAsymmetricKey(param0: globalAndroid.content.Context): string;
								clearAsymmetricKey(): boolean;
								getRequestConfirmation(): string;
								getRequestConfirmation(param0: com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<string, com.microsoft.identity.common.exception.ClientException>): void;
								mintSignedAccessToken(param0: string, param1: number, param2: java.net.URL, param3: string, param4: string): string;
							});
							public constructor();
							public mintSignedAccessToken(param0: string, param1: number, param2: java.net.URL, param3: string, param4: string): string;
							public generateAsymmetricKey(param0: globalAndroid.content.Context, param1: com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<string, com.microsoft.identity.common.exception.ClientException>): void;
							public asymmetricKeyExists(param0: string): boolean;
							public getRequestConfirmation(param0: com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<string, com.microsoft.identity.common.exception.ClientException>): void;
							public getAsymmetricKeyThumbprint(): string;
							public getRequestConfirmation(): string;
							public asymmetricKeyExists(): boolean;
							public generateAsymmetricKey(param0: globalAndroid.content.Context): string;
							public clearAsymmetricKey(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export abstract class IdentityProvider<T, U> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.IdentityProvider<any, any>>;
							public constructor();
							public createOAuth2Strategy(param0: U): T;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module keys {
							export class CertificateCredential {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.keys.CertificateCredential>;
								public getPrivateKey(): java.security.PrivateKey;
								public getPublicCertificate(): java.security.cert.X509Certificate;
								public getClientId(): string;
							}
							export module CertificateCredential {
								export class CertificateCredentialBuilder {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.keys.CertificateCredential.CertificateCredentialBuilder>;
									public constructor(param0: string);
									public privateKey(param0: java.security.PrivateKey): com.microsoft.identity.common.internal.providers.keys.CertificateCredential.CertificateCredentialBuilder;
									public clientCertificateMetadata(param0: com.microsoft.identity.common.internal.providers.keys.ClientCertificateMetadata): com.microsoft.identity.common.internal.providers.keys.CertificateCredential.CertificateCredentialBuilder;
									public keyStoreConfiguration(param0: com.microsoft.identity.common.internal.providers.keys.KeyStoreConfiguration): com.microsoft.identity.common.internal.providers.keys.CertificateCredential.CertificateCredentialBuilder;
									public build(): com.microsoft.identity.common.internal.providers.keys.CertificateCredential;
									public certificate(param0: java.security.cert.X509Certificate): com.microsoft.identity.common.internal.providers.keys.CertificateCredential.CertificateCredentialBuilder;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module keys {
							export class ClientCertificateMetadata {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.keys.ClientCertificateMetadata>;
								public getPassword(): native.Array<string>;
								public getAlias(): string;
								public constructor(param0: string, param1: native.Array<string>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module keys {
							export class KeyStoreConfiguration {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.keys.KeyStoreConfiguration>;
								public getKeyStoreType(): string;
								public getKeyStoreProvider(): string;
								public getKeyStorePassword(): native.Array<string>;
								public constructor(param0: string, param1: string, param2: native.Array<string>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export abstract class MicrosoftAccount extends com.microsoft.identity.common.BaseAccount {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount>;
								public static AUTHORITY_TYPE_V1_V2: string;
								public getUid(): string;
								public toString(): string;
								public getRealm(): string;
								public getFirstName(): string;
								public getDisplayableId(param0: java.util.Map<string, any>): string;
								public getUniqueIdentifier(): string;
								public getEnvironment(): string;
								public getClientInfo(): string;
								public getPasswordChangeUrl(): globalAndroid.net.Uri;
								public getLocalAccountId(): string;
								public getAlternativeAccountId(): string;
								public setUid(param0: string): void;
								public getAvatarUrl(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.IDToken, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo);
								public getUserId(): string;
								public getName(): string;
								public getFamilyName(): string;
								public constructor();
								public getIDToken(): com.microsoft.identity.common.internal.providers.oauth2.IDToken;
								public setEnvironment(param0: string): void;
								public getDisplayableId(): string;
								public setName(param0: string): void;
								public getCacheIdentifiers(): java.util.List<string>;
								public setDisplayableId(param0: string): void;
								public setUtid(param0: string): void;
								public getMiddleName(): string;
								public getAuthorityType(): string;
								public setFamilyName(param0: string): void;
								public getPasswordExpiresOn(): java.util.Date;
								public getUsername(): string;
								public getUtid(): string;
								public setFirstName(param0: string): void;
								public getHomeAccountId(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftAuthorizationErrorResponse extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationErrorResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationErrorResponse>;
								public static AUTHORIZATION_FAILED: string;
								public static USER_CANCEL: string;
								public static SDK_AUTH_CANCEL: string;
								public static NULL_INTENT: string;
								public static AUTHORIZATION_SERVER_INVALID_RESPONSE: string;
								public static USER_CANCELLED_FLOW: string;
								public static SDK_CANCELLED_FLOW: string;
								public static STATE_NOT_THE_SAME: string;
								public static STATE_NOT_RETURNED: string;
								public static UNKNOWN_ERROR: string;
								public static UNKNOWN_RESULT_CODE: string;
								public static BROKER_NEEDS_TO_BE_INSTALLED: string;
								public static BROKER_NEEDS_TO_BE_INSTALLED_ERROR_DESCRIPTION: string;
								public static DEVICE_REGISTRATION_NEEDED: string;
								public static DEVICE_REGISTRATION_NEEDED_ERROR_DESCRIPTION: string;
								public static DEVICE_NEEDS_TO_BE_MANAGED: string;
								public static DEVICE_NEEDS_TO_BE_MANAGED_ERROR_DESCRIPTION: string;
								public constructor(param0: string, param1: string);
								public getUserName(): string;
								public setUserName(param0: string): void;
								public getErrorDescription(): string;
								public getError(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export abstract class MicrosoftAuthorizationRequest<T> extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest<any>>;
								public static INSTANCE_AWARE: string;
								public mSlice: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice;
								public mFlightParameters: java.util.Map<string, string>;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>);
								public getCorrelationId(): java.util.UUID;
								public getAuthority(): java.net.URL;
								public getLoginHint(): string;
								public getMultipleCloudAware(): java.lang.Boolean;
								public getLibraryVersion(): string;
								public getCodeChallenge(): string;
								public getPkceChallenge(): com.microsoft.identity.common.internal.providers.oauth2.PkceChallenge;
								public getDiagnosticCPU(): string;
								public getDiagnosticOS(): string;
								public getDiagnosticDM(): string;
								public getCodeChallengeMethod(): string;
								public static decodeState(param0: string): string;
								public static generateEncodedState(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<any>);
								public getLibraryName(): string;
							}
							export module MicrosoftAuthorizationRequest {
								export abstract class Builder<B> extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<any>>;
									public constructor();
									public setPkceChallenge(param0: com.microsoft.identity.common.internal.providers.oauth2.PkceChallenge): any;
									public setLibraryName(param0: string): any;
									public setMultipleCloudAware(param0: boolean): any;
									public setLibraryVersion(param0: string): any;
									public self(): any;
									public setFlightParameters(param0: java.util.Map<string, string>): any;
									public setAuthority(param0: java.net.URL): any;
									public setSlice(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftAuthorizationResponse extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResponse>;
								public static CLOUD_INSTANCE_NAME: string;
								public static CLOUD_INSTANCE_HOST_NAME: string;
								public static CLOUD_GRAPH_HOST_NAME: string;
								public static SESSION_STATE: string;
								public mCorrelationId: string;
								public mCloudInstanceName: string;
								public mCloudInstanceHostName: string;
								public mCloudGraphHostName: string;
								public mSessionState: string;
								public setCorrelationId(param0: string): void;
								public getCloudGraphHostName(): string;
								public constructor(param0: string, param1: string);
								public getCloudInstanceHostName(): string;
								public getCloudInstanceName(): string;
								public getSessionState(): string;
								public constructor(param0: string);
								public getCorrelationId(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export abstract class MicrosoftAuthorizationResult<GenericMicrosoftAuthorizationResponse, GenericMicrosoftAuthorizationErrorResponse> extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResult<any, any>>;
								public static REQUEST_STATE_PARAMETER: string;
								public constructor(param0: any, param1: any);
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: any);
								public getSuccess(): boolean;
								public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse;
								public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse;
								public constructor();
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftClientAssertion extends com.microsoft.identity.common.internal.providers.oauth2.ClientAssertion {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftClientAssertion>;
								public constructor();
								public constructor(param0: string, param1: com.microsoft.identity.common.internal.providers.keys.CertificateCredential);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftIdToken extends com.microsoft.identity.common.internal.providers.oauth2.IDToken {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftIdToken>;
								public static AUDIENCE: string;
								public static ISSUER: string;
								public static ISSUED_AT: string;
								public static NOT_BEFORE: string;
								public static OBJECT_ID: string;
								public static TENANT_ID: string;
								public static VERSION: string;
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftRefreshToken extends com.microsoft.identity.common.internal.providers.oauth2.RefreshToken {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken>;
								public constructor(param0: string, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo, param2: string, param3: string, param4: string, param5: string);
								public getIsFamilyRefreshToken(): boolean;
								public getClientInfo(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo;
								public getClientId(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse);
								public getEnvironment(): string;
								public setEnvironment(param0: string): void;
								public getTarget(): string;
								public getSecret(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
								public constructor(param0: string);
								public getFamilyId(): string;
								public getHomeAccountId(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftTokenErrorResponse extends com.microsoft.identity.common.internal.providers.oauth2.TokenErrorResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenErrorResponse>;
								public getTraceId(): string;
								public getOAuthErrorMetadata(): string;
								public setErrorCodes(param0: java.util.List<java.lang.Long>): void;
								public constructor();
								public getTimeStamp(): string;
								public setTraceId(param0: string): void;
								public getError(): string;
								public setTimeStamp(param0: string): void;
								public getErrorCodes(): java.util.List<java.lang.Long>;
								public setCorrelationId(param0: string): void;
								public setOAuthErrorMetadata(param0: string): void;
								public getErrorDescription(): string;
								public getCorrelationId(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftTokenRequest extends com.microsoft.identity.common.internal.providers.oauth2.TokenRequest {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenRequest>;
								public static CODE_VERIFIER: string;
								public static CLIENT_INFO: string;
								public static CORRELATION_ID: string;
								public static ID_TOKEN_VERSION: string;
								public static MAM_VERSION: string;
								public static CLAIMS: string;
								public static INSTANCE_AWARE: string;
								public static CLIENT_APP_NAME: string;
								public static CLIENT_APP_VERSION: string;
								public setCodeVerifier(param0: string): void;
								public getClientAppName(): string;
								public setMamversion(param0: string): void;
								public setClientAppName(param0: string): void;
								public getCorrelationId(): java.util.UUID;
								public getClaims(): string;
								public getTokenScope(): string;
								public getClientAppVersion(): string;
								public setInstanceAware(param0: string): void;
								public setCorrelationId(param0: java.util.UUID): void;
								public constructor();
								public setTokenScope(param0: string): void;
								public getCodeVerifier(): string;
								public setBrokerVersion(param0: string): void;
								public getBrokerVersion(): string;
								public getClientInfoEnabled(): string;
								public setIdTokenVersion(param0: string): void;
								public getMamVersion(): string;
								public getIdTokenVersion(): string;
								public setClientAppVersion(param0: string): void;
								public setClaims(param0: string): void;
								public getInstanceAware(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export class MicrosoftTokenResponse extends com.microsoft.identity.common.internal.providers.oauth2.TokenResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse>;
								public setCliTelemSubErrorCode(param0: string): void;
								public getExtExpiresOn(): java.util.Date;
								public toString(): string;
								public getRefreshTokenAge(): string;
								public setFamilyId(param0: string): void;
								public getAuthority(): string;
								public getSpeRing(): string;
								public setAuthority(param0: string): void;
								public setExtExpiresOn(param0: java.util.Date): void;
								public setSpeRing(param0: string): void;
								public constructor();
								public getClientId(): string;
								public setClientId(param0: string): void;
								public getClientInfo(): string;
								public setCloudInstanceHostName(param0: string): void;
								public setRefreshTokenAge(param0: string): void;
								public getCloudInstanceHostName(): string;
								public setClientInfo(param0: string): void;
								public setExtExpiresIn(param0: java.lang.Long): void;
								public getFamilyId(): string;
								public setCliTelemErrorCode(param0: string): void;
								public getCliTelemErrorCode(): string;
								public getCliTelemSubErrorCode(): string;
								public getExtExpiresIn(): java.lang.Long;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServices2012R2 extends com.microsoft.identity.common.internal.providers.IdentityProvider<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2012R2OAuth2Strategy, com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2012R2>;
									public constructor();
									public createOAuth2Strategy(param0: any): any;
									public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration): com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2012R2OAuth2Strategy;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServices2012R2Account extends com.microsoft.identity.common.BaseAccount {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2012R2Account>;
									public constructor();
									public getRealm(): string;
									public getAuthorityType(): string;
									public getFirstName(): string;
									public getFamilyName(): string;
									public getAlternativeAccountId(): string;
									public getCacheIdentifiers(): java.util.List<string>;
									public getName(): string;
									public getAvatarUrl(): string;
									public getMiddleName(): string;
									public getHomeAccountId(): string;
									public getClientInfo(): string;
									public getUniqueIdentifier(): string;
									public getEnvironment(): string;
									public getUsername(): string;
									public getLocalAccountId(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServices2012R2OAuth2Strategy extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2012R2OAuth2Strategy>;
									public validateTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenRequest): void;
									public createAuthorizationRequestBuilder(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters);
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
									public constructor(param0: any, param1: any);
									public createAccount(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.BaseAccount;
									public getRefreshTokenFromResponse(param0: any): any;
									public createAuthorizationRequestBuilder(): any;
									public requestAuthorization(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any>): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public createAccount(param0: any): any;
									public getAuthorizationResultFactory(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>;
									public validateTokenResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenRequest, param1: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): void;
									public createTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.oauth2.TokenRequest;
									public getRefreshTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.internal.providers.oauth2.RefreshToken;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.oauth2.TokenRequest;
									public getIssuerCacheIdentifier(param0: any): string;
									public createTokenRequest(param0: any, param1: any, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public getAccessTokenFromResponse(param0: any): any;
									public requestAuthorization(param0: any, param1: any): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
									public getIssuerCacheIdentifier(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>): string;
									public validateTokenResponse(param0: any, param1: any): void;
									public validateTokenRequest(param0: any): void;
									public validateAuthorizationRequest(param0: any): void;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): any;
									public validateAuthorizationRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>): void;
									public getAccessTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.internal.providers.oauth2.AccessToken;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServices2016 extends com.microsoft.identity.common.internal.providers.IdentityProvider<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2016OAuth2Strategy, com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2016>;
									public constructor();
									public createOAuth2Strategy(param0: any): any;
									public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration): com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2016OAuth2Strategy;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServices2016Account extends com.microsoft.identity.common.BaseAccount {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2016Account>;
									public constructor();
									public getRealm(): string;
									public getAuthorityType(): string;
									public getFirstName(): string;
									public getFamilyName(): string;
									public getAlternativeAccountId(): string;
									public getCacheIdentifiers(): java.util.List<string>;
									public getName(): string;
									public getAvatarUrl(): string;
									public getMiddleName(): string;
									public getHomeAccountId(): string;
									public getClientInfo(): string;
									public getUniqueIdentifier(): string;
									public getEnvironment(): string;
									public getUsername(): string;
									public getLocalAccountId(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServices2016OAuth2Strategy extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServices2016OAuth2Strategy>;
									public validateTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenRequest): void;
									public createAuthorizationRequestBuilder(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters);
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
									public constructor(param0: any, param1: any);
									public createAccount(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.BaseAccount;
									public getRefreshTokenFromResponse(param0: any): any;
									public createAuthorizationRequestBuilder(): any;
									public requestAuthorization(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any>): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public createAccount(param0: any): any;
									public getAuthorizationResultFactory(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>;
									public validateTokenResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenRequest, param1: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): void;
									public createTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.oauth2.TokenRequest;
									public getRefreshTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.internal.providers.oauth2.RefreshToken;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.oauth2.TokenRequest;
									public getIssuerCacheIdentifier(param0: any): string;
									public createTokenRequest(param0: any, param1: any, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public getAccessTokenFromResponse(param0: any): any;
									public requestAuthorization(param0: any, param1: any): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
									public getIssuerCacheIdentifier(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>): string;
									public validateTokenResponse(param0: any, param1: any): void;
									public validateTokenRequest(param0: any): void;
									public validateAuthorizationRequest(param0: any): void;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): any;
									public validateAuthorizationRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>): void;
									public getAccessTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.internal.providers.oauth2.AccessToken;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServicesAuthorizationRequest extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesAuthorizationRequest> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesAuthorizationRequest>;
									public getAuthorizationEndpoint(): string;
								}
								export module ActiveDirectoryFederationServicesAuthorizationRequest {
									export class Builder extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesAuthorizationRequest.Builder> {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesAuthorizationRequest.Builder>;
										public build(): com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesAuthorizationRequest;
										public constructor();
										public build(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>;
										public self(): any;
										public self(): com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesAuthorizationRequest.Builder;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServicesIdToken extends com.microsoft.identity.common.internal.providers.oauth2.IDToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesIdToken>;
									public constructor(param0: string);
									public getTokenClaims(): java.util.Map<string, any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module activedirectoryfederationservices {
								export class ActiveDirectoryFederationServicesTokenResponse extends com.microsoft.identity.common.internal.providers.oauth2.TokenResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.activedirectoryfederationservices.ActiveDirectoryFederationServicesTokenResponse>;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectory extends com.microsoft.identity.common.internal.providers.IdentityProvider<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Strategy, com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Configuration> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectory>;
									public constructor();
									public static isInitialized(): boolean;
									public static initializeCloudMetadata(param0: string, param1: java.util.Map<string, string>): void;
									public createOAuth2Strategy(param0: any): any;
									public static getDefaultCloudUrl(): string;
									public static getHosts(): java.util.Set<string>;
									public static performCloudDiscovery(): void;
									public static hasCloudHost(param0: java.net.URL): boolean;
									public static getAzureActiveDirectoryCloudFromHostName(param0: string): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud;
									public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Configuration): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Strategy;
									public static getEnvironment(): com.microsoft.identity.common.internal.authorities.Environment;
									public static setEnvironment(param0: com.microsoft.identity.common.internal.authorities.Environment): void;
									public static putCloud(param0: string, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud): void;
									public static getAzureActiveDirectoryCloud(param0: java.net.URL): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud;
									public static getClouds(): java.util.List<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAccessToken extends com.microsoft.identity.common.internal.providers.oauth2.AccessToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccessToken>;
									public getExtendedExpiresOn(): java.util.Date;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse);
									public getExpiresOn(): java.util.Date;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAccount extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccount>;
									public constructor();
									public getRealm(): string;
									public getAuthorityType(): string;
									public getFirstName(): string;
									public getFamilyName(): string;
									public getIdentityProvider(): string;
									public getAlternativeAccountId(): string;
									public toString(): string;
									public setIdentityProvider(param0: string): void;
									public getName(): string;
									public getAvatarUrl(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.IDToken, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo);
									public getMiddleName(): string;
									public getHomeAccountId(): string;
									public getClientInfo(): string;
									public getDisplayableId(param0: java.util.Map<string, any>): string;
									public getDisplayableId(): string;
									public getEnvironment(): string;
									public getUsername(): string;
									public getLocalAccountId(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAuthorizationErrorResponse extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationErrorResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationErrorResponse>;
									public constructor(param0: string, param1: string);
									public getError(): string;
									public getErrorDescription(): string;
									public getErrorCodes(): string;
									public setErrorCodes(param0: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAuthorizationRequest extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest<any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest>;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<any>);
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>);
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder);
									public getPrompt(): string;
									public getClaimsChallenge(): string;
									public getAuthorizationEndpoint(): string;
									public getResource(): string;
								}
								export module AzureActiveDirectoryAuthorizationRequest {
									export class Builder extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder> {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder>;
										public setResource(param0: string): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder;
										public setClaimsChallenge(param0: string): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder;
										public build(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest;
										public setPrompt(param0: string): any;
										public setPrompt(param0: string): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder;
										public self(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder;
										public constructor();
										public build(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>;
										public self(): any;
									}
									export class Prompt {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Prompt>;
										public static AUTO: string;
										public static ALWAYS: string;
										public static REFRESH_SESSION: string;
										public static FORCE_PROMPT: string;
										public static SELECT_ACCOUNT: string;
										public static CONSENT: string;
										public static ADMIN_CONSENT: string;
										public constructor();
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAuthorizationResponse extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResponse>;
									public constructor(param0: string, param1: string);
									public constructor(param0: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAuthorizationResult extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResult<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResponse, com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationErrorResponse> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResult>;
									public constructor();
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResponse);
									public getSuccess(): boolean;
									public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus);
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationErrorResponse);
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: any);
									public constructor(param0: any, param1: any);
									public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryAuthorizationResultFactory extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResult, com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResultFactory>;
									public constructor();
									public createAuthorizationResult(param0: number, param1: globalAndroid.content.Intent, param2: any): any;
									public createAuthorizationResult(param0: number, param1: globalAndroid.content.Intent, param2: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResult;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryCloud {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud>;
									public constructor(param0: string, param1: string, param2: java.util.List<string>);
									public getPreferredNetworkHostName(): string;
									public constructor(param0: boolean);
									public getPreferredCacheHostName(): string;
									public getHostAliases(): java.util.List<string>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryEnvironment {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryEnvironment>;
									public static PRODUCTION_CLOUD_URL: string;
									public static PREPRODUCTION_CLOUD_URL: string;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryIdToken extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftIdToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryIdToken>;
									public static UPN: string;
									public static UNIQUE_NAME: string;
									public static PASSWORD_EXPIRATION: string;
									public static PASSWORD_CHANGE_URL: string;
									public static IDENTITY_PROVIDER: string;
									public constructor(param0: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryInstanceResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryInstanceResponse>;
									public constructor();
									public getClouds(): java.util.ArrayList<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud>;
									public setClouds(param0: java.util.ArrayList<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryCloud>): void;
									public setApiVersion(param0: string): void;
									public getTestDiscoveryEndpoint(): string;
									public setTestDiscoveryEndpoint(param0: string): void;
									public getApiVersion(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryOAuth2Configuration extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Configuration>;
									public setAuthorityHostValidationEnabled(param0: boolean): void;
									public constructor();
									public getFlightParameters(): java.util.Map<string, string>;
									public getSlice(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice;
									public setMultipleCloudsSupported(param0: boolean): void;
									public getMultipleCloudsSupported(): boolean;
									public setAuthorityUrl(param0: java.net.URL): void;
									public isAuthorityHostValidationEnabled(): boolean;
									public getAuthorityUrl(): java.net.URL;
									public setFlightParameters(param0: java.util.Map<string, string>): void;
									public setSlice(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryOAuth2Strategy extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccessToken,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccount,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder,
									com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any>,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Configuration,
									com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResponse,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryRefreshToken,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenRequest,
									com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse,
									com.microsoft.identity.common.internal.providers.oauth2.TokenResult,
									com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>
								> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Strategy>;
									public validateAuthorizationRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest): void;
									public getIssuerCacheIdentifier(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest): string;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Configuration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters);
									public constructor(param0: any, param1: any);
									public getRefreshTokenFromResponse(param0: any): any;
									public createAuthorizationRequestBuilder(): any;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenRequest;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder;
									public getRefreshTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryRefreshToken;
									public validateTokenRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenRequest): void;
									public createAccount(param0: any): any;
									public getAccessTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccessToken;
									public getAuthorizationResultFactory(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>;
									public getIssuerCacheIdentifier(param0: any): string;
									public createAccount(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAccount;
									public createAuthorizationRequestBuilder(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest.Builder;
									public createTokenRequest(param0: any, param1: any, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public getAccessTokenFromResponse(param0: any): any;
									public createTokenRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationRequest, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryAuthorizationResponse, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenRequest;
									public validateTokenResponse(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenRequest, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse): void;
									public validateTokenResponse(param0: any, param1: any): void;
									public validateTokenRequest(param0: any): void;
									public validateAuthorizationRequest(param0: any): void;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): any;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryPromptBehavior {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior>;
									public static AUTO: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior;
									public static ALWAYS: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior;
									public static REFRESH_SESSION: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior;
									public static FORCE_PROMPT: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior;
									public static valueOf(param0: string): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior;
									public static values(): native.Array<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryPromptBehavior>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryRefreshToken extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryRefreshToken>;
									public constructor(param0: string);
									public getHomeAccountId(): string;
									public constructor(param0: string, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo, param2: string, param3: string, param4: string, param5: string);
									public getSecret(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse);
									public getEnvironment(): string;
									public getClientId(): string;
									public getFamilyId(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse);
									public getTarget(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectorySlice {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectorySlice>;
									public static SLICE_PARAMETER: string;
									public static DC_PARAMETER: string;
									public constructor();
									public setDataCenter(param0: string): void;
									public setSlice(param0: string): void;
									public getSlice(): string;
									public getDC(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryTokenRequest extends com.microsoft.identity.common.internal.providers.oauth2.TokenRequest {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenRequest>;
									public constructor();
									public setResourceId(param0: string): void;
									public getResourceId(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class AzureActiveDirectoryTokenResponse extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryTokenResponse>;
									public constructor();
									public setNotBefore(param0: string): void;
									public setResource(param0: string): void;
									public getSpeRing(): string;
									public getExpiresOn(): java.util.Date;
									public toString(): string;
									public setExpiresOn(param0: java.util.Date): void;
									public setSpeRing(param0: string): void;
									public getNotBefore(): string;
									public getResource(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectory {
								export class ClientInfo {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo>;
									public constructor(param0: string);
									public getRawClientInfo(): string;
									public getUid(): string;
									public getUtid(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectoryb2c {
								export class AzureActiveDirectoryB2C extends com.microsoft.identity.common.internal.providers.IdentityProvider<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2COAuth2Strategy, com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2C>;
									public constructor();
									public createOAuth2Strategy(param0: any): any;
									public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2COAuth2Strategy;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectoryb2c {
								export class AzureActiveDirectoryB2CAccount extends com.microsoft.identity.common.BaseAccount {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAccount>;
									public constructor();
									public getRealm(): string;
									public getAuthorityType(): string;
									public getFirstName(): string;
									public getFamilyName(): string;
									public getAlternativeAccountId(): string;
									public getCacheIdentifiers(): java.util.List<string>;
									public getName(): string;
									public getAvatarUrl(): string;
									public getMiddleName(): string;
									public getHomeAccountId(): string;
									public getClientInfo(): string;
									public getUniqueIdentifier(): string;
									public getEnvironment(): string;
									public getUsername(): string;
									public getLocalAccountId(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectoryb2c {
								export class AzureActiveDirectoryB2CAuthorizationRequest extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest>;
									public getPrompt(): string;
									public getAuthorizationEndpoint(): string;
								}
								export module AzureActiveDirectoryB2CAuthorizationRequest {
									export class Builder extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest.Builder> {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest.Builder>;
										public setPrompt(param0: string): any;
										public setPrompt(param0: string): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest.Builder;
										public self(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest.Builder;
										public constructor();
										public build(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>;
										public self(): any;
										public build(): com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CAuthorizationRequest;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectoryb2c {
								export class AzureActiveDirectoryB2CIdToken extends com.microsoft.identity.common.internal.providers.oauth2.IDToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CIdToken>;
									public constructor(param0: string);
									public getTokenClaims(): java.util.Map<string, any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectoryb2c {
								export class AzureActiveDirectoryB2COAuth2Strategy extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2COAuth2Strategy>;
									public validateTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenRequest): void;
									public createAuthorizationRequestBuilder(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters);
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
									public constructor(param0: any, param1: any);
									public createAccount(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.BaseAccount;
									public getRefreshTokenFromResponse(param0: any): any;
									public createAuthorizationRequestBuilder(): any;
									public requestAuthorization(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any>): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public createAccount(param0: any): any;
									public getAuthorizationResultFactory(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>;
									public validateTokenResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenRequest, param1: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): void;
									public createTokenRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>, param1: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.oauth2.TokenRequest;
									public getRefreshTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.internal.providers.oauth2.RefreshToken;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.oauth2.TokenRequest;
									public getIssuerCacheIdentifier(param0: any): string;
									public createTokenRequest(param0: any, param1: any, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public getAccessTokenFromResponse(param0: any): any;
									public requestAuthorization(param0: any, param1: any): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
									public getIssuerCacheIdentifier(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>): string;
									public validateTokenResponse(param0: any, param1: any): void;
									public validateTokenRequest(param0: any): void;
									public validateAuthorizationRequest(param0: any): void;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): any;
									public validateAuthorizationRequest(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>): void;
									public getAccessTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse): com.microsoft.identity.common.internal.providers.oauth2.AccessToken;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module azureactivedirectoryb2c {
								export class AzureActiveDirectoryB2CTokenResponse extends com.microsoft.identity.common.internal.providers.oauth2.TokenResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectoryb2c.AzureActiveDirectoryB2CTokenResponse>;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftSts extends com.microsoft.identity.common.internal.providers.IdentityProvider<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftSts>;
									public constructor();
									public createOAuth2Strategy(param0: any): any;
									public createOAuth2Strategy(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAccessToken extends com.microsoft.identity.common.internal.providers.oauth2.AccessToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAccessToken>;
									public setExtExpiresIn(param0: java.lang.Long): void;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse);
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
									public getExtExpiresIn(): java.lang.Long;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAccount extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAccount {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAccount>;
									public constructor();
									public getRealm(): string;
									public getAuthorityType(): string;
									public getFirstName(): string;
									public getFamilyName(): string;
									public getAlternativeAccountId(): string;
									public getName(): string;
									public getAvatarUrl(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.IDToken, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo);
									public getMiddleName(): string;
									public getHomeAccountId(): string;
									public getClientInfo(): string;
									public getDisplayableId(param0: java.util.Map<string, any>): string;
									public getDisplayableId(): string;
									public getEnvironment(): string;
									public getUsername(): string;
									public getLocalAccountId(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAuthorizationErrorResponse extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationErrorResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationErrorResponse>;
									public constructor(param0: string, param1: string);
									public getError(): string;
									public getErrorSubcode(): string;
									public getErrorDescription(): string;
									public constructor(param0: string, param1: string, param2: string);
									public setErrorSubcode(param0: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAuthorizationRequest extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest>;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<any>);
									public getUid(): string;
									public getUtid(): string;
									public getAuthorizationRequestAsHttpRequest(): globalAndroid.net.Uri;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>);
									public getPrompt(): string;
									public getTokenScope(): string;
									public getAuthorizationEndpoint(): string;
									public getDisplayableId(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder);
								}
								export module MicrosoftStsAuthorizationRequest {
									export class Builder extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder> {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder>;
										public setDisplayableId(param0: string): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
										public build(): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest;
										public setUid(param0: string): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
										public self(): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
										public constructor();
										public setTokenScope(param0: string): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
										public build(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>;
										public self(): any;
										public setUtid(param0: string): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
									}
									export class Prompt {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Prompt>;
										public static SELECT_ACCOUNT: string;
										public static FORCE_LOGIN: string;
										public static CONSENT: string;
										public constructor();
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAuthorizationResponse extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResponse>;
									public constructor(param0: string, param1: string);
									public constructor(param0: string);
									public constructor(param0: string, param1: string, param2: java.util.HashMap<string, string>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAuthorizationResult extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResult<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResponse, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationErrorResponse> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResult>;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationErrorResponse);
									public constructor();
									public getSuccess(): boolean;
									public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus);
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: any);
									public constructor(param0: any, param1: any);
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResponse);
									public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsAuthorizationResultFactory extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResult, com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResultFactory>;
									public static ERROR_SUBCODE: string;
									public constructor();
									public createAuthorizationResult(param0: number, param1: globalAndroid.content.Intent, param2: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResult;
									public createAuthorizationResult(param0: number, param1: globalAndroid.content.Intent, param2: any): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsIdToken extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftIdToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsIdToken>;
									public static EXPIRATION_TIME: string;
									public static AIO: string;
									public static UTI: string;
									public constructor(param0: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsOAuth2Configuration extends com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.AzureActiveDirectoryOAuth2Configuration {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration>;
									public constructor();
									public getAuthorizationEndpoint(): java.net.URL;
									public getTokenEndpoint(): java.net.URL;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsOAuth2Strategy extends com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAccessToken,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAccount,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder,
									com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any>,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration,
									com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResponse,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsRefreshToken,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest,
									com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse,
									com.microsoft.identity.common.internal.providers.oauth2.TokenResult,
									com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>
								> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Strategy>;
									public getRefreshTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsRefreshToken;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
									public performTokenRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest): com.microsoft.identity.common.internal.net.HttpResponse;
									public validateTokenResponse(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): void;
									public constructor(param0: any, param1: any);
									public getRefreshTokenFromResponse(param0: any): any;
									public createAuthorizationRequestBuilder(): any;
									public validateTokenRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest): void;
									public getIssuerCacheIdentifierFromTokenEndpoint(): string;
									public createAuthorizationRequestBuilder(): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): any;
									public static authSchemeIsPoP(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): boolean;
									public createAccount(param0: any): any;
									public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest.Builder;
									public getAccessTokenFromResponse(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAccessToken;
									public getAuthorizationResultFactory(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>;
									public performTokenRequest(param0: any): com.microsoft.identity.common.internal.net.HttpResponse;
									public validateAuthorizationRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest): void;
									public getIssuerCacheIdentifier(param0: any): string;
									public createTokenRequest(param0: any, param1: any, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest;
									public getAccessTokenFromResponse(param0: any): any;
									public createAccount(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAccount;
									public validateTokenResponse(param0: any, param1: any): void;
									public getIssuerCacheIdentifier(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest): string;
									public validateTokenRequest(param0: any): void;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsOAuth2Configuration, param1: com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters);
									public getDeviceAtPopThumbprint(): string;
									public validateAuthorizationRequest(param0: any): void;
									public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): any;
									public createTokenRequest(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationRequest, param1: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsAuthorizationResponse, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest;
									public validateCachedResult(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme, param1: com.microsoft.identity.common.internal.cache.ICacheRecord): boolean;
									public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsPromptBehavior {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsPromptBehavior>;
									public static SELECT_ACCOUNT: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsPromptBehavior;
									public static FORCE_LOGIN: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsPromptBehavior;
									public static CONSENT: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsPromptBehavior;
									public static values(): native.Array<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsPromptBehavior>;
									public static valueOf(param0: string): com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsPromptBehavior;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsRefreshToken extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftRefreshToken {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsRefreshToken>;
									public constructor(param0: string);
									public getHomeAccountId(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse);
									public constructor(param0: string, param1: com.microsoft.identity.common.internal.providers.microsoft.azureactivedirectory.ClientInfo, param2: string, param3: string, param4: string, param5: string);
									public getSecret(): string;
									public getEnvironment(): string;
									public getClientId(): string;
									public getFamilyId(): string;
									public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
									public constructor(param0: com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse);
									public getTarget(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsTokenRequest extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenRequest {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenRequest>;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module microsoft {
							export module microsoftsts {
								export class MicrosoftStsTokenResponse extends com.microsoft.identity.common.internal.providers.microsoft.MicrosoftTokenResponse {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.microsoft.microsoftsts.MicrosoftStsTokenResponse>;
									public constructor();
									public getExpiresNotBefore(): string;
									public setExpiresNotBefore(param0: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class AccessToken {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AccessToken>;
								public getRawAccessToken(): string;
								public setRawAccessToken(param0: string): void;
								public getAccessToken(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
								public setTokenType(param0: string): void;
								public getExpiresIn(): number;
								public setExpiresIn(param0: number): void;
								public getTokenType(): string;
								public getTokenReceivedTime(): number;
								public isExpired(): boolean;
								public setTokenReceivedTime(param0: number): void;
								public getTokenExpiredBuffer(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class AuthorizationActivity extends com.microsoft.identity.common.internal.ui.DualScreenActivity {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity>;
								public static getAuthorizationFragmentFromStartIntent(param0: globalAndroid.content.Intent): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment;
								public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
								public validateRequestPermissionsRequestCode(param0: number): void;
								public constructor();
								public onCreate(param0: globalAndroid.os.Bundle): void;
								public static createStartIntent(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent, param2: string, param3: string, param4: java.util.HashMap<string, string>, param5: com.microsoft.identity.common.internal.ui.AuthorizationAgent, param6: boolean, param7: boolean): globalAndroid.content.Intent;
								public onBackPressed(): void;
								public getLifecycle(): androidx.lifecycle.Lifecycle;
								public getViewModelStore(): androidx.lifecycle.ViewModelStore;
								public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class AuthorizationErrorResponse extends com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationErrorResponse>;
								public constructor(param0: string, param1: string);
								public setError(param0: string): void;
								public getErrorDescription(): string;
								public getError(): string;
								public setErrorDescription(param0: string): void;
							}
							export module AuthorizationErrorResponse {
								export class Fields {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationErrorResponse.Fields>;
									public static ERROR: string;
									public static ERROR_DESCRIPTION: string;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class AuthorizationFragment extends androidx.fragment.app.Fragment {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment>;
								public constructor();
								public onCreate(param0: globalAndroid.os.Bundle): void;
								public onDestroy(): void;
								public onStop(): void;
								public getLifecycle(): androidx.lifecycle.Lifecycle;
								public getViewModelStore(): androidx.lifecycle.ViewModelStore;
								public onBackPressed(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class AuthorizationRequest<T> extends java.io.Serializable {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>>;
								public mState: string;
								public getAuthorizationRequestAsHttpRequest(): globalAndroid.net.Uri;
								public toString(): string;
								public getRedirectUri(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>);
								public getClaims(): string;
								public getState(): string;
								public isWebViewZoomEnabled(): boolean;
								public getClientId(): string;
								public getExtraQueryParams(): java.util.List<globalAndroid.util.Pair<string, string>>;
								public getRequestHeaders(): java.util.HashMap<string, string>;
								public getResponseType(): string;
								public getScope(): string;
								public getAuthorizationEndpoint(): string;
								public isWebViewZoomControlsEnabled(): boolean;
							}
							export module AuthorizationRequest {
								export abstract class Builder<B> extends java.lang.Object {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<any>>;
									public mLoginHint: string;
									public mCorrelationId: java.util.UUID;
									public mExtraQueryParams: java.util.List<globalAndroid.util.Pair<string, string>>;
									public mPrompt: string;
									public constructor();
									public setRedirectUri(param0: string): B;
									public setCorrelationId(param0: java.util.UUID): B;
									public setExtraQueryParams(param0: java.util.List<globalAndroid.util.Pair<string, string>>): B;
									public build(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest<any>;
									public setResponseType(param0: string): B;
									public setPrompt(param0: string): B;
									public setClaims(param0: string): B;
									public setState(param0: string): B;
									public self(): B;
									public setWebViewZoomControlsEnabled(param0: boolean): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<B>;
									public setClientId(param0: string): B;
									public setLoginHint(param0: string): B;
									public setScope(param0: string): B;
									public setWebViewZoomEnabled(param0: boolean): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder<B>;
									public setRequestHeaders(param0: java.util.HashMap<string, string>): B;
								}
								export class ResponseType {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.ResponseType>;
									public static CODE: string;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class AuthorizationResponse extends com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse>;
								public setState(param0: string): void;
								public getCode(): string;
								public constructor(param0: string, param1: string);
								public getState(): string;
								public constructor(param0: string);
								public setCode(param0: string): void;
							}
							export module AuthorizationResponse {
								export class Fields {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResponse.Fields>;
									public static CODE: string;
									public static STATE: string;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class AuthorizationResult<GenericAuthorizationResponse, GenericAuthorizationErrorResponse> extends com.microsoft.identity.common.internal.providers.oauth2.IResult {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
								public setAuthorizationResponse(param0: any): void;
								public constructor(param0: any, param1: any);
								public getSuccess(): boolean;
								public getAuthorizationResponse(): any;
								public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse;
								public getAuthorizationErrorResponse(): any;
								public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse;
								public constructor();
								public setAuthorizationErrorResponse(param0: any): void;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus);
								public setAuthorizationStatus(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus): void;
								public getAuthorizationStatus(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class AuthorizationResultFactory<GenericAuthorizationResult, GenericAuthorizationRequest> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>>;
								public static CODE: string;
								public static STATE: string;
								public static ERROR: string;
								public static ERROR_SUBCODE: string;
								public static ERROR_CODE: string;
								public static ERROR_DESCRIPTION: string;
								public constructor();
								public createAuthorizationResult(param0: number, param1: globalAndroid.content.Intent, param2: GenericAuthorizationRequest): GenericAuthorizationResult;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class AuthorizationStatus {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus>;
								public static SUCCESS: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
								public static USER_CANCEL: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
								public static SDK_CANCEL: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
								public static FAIL: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
								public static INVALID_REQUEST: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
								public static valueOf(param0: string): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus;
								public static values(): native.Array<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStatus>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class AuthorizationStrategy<GenericOAuth2Strategy, GenericAuthorizationRequest> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any>>;
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.Activity, param2: androidx.fragment.app.Fragment);
								public launchIntent(param0: globalAndroid.content.Intent): void;
								public requestAuthorization(param0: GenericAuthorizationRequest, param1: GenericOAuth2Strategy): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
								public completeAuthorization(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
								public getApplicationContext(): globalAndroid.content.Context;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class BrowserAuthorizationFragment extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.BrowserAuthorizationFragment>;
								public static createCustomTabResponseIntent(param0: globalAndroid.content.Context, param1: string): globalAndroid.content.Intent;
								public onResume(): void;
								public constructor();
								public onCreate(param0: globalAndroid.os.Bundle): void;
								public getLifecycle(): androidx.lifecycle.Lifecycle;
								public getViewModelStore(): androidx.lifecycle.ViewModelStore;
								public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class ClientAssertion {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.ClientAssertion>;
								public getClientAssertionType(): string;
								public setClientAssertionType(param0: string): void;
								public constructor();
								public setClientAssertion(param0: string): void;
								public getClientAssertion(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class IDToken {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.IDToken>;
								public static SUBJECT: string;
								public static NAME: string;
								public static GIVEN_NAME: string;
								public static FAMILY_NAME: string;
								public static MIDDLE_NAME: string;
								public static NICKNAME: string;
								public static PREFERRED_USERNAME: string;
								public static PROFILE: string;
								public static PICTURE: string;
								public static WEBSITE: string;
								public static EMAIL: string;
								public static EMAIL_VERIFIED: string;
								public static GENDER: string;
								public static BIRTHDATE: string;
								public static ZONEINFO: string;
								public static LOCALE: string;
								public static PHONE_NUMBER: string;
								public static PHONE_NUMBER_VERIFIED: string;
								public static ADDRESS: string;
								public static UPDATED_AT: string;
								public static parseJWT(param0: string): java.util.Map<string, any>;
								public getRawIDToken(): string;
								public getTokenClaims(): java.util.Map<string, any>;
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class IErrorResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getError(): string; getErrorDescription(): string });
								public constructor();
								public getErrorDescription(): string;
								public getError(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class IResult {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.IResult>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.providers.oauth2.IResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { getSuccess(): boolean; getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse; getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse });
								public constructor();
								public getSuccess(): boolean;
								public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse;
								public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class ISuccessResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class OAuth2Configuration {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OAuth2Configuration>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class OAuth2Strategy<GenericAccessToken, GenericAccount, GenericAuthorizationRequest, GenericAuthorizationRequestBuilder, GenericAuthorizationStrategy, GenericOAuth2Configuration, GenericOAuth2StrategyParameters, GenericAuthorizationResponse, GenericRefreshToken, GenericTokenRequest, GenericTokenResponse, GenericTokenResult, GenericAuthorizationResult> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy<any, any, any, any, any, any, any, any, any, any, any, any, any>>;
								public static TOKEN_REQUEST_CONTENT_TYPE: string;
								public mConfig: GenericOAuth2Configuration;
								public mStrategyParameters: GenericOAuth2StrategyParameters;
								public mClockSkewManager: com.microsoft.identity.common.internal.util.IClockSkewManager;
								public mTokenEndpoint: string;
								public mAuthorizationEndpoint: string;
								public getAuthorizationResultFactory(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory<any, any>;
								public validateTokenRequest(param0: GenericTokenRequest): void;
								public getTokenResultFromHttpResponse(param0: com.microsoft.identity.common.internal.net.HttpResponse): GenericTokenResult;
								public createAuthorizationRequestBuilder(): GenericAuthorizationRequestBuilder;
								public setAuthorizationEndpoint(param0: string): void;
								public getAuthorityFromTokenEndpoint(): string;
								public requestAuthorization(param0: GenericAuthorizationRequest, param1: GenericAuthorizationStrategy): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
								public performTokenRequest(param0: GenericTokenRequest): com.microsoft.identity.common.internal.net.HttpResponse;
								public getIssuer(): globalAndroid.net.Uri;
								public validateTokenResponse(param0: GenericTokenRequest, param1: GenericTokenResponse): void;
								public createTokenRequest(param0: GenericAuthorizationRequest, param1: GenericAuthorizationResponse, param2: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): GenericTokenRequest;
								public createAuthorizationRequestBuilder(param0: com.microsoft.identity.common.internal.dto.IAccountRecord): GenericAuthorizationRequestBuilder;
								public validateCachedResult(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme, param1: com.microsoft.identity.common.internal.cache.ICacheRecord): boolean;
								public getAccessTokenFromResponse(param0: GenericTokenResponse): GenericAccessToken;
								public createAccount(param0: GenericTokenResponse): GenericAccount;
								public requestToken(param0: GenericTokenRequest): GenericTokenResult;
								public getIssuerCacheIdentifier(param0: GenericAuthorizationRequest): string;
								public constructor(param0: GenericOAuth2Configuration, param1: GenericOAuth2StrategyParameters);
								public getRefreshTokenFromResponse(param0: GenericTokenResponse): GenericRefreshToken;
								public setIssuer(param0: globalAndroid.net.Uri): void;
								public getOAuth2Configuration(): GenericOAuth2Configuration;
								public createRefreshTokenRequest(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): GenericTokenRequest;
								public validateAuthorizationRequest(param0: GenericAuthorizationRequest): void;
								public setTokenEndpoint(param0: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class OAuth2StrategyParameters {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OAuth2StrategyParameters>;
								public setContext(param0: globalAndroid.content.Context): void;
								public constructor();
								public getContext(): globalAndroid.content.Context;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class OAuth2TokenCache<T, U, V> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache<any, any, any>>;
								public getAllTenantAccountsForAccountByClientId(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
								public removeAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.cache.AccountDeletionRecord;
								public getAccountWithAggregatedAccountDataByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.cache.ICacheRecord;
								public getAccountsWithAggregatedAccountData(param0: string, param1: string, param2: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
								public getAccountByHomeAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
								public getIdTokensForAccountRecord(param0: string, param1: com.microsoft.identity.common.internal.dto.AccountRecord): java.util.List<com.microsoft.identity.common.internal.dto.IdTokenRecord>;
								public getAccountByLocalAccountId(param0: string, param1: string, param2: string): com.microsoft.identity.common.internal.dto.AccountRecord;
								public getContext(): globalAndroid.content.Context;
								public clearAll(): void;
								public getAccount(param0: string, param1: string, param2: string, param3: string): com.microsoft.identity.common.internal.dto.AccountRecord;
								public getAccountsWithAggregatedAccountData(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
								public save(param0: T, param1: U, param2: V): com.microsoft.identity.common.internal.cache.ICacheRecord;
								public save(param0: com.microsoft.identity.common.internal.dto.AccountRecord, param1: com.microsoft.identity.common.internal.dto.IdTokenRecord): com.microsoft.identity.common.internal.cache.ICacheRecord;
								public loadWithAggregatedAccountData(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
								public removeCredential(param0: com.microsoft.identity.common.internal.dto.Credential): boolean;
								public getAccounts(param0: string, param1: string): java.util.List<com.microsoft.identity.common.internal.dto.AccountRecord>;
								public getAllClientIds(): java.util.Set<string>;
								public constructor(param0: globalAndroid.content.Context);
								public load(param0: string, param1: string, param2: com.microsoft.identity.common.internal.dto.AccountRecord, param3: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme): com.microsoft.identity.common.internal.cache.ICacheRecord;
								public saveAndLoadAggregatedAccountData(param0: T, param1: U, param2: V): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class OpenIdConnectPromptParameter {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter>;
								public static NONE: com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
								public static SELECT_ACCOUNT: com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
								public static LOGIN: com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
								public static CONSENT: com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
								public toString(): string;
								public static valueOf(param0: string): com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
								public static values(): native.Array<com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter>;
								public static _fromPromptBehavior(param0: string): com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class OpenIdProviderConfiguration {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfiguration>;
								public setCloudGraphHostName(param0: string): void;
								public setCheckSessionIFrame(param0: string): void;
								public setUserInfoEncryptionEncValueSupported(param0: java.util.List<string>): void;
								public setAuthorizationEndpoint(param0: string): void;
								public setRbacUrl(param0: string): void;
								public setIdTokenSigningAlgValuesSupported(param0: java.util.List<string>): void;
								public getRequestUriParameterSupported(): java.lang.Boolean;
								public getRequestObjectEncryptionEncValuesSupported(): java.util.List<string>;
								public setRequestUriParameterSupported(param0: java.lang.Boolean): void;
								public getUserInfoEndpoint(): string;
								public setScopesSupported(param0: java.util.List<string>): void;
								public getScopesSupported(): java.util.List<string>;
								public getClaimsLocalesSupported(): java.util.List<string>;
								public getEndSessionEndpoint(): string;
								public getClaimsSupported(): java.util.List<string>;
								public getResponseModesSupported(): java.util.List<string>;
								public setDisplayValuesSupported(param0: java.util.List<string>): void;
								public setTokenEndpoint(param0: string): void;
								public setRequestObjectEncryptionAlgValuesSupported(param0: java.util.List<string>): void;
								public getTokenEndpointAuthMethodsSupported(): java.util.List<string>;
								public setFrontChannelLogoutSupported(param0: java.lang.Boolean): void;
								public setClaimsParameterSupported(param0: java.lang.Boolean): void;
								public getRequestObjectSigningAlgValuesSupported(): java.util.List<string>;
								public setUserInfoEncryptionAlgValuesSupported(param0: java.util.List<string>): void;
								public getRequireRequestUriRegistration(): java.lang.Boolean;
								public setTenantRegionScope(param0: string): void;
								public constructor();
								public setJwksUri(param0: string): void;
								public setClaimsSupported(param0: java.util.List<string>): void;
								public setIssuer(param0: string): void;
								public getIdTokenSigningAlgValuesSupported(): java.util.List<string>;
								public setAcrValuesSupported(param0: java.util.List<string>): void;
								public setIdTokenEncryptionEncValuesSupported(param0: java.util.List<string>): void;
								public getClaimsParameterSupported(): java.lang.Boolean;
								public getAuthorizationEndpoint(): string;
								public setTokenEndpointAuthMethodsSupported(param0: java.util.List<string>): void;
								public getMsGraphHost(): string;
								public setResponseModesSupported(param0: java.util.List<string>): void;
								public getResponseTypesSupported(): java.util.List<string>;
								public getRequestObjectEncryptionAlgValuesSupported(): java.util.List<string>;
								public getOpPolicyUri(): string;
								public setSubjectTypesSupported(param0: java.util.List<string>): void;
								public getTokenEndpointAuthSigningAlgValuesSupported(): java.util.List<string>;
								public setHttpLogoutSupported(param0: java.lang.Boolean): void;
								public setOpTosUri(param0: string): void;
								public getIdTokenEncryptionEncValuesSupported(): java.util.List<string>;
								public setUserInfoEndpoint(param0: string): void;
								public getCloudGraphHostName(): string;
								public setGrantTypesSupported(param0: java.util.List<string>): void;
								public getUserInfoEncryptionAlgValuesSupported(): java.util.List<string>;
								public getClaimTypesSupported(): java.util.List<string>;
								public setRequestObjectSigningAlgValuesSupported(param0: java.util.List<string>): void;
								public setEndSessionEndpoint(param0: string): void;
								public setRequestObjectEncryptionEncValuesSupported(param0: java.util.List<string>): void;
								public getRequestParameterSupported(): java.lang.Boolean;
								public getCheckSessionIFrame(): string;
								public setServiceDocumentation(param0: string): void;
								public setClaimsLocalesSupported(param0: java.util.List<string>): void;
								public getUiLocalesSupported(): java.util.List<string>;
								public setMsGraphHost(param0: string): void;
								public setOpPolicyUri(param0: string): void;
								public setResponseTypesSupported(param0: java.util.List<string>): void;
								public getAcrValuesSupported(): java.util.List<string>;
								public getServiceDocumentation(): string;
								public setUserInfoSigningAlgValuesSupported(param0: java.util.List<string>): void;
								public getIssuer(): string;
								public setUiLocalesSupported(param0: java.util.List<string>): void;
								public getHttpLogoutSupported(): java.lang.Boolean;
								public getRbacUrl(): string;
								public getIdTokenEncryptionAlgValuesSupported(): java.util.List<string>;
								public getJwksUri(): string;
								public getCloudInstanceName(): string;
								public setIdTokenEncryptionAlgValuesSupported(param0: java.util.List<string>): void;
								public setTokenEndpointAuthSigningAlgValuesSupported(param0: java.util.List<string>): void;
								public getFrontChannelLogoutSupported(): java.lang.Boolean;
								public getTokenEndpoint(): string;
								public setRegistrationEndpoint(param0: string): void;
								public setRequestParameterSupported(param0: java.lang.Boolean): void;
								public getSubjectTypesSupported(): java.util.List<string>;
								public getUserInfoSigningAlgValuesSupported(): java.util.List<string>;
								public getUserInfoEncryptionEncValueSupported(): java.util.List<string>;
								public setClaimTypesSupported(param0: java.util.List<string>): void;
								public setRequireRequestUriRegistration(param0: java.lang.Boolean): void;
								public getOpTosUri(): string;
								public getGrantTypesSupported(): java.util.List<string>;
								public getTenantRegionScope(): string;
								public getDisplayValuesSupported(): java.util.List<string>;
								public getRegistrationEndpoint(): string;
								public setCloudInstanceName(param0: string): void;
							}
							export module OpenIdProviderConfiguration {
								export class SerializedNames {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfiguration.SerializedNames>;
									public static AUTHORIZATION_ENDPOINT: string;
									public static TOKEN_ENDPOINT: string;
									public static TOKEN_ENDPOINT_AUTH_METHODS_SUPPORTED: string;
									public static JWKS_URI: string;
									public static RESPONSE_MODES_SUPPORTED: string;
									public static SUBJECT_TYPES_SUPPORTED: string;
									public static ID_TOKEN_SIGNING_ALG_VALUES_SUPPORTED: string;
									public static HTTP_LOGOUT_SUPPORTED: string;
									public static FRONTCHANNEL_LOGOUT_SUPPORTED: string;
									public static END_SESSION_ENDPOINT: string;
									public static RESPONSE_TYPES_SUPPORTED: string;
									public static SCOPES_SUPPORTED: string;
									public static ISSUER: string;
									public static CLAIMS_SUPPORTED: string;
									public static REQUEST_URI_PARAMETER_SUPPORTED: string;
									public static USERINFO_ENDPOINT: string;
									public static TENANT_REGION_SCOPE: string;
									public static CLOUD_INSTANCE_NAME: string;
									public static CLOUD_GRAPH_HOST_NAME: string;
									public static MSGRAPH_HOST: string;
									public static RBAC_URL: string;
									public static REGISTRATION_ENDPOINT: string;
									public static GRANT_TYPES_SUPPORTED: string;
									public static ACR_VALUES_SUPPORTED: string;
									public static ID_TOKEN_ENCRYPTION_ALG_VALUES_SUPPORTED: string;
									public static ID_TOKEN_ENCRYPTION_ENC_VALUES_SUPPORTED: string;
									public static USERINFO_SIGNING_ALG_VALUES_SUPPORTED: string;
									public static USERINFO_ENCRYPTION_ALG_VALUES_SUPPORTED: string;
									public static USERINFO_ENCRYPTION_ENC_VALUES_SUPPORTED: string;
									public static REQUEST_OBJECT_SIGNING_ALG_VALUES_SUPPORTED: string;
									public static REQUEST_OBJECT_ENCRYPTION_ALG_VALUES_SUPPORTED: string;
									public static REQUEST_OBJECT_ENCRYPTION_ENC_VALUES_SUPPORTED: string;
									public static TOKEN_ENDPOINT_AUTH_SIGNING_ALG_VALUES_SUPPORTED: string;
									public static DISPLAY_VALUES_SUPPORTED: string;
									public static CLAIM_TYPES_SUPPORTED: string;
									public static SERVICE_DOCUMENTATION: string;
									public static CLAIMS_LOCALES_SUPPORTED: string;
									public static UI_LOCALES_SUPPORTED: string;
									public static CLAIMS_PARAMETER_SUPPORTED: string;
									public static REQUEST_PARAMETER_SUPPORTED: string;
									public static REQUIRE_REQUEST_URI_REGISTRATION: string;
									public static OP_POLICY_URI: string;
									public static OP_TOS_URI: string;
									public static CHECK_SESSION_IFRAME: string;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class OpenIdProviderConfigurationClient {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfigurationClient>;
								public loadOpenIdProviderConfiguration(param0: com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfigurationClient.OpenIdProviderConfigurationCallback): void;
								public constructor(param0: string, param1: string);
								public loadOpenIdProviderConfiguration(): com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfiguration;
								public constructor(param0: string);
								public constructor(param0: string, param1: string, param2: string);
							}
							export module OpenIdProviderConfigurationClient {
								export class OpenIdProviderConfigurationCallback extends com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError<com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfiguration, java.lang.Exception> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfigurationClient.OpenIdProviderConfigurationCallback>;
									/**
									 * Constructs a new instance of the com.microsoft.identity.common.internal.providers.oauth2.OpenIdProviderConfigurationClient$OpenIdProviderConfigurationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: { onError(param0: any): void; onTaskCompleted(param0: any): void });
									public constructor();
									public onTaskCompleted(param0: any): void;
									public onError(param0: any): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class PkceChallenge {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.PkceChallenge>;
								public static newPkceChallenge(): com.microsoft.identity.common.internal.providers.oauth2.PkceChallenge;
								public getCodeVerifier(): string;
								public getCodeChallengeMethod(): string;
								public getCodeChallenge(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export abstract class RefreshToken extends com.microsoft.identity.common.internal.dto.IRefreshTokenRecord {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.RefreshToken>;
								public getSecret(): string;
								public getRefreshToken(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
								public getTokenReceivedTime(): number;
								public setRawRefreshToken(param0: string): void;
								public setTokenReceivedTime(param0: number): void;
								public constructor(param0: string);
								public getClientId(): string;
								public getFamilyId(): string;
								public getEnvironment(): string;
								public getHomeAccountId(): string;
								public getTarget(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class ResponseType {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.ResponseType>;
								public static CODE: string;
								public static TOKEN: string;
								public static ID_TOKEN: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class TokenErrorResponse extends com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.TokenErrorResponse>;
								public toString(): string;
								public setSubError(param0: string): void;
								public getResponseBody(): string;
								public getErrorUri(): string;
								public getSubError(): string;
								public constructor();
								public getError(): string;
								public setErrorDescription(param0: string): void;
								public getStatusCode(): number;
								public getResponseHeadersJson(): string;
								public setResponseHeadersJson(param0: string): void;
								public setResponseBody(param0: string): void;
								public setErrorUri(param0: string): void;
								public setError(param0: string): void;
								public getErrorDescription(): string;
								public setStatusCode(param0: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class TokenRequest {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.TokenRequest>;
								public getCode(): string;
								public getRedirectUri(): string;
								public setClientSecret(param0: string): void;
								public getTokenType(): string;
								public getClientAssertionType(): string;
								public constructor();
								public setGrantType(param0: string): void;
								public setRefreshToken(param0: string): void;
								public getClientId(): string;
								public setRedirectUri(param0: string): void;
								public setClientId(param0: string): void;
								public getGrantType(): string;
								public setCode(param0: string): void;
								public getClientSecret(): string;
								public setRequestConfirmation(param0: string): void;
								public getScope(): string;
								public setScope(param0: string): void;
								public getRefreshToken(): string;
								public setTokenType(param0: string): void;
								public setClientAssertionType(param0: string): void;
								public setClientAssertion(param0: string): void;
								public getClientAssertion(): string;
								public getRequestConfirmation(): string;
							}
							export module TokenRequest {
								export class GrantTypes {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.TokenRequest.GrantTypes>;
									public static AUTHORIZATION_CODE: string;
									public static REFRESH_TOKEN: string;
									public static PASSWORD: string;
									public constructor();
								}
								export class TokenType {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.TokenRequest.TokenType>;
									public static POP: string;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class TokenResponse extends com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.TokenResponse>;
								public setAccessToken(param0: string): void;
								public toString(): string;
								public getState(): string;
								public getTokenType(): string;
								public getIdToken(): string;
								public constructor();
								public getExpiresIn(): java.lang.Long;
								public setRefreshToken(param0: string): void;
								public setState(param0: string): void;
								public getAccessToken(): string;
								public getRefreshToken(): string;
								public getScope(): string;
								public setScope(param0: string): void;
								public setTokenType(param0: string): void;
								public getResponseReceivedTime(): number;
								public setIdToken(param0: string): void;
								public setExpiresIn(param0: java.lang.Long): void;
								public setResponseReceivedTime(param0: java.lang.Long): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class TokenResult extends com.microsoft.identity.common.internal.providers.oauth2.IResult {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.TokenResult>;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenErrorResponse);
								public toString(): string;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse, param1: com.microsoft.identity.common.internal.providers.oauth2.TokenErrorResponse);
								public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.TokenResponse;
								public setSuccess(param0: boolean): void;
								public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.IErrorResponse;
								public getSuccessResponse(): com.microsoft.identity.common.internal.providers.oauth2.ISuccessResponse;
								public getErrorResponse(): com.microsoft.identity.common.internal.providers.oauth2.TokenErrorResponse;
								public constructor();
								public getSuccess(): boolean;
								public constructor(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResponse);
								public getTokenResponse(): com.microsoft.identity.common.internal.providers.oauth2.TokenResponse;
								public setCliTelemInfo(param0: com.microsoft.identity.common.internal.telemetry.CliTelemInfo): void;
								public getCliTelemInfo(): com.microsoft.identity.common.internal.telemetry.CliTelemInfo;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module providers {
						export module oauth2 {
							export class WebViewAuthorizationFragment extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.WebViewAuthorizationFragment>;
								public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
								public constructor();
								public onCreate(param0: globalAndroid.os.Bundle): void;
								public getLifecycle(): androidx.lifecycle.Lifecycle;
								public getViewModelStore(): androidx.lifecycle.ViewModelStore;
								public onSaveInstanceState(param0: globalAndroid.os.Bundle): void;
								public onBackPressed(): boolean;
							}
							export module WebViewAuthorizationFragment {
								export class AuthorizationCompletionCallback extends com.microsoft.identity.common.internal.ui.webview.challengehandlers.IAuthorizationCompletionCallback {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.providers.oauth2.WebViewAuthorizationFragment.AuthorizationCompletionCallback>;
									public setPKeyAuthStatus(param0: boolean): void;
									public onChallengeResponseReceived(param0: number, param1: globalAndroid.content.Intent): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class AdalBrokerRequestAdapter extends com.microsoft.identity.common.internal.request.IBrokerRequestAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.AdalBrokerRequestAdapter>;
							public constructor();
							public brokerSilentParametersFromBundle(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Context, param2: globalAndroid.accounts.Account): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters;
							public brokerInteractiveParametersFromActivity(param0: globalAndroid.app.Activity): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters;
							public brokerRequestFromAcquireTokenParameters(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
							public brokerRequestFromSilentOperationParameters(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
							public static getRequestAuthorityWithExtraQP(param0: string, param1: java.util.List<globalAndroid.util.Pair<string, string>>): com.microsoft.identity.common.internal.authorities.AzureActiveDirectoryAuthority;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class AuthenticationSchemeTypeAdapter extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.AuthenticationSchemeTypeAdapter>;
							public serialize(param0: any, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							public serialize(param0: com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.common.internal.authscheme.AbstractAuthenticationScheme;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class BrokerRequestAdapterFactory {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.BrokerRequestAdapterFactory>;
							public constructor();
							public static getBrokerRequestAdapter(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.request.IBrokerRequestAdapter;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class BrokerRequestType {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.BrokerRequestType>;
							public static REGULAR: com.microsoft.identity.common.internal.request.BrokerRequestType;
							public static BROKER_RT_REQUEST: com.microsoft.identity.common.internal.request.BrokerRequestType;
							public static RESOLVE_INTERRUPT: com.microsoft.identity.common.internal.request.BrokerRequestType;
							public static values(): native.Array<com.microsoft.identity.common.internal.request.BrokerRequestType>;
							public static valueOf(param0: string): com.microsoft.identity.common.internal.request.BrokerRequestType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class IBrokerRequestAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.IBrokerRequestAdapter>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.request.IBrokerRequestAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								brokerRequestFromAcquireTokenParameters(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
								brokerRequestFromSilentOperationParameters(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
								brokerInteractiveParametersFromActivity(param0: globalAndroid.app.Activity): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters;
								brokerSilentParametersFromBundle(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Context, param2: globalAndroid.accounts.Account): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters;
							});
							public constructor();
							public brokerSilentParametersFromBundle(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Context, param2: globalAndroid.accounts.Account): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters;
							public brokerInteractiveParametersFromActivity(param0: globalAndroid.app.Activity): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters;
							public brokerRequestFromAcquireTokenParameters(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
							public brokerRequestFromSilentOperationParameters(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class ILocalAuthenticationCallback {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.ILocalAuthenticationCallback>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.request.ILocalAuthenticationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { onSuccess(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult): void; onError(param0: com.microsoft.identity.common.exception.BaseException): void; onCancel(): void });
							public constructor();
							public onSuccess(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult): void;
							public onError(param0: com.microsoft.identity.common.exception.BaseException): void;
							public onCancel(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class MsalBrokerRequestAdapter extends com.microsoft.identity.common.internal.request.IBrokerRequestAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.MsalBrokerRequestAdapter>;
							public static sRequestAdapterGsonInstance: com.google.gson.Gson;
							public constructor();
							public getRequestBundleForAcquireTokenInteractive(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters, param1: string): globalAndroid.os.Bundle;
							public getRequestBundleForAcquireTokenSilent(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters, param1: string): globalAndroid.os.Bundle;
							public brokerSilentParametersFromBundle(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Context, param2: globalAndroid.accounts.Account): com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters;
							public getRequestBundleForRemoveAccount(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: string): globalAndroid.os.Bundle;
							public getRequestBundleForHello(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): globalAndroid.os.Bundle;
							public getRequestBundleForGetAccounts(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters, param1: string): globalAndroid.os.Bundle;
							public static getBrowserSafeListForBroker(): java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>;
							public brokerRequestFromAcquireTokenParameters(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
							public getRequestIntentForAcquireTokenInteractive(param0: globalAndroid.os.Bundle, param1: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters, param2: string): globalAndroid.content.Intent;
							public brokerInteractiveParametersFromActivity(param0: globalAndroid.app.Activity): com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters;
							public brokerRequestFromSilentOperationParameters(param0: com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters): com.microsoft.identity.common.internal.broker.BrokerRequest;
							public brokerRequestFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.broker.BrokerRequest;
							public getRequestBundleForRemoveAccountFromSharedDevice(param0: com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters, param1: string): globalAndroid.os.Bundle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module request {
						export class SdkType {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.request.SdkType>;
							public static ADAL: com.microsoft.identity.common.internal.request.SdkType;
							public static MSAL: com.microsoft.identity.common.internal.request.SdkType;
							public static values(): native.Array<com.microsoft.identity.common.internal.request.SdkType>;
							public static valueOf(param0: string): com.microsoft.identity.common.internal.request.SdkType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class AcquireTokenResult {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.AcquireTokenResult>;
							public constructor();
							public setTokenResult(param0: com.microsoft.identity.common.internal.providers.oauth2.TokenResult): void;
							public setLocalAuthenticationResult(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult): void;
							public getAuthorizationResult(): com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>;
							public getLocalAuthenticationResult(): com.microsoft.identity.common.internal.result.ILocalAuthenticationResult;
							public getTokenResult(): com.microsoft.identity.common.internal.providers.oauth2.TokenResult;
							public getSucceeded(): java.lang.Boolean;
							public setAuthorizationResult(param0: com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class AdalBrokerResultAdapter extends com.microsoft.identity.common.internal.result.IBrokerResultAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.AdalBrokerResultAdapter>;
							public constructor();
							public bundleFromBaseException(param0: com.microsoft.identity.common.exception.BaseException, param1: string): globalAndroid.os.Bundle;
							public getBaseExceptionFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.exception.BaseException;
							public authenticationResultFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.result.ILocalAuthenticationResult;
							public bundleFromAuthenticationResult(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult, param1: string): globalAndroid.os.Bundle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class BrokerResultAdapterFactory {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.BrokerResultAdapterFactory>;
							public constructor();
							public static getBrokerResultAdapter(param0: com.microsoft.identity.common.internal.request.SdkType): com.microsoft.identity.common.internal.result.IBrokerResultAdapter;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class IBrokerResultAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.IBrokerResultAdapter>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.result.IBrokerResultAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { bundleFromAuthenticationResult(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult, param1: string): globalAndroid.os.Bundle; bundleFromBaseException(param0: com.microsoft.identity.common.exception.BaseException, param1: string): globalAndroid.os.Bundle; authenticationResultFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.result.ILocalAuthenticationResult; getBaseExceptionFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.exception.BaseException });
							public constructor();
							public bundleFromBaseException(param0: com.microsoft.identity.common.exception.BaseException, param1: string): globalAndroid.os.Bundle;
							public getBaseExceptionFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.exception.BaseException;
							public authenticationResultFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.result.ILocalAuthenticationResult;
							public bundleFromAuthenticationResult(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult, param1: string): globalAndroid.os.Bundle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class ILocalAuthenticationResult {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.ILocalAuthenticationResult>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.result.ILocalAuthenticationResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAccessToken(): string;
								getExpiresOn(): java.util.Date;
								getTenantId(): string;
								getUniqueId(): string;
								getRefreshToken(): string;
								getIdToken(): string;
								getAccountRecord(): com.microsoft.identity.common.internal.dto.IAccountRecord;
								getAccessTokenRecord(): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
								getScope(): native.Array<string>;
								getSpeRing(): string;
								getRefreshTokenAge(): string;
								getFamilyId(): string;
								getCacheRecordWithTenantProfileData(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
								isServicedFromCache(): boolean;
							});
							public constructor();
							public getSpeRing(): string;
							public getScope(): native.Array<string>;
							public getUniqueId(): string;
							public getRefreshToken(): string;
							public getAccountRecord(): com.microsoft.identity.common.internal.dto.IAccountRecord;
							public getFamilyId(): string;
							public getCacheRecordWithTenantProfileData(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public getAccessTokenRecord(): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public getExpiresOn(): java.util.Date;
							public getRefreshTokenAge(): string;
							public getAccessToken(): string;
							public getIdToken(): string;
							public getTenantId(): string;
							public isServicedFromCache(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class LocalAuthenticationResult extends com.microsoft.identity.common.internal.result.ILocalAuthenticationResult {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.LocalAuthenticationResult>;
							public getSpeRing(): string;
							public getScope(): native.Array<string>;
							public setRefreshTokenAge(param0: string): void;
							public constructor(param0: com.microsoft.identity.common.internal.cache.ICacheRecord, param1: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>, param2: com.microsoft.identity.common.internal.request.SdkType, param3: boolean);
							public getUniqueId(): string;
							public getRefreshToken(): string;
							public getAccountRecord(): com.microsoft.identity.common.internal.dto.IAccountRecord;
							public getFamilyId(): string;
							public getCacheRecordWithTenantProfileData(): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
							public setSpeRing(param0: string): void;
							public getAccessTokenRecord(): com.microsoft.identity.common.internal.dto.AccessTokenRecord;
							public getExpiresOn(): java.util.Date;
							public getRefreshTokenAge(): string;
							public getAccessToken(): string;
							public getIdToken(): string;
							public getTenantId(): string;
							public isServicedFromCache(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class MsalBrokerResultAdapter extends com.microsoft.identity.common.internal.result.IBrokerResultAdapter {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.MsalBrokerResultAdapter>;
							public constructor();
							public verifyHelloFromResultBundle(param0: globalAndroid.os.Bundle): string;
							public verifyRemoveAccountResultFromBundle(param0: globalAndroid.os.Bundle): void;
							public bundleFromBaseException(param0: com.microsoft.identity.common.exception.BaseException, param1: string): globalAndroid.os.Bundle;
							public getAcquireTokenResultFromResultBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.result.AcquireTokenResult;
							public bundleFromAccounts(param0: java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>, param1: string): globalAndroid.os.Bundle;
							public bundleFromDeviceMode(param0: boolean): globalAndroid.os.Bundle;
							public getBaseExceptionFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.exception.BaseException;
							public authenticationResultFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.result.ILocalAuthenticationResult;
							public brokerResultFromBundle(param0: globalAndroid.os.Bundle): com.microsoft.identity.common.internal.broker.BrokerResult;
							public getDeviceModeFromResultBundle(param0: globalAndroid.os.Bundle): boolean;
							public bundleFromAuthenticationResult(param0: com.microsoft.identity.common.internal.result.ILocalAuthenticationResult, param1: string): globalAndroid.os.Bundle;
							public bundleFromBrokerResult(param0: com.microsoft.identity.common.internal.broker.BrokerResult, param1: string): globalAndroid.os.Bundle;
							public getAccountsFromResultBundle(param0: globalAndroid.os.Bundle): java.util.List<com.microsoft.identity.common.internal.cache.ICacheRecord>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module result {
						export class ResultFuture<T> extends java.util.concurrent.Future<any> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.result.ResultFuture<any>>;
							public constructor();
							public get(): any;
							public setResult(param0: any): void;
							public cancel(param0: boolean): boolean;
							public isCancelled(): boolean;
							public isDone(): boolean;
							public get(param0: number, param1: java.util.concurrent.TimeUnit): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export class CliTelemInfo {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.CliTelemInfo>;
							public constructor();
							public getServerSubErrorCode(): string;
							public getServerErrorCode(): string;
							public getSpeRing(): string;
							public static fromXMsCliTelemHeader(param0: string): com.microsoft.identity.common.internal.telemetry.CliTelemInfo;
							public setRefreshTokenAge(param0: string): void;
							public setVersion(param0: string): void;
							public setSpeRing(param0: string): void;
							public setServerErrorCode(param0: string): void;
							public constructor(param0: com.microsoft.identity.common.internal.telemetry.CliTelemInfo);
							public getRefreshTokenAge(): string;
							public getVersion(): string;
							public setServerSubErrorCode(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export class Properties {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.Properties>;
							public constructor();
							public getProperties(): java.util.concurrent.ConcurrentHashMap<string, string>;
							public remove(param0: string): com.microsoft.identity.common.internal.telemetry.Properties;
							public remove(param0: string, param1: string): com.microsoft.identity.common.internal.telemetry.Properties;
							public put(param0: string, param1: string): com.microsoft.identity.common.internal.telemetry.Properties;
							public put(param0: com.microsoft.identity.common.internal.telemetry.Properties): com.microsoft.identity.common.internal.telemetry.Properties;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export class Telemetry {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.Telemetry>;
							public static getInstance(): com.microsoft.identity.common.internal.telemetry.Telemetry;
							public flush(param0: string): void;
							public removeObserver(param0: java.lang.Class<any>): void;
							public addObserver(param0: com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<any>): void;
							public removeObserver(param0: com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<any>): void;
							public getObservers(): java.util.List<com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<any>>;
							public static emit(param0: com.microsoft.identity.common.internal.telemetry.events.BaseEvent): void;
							public flush(): void;
						}
						export module Telemetry {
							export class Builder {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.Telemetry.Builder>;
								public withContext(param0: globalAndroid.content.Context): com.microsoft.identity.common.internal.telemetry.Telemetry.Builder;
								public constructor();
								public defaultConfiguration(param0: com.microsoft.identity.common.internal.telemetry.TelemetryConfiguration): com.microsoft.identity.common.internal.telemetry.Telemetry.Builder;
								public build(): com.microsoft.identity.common.internal.telemetry.Telemetry;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export class TelemetryConfiguration {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryConfiguration>;
							public constructor();
							public setPiiEnabled(param0: boolean): void;
							public setNotifyOnFailureOnly(param0: boolean): void;
							public shouldNotifyOnFailureOnly(): boolean;
							public setDebugEnabled(param0: boolean): void;
							public isDebugEnabled(): boolean;
							public isPiiEnabled(): boolean;
						}
						export module TelemetryConfiguration {
							export class SerializedNames {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryConfiguration.SerializedNames>;
								public static PII_ENABLED: string;
								public static NOTIFY_ON_FAILTURE_ONLY: string;
								public static DEBUG_ENABLED: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export class TelemetryContext extends com.microsoft.identity.common.internal.telemetry.Properties {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryContext>;
							public isNetworkDisabledFromOptimizations(param0: boolean): void;
							public isNetworkConnected(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export class TelemetryEventStrings {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings>;
							public constructor();
						}
						export module TelemetryEventStrings {
							export class Api {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.Api>;
								public static BROKER_ACQUIRE_TOKEN_INTERACTIVE: string;
								public static BROKER_COMPLETE_ACQUIRE_TOKEN_INTERACTIVE: string;
								public static BROKER_ACQUIRE_TOKEN_SILENT: string;
								public static GET_BROKER_DEVICE_MODE: string;
								public static BROKER_GET_CURRENT_ACCOUNT: string;
								public static BROKER_GET_ACCOUNTS: string;
								public static BROKER_REMOVE_ACCOUNT: string;
								public static BROKER_REMOVE_ACCOUNT_FROM_SHARED_DEVICE: string;
								public static LOCAL_ACQUIRE_TOKEN_INTERACTIVE: string;
								public static LOCAL_COMPLETE_ACQUIRE_TOKEN_INTERACTIVE: string;
								public static LOCAL_ACQUIRE_TOKEN_SILENT: string;
								public static LOCAL_GET_ACCOUNTS: string;
								public static LOCAL_REMOVE_ACCOUNT: string;
								public constructor();
							}
							export class App {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.App>;
								public static BUILD: string;
								public static NAME: string;
								public static VERSION: string;
								public constructor();
							}
							export class Device {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.Device>;
								public static MANUFACTURER: string;
								public static MODEL: string;
								public static NAME: string;
								public static TIMEZONE: string;
								public static ID: string;
								public constructor();
							}
							export class Event {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.Event>;
								public static API_START_EVENT: string;
								public static API_END_EVENT: string;
								public static CACHE_START_EVENT: string;
								public static CACHE_END_EVENT: string;
								public static UI_START_EVENT: string;
								public static UI_END_EVENT: string;
								public static HTTP_START_EVENT: string;
								public static HTTP_END_EVENT: string;
								public static BROKER_START_EVENT: string;
								public static BROKER_END_EVENT: string;
								public constructor();
							}
							export class EventType {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.EventType>;
								public static API_EVENT: string;
								public static CACHE_EVENT: string;
								public static UI_EVENT: string;
								public static HTTP_EVENT: string;
								public static BROKER_EVENT: string;
								public constructor();
							}
							export class Key {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.Key>;
								public static EVENT_NAME: string;
								public static EVENT_TYPE: string;
								public static AUTHORITY_TYPE: string;
								public static AUTHORITY_NAME: string;
								public static AUTHORITY_VALIDATION_STATUS: string;
								public static EXTENDED_EXPIRES_ON_SETTING: string;
								public static PROMPT_BEHAVIOR: string;
								public static IDP_NAME: string;
								public static TENANT_ID: string;
								public static USER_ID: string;
								public static OCCUR_TIME: string;
								public static START_TIME: string;
								public static END_TIME: string;
								public static RESPONSE_TIME: string;
								public static NETWORK_CONNECTION: string;
								public static POWER_OPTIMIZATION: string;
								public static IS_FORCE_PROMPT: string;
								public static IS_FORCE_REFRESH: string;
								public static SDK_NAME: string;
								public static SDK_VERSION: string;
								public static LOGIN_HINT: string;
								public static CLAIM_REQUEST: string;
								public static REDIRECT_URI: string;
								public static SCOPE_SIZE: string;
								public static SCOPE: string;
								public static NTLM_HANDLED: string;
								public static UI_EVENT_COUNT: string;
								public static CACHE_EVENT_COUNT: string;
								public static HTTP_EVENT_COUNT: string;
								public static BROKER_APP: string;
								public static BROKER_VERSION: string;
								public static BROKER_PROTOCOL_VERSION: string;
								public static BROKER_APP_USED: string;
								public static CLIENT_ID: string;
								public static API_ID: string;
								public static TOKEN_TYPE: string;
								public static IS_RT: string;
								public static IS_AT: string;
								public static IS_MRRT: string;
								public static IS_FRT: string;
								public static RT_STATUS: string;
								public static AT_STATUS: string;
								public static ID_TOKEN_STATUS: string;
								public static V1_ID_TOKEN_STATUS: string;
								public static ACCOUNT_STATUS: string;
								public static MRRT_STATUS: string;
								public static FRT_STATUS: string;
								public static CORRELATION_ID: string;
								public static ERROR_CODE: string;
								public static ERROR_DESCRIPTION: string;
								public static ERROR_DOMAIN: string;
								public static HTTP_METHOD: string;
								public static HTTP_PATH: string;
								public static HTTP_REQUEST_ID_HEADER: string;
								public static HTTP_RESPONSE_CODE: string;
								public static OAUTH_ERROR_CODE: string;
								public static REQUEST_QUERY_PARAMS: string;
								public static USER_AGENT: string;
								public static HTTP_ERROR_DOMAIN: string;
								public static AUTHORITY: string;
								public static GRANT_TYPE: string;
								public static REQUEST_CODE: string;
								public static RESULT_CODE: string;
								public static USER_CANCEL: string;
								public static UI_CANCELLED: string;
								public static UI_COMPLETE: string;
								public static SERVER_ERROR_CODE: string;
								public static SERVER_SUBERROR_CODE: string;
								public static RT_AGE: string;
								public static SPE_INFO: string;
								public static SPE_RING: string;
								public static IS_SUCCESSFUL: string;
								public static WIPE_APP: string;
								public static WIPE_TIME: string;
								public static BROKER_ACTION: string;
								public static BROKER_STRATEGY: string;
								public static ACCOUNTS_NUMBER: string;
								public static IS_DEVICE_SHARED: string;
								public constructor();
							}
							export class Os {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.Os>;
								public static NAME: string;
								public static OS_NAME: string;
								public static VERSION: string;
								public static SECURITY_PATCH: string;
								public constructor();
							}
							export class Value {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.TelemetryEventStrings.Value>;
								public static TRUE: string;
								public static FALSE: string;
								public static TRIED: string;
								public static NOT_FOUND: string;
								public static ACCESS_TOKEN: string;
								public static REFRESH_TOKEN: string;
								public static MULTI_RESOURCE_REFRESH_TOKEN: string;
								public static FAMILY_REFRESH_TOKEN: string;
								public static ADFS_TOKEN: string;
								public static BY_CODE: string;
								public static BY_REFRESH_TOKEN: string;
								public static SUCCEEDED: string;
								public static FAILED: string;
								public static CANCELLED: string;
								public static UNKNOWN: string;
								public static AUTHORITY_AAD: string;
								public static AUTHORITY_ADFS: string;
								public static AUTHORITY_B2C: string;
								public static ACCOUNT_MANAGER: string;
								public static BOUND_SERVICE: string;
								public static CONTENT_PROVIDER: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module adapter {
							export class ITelemetryAdapter<T> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.adapter.ITelemetryAdapter<any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.telemetry.adapter.ITelemetryAdapter<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { process(param0: T): void });
								public constructor();
								public process(param0: T): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module adapter {
							export class TelemetryAggregationAdapter extends com.microsoft.identity.common.internal.telemetry.adapter.ITelemetryAdapter<java.util.List<java.util.Map<string, string>>> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.adapter.TelemetryAggregationAdapter>;
								public constructor(param0: com.microsoft.identity.common.internal.telemetry.observers.ITelemetryAggregatedObserver);
								public process(param0: any): void;
								public getObserver(): com.microsoft.identity.common.internal.telemetry.observers.ITelemetryAggregatedObserver;
								public process(param0: java.util.List<java.util.Map<string, string>>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module adapter {
							export class TelemetryDefaultAdapter extends com.microsoft.identity.common.internal.telemetry.adapter.ITelemetryAdapter<java.util.List<java.util.Map<string, string>>> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.adapter.TelemetryDefaultAdapter>;
								public constructor(param0: com.microsoft.identity.common.internal.telemetry.observers.ITelemetryDefaultObserver);
								public process(param0: any): void;
								public process(param0: java.util.List<java.util.Map<string, string>>): void;
								public getObserver(): com.microsoft.identity.common.internal.telemetry.observers.ITelemetryDefaultObserver;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class ApiEndEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent>;
								public put(param0: string, param1: string): com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent;
								public put(param0: string, param1: string): com.microsoft.identity.common.internal.telemetry.Properties;
								public putApiErrorCode(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent;
								public putResult(param0: com.microsoft.identity.common.internal.result.AcquireTokenResult): com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent;
								public putApiId(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent;
								public put(param0: com.microsoft.identity.common.internal.telemetry.Properties): com.microsoft.identity.common.internal.telemetry.Properties;
								public isApiCallSuccessful(param0: java.lang.Boolean): com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent;
								public constructor();
								public putException(param0: java.lang.Exception): com.microsoft.identity.common.internal.telemetry.events.ApiEndEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class ApiStartEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent>;
								public put(param0: string, param1: string): com.microsoft.identity.common.internal.telemetry.Properties;
								public putLoginHint(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public put(param0: com.microsoft.identity.common.internal.telemetry.Properties): com.microsoft.identity.common.internal.telemetry.Properties;
								public putExtendedExpiresOnSetting(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public putApiId(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public put(param0: string, param1: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public constructor();
								public putAuthorityType(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public authority(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public putValidationStatus(param0: string): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
								public putProperties(param0: com.microsoft.identity.common.internal.commands.parameters.CommandParameters): com.microsoft.identity.common.internal.telemetry.events.ApiStartEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class BaseEvent extends com.microsoft.identity.common.internal.telemetry.Properties {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.BaseEvent>;
								public correlationId(param0: string): com.microsoft.identity.common.internal.telemetry.events.BaseEvent;
								public names(param0: string): com.microsoft.identity.common.internal.telemetry.events.BaseEvent;
								public types(param0: string): com.microsoft.identity.common.internal.telemetry.events.BaseEvent;
								public occurs(param0: java.lang.Long): com.microsoft.identity.common.internal.telemetry.events.BaseEvent;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class BrokerEndEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.BrokerEndEvent>;
								public isSuccessful(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.BrokerEndEvent;
								public putException(param0: com.microsoft.identity.common.exception.BaseException): com.microsoft.identity.common.internal.telemetry.events.BrokerEndEvent;
								public putErrorDescription(param0: string): com.microsoft.identity.common.internal.telemetry.events.BrokerEndEvent;
								public constructor();
								public putErrorCode(param0: string): com.microsoft.identity.common.internal.telemetry.events.BrokerEndEvent;
								public putAction(param0: string): com.microsoft.identity.common.internal.telemetry.events.BrokerEndEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class BrokerStartEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.BrokerStartEvent>;
								public putStrategy(param0: string): com.microsoft.identity.common.internal.telemetry.events.BrokerStartEvent;
								public constructor();
								public putAction(param0: string): com.microsoft.identity.common.internal.telemetry.events.BrokerStartEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class CacheEndEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.CacheEndEvent>;
								public putRtStatus(param0: string): com.microsoft.identity.common.internal.telemetry.events.CacheEndEvent;
								public putAtStatus(param0: string): com.microsoft.identity.common.internal.telemetry.events.CacheEndEvent;
								public putCacheRecordStatus(param0: com.microsoft.identity.common.internal.cache.CacheRecord): com.microsoft.identity.common.internal.telemetry.events.CacheEndEvent;
								public constructor();
								public putFrtStatus(param0: string): com.microsoft.identity.common.internal.telemetry.events.CacheEndEvent;
								public putSpeInfo(param0: string): com.microsoft.identity.common.internal.telemetry.events.CacheEndEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class CacheStartEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent>;
								public isMrrt(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent;
								public putTokenType(param0: string): com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent;
								public constructor();
								public isFrt(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent;
								public isAt(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent;
								public putWipeApp(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent;
								public isRt(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.CacheStartEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class HttpEndEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.HttpEndEvent>;
								public constructor();
								public putStatusCode(param0: number): com.microsoft.identity.common.internal.telemetry.events.HttpEndEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class HttpStartEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.HttpStartEvent>;
								public putPath(param0: java.net.URL): com.microsoft.identity.common.internal.telemetry.events.HttpStartEvent;
								public putRequestQueryParams(param0: string): com.microsoft.identity.common.internal.telemetry.events.HttpStartEvent;
								public putErrorDomain(param0: string): com.microsoft.identity.common.internal.telemetry.events.HttpStartEvent;
								public constructor();
								public putMethod(param0: string): com.microsoft.identity.common.internal.telemetry.events.HttpStartEvent;
								public putRequestIdHeader(param0: string): com.microsoft.identity.common.internal.telemetry.events.HttpStartEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class UiEndEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.UiEndEvent>;
								public isUiComplete(): com.microsoft.identity.common.internal.telemetry.events.UiEndEvent;
								public constructor();
								public isUserCancelled(): com.microsoft.identity.common.internal.telemetry.events.UiEndEvent;
								public isUiCancelled(): com.microsoft.identity.common.internal.telemetry.events.UiEndEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module events {
							export class UiStartEvent extends com.microsoft.identity.common.internal.telemetry.events.BaseEvent {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.events.UiStartEvent>;
								public constructor();
								public putUserAgent(param0: com.microsoft.identity.common.internal.ui.AuthorizationAgent): com.microsoft.identity.common.internal.telemetry.events.UiStartEvent;
								public putLoginHint(param0: string): com.microsoft.identity.common.internal.telemetry.events.UiStartEvent;
								public isForcePrompt(param0: boolean): com.microsoft.identity.common.internal.telemetry.events.UiStartEvent;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module observers {
							export class ITelemetryAggregatedObserver extends com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<java.util.Map<string, string>> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.observers.ITelemetryAggregatedObserver>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.telemetry.observers.ITelemetryAggregatedObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { onReceived(param0: java.util.Map<string, string>): void; onReceived(param0: any): void });
								public constructor();
								public onReceived(param0: any): void;
								public onReceived(param0: java.util.Map<string, string>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module observers {
							export class ITelemetryDefaultObserver extends com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<java.util.List<java.util.Map<string, string>>> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.observers.ITelemetryDefaultObserver>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.telemetry.observers.ITelemetryDefaultObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { onReceived(param0: java.util.List<java.util.Map<string, string>>): void; onReceived(param0: any): void });
								public constructor();
								public onReceived(param0: any): void;
								public onReceived(param0: java.util.List<java.util.Map<string, string>>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module observers {
							export class ITelemetryObserver<T> extends java.lang.Object {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<any>>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { onReceived(param0: T): void });
								public constructor();
								public onReceived(param0: T): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module rules {
							export class TelemetryAggregationRules {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.rules.TelemetryAggregationRules>;
								public static getInstance(): com.microsoft.identity.common.internal.telemetry.rules.TelemetryAggregationRules;
								public isRedundant(param0: string): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module telemetry {
						export module rules {
							export class TelemetryPiiOiiRules {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.telemetry.rules.TelemetryPiiOiiRules>;
								public static getInstance(): com.microsoft.identity.common.internal.telemetry.rules.TelemetryPiiOiiRules;
								public isPiiOrOii(param0: string): boolean;
								public isOii(param0: string): boolean;
								public isPii(param0: string): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export class AuthorizationAgent {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.AuthorizationAgent>;
							public static DEFAULT: com.microsoft.identity.common.internal.ui.AuthorizationAgent;
							public static WEBVIEW: com.microsoft.identity.common.internal.ui.AuthorizationAgent;
							public static BROWSER: com.microsoft.identity.common.internal.ui.AuthorizationAgent;
							public static values(): native.Array<com.microsoft.identity.common.internal.ui.AuthorizationAgent>;
							public static valueOf(param0: string): com.microsoft.identity.common.internal.ui.AuthorizationAgent;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export class AuthorizationStrategyFactory<GenericAuthorizationStrategy> extends java.lang.Object {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.AuthorizationStrategyFactory<any>>;
							public constructor();
							public static getInstance(): com.microsoft.identity.common.internal.ui.AuthorizationStrategyFactory<any>;
							public getAuthorizationStrategy(param0: com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters): GenericAuthorizationStrategy;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export class DualScreenActivity extends androidx.fragment.app.FragmentActivity {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.DualScreenActivity>;
							public constructor();
							public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
							public setFragment(param0: androidx.fragment.app.Fragment): void;
							public getRotation(param0: globalAndroid.app.Activity): number;
							public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
							public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
							public getViewModelStore(): androidx.lifecycle.ViewModelStore;
							public getLifecycle(): androidx.lifecycle.Lifecycle;
							public isAppSpanned(param0: globalAndroid.app.Activity): boolean;
							public setContentView(param0: number): void;
							public validateRequestPermissionsRequestCode(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module browser {
							export class Browser {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.browser.Browser>;
								public constructor(param0: globalAndroid.content.pm.PackageInfo, param1: java.lang.Boolean);
								public constructor(param0: string, param1: java.util.Set<string>, param2: string, param3: boolean);
								public constructor(param0: globalAndroid.content.pm.PackageInfo);
								public equals(param0: any): boolean;
								public getPackageName(): string;
								public static generateSignatureHashes(param0: native.Array<globalAndroid.content.pm.Signature>): java.util.Set<string>;
								public getVersion(): string;
								public isCustomTabsServiceSupported(): boolean;
								public hashCode(): number;
								public getSignatureHashes(): java.util.Set<string>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module browser {
							export class BrowserAuthorizationStrategy<GenericOAuth2Strategy, GenericAuthorizationRequest> extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.browser.BrowserAuthorizationStrategy<any, any>>;
								public dispose(): void;
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.Activity, param2: androidx.fragment.app.Fragment);
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.Activity, param2: androidx.fragment.app.Fragment, param3: boolean);
								public setBrowserSafeList(param0: java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>): void;
								public requestAuthorization(param0: any, param1: any): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
								public completeAuthorization(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module browser {
							export class BrowserBlocklist {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.browser.BrowserBlocklist>;
								public constructor(param0: native.Array<com.microsoft.identity.common.internal.ui.browser.Browser>);
								public matches(param0: com.microsoft.identity.common.internal.ui.browser.Browser): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module browser {
							export class BrowserDescriptor {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>;
								public constructor(param0: string, param1: java.util.Set<string>, param2: string, param3: string);
								public constructor(param0: string, param1: string, param2: string, param3: string);
								public matches(param0: com.microsoft.identity.common.internal.ui.browser.Browser): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module browser {
							export class BrowserSelector {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.browser.BrowserSelector>;
								public static select(param0: globalAndroid.content.Context, param1: java.util.List<com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor>): com.microsoft.identity.common.internal.ui.browser.Browser;
								public constructor();
								public static getAllBrowsers(param0: globalAndroid.content.Context): java.util.List<com.microsoft.identity.common.internal.ui.browser.Browser>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module browser {
							export class CustomTabsManager {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.browser.CustomTabsManager>;
								public getClient(): androidx.browser.customtabs.CustomTabsClient;
								public getCustomTabsIntent(): androidx.browser.customtabs.CustomTabsIntent;
								public constructor(param0: globalAndroid.content.Context);
								public unbind(): void;
								public bind(param0: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export class AzureActiveDirectoryWebViewClient extends com.microsoft.identity.common.internal.ui.webview.OAuth2WebViewClient {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.AzureActiveDirectoryWebViewClient>;
								public static ERROR: string;
								public static ERROR_SUBCODE: string;
								public static ERROR_DESCRIPTION: string;
								public shouldOverrideUrlLoading(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.WebResourceRequest): boolean;
								public shouldOverrideUrlLoading(param0: globalAndroid.webkit.WebView, param1: string): boolean;
								public processRedirectUrl(param0: globalAndroid.webkit.WebView, param1: string): boolean;
								public onReceivedClientCertRequest(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.ClientCertRequest): void;
								public constructor(param0: globalAndroid.app.Activity, param1: com.microsoft.identity.common.internal.ui.webview.challengehandlers.IAuthorizationCompletionCallback, param2: com.microsoft.identity.common.internal.ui.webview.OnPageLoadedCallback, param3: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export class EmbeddedWebViewAuthorizationStrategy<GenericOAuth2Strategy, GenericAuthorizationRequest> extends com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy<any, any> {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.EmbeddedWebViewAuthorizationStrategy<any, any>>;
								public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.Activity, param2: androidx.fragment.app.Fragment);
								public requestAuthorization(param0: any, param1: any): java.util.concurrent.Future<com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult<any, any>>;
								public completeAuthorization(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export class ExpectedPage {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.ExpectedPage>;
								public constructor(param0: string, param1: com.microsoft.identity.common.internal.ui.webview.OnPageLoadedCallback);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export abstract class OAuth2WebViewClient {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.OAuth2WebViewClient>;
								public static mExpectedPage: com.microsoft.identity.common.internal.ui.webview.ExpectedPage;
								public onReceivedHttpAuthRequest(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.HttpAuthHandler, param2: string, param3: string): void;
								public onReceivedSslError(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.SslErrorHandler, param2: globalAndroid.net.http.SslError): void;
								public onPageStarted(param0: globalAndroid.webkit.WebView, param1: string, param2: globalAndroid.graphics.Bitmap): void;
								public onReceivedError(param0: globalAndroid.webkit.WebView, param1: number, param2: string, param3: string): void;
								public onPageFinished(param0: globalAndroid.webkit.WebView, param1: string): void;
								public getActivity(): globalAndroid.app.Activity;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export class OnPageLoadedCallback {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.OnPageLoadedCallback>;
								/**
								 * Constructs a new instance of the com.microsoft.identity.common.internal.ui.webview.OnPageLoadedCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: { onPageLoaded(): void });
								public constructor();
								public onPageLoaded(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export class ProcessUtil {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.ProcessUtil>;
								public static AuthServiceProcess: string;
								public constructor();
								public static isRunningOnAuthService(param0: globalAndroid.content.Context): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export class WebViewUtil {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.WebViewUtil>;
								public constructor();
								public static removeCookiesFromWebView(param0: globalAndroid.content.Context): void;
								public static setDataDirectorySuffix(param0: globalAndroid.content.Context): void;
								public static removeSessionCookiesFromWebView(param0: globalAndroid.content.Context): void;
								public static setAcceptCookie(param0: boolean, param1: globalAndroid.content.Context): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class ChallengeFactory {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.ChallengeFactory>;
									public constructor();
									public static getNtlmChallenge(param0: globalAndroid.webkit.WebView, param1: globalAndroid.webkit.HttpAuthHandler, param2: string, param3: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.NtlmChallenge;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class ClientCertAuthChallengeHandler extends com.microsoft.identity.common.internal.ui.webview.challengehandlers.IChallengeHandler<globalAndroid.webkit.ClientCertRequest, java.lang.Void> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.ClientCertAuthChallengeHandler>;
									public constructor(param0: globalAndroid.app.Activity);
									public processChallenge(param0: any): any;
									public processChallenge(param0: globalAndroid.webkit.ClientCertRequest): java.lang.Void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class IAuthorizationCompletionCallback {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.IAuthorizationCompletionCallback>;
									/**
									 * Constructs a new instance of the com.microsoft.identity.common.internal.ui.webview.challengehandlers.IAuthorizationCompletionCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: { onChallengeResponseReceived(param0: number, param1: globalAndroid.content.Intent): void; setPKeyAuthStatus(param0: boolean): void });
									public constructor();
									public setPKeyAuthStatus(param0: boolean): void;
									public onChallengeResponseReceived(param0: number, param1: globalAndroid.content.Intent): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class IChallengeHandler<GenericChallenge, GenericResponse> extends java.lang.Object {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.IChallengeHandler<any, any>>;
									/**
									 * Constructs a new instance of the com.microsoft.identity.common.internal.ui.webview.challengehandlers.IChallengeHandler<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: { processChallenge(param0: GenericChallenge): GenericResponse });
									public constructor();
									public processChallenge(param0: GenericChallenge): GenericResponse;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class NtlmChallenge {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.NtlmChallenge>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class NtlmChallengeHandler extends com.microsoft.identity.common.internal.ui.webview.challengehandlers.IChallengeHandler<com.microsoft.identity.common.internal.ui.webview.challengehandlers.NtlmChallenge, java.lang.Void> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.NtlmChallengeHandler>;
									public processChallenge(param0: com.microsoft.identity.common.internal.ui.webview.challengehandlers.NtlmChallenge): java.lang.Void;
									public constructor(param0: globalAndroid.app.Activity, param1: com.microsoft.identity.common.internal.ui.webview.challengehandlers.IAuthorizationCompletionCallback);
									public processChallenge(param0: any): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class PKeyAuthChallenge {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge>;
									public getContext(): string;
									public getThumbprint(): string;
									public getSubmitUrl(): string;
									public getCertAuthorities(): java.util.List<string>;
									public constructor(param0: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder);
									public getVersion(): string;
									public getNonce(): string;
								}
								export module PKeyAuthChallenge {
									export class Builder {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder>;
										public setSubmitUrl(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
										public setNonce(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
										public setThumbprint(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
										public setVersion(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
										public self(): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
										public constructor();
										public build(): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge;
										public setContext(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
										public setCertAuthorities(param0: java.util.List<string>): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge.Builder;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class PKeyAuthChallengeFactory {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeFactory>;
									public constructor();
									public getPKeyAuthChallenge(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge;
									public getPKeyAuthChallenge(param0: string, param1: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module ui {
						export module webview {
							export module challengehandlers {
								export class PKeyAuthChallengeHandler extends com.microsoft.identity.common.internal.ui.webview.challengehandlers.IChallengeHandler<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge, java.lang.Void> {
									public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler>;
									public static getChallengeHeader(param0: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge): java.util.Map<string, string>;
									public constructor(param0: globalAndroid.webkit.WebView, param1: com.microsoft.identity.common.internal.ui.webview.challengehandlers.IAuthorizationCompletionCallback);
									public processChallenge(param0: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallenge): java.lang.Void;
									public processChallenge(param0: any): any;
								}
								export module PKeyAuthChallengeHandler {
									export class RequestField {
										public static class: java.lang.Class<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField>;
										public static Nonce: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
										public static CertAuthorities: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
										public static Version: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
										public static SubmitUrl: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
										public static Context: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
										public static CertThumbprint: com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
										public static values(): native.Array<com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField>;
										public static valueOf(param0: string): com.microsoft.identity.common.internal.ui.webview.challengehandlers.PKeyAuthChallengeHandler.RequestField;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class AccountManagerUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.AccountManagerUtil>;
							public static canUseAccountManagerOperation(param0: globalAndroid.content.Context): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class BrokerProtocolVersionUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.BrokerProtocolVersionUtil>;
							public static BROKER_PROTOCOL_COMPRESSION_CHANGES_MINIMUM_VERSION: string;
							public constructor();
							public static canCompressBrokerPayloads(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class ClockSkewManager extends com.microsoft.identity.common.internal.util.IClockSkewManager {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.ClockSkewManager>;
							public toClientTime(param0: number): java.util.Date;
							public getSkewMillis(): number;
							public toReferenceTime(param0: number): java.util.Date;
							public onTimestampReceived(param0: number): void;
							public getCurrentClientTime(): java.util.Date;
							public getAdjustedReferenceTime(): java.util.Date;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module ClockSkewManager {
							export class PreferencesMetadata {
								public static class: java.lang.Class<com.microsoft.identity.common.internal.util.ClockSkewManager.PreferencesMetadata>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class DateUtilities {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.DateUtilities>;
							public static getExpiresOn(param0: number): number;
							public static createCopy(param0: java.util.Date): java.util.Date;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class EncodingUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.EncodingUtil>;
							public static base64UrlEncodeToString(param0: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class GzipUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.GzipUtil>;
							public constructor();
							public static decompressBytesToString(param0: native.Array<number>): string;
							public static compressString(param0: string): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class HeaderSerializationUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.HeaderSerializationUtil>;
							public constructor();
							public static toJson(param0: java.util.Map<string, java.util.List<string>>): string;
							public static fromJson(param0: string): java.util.HashMap<string, java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class ICacheRecordGsonAdapter extends com.google.gson.JsonDeserializer<com.microsoft.identity.common.internal.cache.ICacheRecord> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.ICacheRecordGsonAdapter>;
							public constructor();
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): any;
							public deserialize(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.microsoft.identity.common.internal.cache.ICacheRecord;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class IClockSkewManager {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.IClockSkewManager>;
							/**
							 * Constructs a new instance of the com.microsoft.identity.common.internal.util.IClockSkewManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: { onTimestampReceived(param0: number): void; getSkewMillis(): number; toClientTime(param0: number): java.util.Date; toReferenceTime(param0: number): java.util.Date; getCurrentClientTime(): java.util.Date; getAdjustedReferenceTime(): java.util.Date });
							public constructor();
							public toClientTime(param0: number): java.util.Date;
							public getSkewMillis(): number;
							public toReferenceTime(param0: number): java.util.Date;
							public onTimestampReceived(param0: number): void;
							public getCurrentClientTime(): java.util.Date;
							public getAdjustedReferenceTime(): java.util.Date;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class NumberUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.NumberUtil>;
							public constructor();
							public static parseLongSafely(param0: string): java.lang.Long;
							public static parseIntSafely(param0: string): java.lang.Integer;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class ParcelableUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.ParcelableUtil>;
							public static marshall(param0: globalAndroid.os.Parcelable): native.Array<number>;
							public static unmarshall(param0: native.Array<number>, param1: globalAndroid.os.Parcelable.Creator): any;
							public static unmarshall(param0: native.Array<number>): globalAndroid.os.Parcel;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class QueryParamsAdapter extends com.google.gson.TypeAdapter<java.util.List<globalAndroid.util.Pair<string, string>>> {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.QueryParamsAdapter>;
							public constructor();
							public write(param0: com.google.gson.stream.JsonWriter, param1: any): void;
							public static _toJson(param0: java.util.List<globalAndroid.util.Pair<string, string>>): string;
							public static _fromJson(param0: string): java.util.List<globalAndroid.util.Pair<string, string>>;
							public read(param0: com.google.gson.stream.JsonReader): any;
							public read(param0: com.google.gson.stream.JsonReader): java.util.List<globalAndroid.util.Pair<string, string>>;
							public write(param0: com.google.gson.stream.JsonWriter, param1: java.util.List<globalAndroid.util.Pair<string, string>>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module common {
				export module internal {
					export module util {
						export class StringUtil {
							public static class: java.lang.Class<com.microsoft.identity.common.internal.util.StringUtil>;
							public static isUuid(param0: string): boolean;
							public static isEmpty(param0: string): boolean;
							public static convertSetToString(param0: java.util.Set<string>, param1: string): string;
							public static countMatches(param0: string, param1: string): number;
							public static compareSemanticVersion(param0: string, param1: string): number;
							public static join(param0: string, param1: java.util.List<string>): string;
							public static getTenantInfo(param0: string): globalAndroid.util.Pair<string, string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module microsoft {
		export module identity {
			export module msal {
				export class BuildConfig {
					public static class: java.lang.Class<com.microsoft.identity.msal.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class Algorithm extends net.minidev.json.JSONAware {
				public static class: java.lang.Class<com.nimbusds.jose.Algorithm>;
				public static NONE: com.nimbusds.jose.Algorithm;
				public getRequirement(): com.nimbusds.jose.Requirement;
				public constructor(param0: string, param1: com.nimbusds.jose.Requirement);
				public hashCode(): number;
				public equals(param0: any): boolean;
				public getName(): string;
				public toString(): string;
				public toJSONString(): string;
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class AlgorithmFamily<T> extends java.util.LinkedHashSet<any> {
				public static class: java.lang.Class<com.nimbusds.jose.AlgorithmFamily<any>>;
				public add(param0: any): boolean;
				public addAll(param0: java.util.Collection<any>): boolean;
				public removeAll(param0: java.util.Collection<any>): boolean;
				public retainAll(param0: java.util.Collection<any>): boolean;
				public constructor(param0: native.Array<any>);
				public remove(param0: any): boolean;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export abstract class CommonSEHeader extends com.nimbusds.jose.Header {
				public static class: java.lang.Class<com.nimbusds.jose.CommonSEHeader>;
				public getX509CertSHA256Thumbprint(): com.nimbusds.jose.util.Base64URL;
				public getX509CertURL(): java.net.URI;
				public toJSONObject(): net.minidev.json.JSONObject;
				public getKeyID(): string;
				public getX509CertChain(): java.util.List<com.nimbusds.jose.util.Base64>;
				public getJWKURL(): java.net.URI;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.util.Map<string, any>, param5: com.nimbusds.jose.util.Base64URL);
				public getJWK(): com.nimbusds.jose.jwk.JWK;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.net.URI, param5: com.nimbusds.jose.jwk.JWK, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: string, param11: java.util.Map<string, any>, param12: com.nimbusds.jose.util.Base64URL);
				public getIncludedParams(): java.util.Set<string>;
				/** @deprecated */
				public getX509CertThumbprint(): com.nimbusds.jose.util.Base64URL;
				public constructor(param0: com.nimbusds.jose.Header);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class CompressionAlgorithm extends net.minidev.json.JSONAware {
				public static class: java.lang.Class<com.nimbusds.jose.CompressionAlgorithm>;
				public static DEF: com.nimbusds.jose.CompressionAlgorithm;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public getName(): string;
				public toString(): string;
				public toJSONString(): string;
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class CriticalHeaderParamsAware {
				public static class: java.lang.Class<com.nimbusds.jose.CriticalHeaderParamsAware>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.CriticalHeaderParamsAware interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { getProcessedCriticalHeaderParams(): java.util.Set<string>; getDeferredCriticalHeaderParams(): java.util.Set<string> });
				public constructor();
				public getDeferredCriticalHeaderParams(): java.util.Set<string>;
				public getProcessedCriticalHeaderParams(): java.util.Set<string>;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class EncryptionMethod extends com.nimbusds.jose.Algorithm {
				public static class: java.lang.Class<com.nimbusds.jose.EncryptionMethod>;
				public static A128CBC_HS256: com.nimbusds.jose.EncryptionMethod;
				public static A192CBC_HS384: com.nimbusds.jose.EncryptionMethod;
				public static A256CBC_HS512: com.nimbusds.jose.EncryptionMethod;
				public static A128CBC_HS256_DEPRECATED: com.nimbusds.jose.EncryptionMethod;
				public static A256CBC_HS512_DEPRECATED: com.nimbusds.jose.EncryptionMethod;
				public static A128GCM: com.nimbusds.jose.EncryptionMethod;
				public static A192GCM: com.nimbusds.jose.EncryptionMethod;
				public static A256GCM: com.nimbusds.jose.EncryptionMethod;
				public constructor(param0: string, param1: com.nimbusds.jose.Requirement, param2: number);
				public constructor(param0: string, param1: com.nimbusds.jose.Requirement);
				public cekBitLength(): number;
				public static parse(param0: string): com.nimbusds.jose.EncryptionMethod;
				public toJSONString(): string;
				public constructor(param0: string);
			}
			export module EncryptionMethod {
				export class Family extends com.nimbusds.jose.AlgorithmFamily<com.nimbusds.jose.EncryptionMethod> {
					public static class: java.lang.Class<com.nimbusds.jose.EncryptionMethod.Family>;
					public static AES_CBC_HMAC_SHA: com.nimbusds.jose.EncryptionMethod.Family;
					public static AES_GCM: com.nimbusds.jose.EncryptionMethod.Family;
					public constructor(param0: native.Array<any>);
					public constructor(param0: native.Array<com.nimbusds.jose.EncryptionMethod>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export abstract class Header {
				public static class: java.lang.Class<com.nimbusds.jose.Header>;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.Header;
				public getContentType(): string;
				public getAlgorithm(): com.nimbusds.jose.Algorithm;
				public static parse(param0: string): com.nimbusds.jose.Header;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.util.Map<string, any>, param5: com.nimbusds.jose.util.Base64URL);
				public getCriticalParams(): java.util.Set<string>;
				public getCustomParams(): java.util.Map<string, any>;
				public getCustomParam(param0: string): any;
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public getType(): com.nimbusds.jose.JOSEObjectType;
				public toString(): string;
				public toBase64URL(): com.nimbusds.jose.util.Base64URL;
				public getParsedBase64URL(): com.nimbusds.jose.util.Base64URL;
				public static parseAlgorithm(param0: net.minidev.json.JSONObject): com.nimbusds.jose.Algorithm;
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public toJSONObject(): net.minidev.json.JSONObject;
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public getIncludedParams(): java.util.Set<string>;
				public constructor(param0: com.nimbusds.jose.Header);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JOSEException {
				public static class: java.lang.Class<com.nimbusds.jose.JOSEException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export abstract class JOSEObject {
				public static class: java.lang.Class<com.nimbusds.jose.JOSEObject>;
				public static MIME_TYPE_COMPACT: string;
				public static MIME_TYPE_JS: string;
				public getHeader(): com.nimbusds.jose.Header;
				public getPayload(): com.nimbusds.jose.Payload;
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public static split(param0: string): native.Array<com.nimbusds.jose.util.Base64URL>;
				public setParsedParts(param0: native.Array<com.nimbusds.jose.util.Base64URL>): void;
				public constructor(param0: com.nimbusds.jose.Payload);
				public getParsedParts(): native.Array<com.nimbusds.jose.util.Base64URL>;
				public serialize(): string;
				public setPayload(param0: com.nimbusds.jose.Payload): void;
				public constructor();
				public getParsedString(): string;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JOSEObjectType extends net.minidev.json.JSONAware {
				public static class: java.lang.Class<com.nimbusds.jose.JOSEObjectType>;
				public static JOSE: com.nimbusds.jose.JOSEObjectType;
				public static JOSE_JSON: com.nimbusds.jose.JOSEObjectType;
				public static JWT: com.nimbusds.jose.JOSEObjectType;
				public getType(): string;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public toString(): string;
				public toJSONString(): string;
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JOSEProvider {
				public static class: java.lang.Class<com.nimbusds.jose.JOSEProvider>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JOSEProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {});
				public constructor();
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWEAlgorithm extends com.nimbusds.jose.Algorithm {
				public static class: java.lang.Class<com.nimbusds.jose.JWEAlgorithm>;
				public static RSA1_5: com.nimbusds.jose.JWEAlgorithm;
				public static RSA_OAEP: com.nimbusds.jose.JWEAlgorithm;
				public static RSA_OAEP_256: com.nimbusds.jose.JWEAlgorithm;
				public static A128KW: com.nimbusds.jose.JWEAlgorithm;
				public static A192KW: com.nimbusds.jose.JWEAlgorithm;
				public static A256KW: com.nimbusds.jose.JWEAlgorithm;
				public static DIR: com.nimbusds.jose.JWEAlgorithm;
				public static ECDH_ES: com.nimbusds.jose.JWEAlgorithm;
				public static ECDH_ES_A128KW: com.nimbusds.jose.JWEAlgorithm;
				public static ECDH_ES_A192KW: com.nimbusds.jose.JWEAlgorithm;
				public static ECDH_ES_A256KW: com.nimbusds.jose.JWEAlgorithm;
				public static A128GCMKW: com.nimbusds.jose.JWEAlgorithm;
				public static A192GCMKW: com.nimbusds.jose.JWEAlgorithm;
				public static A256GCMKW: com.nimbusds.jose.JWEAlgorithm;
				public static PBES2_HS256_A128KW: com.nimbusds.jose.JWEAlgorithm;
				public static PBES2_HS384_A192KW: com.nimbusds.jose.JWEAlgorithm;
				public static PBES2_HS512_A256KW: com.nimbusds.jose.JWEAlgorithm;
				public constructor(param0: string, param1: com.nimbusds.jose.Requirement);
				public static parse(param0: string): com.nimbusds.jose.JWEAlgorithm;
				public toJSONString(): string;
				public constructor(param0: string);
			}
			export module JWEAlgorithm {
				export class Family extends com.nimbusds.jose.AlgorithmFamily<com.nimbusds.jose.JWEAlgorithm> {
					public static class: java.lang.Class<com.nimbusds.jose.JWEAlgorithm.Family>;
					public static RSA: com.nimbusds.jose.JWEAlgorithm.Family;
					public static AES_KW: com.nimbusds.jose.JWEAlgorithm.Family;
					public static ECDH_ES: com.nimbusds.jose.JWEAlgorithm.Family;
					public static AES_GCM_KW: com.nimbusds.jose.JWEAlgorithm.Family;
					public static PBES2: com.nimbusds.jose.JWEAlgorithm.Family;
					public static ASYMMETRIC: com.nimbusds.jose.JWEAlgorithm.Family;
					public static SYMMETRIC: com.nimbusds.jose.JWEAlgorithm.Family;
					public constructor(param0: native.Array<any>);
					public constructor(param0: native.Array<com.nimbusds.jose.JWEAlgorithm>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWECryptoParts {
				public static class: java.lang.Class<com.nimbusds.jose.JWECryptoParts>;
				public getEncryptedKey(): com.nimbusds.jose.util.Base64URL;
				public getCipherText(): com.nimbusds.jose.util.Base64URL;
				public constructor(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL);
				public getInitializationVector(): com.nimbusds.jose.util.Base64URL;
				public getHeader(): com.nimbusds.jose.JWEHeader;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL);
				public getAuthenticationTag(): com.nimbusds.jose.util.Base64URL;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWEDecrypter extends com.nimbusds.jose.JWEProvider {
				public static class: java.lang.Class<com.nimbusds.jose.JWEDecrypter>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JWEDecrypter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>; supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>; supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>; getJCAContext(): any });
				public constructor();
				public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
				public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
				public getJCAContext(): any;
				public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWEEncrypter extends com.nimbusds.jose.JWEProvider {
				public static class: java.lang.Class<com.nimbusds.jose.JWEEncrypter>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JWEEncrypter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts; supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>; supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>; getJCAContext(): any });
				public constructor();
				public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
				public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
				public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
				public getJCAContext(): any;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWEHeader extends com.nimbusds.jose.CommonSEHeader {
				public static class: java.lang.Class<com.nimbusds.jose.JWEHeader>;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.Header;
				public getAlgorithm(): com.nimbusds.jose.JWEAlgorithm;
				public getEphemeralPublicKey(): com.nimbusds.jose.jwk.JWK;
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader;
				public getAuthTag(): com.nimbusds.jose.util.Base64URL;
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public toJSONObject(): net.minidev.json.JSONObject;
				public getIV(): com.nimbusds.jose.util.Base64URL;
				public getIncludedParams(): java.util.Set<string>;
				public static parse(param0: string): com.nimbusds.jose.JWEHeader;
				public constructor(param0: com.nimbusds.jose.Header);
				public static getRegisteredParameterNames(): java.util.Set<string>;
				public getCompressionAlgorithm(): com.nimbusds.jose.CompressionAlgorithm;
				public getAlgorithm(): com.nimbusds.jose.Algorithm;
				public getAgreementPartyUInfo(): com.nimbusds.jose.util.Base64URL;
				public getEncryptionMethod(): com.nimbusds.jose.EncryptionMethod;
				public static parse(param0: string): com.nimbusds.jose.Header;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.util.Map<string, any>, param5: com.nimbusds.jose.util.Base64URL);
				public getAgreementPartyVInfo(): com.nimbusds.jose.util.Base64URL;
				public getPBES2Salt(): com.nimbusds.jose.util.Base64URL;
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.JWEHeader;
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public getPBES2Count(): number;
				public constructor(param0: com.nimbusds.jose.JWEHeader);
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.net.URI, param5: com.nimbusds.jose.jwk.JWK, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: string, param11: java.util.Map<string, any>, param12: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.JWEAlgorithm, param1: com.nimbusds.jose.EncryptionMethod);
				public constructor(
					param0: com.nimbusds.jose.Algorithm,
					param1: com.nimbusds.jose.EncryptionMethod,
					param2: com.nimbusds.jose.JOSEObjectType,
					param3: string,
					param4: java.util.Set<string>,
					param5: java.net.URI,
					param6: com.nimbusds.jose.jwk.JWK,
					param7: java.net.URI,
					param8: com.nimbusds.jose.util.Base64URL,
					param9: com.nimbusds.jose.util.Base64URL,
					param10: java.util.List<com.nimbusds.jose.util.Base64>,
					param11: string,
					param12: com.nimbusds.jose.jwk.JWK,
					param13: com.nimbusds.jose.CompressionAlgorithm,
					param14: com.nimbusds.jose.util.Base64URL,
					param15: com.nimbusds.jose.util.Base64URL,
					param16: com.nimbusds.jose.util.Base64URL,
					param17: number,
					param18: com.nimbusds.jose.util.Base64URL,
					param19: com.nimbusds.jose.util.Base64URL,
					param20: java.util.Map<string, any>,
					param21: com.nimbusds.jose.util.Base64URL
				);
			}
			export module JWEHeader {
				export class Builder {
					public static class: java.lang.Class<com.nimbusds.jose.JWEHeader.Builder>;
					public jwkURL(param0: java.net.URI): com.nimbusds.jose.JWEHeader.Builder;
					public compressionAlgorithm(param0: com.nimbusds.jose.CompressionAlgorithm): com.nimbusds.jose.JWEHeader.Builder;
					public authTag(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public build(): com.nimbusds.jose.JWEHeader;
					public pbes2Salt(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public ephemeralPublicKey(param0: com.nimbusds.jose.jwk.JWK): com.nimbusds.jose.JWEHeader.Builder;
					public type(param0: com.nimbusds.jose.JOSEObjectType): com.nimbusds.jose.JWEHeader.Builder;
					public constructor(param0: com.nimbusds.jose.JWEHeader);
					public jwk(param0: com.nimbusds.jose.jwk.JWK): com.nimbusds.jose.JWEHeader.Builder;
					public agreementPartyVInfo(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public parsedBase64URL(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public x509CertChain(param0: java.util.List<com.nimbusds.jose.util.Base64>): com.nimbusds.jose.JWEHeader.Builder;
					public x509CertURL(param0: java.net.URI): com.nimbusds.jose.JWEHeader.Builder;
					public constructor(param0: com.nimbusds.jose.JWEAlgorithm, param1: com.nimbusds.jose.EncryptionMethod);
					/** @deprecated */
					public x509CertThumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public customParams(param0: java.util.Map<string, any>): com.nimbusds.jose.JWEHeader.Builder;
					public contentType(param0: string): com.nimbusds.jose.JWEHeader.Builder;
					public criticalParams(param0: java.util.Set<string>): com.nimbusds.jose.JWEHeader.Builder;
					public agreementPartyUInfo(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
					public customParam(param0: string, param1: any): com.nimbusds.jose.JWEHeader.Builder;
					public keyID(param0: string): com.nimbusds.jose.JWEHeader.Builder;
					public pbes2Count(param0: number): com.nimbusds.jose.JWEHeader.Builder;
					public iv(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWEHeader.Builder;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWEObject extends com.nimbusds.jose.JOSEObject {
				public static class: java.lang.Class<com.nimbusds.jose.JWEObject>;
				public static parse(param0: string): com.nimbusds.jose.JWEObject;
				public getEncryptedKey(): com.nimbusds.jose.util.Base64URL;
				public getCipherText(): com.nimbusds.jose.util.Base64URL;
				public encrypt(param0: com.nimbusds.jose.JWEEncrypter): void;
				public getAuthTag(): com.nimbusds.jose.util.Base64URL;
				public constructor(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.Payload);
				public constructor();
				public getHeader(): com.nimbusds.jose.Header;
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public decrypt(param0: com.nimbusds.jose.JWEDecrypter): void;
				public getState(): com.nimbusds.jose.JWEObject.State;
				public getIV(): com.nimbusds.jose.util.Base64URL;
				public constructor(param0: com.nimbusds.jose.Payload);
				public getHeader(): com.nimbusds.jose.JWEHeader;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL);
				public serialize(): string;
			}
			export module JWEObject {
				export class State {
					public static class: java.lang.Class<com.nimbusds.jose.JWEObject.State>;
					public static UNENCRYPTED: com.nimbusds.jose.JWEObject.State;
					public static ENCRYPTED: com.nimbusds.jose.JWEObject.State;
					public static DECRYPTED: com.nimbusds.jose.JWEObject.State;
					public static values(): native.Array<com.nimbusds.jose.JWEObject.State>;
					public static valueOf(param0: string): com.nimbusds.jose.JWEObject.State;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWEProvider extends java.lang.Object {
				public static class: java.lang.Class<com.nimbusds.jose.JWEProvider>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JWEProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>; supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>; getJCAContext(): any });
				public constructor();
				public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
				public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
				public getJCAContext(): any;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWSAlgorithm extends com.nimbusds.jose.Algorithm {
				public static class: java.lang.Class<com.nimbusds.jose.JWSAlgorithm>;
				public static HS256: com.nimbusds.jose.JWSAlgorithm;
				public static HS384: com.nimbusds.jose.JWSAlgorithm;
				public static HS512: com.nimbusds.jose.JWSAlgorithm;
				public static RS256: com.nimbusds.jose.JWSAlgorithm;
				public static RS384: com.nimbusds.jose.JWSAlgorithm;
				public static RS512: com.nimbusds.jose.JWSAlgorithm;
				public static ES256: com.nimbusds.jose.JWSAlgorithm;
				public static ES256K: com.nimbusds.jose.JWSAlgorithm;
				public static ES384: com.nimbusds.jose.JWSAlgorithm;
				public static ES512: com.nimbusds.jose.JWSAlgorithm;
				public static PS256: com.nimbusds.jose.JWSAlgorithm;
				public static PS384: com.nimbusds.jose.JWSAlgorithm;
				public static PS512: com.nimbusds.jose.JWSAlgorithm;
				public static EdDSA: com.nimbusds.jose.JWSAlgorithm;
				public constructor(param0: string, param1: com.nimbusds.jose.Requirement);
				public static parse(param0: string): com.nimbusds.jose.JWSAlgorithm;
				public toJSONString(): string;
				public constructor(param0: string);
			}
			export module JWSAlgorithm {
				export class Family extends com.nimbusds.jose.AlgorithmFamily<com.nimbusds.jose.JWSAlgorithm> {
					public static class: java.lang.Class<com.nimbusds.jose.JWSAlgorithm.Family>;
					public static HMAC_SHA: com.nimbusds.jose.JWSAlgorithm.Family;
					public static RSA: com.nimbusds.jose.JWSAlgorithm.Family;
					public static EC: com.nimbusds.jose.JWSAlgorithm.Family;
					public static ED: com.nimbusds.jose.JWSAlgorithm.Family;
					public static SIGNATURE: com.nimbusds.jose.JWSAlgorithm.Family;
					public constructor(param0: native.Array<any>);
					public constructor(param0: native.Array<com.nimbusds.jose.JWSAlgorithm>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWSHeader extends com.nimbusds.jose.CommonSEHeader {
				public static class: java.lang.Class<com.nimbusds.jose.JWSHeader>;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.Header;
				public static parse(param0: string): com.nimbusds.jose.JWSHeader;
				public static getRegisteredParameterNames(): java.util.Set<string>;
				public getAlgorithm(): com.nimbusds.jose.Algorithm;
				public static parse(param0: string): com.nimbusds.jose.Header;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.util.Map<string, any>, param5: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.JWSHeader);
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWSHeader;
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWSHeader;
				public constructor(param0: com.nimbusds.jose.JWSAlgorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.net.URI, param5: com.nimbusds.jose.jwk.JWK, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: string, param11: java.util.Map<string, any>, param12: com.nimbusds.jose.util.Base64URL);
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public getAlgorithm(): com.nimbusds.jose.JWSAlgorithm;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.JWSHeader;
				public constructor(param0: com.nimbusds.jose.JWSAlgorithm);
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWSHeader;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.net.URI, param5: com.nimbusds.jose.jwk.JWK, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: string, param11: java.util.Map<string, any>, param12: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.Header);
			}
			export module JWSHeader {
				export class Builder {
					public static class: java.lang.Class<com.nimbusds.jose.JWSHeader.Builder>;
					public keyID(param0: string): com.nimbusds.jose.JWSHeader.Builder;
					public customParam(param0: string, param1: any): com.nimbusds.jose.JWSHeader.Builder;
					public customParams(param0: java.util.Map<string, any>): com.nimbusds.jose.JWSHeader.Builder;
					public build(): com.nimbusds.jose.JWSHeader;
					public constructor(param0: com.nimbusds.jose.JWSAlgorithm);
					public parsedBase64URL(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWSHeader.Builder;
					public contentType(param0: string): com.nimbusds.jose.JWSHeader.Builder;
					public criticalParams(param0: java.util.Set<string>): com.nimbusds.jose.JWSHeader.Builder;
					public jwk(param0: com.nimbusds.jose.jwk.JWK): com.nimbusds.jose.JWSHeader.Builder;
					public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWSHeader.Builder;
					public x509CertChain(param0: java.util.List<com.nimbusds.jose.util.Base64>): com.nimbusds.jose.JWSHeader.Builder;
					public jwkURL(param0: java.net.URI): com.nimbusds.jose.JWSHeader.Builder;
					public x509CertURL(param0: java.net.URI): com.nimbusds.jose.JWSHeader.Builder;
					public type(param0: com.nimbusds.jose.JOSEObjectType): com.nimbusds.jose.JWSHeader.Builder;
					public constructor(param0: com.nimbusds.jose.JWSHeader);
					/** @deprecated */
					public x509CertThumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.JWSHeader.Builder;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWSObject extends com.nimbusds.jose.JOSEObject {
				public static class: java.lang.Class<com.nimbusds.jose.JWSObject>;
				public getState(): com.nimbusds.jose.JWSObject.State;
				public static parse(param0: string): com.nimbusds.jose.JWSObject;
				public getSigningInput(): native.Array<number>;
				public getSignature(): com.nimbusds.jose.util.Base64URL;
				public constructor();
				public constructor(param0: com.nimbusds.jose.JWSHeader, param1: com.nimbusds.jose.Payload);
				public getHeader(): com.nimbusds.jose.Header;
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public getHeader(): com.nimbusds.jose.JWSHeader;
				public serialize(param0: boolean): string;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.Payload);
				public verify(param0: com.nimbusds.jose.JWSVerifier): boolean;
				public serialize(): string;
				public sign(param0: com.nimbusds.jose.JWSSigner): void;
			}
			export module JWSObject {
				export class State {
					public static class: java.lang.Class<com.nimbusds.jose.JWSObject.State>;
					public static UNSIGNED: com.nimbusds.jose.JWSObject.State;
					public static SIGNED: com.nimbusds.jose.JWSObject.State;
					public static VERIFIED: com.nimbusds.jose.JWSObject.State;
					public static values(): native.Array<com.nimbusds.jose.JWSObject.State>;
					public static valueOf(param0: string): com.nimbusds.jose.JWSObject.State;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWSProvider extends java.lang.Object {
				public static class: java.lang.Class<com.nimbusds.jose.JWSProvider>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JWSProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>; getJCAContext(): any });
				public constructor();
				public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
				public getJCAContext(): any;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWSSigner extends com.nimbusds.jose.JWSProvider {
				public static class: java.lang.Class<com.nimbusds.jose.JWSSigner>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JWSSigner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { sign(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>): com.nimbusds.jose.util.Base64URL; supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>; getJCAContext(): any });
				public constructor();
				public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
				public getJCAContext(): any;
				public sign(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>): com.nimbusds.jose.util.Base64URL;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class JWSVerifier extends com.nimbusds.jose.JWSProvider {
				public static class: java.lang.Class<com.nimbusds.jose.JWSVerifier>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.JWSVerifier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { verify(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>, param2: com.nimbusds.jose.util.Base64URL): boolean; supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>; getJCAContext(): any });
				public constructor();
				public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
				public verify(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>, param2: com.nimbusds.jose.util.Base64URL): boolean;
				public getJCAContext(): any;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class KeyException extends com.nimbusds.jose.JOSEException {
				public static class: java.lang.Class<com.nimbusds.jose.KeyException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class KeyLengthException extends com.nimbusds.jose.KeyException {
				public static class: java.lang.Class<com.nimbusds.jose.KeyLengthException>;
				public getAlgorithm(): com.nimbusds.jose.Algorithm;
				public constructor(param0: number, param1: com.nimbusds.jose.Algorithm);
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: com.nimbusds.jose.Algorithm);
				public constructor(param0: string);
				public getExpectedKeyLength(): number;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class KeySourceException extends com.nimbusds.jose.JOSEException {
				public static class: java.lang.Class<com.nimbusds.jose.KeySourceException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class KeyTypeException extends com.nimbusds.jose.KeyException {
				public static class: java.lang.Class<com.nimbusds.jose.KeyTypeException>;
				public constructor(param0: java.lang.Class<any>);
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class Payload {
				public static class: java.lang.Class<com.nimbusds.jose.Payload>;
				public toJWSObject(): com.nimbusds.jose.JWSObject;
				public toBytes(): native.Array<number>;
				public toType(param0: com.nimbusds.jose.PayloadTransformer<any>): any;
				public toString(): string;
				public toBase64URL(): com.nimbusds.jose.util.Base64URL;
				public constructor(param0: string);
				public constructor(param0: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: native.Array<number>);
				public toJSONObject(): net.minidev.json.JSONObject;
				public constructor(param0: com.nimbusds.jwt.SignedJWT);
				public constructor(param0: net.minidev.json.JSONObject);
				public getOrigin(): com.nimbusds.jose.Payload.Origin;
				public constructor(param0: com.nimbusds.jose.JWSObject);
				public toSignedJWT(): com.nimbusds.jwt.SignedJWT;
			}
			export module Payload {
				export class Origin {
					public static class: java.lang.Class<com.nimbusds.jose.Payload.Origin>;
					public static JSON: com.nimbusds.jose.Payload.Origin;
					public static STRING: com.nimbusds.jose.Payload.Origin;
					public static BYTE_ARRAY: com.nimbusds.jose.Payload.Origin;
					public static BASE64URL: com.nimbusds.jose.Payload.Origin;
					public static JWS_OBJECT: com.nimbusds.jose.Payload.Origin;
					public static SIGNED_JWT: com.nimbusds.jose.Payload.Origin;
					public static valueOf(param0: string): com.nimbusds.jose.Payload.Origin;
					public static values(): native.Array<com.nimbusds.jose.Payload.Origin>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class PayloadTransformer<T> extends java.lang.Object {
				public static class: java.lang.Class<com.nimbusds.jose.PayloadTransformer<any>>;
				/**
				 * Constructs a new instance of the com.nimbusds.jose.PayloadTransformer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { transform(param0: com.nimbusds.jose.Payload): T });
				public constructor();
				public transform(param0: com.nimbusds.jose.Payload): T;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class PlainHeader extends com.nimbusds.jose.Header {
				public static class: java.lang.Class<com.nimbusds.jose.PlainHeader>;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.Header;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.PlainHeader;
				public static getRegisteredParameterNames(): java.util.Set<string>;
				public getAlgorithm(): com.nimbusds.jose.Algorithm;
				public static parse(param0: string): com.nimbusds.jose.Header;
				public constructor(param0: com.nimbusds.jose.Algorithm, param1: com.nimbusds.jose.JOSEObjectType, param2: string, param3: java.util.Set<string>, param4: java.util.Map<string, any>, param5: com.nimbusds.jose.util.Base64URL);
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.PlainHeader;
				public constructor();
				public static parse(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public static parse(param0: string): com.nimbusds.jose.PlainHeader;
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.PlainHeader;
				public constructor(param0: com.nimbusds.jose.JOSEObjectType, param1: string, param2: java.util.Set<string>, param3: java.util.Map<string, any>, param4: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.PlainHeader);
				public static parse(param0: string, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.Header;
				public static parse(param0: net.minidev.json.JSONObject, param1: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.PlainHeader;
				public constructor(param0: com.nimbusds.jose.Header);
			}
			export module PlainHeader {
				export class Builder {
					public static class: java.lang.Class<com.nimbusds.jose.PlainHeader.Builder>;
					public contentType(param0: string): com.nimbusds.jose.PlainHeader.Builder;
					public build(): com.nimbusds.jose.PlainHeader;
					public customParams(param0: java.util.Map<string, any>): com.nimbusds.jose.PlainHeader.Builder;
					public criticalParams(param0: java.util.Set<string>): com.nimbusds.jose.PlainHeader.Builder;
					public constructor();
					public constructor(param0: com.nimbusds.jose.PlainHeader);
					public customParam(param0: string, param1: any): com.nimbusds.jose.PlainHeader.Builder;
					public type(param0: com.nimbusds.jose.JOSEObjectType): com.nimbusds.jose.PlainHeader.Builder;
					public parsedBase64URL(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.PlainHeader.Builder;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class PlainObject extends com.nimbusds.jose.JOSEObject {
				public static class: java.lang.Class<com.nimbusds.jose.PlainObject>;
				public getHeader(): com.nimbusds.jose.Header;
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public constructor(param0: com.nimbusds.jose.PlainHeader, param1: com.nimbusds.jose.Payload);
				public getHeader(): com.nimbusds.jose.PlainHeader;
				public static parse(param0: string): com.nimbusds.jose.PlainObject;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.Payload);
				public serialize(): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class RemoteKeySourceException extends com.nimbusds.jose.KeySourceException {
				public static class: java.lang.Class<com.nimbusds.jose.RemoteKeySourceException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export class Requirement {
				public static class: java.lang.Class<com.nimbusds.jose.Requirement>;
				public static REQUIRED: com.nimbusds.jose.Requirement;
				public static RECOMMENDED: com.nimbusds.jose.Requirement;
				public static OPTIONAL: com.nimbusds.jose.Requirement;
				public static values(): native.Array<com.nimbusds.jose.Requirement>;
				public static valueOf(param0: string): com.nimbusds.jose.Requirement;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class AESDecrypter extends com.nimbusds.jose.crypto.impl.AESCryptoProvider implements com.nimbusds.jose.JWEDecrypter, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.AESDecrypter>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: native.Array<number>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public constructor(param0: javax.crypto.SecretKey);
					public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
					public constructor(param0: javax.crypto.SecretKey, param1: java.util.Set<string>);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class AESEncrypter extends com.nimbusds.jose.crypto.impl.AESCryptoProvider implements com.nimbusds.jose.JWEEncrypter {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.AESEncrypter>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor(param0: native.Array<number>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public constructor(param0: javax.crypto.SecretKey);
					public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
				export module AESEncrypter {
					export class AlgFamily {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.AESEncrypter.AlgFamily>;
						public static AESKW: com.nimbusds.jose.crypto.AESEncrypter.AlgFamily;
						public static AESGCMKW: com.nimbusds.jose.crypto.AESEncrypter.AlgFamily;
						public static valueOf(param0: string): com.nimbusds.jose.crypto.AESEncrypter.AlgFamily;
						public static values(): native.Array<com.nimbusds.jose.crypto.AESEncrypter.AlgFamily>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class DirectDecrypter extends com.nimbusds.jose.crypto.impl.DirectCryptoProvider implements com.nimbusds.jose.JWEDecrypter, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.DirectDecrypter>;
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public constructor(param0: javax.crypto.SecretKey, param1: boolean);
					public constructor(param0: javax.crypto.SecretKey, param1: java.util.Set<string>, param2: boolean);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: native.Array<number>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey);
					public constructor(param0: javax.crypto.SecretKey);
					public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
					public constructor(param0: javax.crypto.SecretKey, param1: java.util.Set<string>);
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class DirectEncrypter extends com.nimbusds.jose.crypto.impl.DirectCryptoProvider implements com.nimbusds.jose.JWEEncrypter {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.DirectEncrypter>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor(param0: native.Array<number>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public constructor(param0: javax.crypto.SecretKey);
					public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class ECDHDecrypter extends com.nimbusds.jose.crypto.impl.ECDHCryptoProvider implements com.nimbusds.jose.JWEDecrypter, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.ECDHDecrypter>;
					public static SUPPORTED_ELLIPTIC_CURVES: java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public constructor(param0: com.nimbusds.jose.jwk.Curve);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public constructor(param0: java.security.PrivateKey, param1: java.util.Set<string>, param2: com.nimbusds.jose.jwk.Curve);
					public getPrivateKey(): java.security.PrivateKey;
					public constructor(param0: com.nimbusds.jose.jwk.ECKey);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public supportedEllipticCurves(): java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public constructor(param0: java.security.interfaces.ECPrivateKey, param1: java.util.Set<string>);
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor(param0: java.security.interfaces.ECPrivateKey);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class ECDHEncrypter extends com.nimbusds.jose.crypto.impl.ECDHCryptoProvider implements com.nimbusds.jose.JWEEncrypter {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.ECDHEncrypter>;
					public static SUPPORTED_ELLIPTIC_CURVES: java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getPublicKey(): java.security.interfaces.ECPublicKey;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor(param0: com.nimbusds.jose.jwk.Curve);
					public constructor(param0: java.security.interfaces.ECPublicKey);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
					public constructor(param0: com.nimbusds.jose.jwk.ECKey);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public constructor(param0: java.security.interfaces.ECPublicKey, param1: javax.crypto.SecretKey);
					public supportedEllipticCurves(): java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class ECDSASigner extends com.nimbusds.jose.crypto.impl.ECDSAProvider implements com.nimbusds.jose.JWSSigner {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.ECDSASigner>;
					public constructor(param0: java.security.interfaces.ECPrivateKey);
					public sign(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>): com.nimbusds.jose.util.Base64URL;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public constructor(param0: com.nimbusds.jose.JWSAlgorithm);
					public constructor(param0: java.security.PrivateKey, param1: com.nimbusds.jose.jwk.Curve);
					public getPrivateKey(): java.security.PrivateKey;
					public constructor(param0: com.nimbusds.jose.jwk.ECKey);
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class ECDSAVerifier extends com.nimbusds.jose.crypto.impl.ECDSAProvider implements com.nimbusds.jose.JWSVerifier, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.ECDSAVerifier>;
					public getPublicKey(): java.security.interfaces.ECPublicKey;
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: java.security.interfaces.ECPublicKey);
					public verify(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>, param2: com.nimbusds.jose.util.Base64URL): boolean;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public constructor(param0: java.security.interfaces.ECPublicKey, param1: java.util.Set<string>);
					public constructor(param0: com.nimbusds.jose.JWSAlgorithm);
					public constructor(param0: com.nimbusds.jose.jwk.ECKey);
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class Ed25519Signer extends com.nimbusds.jose.crypto.impl.EdDSAProvider implements com.nimbusds.jose.JWSSigner {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.Ed25519Signer>;
					public getPrivateKey(): com.nimbusds.jose.jwk.OctetKeyPair;
					public sign(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>): com.nimbusds.jose.util.Base64URL;
					public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair);
					public constructor();
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class Ed25519Verifier extends com.nimbusds.jose.crypto.impl.EdDSAProvider implements com.nimbusds.jose.JWSVerifier, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.Ed25519Verifier>;
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair);
					public verify(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>, param2: com.nimbusds.jose.util.Base64URL): boolean;
					public constructor();
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair, param1: java.util.Set<string>);
					public getPublicKey(): com.nimbusds.jose.jwk.OctetKeyPair;
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class MACSigner extends com.nimbusds.jose.crypto.impl.MACProvider implements com.nimbusds.jose.JWSSigner {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.MACSigner>;
					public constructor(param0: native.Array<number>, param1: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public sign(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>): com.nimbusds.jose.util.Base64URL;
					public constructor(param0: native.Array<number>);
					public constructor(param0: string);
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey);
					public constructor(param0: javax.crypto.SecretKey);
					public static getMinRequiredSecretLength(param0: com.nimbusds.jose.JWSAlgorithm): number;
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public static getCompatibleAlgorithms(param0: number): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class MACVerifier extends com.nimbusds.jose.crypto.impl.MACProvider implements com.nimbusds.jose.JWSVerifier, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.MACVerifier>;
					public constructor(param0: native.Array<number>, param1: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public verify(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>, param2: com.nimbusds.jose.util.Base64URL): boolean;
					public constructor(param0: string);
					public constructor(param0: native.Array<number>, param1: java.util.Set<string>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey, param1: java.util.Set<string>);
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: native.Array<number>);
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public constructor(param0: com.nimbusds.jose.jwk.OctetSequenceKey);
					public constructor(param0: javax.crypto.SecretKey);
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class PasswordBasedDecrypter extends com.nimbusds.jose.crypto.impl.PasswordBasedCryptoProvider implements com.nimbusds.jose.JWEDecrypter, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.PasswordBasedDecrypter>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: native.Array<number>);
					public constructor(param0: string);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class PasswordBasedEncrypter extends com.nimbusds.jose.crypto.impl.PasswordBasedCryptoProvider implements com.nimbusds.jose.JWEEncrypter {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.PasswordBasedEncrypter>;
					public static MIN_SALT_LENGTH: number;
					public static MIN_RECOMMENDED_ITERATION_COUNT: number;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor(param0: native.Array<number>);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
					public getIterationCount(): number;
					public constructor(param0: native.Array<number>, param1: number, param2: number);
					public constructor(param0: string, param1: number, param2: number);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getSaltLength(): number;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class RSADecrypter extends com.nimbusds.jose.crypto.impl.RSACryptoProvider implements com.nimbusds.jose.JWEDecrypter, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.RSADecrypter>;
					public getCEKDecryptionException(): java.lang.Exception;
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public constructor(param0: java.security.PrivateKey);
					public constructor(param0: java.security.PrivateKey, param1: java.util.Set<string>);
					public getPrivateKey(): java.security.PrivateKey;
					public constructor(param0: com.nimbusds.jose.jwk.RSAKey);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public constructor(param0: java.security.PrivateKey, param1: java.util.Set<string>, param2: boolean);
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor();
					public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class RSAEncrypter extends com.nimbusds.jose.crypto.impl.RSACryptoProvider implements com.nimbusds.jose.JWEEncrypter {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.RSAEncrypter>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor();
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public getPublicKey(): java.security.interfaces.RSAPublicKey;
					public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
					public constructor(param0: com.nimbusds.jose.jwk.RSAKey);
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public constructor(param0: java.security.interfaces.RSAPublicKey);
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: javax.crypto.SecretKey);
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class RSASSASigner extends com.nimbusds.jose.crypto.impl.RSASSAProvider implements com.nimbusds.jose.JWSSigner {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.RSASSASigner>;
					public sign(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>): com.nimbusds.jose.util.Base64URL;
					public constructor(param0: java.security.PrivateKey, param1: boolean);
					public constructor();
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public constructor(param0: java.security.PrivateKey);
					public getPrivateKey(): java.security.PrivateKey;
					public constructor(param0: com.nimbusds.jose.jwk.RSAKey);
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public constructor(param0: com.nimbusds.jose.jwk.RSAKey, param1: boolean);
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class RSASSAVerifier extends com.nimbusds.jose.crypto.impl.RSASSAProvider implements com.nimbusds.jose.JWSVerifier, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.RSASSAVerifier>;
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: java.util.Set<string>);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public verify(param0: com.nimbusds.jose.JWSHeader, param1: native.Array<number>, param2: com.nimbusds.jose.util.Base64URL): boolean;
					public constructor();
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
					public getPublicKey(): java.security.interfaces.RSAPublicKey;
					public constructor(param0: com.nimbusds.jose.jwk.RSAKey);
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					public constructor(param0: java.security.interfaces.RSAPublicKey);
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class X25519Decrypter extends com.nimbusds.jose.crypto.impl.ECDHCryptoProvider implements com.nimbusds.jose.JWEDecrypter, com.nimbusds.jose.CriticalHeaderParamsAware {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.X25519Decrypter>;
					public getPrivateKey(): com.nimbusds.jose.jwk.OctetKeyPair;
					public constructor(param0: com.nimbusds.jose.jwk.Curve);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public supportedEllipticCurves(): java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public getDeferredCriticalHeaderParams(): java.util.Set<string>;
					public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair);
					public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair, param1: java.util.Set<string>);
					public decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL): native.Array<number>;
					public getProcessedCriticalHeaderParams(): java.util.Set<string>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export class X25519Encrypter extends com.nimbusds.jose.crypto.impl.ECDHCryptoProvider implements com.nimbusds.jose.JWEEncrypter {
					public static class: java.lang.Class<com.nimbusds.jose.crypto.X25519Encrypter>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
					public constructor(param0: com.nimbusds.jose.jwk.Curve);
					public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair);
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public getPublicKey(): com.nimbusds.jose.jwk.OctetKeyPair;
					public encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public supportedEllipticCurves(): java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module bc {
					export class BouncyCastleProviderSingleton {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.bc.BouncyCastleProviderSingleton>;
						public static getInstance(): org.bouncycastle.jce.provider.BouncyCastleProvider;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module factories {
					export class DefaultJWEDecrypterFactory extends com.nimbusds.jose.proc.JWEDecrypterFactory {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.factories.DefaultJWEDecrypterFactory>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public createJWEDecrypter(param0: com.nimbusds.jose.JWEHeader, param1: java.security.Key): com.nimbusds.jose.JWEDecrypter;
						public constructor();
						public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
						public getJCAContext(): any;
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module factories {
					export class DefaultJWSVerifierFactory extends com.nimbusds.jose.proc.JWSVerifierFactory {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.factories.DefaultJWSVerifierFactory>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public constructor();
						public getJCAContext(): any;
						public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public createJWSVerifier(param0: com.nimbusds.jose.JWSHeader, param1: java.security.Key): com.nimbusds.jose.JWSVerifier;
						public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AAD {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AAD>;
						public static compute(param0: com.nimbusds.jose.util.Base64URL): native.Array<number>;
						public static computeLength(param0: native.Array<number>): native.Array<number>;
						public constructor();
						public static compute(param0: com.nimbusds.jose.JWEHeader): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AESCBC {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AESCBC>;
						public static IV_BIT_LENGTH: number;
						public static encrypt(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: java.security.Provider): native.Array<number>;
						public static decryptAuthenticated(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<number>, param4: native.Array<number>, param5: java.security.Provider, param6: java.security.Provider): native.Array<number>;
						public static encryptWithConcatKDF(param0: com.nimbusds.jose.JWEHeader, param1: javax.crypto.SecretKey, param2: com.nimbusds.jose.util.Base64URL, param3: native.Array<number>, param4: native.Array<number>, param5: java.security.Provider, param6: java.security.Provider): com.nimbusds.jose.crypto.impl.AuthenticatedCipherText;
						public static encryptAuthenticated(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<number>, param4: java.security.Provider, param5: java.security.Provider): com.nimbusds.jose.crypto.impl.AuthenticatedCipherText;
						public static generateIV(param0: java.security.SecureRandom): native.Array<number>;
						public static decryptWithConcatKDF(param0: com.nimbusds.jose.JWEHeader, param1: javax.crypto.SecretKey, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL, param5: com.nimbusds.jose.util.Base64URL, param6: java.security.Provider, param7: java.security.Provider): native.Array<number>;
						public static decrypt(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: java.security.Provider): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class AESCryptoProvider extends com.nimbusds.jose.crypto.impl.BaseJWEProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AESCryptoProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public static COMPATIBLE_ALGORITHMS: java.util.Map<java.lang.Integer, java.util.Set<com.nimbusds.jose.JWEAlgorithm>>;
						public constructor(param0: javax.crypto.SecretKey);
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public getKey(): javax.crypto.SecretKey;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AESGCM {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AESGCM>;
						public static IV_BIT_LENGTH: number;
						public static AUTH_TAG_BIT_LENGTH: number;
						public static encrypt(param0: javax.crypto.SecretKey, param1: com.nimbusds.jose.util.Container<native.Array<number>>, param2: native.Array<number>, param3: native.Array<number>, param4: java.security.Provider): com.nimbusds.jose.crypto.impl.AuthenticatedCipherText;
						public static decrypt(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<number>, param4: native.Array<number>, param5: java.security.Provider): native.Array<number>;
						public static generateIV(param0: java.security.SecureRandom): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AESGCMKW {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AESGCMKW>;
						public static encryptCEK(param0: javax.crypto.SecretKey, param1: com.nimbusds.jose.util.Container<native.Array<number>>, param2: javax.crypto.SecretKey, param3: java.security.Provider): com.nimbusds.jose.crypto.impl.AuthenticatedCipherText;
						public static decryptCEK(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: com.nimbusds.jose.crypto.impl.AuthenticatedCipherText, param3: number, param4: java.security.Provider): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AESKW {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AESKW>;
						public static unwrapCEK(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: java.security.Provider): javax.crypto.SecretKey;
						public static wrapCEK(param0: javax.crypto.SecretKey, param1: javax.crypto.SecretKey, param2: java.security.Provider): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AlgorithmParametersHelper {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AlgorithmParametersHelper>;
						public constructor();
						public static getInstance(param0: string, param1: java.security.Provider): java.security.AlgorithmParameters;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AlgorithmSupportMessage {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AlgorithmSupportMessage>;
						public static unsupportedJWEAlgorithm(param0: com.nimbusds.jose.JWEAlgorithm, param1: java.util.Collection<com.nimbusds.jose.JWEAlgorithm>): string;
						public static unsupportedEllipticCurve(param0: com.nimbusds.jose.jwk.Curve, param1: java.util.Collection<com.nimbusds.jose.jwk.Curve>): string;
						public static unsupportedEncryptionMethod(param0: com.nimbusds.jose.EncryptionMethod, param1: java.util.Collection<com.nimbusds.jose.EncryptionMethod>): string;
						public static unsupportedJWSAlgorithm(param0: com.nimbusds.jose.JWSAlgorithm, param1: java.util.Collection<com.nimbusds.jose.JWSAlgorithm>): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class AuthenticatedCipherText {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.AuthenticatedCipherText>;
						public constructor(param0: native.Array<number>, param1: native.Array<number>);
						public getCipherText(): native.Array<number>;
						public getAuthenticationTag(): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class BaseJWEProvider extends com.nimbusds.jose.JWEProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.BaseJWEProvider>;
						public getJCAContext(): com.nimbusds.jose.jca.JWEJCAContext;
						public getJCAContext(): any;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class BaseJWSProvider extends com.nimbusds.jose.JWSProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.BaseJWSProvider>;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
						public getJCAContext(): any;
						public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class CipherHelper {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.CipherHelper>;
						public constructor();
						public static getInstance(param0: string, param1: java.security.Provider): javax.crypto.Cipher;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class CompositeKey {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.CompositeKey>;
						public constructor(param0: javax.crypto.SecretKey);
						public getTruncatedMACByteLength(): number;
						public getAESKey(): javax.crypto.SecretKey;
						public getMACKey(): javax.crypto.SecretKey;
						public getInputKey(): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class ConcatKDF extends com.nimbusds.jose.jca.JCAAware<com.nimbusds.jose.jca.JCAContext> {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ConcatKDF>;
						public deriveKey(param0: javax.crypto.SecretKey, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: native.Array<number>, param5: native.Array<number>, param6: native.Array<number>): javax.crypto.SecretKey;
						public static encodeIntData(param0: number): native.Array<number>;
						public getJCAContext(): any;
						public static encodeStringData(param0: string): native.Array<number>;
						public static computeDigestCycles(param0: number, param1: number): number;
						public getHashAlgorithm(): string;
						public static composeOtherInfo(param0: native.Array<number>, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<number>, param4: native.Array<number>): native.Array<number>;
						public static encodeDataWithLength(param0: com.nimbusds.jose.util.Base64URL): native.Array<number>;
						public deriveKey(param0: javax.crypto.SecretKey, param1: number, param2: native.Array<number>): javax.crypto.SecretKey;
						public static encodeDataWithLength(param0: native.Array<number>): native.Array<number>;
						public getJCAContext(): com.nimbusds.jose.jca.JCAContext;
						public constructor(param0: string);
						public static encodeNoData(): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class ContentCryptoProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ContentCryptoProvider>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public static COMPATIBLE_ENCRYPTION_METHODS: java.util.Map<java.lang.Integer, java.util.Set<com.nimbusds.jose.EncryptionMethod>>;
						public constructor();
						public static generateCEK(param0: com.nimbusds.jose.EncryptionMethod, param1: java.security.SecureRandom): javax.crypto.SecretKey;
						public static decrypt(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL, param5: javax.crypto.SecretKey, param6: com.nimbusds.jose.jca.JWEJCAContext): native.Array<number>;
						public static encrypt(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>, param2: javax.crypto.SecretKey, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.jca.JWEJCAContext): com.nimbusds.jose.JWECryptoParts;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class CriticalHeaderParamsDeferral {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.CriticalHeaderParamsDeferral>;
						public constructor();
						public headerPasses(param0: com.nimbusds.jose.Header): boolean;
						public ensureHeaderPasses(param0: com.nimbusds.jose.JWEHeader): void;
						public getProcessedCriticalHeaderParams(): java.util.Set<string>;
						public getDeferredCriticalHeaderParams(): java.util.Set<string>;
						public setDeferredCriticalHeaderParams(param0: java.util.Set<string>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class DeflateHelper {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.DeflateHelper>;
						public constructor();
						public static applyCompression(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): native.Array<number>;
						public static applyDecompression(param0: com.nimbusds.jose.JWEHeader, param1: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class DirectCryptoProvider extends com.nimbusds.jose.crypto.impl.BaseJWEProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.DirectCryptoProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public constructor(param0: javax.crypto.SecretKey);
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public getKey(): javax.crypto.SecretKey;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class ECDH {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ECDH>;
						public static deriveSharedSecret(param0: java.security.interfaces.ECPublicKey, param1: java.security.PrivateKey, param2: java.security.Provider): javax.crypto.SecretKey;
						public static deriveSharedSecret(param0: com.nimbusds.jose.jwk.OctetKeyPair, param1: com.nimbusds.jose.jwk.OctetKeyPair): javax.crypto.SecretKey;
						public static resolveAlgorithmMode(param0: com.nimbusds.jose.JWEAlgorithm): com.nimbusds.jose.crypto.impl.ECDH.AlgorithmMode;
						public static deriveSharedKey(param0: com.nimbusds.jose.JWEHeader, param1: javax.crypto.SecretKey, param2: com.nimbusds.jose.crypto.impl.ConcatKDF): javax.crypto.SecretKey;
						public static sharedKeyLength(param0: com.nimbusds.jose.JWEAlgorithm, param1: com.nimbusds.jose.EncryptionMethod): number;
					}
					export module ECDH {
						export class AlgorithmMode {
							public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ECDH.AlgorithmMode>;
							public static DIRECT: com.nimbusds.jose.crypto.impl.ECDH.AlgorithmMode;
							public static KW: com.nimbusds.jose.crypto.impl.ECDH.AlgorithmMode;
							public static values(): native.Array<com.nimbusds.jose.crypto.impl.ECDH.AlgorithmMode>;
							public static valueOf(param0: string): com.nimbusds.jose.crypto.impl.ECDH.AlgorithmMode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class ECDHCryptoProvider extends com.nimbusds.jose.crypto.impl.BaseJWEProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ECDHCryptoProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public encryptWithZ(param0: com.nimbusds.jose.JWEHeader, param1: javax.crypto.SecretKey, param2: native.Array<number>): com.nimbusds.jose.JWECryptoParts;
						public decryptWithZ(param0: com.nimbusds.jose.JWEHeader, param1: javax.crypto.SecretKey, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL, param5: com.nimbusds.jose.util.Base64URL): native.Array<number>;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
						public getCurve(): com.nimbusds.jose.jwk.Curve;
						public constructor(param0: com.nimbusds.jose.jwk.Curve);
						public supportedEllipticCurves(): java.util.Set<com.nimbusds.jose.jwk.Curve>;
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public getConcatKDF(): com.nimbusds.jose.crypto.impl.ConcatKDF;
						public encryptWithZ(param0: com.nimbusds.jose.JWEHeader, param1: javax.crypto.SecretKey, param2: native.Array<number>, param3: javax.crypto.SecretKey): com.nimbusds.jose.JWECryptoParts;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class ECDSA {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ECDSA>;
						public static transcodeSignatureToDER(param0: native.Array<number>): native.Array<number>;
						public static getSignerAndVerifier(param0: com.nimbusds.jose.JWSAlgorithm, param1: java.security.Provider): java.security.Signature;
						public static transcodeSignatureToConcat(param0: native.Array<number>, param1: number): native.Array<number>;
						public static resolveAlgorithm(param0: com.nimbusds.jose.jwk.Curve): com.nimbusds.jose.JWSAlgorithm;
						public static resolveAlgorithm(param0: java.security.interfaces.ECKey): com.nimbusds.jose.JWSAlgorithm;
						public static getSignatureByteArrayLength(param0: com.nimbusds.jose.JWSAlgorithm): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class ECDSAProvider extends com.nimbusds.jose.crypto.impl.BaseJWSProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.ECDSAProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
						public constructor(param0: com.nimbusds.jose.JWSAlgorithm);
						public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public supportedECDSAAlgorithm(): com.nimbusds.jose.JWSAlgorithm;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class EdDSAProvider extends com.nimbusds.jose.crypto.impl.BaseJWSProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.EdDSAProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
						public constructor();
						public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class HMAC {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.HMAC>;
						public static getInitMac(param0: javax.crypto.SecretKey, param1: java.security.Provider): javax.crypto.Mac;
						public constructor();
						public static compute(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: java.security.Provider): native.Array<number>;
						public static compute(param0: string, param1: native.Array<number>, param2: native.Array<number>, param3: java.security.Provider): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class LegacyAESGCM {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.LegacyAESGCM>;
						public static AUTH_TAG_BIT_LENGTH: number;
						public static createAESCipher(param0: javax.crypto.SecretKey, param1: boolean): org.bouncycastle.crypto.engines.AESEngine;
						public static encrypt(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<number>): com.nimbusds.jose.crypto.impl.AuthenticatedCipherText;
						public static decrypt(param0: javax.crypto.SecretKey, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<number>, param4: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class LegacyConcatKDF {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.LegacyConcatKDF>;
						public static generateCIK(param0: javax.crypto.SecretKey, param1: com.nimbusds.jose.EncryptionMethod, param2: native.Array<number>, param3: native.Array<number>): javax.crypto.SecretKey;
						public static generateCEK(param0: javax.crypto.SecretKey, param1: com.nimbusds.jose.EncryptionMethod, param2: native.Array<number>, param3: native.Array<number>): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class MACProvider extends com.nimbusds.jose.crypto.impl.BaseJWSProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.MACProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public static getJCAAlgorithmName(param0: com.nimbusds.jose.JWSAlgorithm): string;
						public constructor(param0: native.Array<number>, param1: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
						public getSecret(): native.Array<number>;
						public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public getSecretKey(): javax.crypto.SecretKey;
						public getSecretString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class PBKDF2 {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.PBKDF2>;
						public static ZERO_BYTE: native.Array<number>;
						public static formatSalt(param0: com.nimbusds.jose.JWEAlgorithm, param1: native.Array<number>): native.Array<number>;
						public static deriveKey(param0: native.Array<number>, param1: native.Array<number>, param2: number, param3: com.nimbusds.jose.crypto.impl.PRFParams): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class PRFParams {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.PRFParams>;
						public getMacProvider(): java.security.Provider;
						public getMACAlgorithm(): string;
						public getDerivedKeyByteLength(): number;
						public constructor(param0: string, param1: java.security.Provider, param2: number);
						public static resolve(param0: com.nimbusds.jose.JWEAlgorithm, param1: java.security.Provider): com.nimbusds.jose.crypto.impl.PRFParams;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class PasswordBasedCryptoProvider extends com.nimbusds.jose.crypto.impl.BaseJWEProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.PasswordBasedCryptoProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public constructor(param0: native.Array<number>);
						public getPasswordString(): string;
						public getPassword(): native.Array<number>;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class RSA1_5 {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSA1_5>;
						public static encryptCEK(param0: java.security.interfaces.RSAPublicKey, param1: javax.crypto.SecretKey, param2: java.security.Provider): native.Array<number>;
						public static decryptCEK(param0: java.security.PrivateKey, param1: native.Array<number>, param2: number, param3: java.security.Provider): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class RSACryptoProvider extends com.nimbusds.jose.crypto.impl.BaseJWEProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSACryptoProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
						public static SUPPORTED_ENCRYPTION_METHODS: java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public constructor();
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWEAlgorithm>, param1: java.util.Set<com.nimbusds.jose.EncryptionMethod>);
						public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
						public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class RSAKeyUtils {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSAKeyUtils>;
						public constructor();
						public static keyBitLength(param0: java.security.PrivateKey): number;
						public static toRSAPrivateKey(param0: com.nimbusds.jose.jwk.RSAKey): java.security.PrivateKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class RSASSA {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSASSA>;
						public static getSignerAndVerifier(param0: com.nimbusds.jose.JWSAlgorithm, param1: java.security.Provider): java.security.Signature;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export abstract class RSASSAProvider extends com.nimbusds.jose.crypto.impl.BaseJWSProvider {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSASSAProvider>;
						public static SUPPORTED_ALGORITHMS: java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
						public constructor(param0: java.util.Set<com.nimbusds.jose.JWSAlgorithm>);
						public constructor();
						public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class RSA_OAEP {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSA_OAEP>;
						public static encryptCEK(param0: java.security.interfaces.RSAPublicKey, param1: javax.crypto.SecretKey, param2: java.security.Provider): native.Array<number>;
						public static decryptCEK(param0: java.security.PrivateKey, param1: native.Array<number>, param2: java.security.Provider): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module impl {
					export class RSA_OAEP_256 {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.impl.RSA_OAEP_256>;
						public static encryptCEK(param0: java.security.interfaces.RSAPublicKey, param1: javax.crypto.SecretKey, param2: java.security.Provider): native.Array<number>;
						public static decryptCEK(param0: java.security.PrivateKey, param1: native.Array<number>, param2: java.security.Provider): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module utils {
					export class ConstantTimeUtils {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.utils.ConstantTimeUtils>;
						public static areEqual(param0: native.Array<number>, param1: native.Array<number>): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module crypto {
				export module utils {
					export class ECChecks {
						public static class: java.lang.Class<com.nimbusds.jose.crypto.utils.ECChecks>;
						public static isPointOnCurve(param0: java.math.BigInteger, param1: java.math.BigInteger, param2: java.security.spec.ECParameterSpec): boolean;
						public static isPointOnCurve(param0: java.security.interfaces.ECPublicKey, param1: java.security.spec.ECParameterSpec): boolean;
						public static isPointOnCurve(param0: java.security.interfaces.ECPublicKey, param1: java.security.interfaces.ECPrivateKey): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jca {
				export class JCAAware<T> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.jca.JCAAware<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.jca.JCAAware<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getJCAContext(): T });
					public constructor();
					public getJCAContext(): T;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jca {
				export class JCAContext {
					public static class: java.lang.Class<com.nimbusds.jose.jca.JCAContext>;
					public constructor(param0: java.security.Provider, param1: java.security.SecureRandom);
					public setSecureRandom(param0: java.security.SecureRandom): void;
					public constructor();
					public setProvider(param0: java.security.Provider): void;
					public getProvider(): java.security.Provider;
					public getSecureRandom(): java.security.SecureRandom;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jca {
				export class JCASupport {
					public static class: java.lang.Class<com.nimbusds.jose.jca.JCASupport>;
					public static isSupported(param0: com.nimbusds.jose.Algorithm): boolean;
					public static isSupported(param0: com.nimbusds.jose.JWEAlgorithm): boolean;
					public static isSupported(param0: com.nimbusds.jose.JWSAlgorithm, param1: java.security.Provider): boolean;
					public static isUnlimitedStrength(): boolean;
					public static isSupported(param0: com.nimbusds.jose.JWSAlgorithm): boolean;
					public static isSupported(param0: com.nimbusds.jose.Algorithm, param1: java.security.Provider): boolean;
					public static isSupported(param0: com.nimbusds.jose.JWEAlgorithm, param1: java.security.Provider): boolean;
					public static isSupported(param0: com.nimbusds.jose.EncryptionMethod): boolean;
					public static isSupported(param0: com.nimbusds.jose.EncryptionMethod, param1: java.security.Provider): boolean;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jca {
				export class JWEJCAContext extends com.nimbusds.jose.jca.JCAContext {
					public static class: java.lang.Class<com.nimbusds.jose.jca.JWEJCAContext>;
					public constructor(param0: java.security.Provider, param1: java.security.SecureRandom);
					public constructor(param0: java.security.Provider, param1: java.security.Provider, param2: java.security.Provider, param3: java.security.Provider, param4: java.security.SecureRandom);
					public getMACProvider(): java.security.Provider;
					public setKeyEncryptionProvider(param0: java.security.Provider): void;
					public setMACProvider(param0: java.security.Provider): void;
					public constructor();
					public getContentEncryptionProvider(): java.security.Provider;
					public getKeyEncryptionProvider(): java.security.Provider;
					public setContentEncryptionProvider(param0: java.security.Provider): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class AsymmetricJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.AsymmetricJWK>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.jwk.AsymmetricJWK interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { toPublicKey(): java.security.PublicKey; toPrivateKey(): java.security.PrivateKey; toKeyPair(): java.security.KeyPair; matches(param0: java.security.cert.X509Certificate): boolean });
					public constructor();
					public toKeyPair(): java.security.KeyPair;
					public toPublicKey(): java.security.PublicKey;
					public matches(param0: java.security.cert.X509Certificate): boolean;
					public toPrivateKey(): java.security.PrivateKey;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class Curve {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.Curve>;
					public static P_256: com.nimbusds.jose.jwk.Curve;
					public static P_256K: com.nimbusds.jose.jwk.Curve;
					public static P_384: com.nimbusds.jose.jwk.Curve;
					public static P_521: com.nimbusds.jose.jwk.Curve;
					public static Ed25519: com.nimbusds.jose.jwk.Curve;
					public static Ed448: com.nimbusds.jose.jwk.Curve;
					public static X25519: com.nimbusds.jose.jwk.Curve;
					public static X448: com.nimbusds.jose.jwk.Curve;
					public constructor(param0: string);
					public static forECParameterSpec(param0: java.security.spec.ECParameterSpec): com.nimbusds.jose.jwk.Curve;
					public toECParameterSpec(): java.security.spec.ECParameterSpec;
					public equals(param0: any): boolean;
					public toString(): string;
					public static forStdName(param0: string): com.nimbusds.jose.jwk.Curve;
					public getName(): string;
					public getStdName(): string;
					public getOID(): string;
					public static forOID(param0: string): com.nimbusds.jose.jwk.Curve;
					public static parse(param0: string): com.nimbusds.jose.jwk.Curve;
					public constructor(param0: string, param1: string, param2: string);
					public static forJWSAlgorithm(param0: com.nimbusds.jose.JWSAlgorithm): java.util.Set<com.nimbusds.jose.jwk.Curve>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class CurveBasedJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.CurveBasedJWK>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.jwk.CurveBasedJWK interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getCurve(): com.nimbusds.jose.jwk.Curve });
					public constructor();
					public getCurve(): com.nimbusds.jose.jwk.Curve;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class ECKey extends com.nimbusds.jose.jwk.JWK implements com.nimbusds.jose.jwk.AsymmetricJWK, com.nimbusds.jose.jwk.CurveBasedJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.ECKey>;
					public static SUPPORTED_CURVES: java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getCurve(): com.nimbusds.jose.jwk.Curve;
					public toJSONString(): string;
					public toKeyPair(): java.security.KeyPair;
					public toECPrivateKey(): java.security.interfaces.ECPrivateKey;
					public size(): number;
					public getD(): com.nimbusds.jose.util.Base64URL;
					public toPublicJWK(): com.nimbusds.jose.jwk.ECKey;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.ECKey;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: java.security.interfaces.ECPublicKey, param2: java.security.PrivateKey, param3: com.nimbusds.jose.jwk.KeyUse, param4: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param5: com.nimbusds.jose.Algorithm, param6: string, param7: java.net.URI, param8: com.nimbusds.jose.util.Base64URL, param9: com.nimbusds.jose.util.Base64URL, param10: java.util.List<com.nimbusds.jose.util.Base64>, param11: java.security.KeyStore);
					public static parse(param0: string): com.nimbusds.jose.jwk.ECKey;
					public getRequiredParams(): java.util.LinkedHashMap<string, any>;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.jwk.KeyUse, param5: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param6: com.nimbusds.jose.Algorithm, param7: string, param8: java.net.URI, param9: com.nimbusds.jose.util.Base64URL, param10: com.nimbusds.jose.util.Base64URL, param11: java.util.List<com.nimbusds.jose.util.Base64>, param12: java.security.KeyStore);
					public matches(param0: java.security.cert.X509Certificate): boolean;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.JWK;
					public toECPrivateKey(param0: java.security.Provider): java.security.interfaces.ECPrivateKey;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: java.security.interfaces.ECPublicKey, param2: java.security.interfaces.ECPrivateKey, param3: com.nimbusds.jose.jwk.KeyUse, param4: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param5: com.nimbusds.jose.Algorithm, param6: string, param7: java.net.URI, param8: com.nimbusds.jose.util.Base64URL, param9: com.nimbusds.jose.util.Base64URL, param10: java.util.List<com.nimbusds.jose.util.Base64>, param11: java.security.KeyStore);
					public hashCode(): number;
					public toJSONObject(): net.minidev.json.JSONObject;
					public toKeyPair(param0: java.security.Provider): java.security.KeyPair;
					public toECPublicKey(): java.security.interfaces.ECPublicKey;
					public static encodeCoordinate(param0: number, param1: java.math.BigInteger): com.nimbusds.jose.util.Base64URL;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.ECKey;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: java.security.interfaces.ECPublicKey, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public getX(): com.nimbusds.jose.util.Base64URL;
					public toPrivateKey(): java.security.PrivateKey;
					public toPublicJWK(): com.nimbusds.jose.jwk.JWK;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.JWK;
					public equals(param0: any): boolean;
					public static parse(param0: string): com.nimbusds.jose.jwk.JWK;
					public toPublicKey(): java.security.PublicKey;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: java.security.PrivateKey, param4: com.nimbusds.jose.jwk.KeyUse, param5: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param6: com.nimbusds.jose.Algorithm, param7: string, param8: java.net.URI, param9: com.nimbusds.jose.util.Base64URL, param10: com.nimbusds.jose.util.Base64URL, param11: java.util.List<com.nimbusds.jose.util.Base64>, param12: java.security.KeyStore);
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.jwk.KeyUse, param4: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param5: com.nimbusds.jose.Algorithm, param6: string, param7: java.net.URI, param8: com.nimbusds.jose.util.Base64URL, param9: com.nimbusds.jose.util.Base64URL, param10: java.util.List<com.nimbusds.jose.util.Base64>, param11: java.security.KeyStore);
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.JWK;
					public constructor(param0: com.nimbusds.jose.jwk.KeyType, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public isPrivate(): boolean;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.ECKey;
					public getY(): com.nimbusds.jose.util.Base64URL;
					public toECPublicKey(param0: java.security.Provider): java.security.interfaces.ECPublicKey;
				}
				export module ECKey {
					export class Builder {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.ECKey.Builder>;
						public keyStore(param0: java.security.KeyStore): com.nimbusds.jose.jwk.ECKey.Builder;
						/** @deprecated */
						public x509CertThumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.ECKey.Builder;
						public keyIDFromThumbprint(): com.nimbusds.jose.jwk.ECKey.Builder;
						public keyUse(param0: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.ECKey.Builder;
						public d(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.ECKey.Builder;
						public privateKey(param0: java.security.interfaces.ECPrivateKey): com.nimbusds.jose.jwk.ECKey.Builder;
						public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL);
						public x509CertChain(param0: java.util.List<com.nimbusds.jose.util.Base64>): com.nimbusds.jose.jwk.ECKey.Builder;
						public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: java.security.interfaces.ECPublicKey);
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.ECKey.Builder;
						public x509CertURL(param0: java.net.URI): com.nimbusds.jose.jwk.ECKey.Builder;
						public keyID(param0: string): com.nimbusds.jose.jwk.ECKey.Builder;
						public build(): com.nimbusds.jose.jwk.ECKey;
						public constructor(param0: com.nimbusds.jose.jwk.ECKey);
						public keyOperations(param0: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.ECKey.Builder;
						public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.ECKey.Builder;
						public keyIDFromThumbprint(param0: string): com.nimbusds.jose.jwk.ECKey.Builder;
						public privateKey(param0: java.security.PrivateKey): com.nimbusds.jose.jwk.ECKey.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class ECParameterTable {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.ECParameterTable>;
					public static get(param0: com.nimbusds.jose.jwk.Curve): java.security.spec.ECParameterSpec;
					public static get(param0: java.security.spec.ECParameterSpec): com.nimbusds.jose.jwk.Curve;
				}
				export module ECParameterTable {
					export class ECFieldImpl {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.ECParameterTable.ECFieldImpl>;
						public getFieldSize(): number;
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export abstract class JWK extends net.minidev.json.JSONAware {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.JWK>;
					public static MIME_TYPE: string;
					public getX509CertChain(): java.util.List<com.nimbusds.jose.util.Base64>;
					public getKeyOperations(): java.util.Set<com.nimbusds.jose.jwk.KeyOperation>;
					public toJSONString(): string;
					public getX509CertURL(): java.net.URI;
					public size(): number;
					public toString(): string;
					public getRequiredParams(): java.util.LinkedHashMap<string, any>;
					public static parseFromPEMEncodedX509Cert(param0: string): com.nimbusds.jose.jwk.JWK;
					public computeThumbprint(param0: string): com.nimbusds.jose.util.Base64URL;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.JWK;
					public hashCode(): number;
					public toJSONObject(): net.minidev.json.JSONObject;
					public static parseFromPEMEncodedObjects(param0: string): com.nimbusds.jose.jwk.JWK;
					public getKeyUse(): com.nimbusds.jose.jwk.KeyUse;
					public getParsedX509CertChain(): java.util.List<java.security.cert.X509Certificate>;
					public getX509CertSHA256Thumbprint(): com.nimbusds.jose.util.Base64URL;
					public getKeyStore(): java.security.KeyStore;
					public toPublicJWK(): com.nimbusds.jose.jwk.JWK;
					public getKeyType(): com.nimbusds.jose.jwk.KeyType;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.JWK;
					public equals(param0: any): boolean;
					public getAlgorithm(): com.nimbusds.jose.Algorithm;
					public static parse(param0: string): com.nimbusds.jose.jwk.JWK;
					public getKeyID(): string;
					/** @deprecated */
					public getX509CertThumbprint(): com.nimbusds.jose.util.Base64URL;
					public computeThumbprint(): com.nimbusds.jose.util.Base64URL;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.JWK;
					public constructor(param0: com.nimbusds.jose.jwk.KeyType, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public isPrivate(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class JWKMatcher {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.JWKMatcher>;
					/** @deprecated */
					public constructor(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>, param1: java.util.Set<com.nimbusds.jose.jwk.KeyUse>, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: java.util.Set<com.nimbusds.jose.Algorithm>, param4: java.util.Set<string>, param5: boolean, param6: boolean, param7: number, param8: number, param9: java.util.Set<java.lang.Integer>, param10: java.util.Set<com.nimbusds.jose.jwk.Curve>);
					public getKeyOperations(): java.util.Set<com.nimbusds.jose.jwk.KeyOperation>;
					public getAlgorithms(): java.util.Set<com.nimbusds.jose.Algorithm>;
					/** @deprecated */
					public getMaxSize(): number;
					/** @deprecated */
					public constructor(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>, param1: java.util.Set<com.nimbusds.jose.jwk.KeyUse>, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: java.util.Set<com.nimbusds.jose.Algorithm>, param4: java.util.Set<string>, param5: boolean, param6: boolean, param7: number, param8: number);
					public getMinKeySize(): number;
					/** @deprecated */
					public getMinSize(): number;
					public toString(): string;
					public getKeyIDs(): java.util.Set<string>;
					public isPrivateOnly(): boolean;
					public hasKeyUse(): boolean;
					public getMaxKeySize(): number;
					public getKeyUses(): java.util.Set<com.nimbusds.jose.jwk.KeyUse>;
					/** @deprecated */
					public constructor(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>, param1: java.util.Set<com.nimbusds.jose.jwk.KeyUse>, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: java.util.Set<com.nimbusds.jose.Algorithm>, param4: java.util.Set<string>, param5: boolean, param6: boolean, param7: boolean, param8: boolean, param9: number, param10: number, param11: java.util.Set<java.lang.Integer>, param12: java.util.Set<com.nimbusds.jose.jwk.Curve>);
					public getKeySizes(): java.util.Set<java.lang.Integer>;
					public constructor(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>, param1: java.util.Set<com.nimbusds.jose.jwk.KeyUse>, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: java.util.Set<com.nimbusds.jose.Algorithm>, param4: java.util.Set<string>, param5: boolean, param6: boolean, param7: boolean, param8: boolean, param9: number, param10: number, param11: java.util.Set<java.lang.Integer>, param12: java.util.Set<com.nimbusds.jose.jwk.Curve>, param13: java.util.Set<com.nimbusds.jose.util.Base64URL>);
					public static forJWEHeader(param0: com.nimbusds.jose.JWEHeader): com.nimbusds.jose.jwk.JWKMatcher;
					public getCurves(): java.util.Set<com.nimbusds.jose.jwk.Curve>;
					/** @deprecated */
					public constructor(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>, param1: java.util.Set<com.nimbusds.jose.jwk.KeyUse>, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: java.util.Set<com.nimbusds.jose.Algorithm>, param4: java.util.Set<string>, param5: boolean, param6: boolean, param7: number, param8: number, param9: java.util.Set<com.nimbusds.jose.jwk.Curve>);
					public getX509CertSHA256Thumbprints(): java.util.Set<com.nimbusds.jose.util.Base64URL>;
					public hasKeyID(): boolean;
					public isPublicOnly(): boolean;
					public static forJWSHeader(param0: com.nimbusds.jose.JWSHeader): com.nimbusds.jose.jwk.JWKMatcher;
					public getKeyTypes(): java.util.Set<com.nimbusds.jose.jwk.KeyType>;
					public matches(param0: com.nimbusds.jose.jwk.JWK): boolean;
					/** @deprecated */
					public constructor(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>, param1: java.util.Set<com.nimbusds.jose.jwk.KeyUse>, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: java.util.Set<com.nimbusds.jose.Algorithm>, param4: java.util.Set<string>, param5: boolean, param6: boolean);
				}
				export module JWKMatcher {
					export class Builder {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.JWKMatcher.Builder>;
						public keyTypes(param0: java.util.Set<com.nimbusds.jose.jwk.KeyType>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public hasKeyID(param0: boolean): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public privateOnly(param0: boolean): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyID(param0: string): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyIDs(param0: native.Array<string>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyTypes(param0: native.Array<com.nimbusds.jose.jwk.KeyType>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public curve(param0: com.nimbusds.jose.jwk.Curve): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public curves(param0: native.Array<com.nimbusds.jose.jwk.Curve>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyType(param0: com.nimbusds.jose.jwk.KeyType): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public algorithms(param0: java.util.Set<com.nimbusds.jose.Algorithm>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keySizes(param0: native.Array<number>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyIDs(param0: java.util.Set<string>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyUse(param0: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public constructor();
						public build(): com.nimbusds.jose.jwk.JWKMatcher;
						public curves(param0: java.util.Set<com.nimbusds.jose.jwk.Curve>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public maxKeySize(param0: number): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyOperation(param0: com.nimbusds.jose.jwk.KeyOperation): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public algorithms(param0: native.Array<com.nimbusds.jose.Algorithm>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyOperations(param0: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public publicOnly(param0: boolean): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyUses(param0: native.Array<com.nimbusds.jose.jwk.KeyUse>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keySizes(param0: java.util.Set<java.lang.Integer>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public hasKeyUse(param0: boolean): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyUses(param0: java.util.Set<com.nimbusds.jose.jwk.KeyUse>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public minKeySize(param0: number): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keyOperations(param0: native.Array<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public x509CertSHA256Thumbprints(param0: java.util.Set<com.nimbusds.jose.util.Base64URL>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public x509CertSHA256Thumbprints(param0: native.Array<com.nimbusds.jose.util.Base64URL>): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.JWKMatcher.Builder;
						public keySize(param0: number): com.nimbusds.jose.jwk.JWKMatcher.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class JWKMetadata {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.JWKMetadata>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class JWKSelector {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.JWKSelector>;
					public constructor(param0: com.nimbusds.jose.jwk.JWKMatcher);
					public select(param0: com.nimbusds.jose.jwk.JWKSet): java.util.List<com.nimbusds.jose.jwk.JWK>;
					public getMatcher(): com.nimbusds.jose.jwk.JWKMatcher;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class JWKSet {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.JWKSet>;
					public static MIME_TYPE: string;
					public toJSONObject(): net.minidev.json.JSONObject;
					public static load(param0: java.io.File): com.nimbusds.jose.jwk.JWKSet;
					public constructor(param0: java.util.List<com.nimbusds.jose.jwk.JWK>, param1: java.util.Map<string, any>);
					public getKeyByKeyId(param0: string): com.nimbusds.jose.jwk.JWK;
					public getAdditionalMembers(): java.util.Map<string, any>;
					public static load(param0: java.net.URL, param1: number, param2: number, param3: number, param4: java.net.Proxy): com.nimbusds.jose.jwk.JWKSet;
					public static load(param0: java.security.KeyStore, param1: com.nimbusds.jose.jwk.PasswordLookup): com.nimbusds.jose.jwk.JWKSet;
					public constructor(param0: com.nimbusds.jose.jwk.JWK);
					public constructor(param0: java.util.List<com.nimbusds.jose.jwk.JWK>);
					public toString(): string;
					public static load(param0: java.net.URL, param1: number, param2: number, param3: number): com.nimbusds.jose.jwk.JWKSet;
					public static load(param0: java.net.URL): com.nimbusds.jose.jwk.JWKSet;
					public static load(param0: java.io.InputStream): com.nimbusds.jose.jwk.JWKSet;
					public constructor();
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.JWKSet;
					public getKeys(): java.util.List<com.nimbusds.jose.jwk.JWK>;
					public toPublicJWKSet(): com.nimbusds.jose.jwk.JWKSet;
					public toJSONObject(param0: boolean): net.minidev.json.JSONObject;
					public static parse(param0: string): com.nimbusds.jose.jwk.JWKSet;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class KeyConverter {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.KeyConverter>;
					public constructor();
					public static toJavaKeys(param0: java.util.List<com.nimbusds.jose.jwk.JWK>): java.util.List<java.security.Key>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class KeyOperation {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.KeyOperation>;
					public static SIGN: com.nimbusds.jose.jwk.KeyOperation;
					public static VERIFY: com.nimbusds.jose.jwk.KeyOperation;
					public static ENCRYPT: com.nimbusds.jose.jwk.KeyOperation;
					public static DECRYPT: com.nimbusds.jose.jwk.KeyOperation;
					public static WRAP_KEY: com.nimbusds.jose.jwk.KeyOperation;
					public static UNWRAP_KEY: com.nimbusds.jose.jwk.KeyOperation;
					public static DERIVE_KEY: com.nimbusds.jose.jwk.KeyOperation;
					public static DERIVE_BITS: com.nimbusds.jose.jwk.KeyOperation;
					public static values(): native.Array<com.nimbusds.jose.jwk.KeyOperation>;
					public toString(): string;
					public identifier(): string;
					public static valueOf(param0: string): com.nimbusds.jose.jwk.KeyOperation;
					public static parse(param0: java.util.List<string>): java.util.Set<com.nimbusds.jose.jwk.KeyOperation>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class KeyType extends net.minidev.json.JSONAware {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.KeyType>;
					public static EC: com.nimbusds.jose.jwk.KeyType;
					public static RSA: com.nimbusds.jose.jwk.KeyType;
					public static OCT: com.nimbusds.jose.jwk.KeyType;
					public static OKP: com.nimbusds.jose.jwk.KeyType;
					public equals(param0: any): boolean;
					public static forAlgorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.KeyType;
					public getValue(): string;
					public toString(): string;
					public toJSONString(): string;
					public static parse(param0: string): com.nimbusds.jose.jwk.KeyType;
					public getRequirement(): com.nimbusds.jose.Requirement;
					public constructor(param0: string, param1: com.nimbusds.jose.Requirement);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class KeyUse {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.KeyUse>;
					public static SIGNATURE: com.nimbusds.jose.jwk.KeyUse;
					public static ENCRYPTION: com.nimbusds.jose.jwk.KeyUse;
					public equals(param0: any): boolean;
					public getValue(): string;
					public toString(): string;
					public constructor(param0: string);
					public identifier(): string;
					public static from(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.KeyUse;
					public hashCode(): number;
					public static parse(param0: string): com.nimbusds.jose.jwk.KeyUse;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class KeyUseAndOpsConsistency {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.KeyUseAndOpsConsistency>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class OctetKeyPair extends com.nimbusds.jose.jwk.JWK implements com.nimbusds.jose.jwk.AsymmetricJWK, com.nimbusds.jose.jwk.CurveBasedJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.OctetKeyPair>;
					public static SUPPORTED_CURVES: java.util.Set<com.nimbusds.jose.jwk.Curve>;
					public getCurve(): com.nimbusds.jose.jwk.Curve;
					public toJSONString(): string;
					public toKeyPair(): java.security.KeyPair;
					public toPublicJWK(): com.nimbusds.jose.jwk.OctetKeyPair;
					public size(): number;
					public getD(): com.nimbusds.jose.util.Base64URL;
					public static parse(param0: string): com.nimbusds.jose.jwk.OctetKeyPair;
					public getRequiredParams(): java.util.LinkedHashMap<string, any>;
					public matches(param0: java.security.cert.X509Certificate): boolean;
					public getDecodedX(): native.Array<number>;
					public hashCode(): number;
					public toJSONObject(): net.minidev.json.JSONObject;
					public getX(): com.nimbusds.jose.util.Base64URL;
					public toPrivateKey(): java.security.PrivateKey;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.OctetKeyPair;
					public toPublicJWK(): com.nimbusds.jose.jwk.JWK;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.JWK;
					public equals(param0: any): boolean;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public static parse(param0: string): com.nimbusds.jose.jwk.JWK;
					public toPublicKey(): java.security.PublicKey;
					public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.jwk.KeyUse, param4: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param5: com.nimbusds.jose.Algorithm, param6: string, param7: java.net.URI, param8: com.nimbusds.jose.util.Base64URL, param9: com.nimbusds.jose.util.Base64URL, param10: java.util.List<com.nimbusds.jose.util.Base64>, param11: java.security.KeyStore);
					public getDecodedD(): native.Array<number>;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.JWK;
					public constructor(param0: com.nimbusds.jose.jwk.KeyType, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public isPrivate(): boolean;
				}
				export module OctetKeyPair {
					export class Builder {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.OctetKeyPair.Builder>;
						/** @deprecated */
						public x509CertThumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public keyOperations(param0: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public keyUse(param0: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public keyIDFromThumbprint(): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public constructor(param0: com.nimbusds.jose.jwk.Curve, param1: com.nimbusds.jose.util.Base64URL);
						public d(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public build(): com.nimbusds.jose.jwk.OctetKeyPair;
						public keyID(param0: string): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public keyIDFromThumbprint(param0: string): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public constructor(param0: com.nimbusds.jose.jwk.OctetKeyPair);
						public x509CertChain(param0: java.util.List<com.nimbusds.jose.util.Base64>): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public keyStore(param0: java.security.KeyStore): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
						public x509CertURL(param0: java.net.URI): com.nimbusds.jose.jwk.OctetKeyPair.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class OctetSequenceKey extends com.nimbusds.jose.jwk.JWK implements com.nimbusds.jose.jwk.SecretJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.OctetSequenceKey>;
					public toPublicJWK(): com.nimbusds.jose.jwk.OctetSequenceKey;
					public toJSONObject(): net.minidev.json.JSONObject;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.OctetSequenceKey;
					public toJSONString(): string;
					public toSecretKey(): javax.crypto.SecretKey;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.OctetSequenceKey;
					public size(): number;
					public toPublicJWK(): com.nimbusds.jose.jwk.JWK;
					public static parse(param0: string): com.nimbusds.jose.jwk.OctetSequenceKey;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.JWK;
					public equals(param0: any): boolean;
					public toByteArray(): native.Array<number>;
					public static parse(param0: string): com.nimbusds.jose.jwk.JWK;
					public getRequiredParams(): java.util.LinkedHashMap<string, any>;
					public toSecretKey(param0: string): javax.crypto.SecretKey;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.JWK;
					public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public getKeyValue(): com.nimbusds.jose.util.Base64URL;
					public hashCode(): number;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.JWK;
					public constructor(param0: com.nimbusds.jose.jwk.KeyType, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public isPrivate(): boolean;
				}
				export module OctetSequenceKey {
					export class Builder {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.OctetSequenceKey.Builder>;
						public constructor(param0: javax.crypto.SecretKey);
						/** @deprecated */
						public x509CertThumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public constructor(param0: native.Array<number>);
						public keyIDFromThumbprint(): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public keyStore(param0: java.security.KeyStore): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public keyID(param0: string): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public x509CertChain(param0: java.util.List<com.nimbusds.jose.util.Base64>): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public build(): com.nimbusds.jose.jwk.OctetSequenceKey;
						public constructor(param0: com.nimbusds.jose.util.Base64URL);
						public keyUse(param0: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public x509CertURL(param0: java.net.URI): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public keyOperations(param0: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
						public keyIDFromThumbprint(param0: string): com.nimbusds.jose.jwk.OctetSequenceKey.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class PEMEncodedKeyParser {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.PEMEncodedKeyParser>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class PasswordLookup {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.PasswordLookup>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.jwk.PasswordLookup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { lookupPassword(param0: string): native.Array<string> });
					public constructor();
					public lookupPassword(param0: string): native.Array<string>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class RSAKey extends com.nimbusds.jose.jwk.JWK implements com.nimbusds.jose.jwk.AsymmetricJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.RSAKey>;
					public toJSONString(): string;
					public toKeyPair(): java.security.KeyPair;
					public getOtherPrimes(): java.util.List<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>;
					public size(): number;
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: java.security.interfaces.RSAPrivateKey, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public getModulus(): com.nimbusds.jose.util.Base64URL;
					public getSecondPrimeFactor(): com.nimbusds.jose.util.Base64URL;
					public getRequiredParams(): java.util.LinkedHashMap<string, any>;
					public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public toRSAPrivateKey(): java.security.interfaces.RSAPrivateKey;
					public matches(param0: java.security.cert.X509Certificate): boolean;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.JWK;
					public getSecondFactorCRTExponent(): com.nimbusds.jose.util.Base64URL;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.RSAKey;
					public hashCode(): number;
					public getPrivateExponent(): com.nimbusds.jose.util.Base64URL;
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: java.security.interfaces.RSAPrivateCrtKey, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public constructor(
						param0: com.nimbusds.jose.util.Base64URL,
						param1: com.nimbusds.jose.util.Base64URL,
						param2: com.nimbusds.jose.util.Base64URL,
						param3: com.nimbusds.jose.util.Base64URL,
						param4: com.nimbusds.jose.util.Base64URL,
						param5: com.nimbusds.jose.util.Base64URL,
						param6: com.nimbusds.jose.util.Base64URL,
						param7: java.util.List<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>,
						param8: com.nimbusds.jose.jwk.KeyUse,
						param9: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>,
						param10: com.nimbusds.jose.Algorithm,
						param11: string,
						param12: java.net.URI,
						param13: com.nimbusds.jose.util.Base64URL,
						param14: com.nimbusds.jose.util.Base64URL,
						param15: java.util.List<com.nimbusds.jose.util.Base64>,
						param16: java.security.KeyStore
					);
					public toJSONObject(): net.minidev.json.JSONObject;
					public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.jwk.KeyUse, param4: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param5: com.nimbusds.jose.Algorithm, param6: string, param7: java.net.URI, param8: com.nimbusds.jose.util.Base64URL, param9: com.nimbusds.jose.util.Base64URL, param10: java.util.List<com.nimbusds.jose.util.Base64>, param11: java.security.KeyStore);
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public getFirstCRTCoefficient(): com.nimbusds.jose.util.Base64URL;
					public toPrivateKey(): java.security.PrivateKey;
					public toPublicJWK(): com.nimbusds.jose.jwk.JWK;
					public getPublicExponent(): com.nimbusds.jose.util.Base64URL;
					public toPublicJWK(): com.nimbusds.jose.jwk.RSAKey;
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: java.security.PrivateKey, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public toRSAPublicKey(): java.security.interfaces.RSAPublicKey;
					public static parse(param0: string): com.nimbusds.jose.jwk.RSAKey;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.RSAKey;
					public static parse(param0: java.security.cert.X509Certificate): com.nimbusds.jose.jwk.JWK;
					public equals(param0: any): boolean;
					/** @deprecated */
					public constructor(
						param0: com.nimbusds.jose.util.Base64URL,
						param1: com.nimbusds.jose.util.Base64URL,
						param2: com.nimbusds.jose.util.Base64URL,
						param3: com.nimbusds.jose.util.Base64URL,
						param4: com.nimbusds.jose.util.Base64URL,
						param5: com.nimbusds.jose.util.Base64URL,
						param6: com.nimbusds.jose.util.Base64URL,
						param7: com.nimbusds.jose.util.Base64URL,
						param8: java.util.List<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>,
						param9: com.nimbusds.jose.jwk.KeyUse,
						param10: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>,
						param11: com.nimbusds.jose.Algorithm,
						param12: string,
						param13: java.net.URI,
						param14: com.nimbusds.jose.util.Base64URL,
						param15: com.nimbusds.jose.util.Base64URL,
						param16: java.util.List<com.nimbusds.jose.util.Base64>
					);
					public constructor(
						param0: com.nimbusds.jose.util.Base64URL,
						param1: com.nimbusds.jose.util.Base64URL,
						param2: com.nimbusds.jose.util.Base64URL,
						param3: com.nimbusds.jose.util.Base64URL,
						param4: com.nimbusds.jose.util.Base64URL,
						param5: com.nimbusds.jose.util.Base64URL,
						param6: com.nimbusds.jose.util.Base64URL,
						param7: com.nimbusds.jose.util.Base64URL,
						param8: java.util.List<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>,
						param9: java.security.PrivateKey,
						param10: com.nimbusds.jose.jwk.KeyUse,
						param11: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>,
						param12: com.nimbusds.jose.Algorithm,
						param13: string,
						param14: java.net.URI,
						param15: com.nimbusds.jose.util.Base64URL,
						param16: com.nimbusds.jose.util.Base64URL,
						param17: java.util.List<com.nimbusds.jose.util.Base64>,
						param18: java.security.KeyStore
					);
					public static parse(param0: string): com.nimbusds.jose.jwk.JWK;
					public static load(param0: java.security.KeyStore, param1: string, param2: native.Array<string>): com.nimbusds.jose.jwk.RSAKey;
					public constructor(param0: java.security.interfaces.RSAPublicKey, param1: java.security.interfaces.RSAMultiPrimePrivateCrtKey, param2: com.nimbusds.jose.jwk.KeyUse, param3: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param4: com.nimbusds.jose.Algorithm, param5: string, param6: java.net.URI, param7: com.nimbusds.jose.util.Base64URL, param8: com.nimbusds.jose.util.Base64URL, param9: java.util.List<com.nimbusds.jose.util.Base64>, param10: java.security.KeyStore);
					public toPublicKey(): java.security.PublicKey;
					public getFirstFactorCRTExponent(): com.nimbusds.jose.util.Base64URL;
					public getFirstPrimeFactor(): com.nimbusds.jose.util.Base64URL;
					public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jose.jwk.JWK;
					public constructor(param0: com.nimbusds.jose.jwk.KeyType, param1: com.nimbusds.jose.jwk.KeyUse, param2: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>, param3: com.nimbusds.jose.Algorithm, param4: string, param5: java.net.URI, param6: com.nimbusds.jose.util.Base64URL, param7: com.nimbusds.jose.util.Base64URL, param8: java.util.List<com.nimbusds.jose.util.Base64>, param9: java.security.KeyStore);
					public isPrivate(): boolean;
				}
				export module RSAKey {
					export class Builder {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.RSAKey.Builder>;
						public secondPrimeFactor(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL);
						public keyUse(param0: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.RSAKey.Builder;
						public keyOperations(param0: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.RSAKey.Builder;
						public constructor(param0: java.security.interfaces.RSAPublicKey);
						public x509CertURL(param0: java.net.URI): com.nimbusds.jose.jwk.RSAKey.Builder;
						public firstFactorCRTExponent(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public firstCRTCoefficient(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public privateKey(param0: java.security.interfaces.RSAMultiPrimePrivateCrtKey): com.nimbusds.jose.jwk.RSAKey.Builder;
						public keyIDFromThumbprint(param0: string): com.nimbusds.jose.jwk.RSAKey.Builder;
						public otherPrimes(param0: java.util.List<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>): com.nimbusds.jose.jwk.RSAKey.Builder;
						public privateKey(param0: java.security.PrivateKey): com.nimbusds.jose.jwk.RSAKey.Builder;
						/** @deprecated */
						public x509CertThumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public firstPrimeFactor(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public secondFactorCRTExponent(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public constructor(param0: com.nimbusds.jose.jwk.RSAKey);
						public keyIDFromThumbprint(): com.nimbusds.jose.jwk.RSAKey.Builder;
						public build(): com.nimbusds.jose.jwk.RSAKey;
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.RSAKey.Builder;
						public keyID(param0: string): com.nimbusds.jose.jwk.RSAKey.Builder;
						public keyStore(param0: java.security.KeyStore): com.nimbusds.jose.jwk.RSAKey.Builder;
						public x509CertChain(param0: java.util.List<com.nimbusds.jose.util.Base64>): com.nimbusds.jose.jwk.RSAKey.Builder;
						public privateKey(param0: java.security.interfaces.RSAPrivateKey): com.nimbusds.jose.jwk.RSAKey.Builder;
						public privateKey(param0: java.security.interfaces.RSAPrivateCrtKey): com.nimbusds.jose.jwk.RSAKey.Builder;
						public privateExponent(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
						public x509CertSHA256Thumbprint(param0: com.nimbusds.jose.util.Base64URL): com.nimbusds.jose.jwk.RSAKey.Builder;
					}
					export class OtherPrimesInfo {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>;
						public getFactorCRTCoefficient(): com.nimbusds.jose.util.Base64URL;
						public getPrimeFactor(): com.nimbusds.jose.util.Base64URL;
						public getFactorCRTExponent(): com.nimbusds.jose.util.Base64URL;
						public constructor(param0: java.security.spec.RSAOtherPrimeInfo);
						public static toList(param0: native.Array<java.security.spec.RSAOtherPrimeInfo>): java.util.List<com.nimbusds.jose.jwk.RSAKey.OtherPrimesInfo>;
						public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL);
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class SecretJWK {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.SecretJWK>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.jwk.SecretJWK interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { toSecretKey(): javax.crypto.SecretKey });
					public constructor();
					public toSecretKey(): javax.crypto.SecretKey;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export class ThumbprintUtils {
					public static class: java.lang.Class<com.nimbusds.jose.jwk.ThumbprintUtils>;
					public static compute(param0: string, param1: java.util.LinkedHashMap<string, any>): com.nimbusds.jose.util.Base64URL;
					public static compute(param0: string, param1: com.nimbusds.jose.jwk.JWK): com.nimbusds.jose.util.Base64URL;
					public constructor();
					public static compute(param0: com.nimbusds.jose.jwk.JWK): com.nimbusds.jose.util.Base64URL;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module gen {
					export class ECKeyGenerator extends com.nimbusds.jose.jwk.gen.JWKGenerator<com.nimbusds.jose.jwk.ECKey> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.gen.ECKeyGenerator>;
						public constructor();
						public generate(): any;
						public constructor(param0: com.nimbusds.jose.jwk.Curve);
						public generate(): com.nimbusds.jose.jwk.ECKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module gen {
					export abstract class JWKGenerator<T> extends java.lang.Object {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.gen.JWKGenerator<any>>;
						public use: com.nimbusds.jose.jwk.KeyUse;
						public ops: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>;
						public alg: com.nimbusds.jose.Algorithm;
						public kid: string;
						public x5tKid: boolean;
						public constructor();
						public keyStore(param0: java.security.KeyStore): com.nimbusds.jose.jwk.gen.JWKGenerator<T>;
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.jwk.gen.JWKGenerator<T>;
						public keyOperations(param0: java.util.Set<com.nimbusds.jose.jwk.KeyOperation>): com.nimbusds.jose.jwk.gen.JWKGenerator<T>;
						public keyUse(param0: com.nimbusds.jose.jwk.KeyUse): com.nimbusds.jose.jwk.gen.JWKGenerator<T>;
						public keyID(param0: string): com.nimbusds.jose.jwk.gen.JWKGenerator<T>;
						public keyIDFromThumbprint(param0: boolean): com.nimbusds.jose.jwk.gen.JWKGenerator<T>;
						public generate(): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module gen {
					export class OctetKeyPairGenerator extends com.nimbusds.jose.jwk.gen.JWKGenerator<com.nimbusds.jose.jwk.OctetKeyPair> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.gen.OctetKeyPairGenerator>;
						public static SUPPORTED_CURVES: java.util.Set<com.nimbusds.jose.jwk.Curve>;
						public generate(): com.nimbusds.jose.jwk.OctetKeyPair;
						public constructor();
						public generate(): any;
						public constructor(param0: com.nimbusds.jose.jwk.Curve);
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module gen {
					export class OctetSequenceKeyGenerator extends com.nimbusds.jose.jwk.gen.JWKGenerator<com.nimbusds.jose.jwk.OctetSequenceKey> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.gen.OctetSequenceKeyGenerator>;
						public static MIN_KEY_SIZE_BITS: number;
						public constructor();
						public generate(): any;
						public generate(): com.nimbusds.jose.jwk.OctetSequenceKey;
						public constructor(param0: number);
						public secureRandom(param0: java.security.SecureRandom): com.nimbusds.jose.jwk.gen.OctetSequenceKeyGenerator;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module gen {
					export class RSAKeyGenerator extends com.nimbusds.jose.jwk.gen.JWKGenerator<com.nimbusds.jose.jwk.RSAKey> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.gen.RSAKeyGenerator>;
						public static MIN_KEY_SIZE_BITS: number;
						public constructor();
						public generate(): com.nimbusds.jose.jwk.RSAKey;
						public constructor(param0: number, param1: boolean);
						public generate(): any;
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class DefaultJWKSetCache extends com.nimbusds.jose.jwk.source.JWKSetCache {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.DefaultJWKSetCache>;
						public static DEFAULT_LIFESPAN_MINUTES: number;
						public isExpired(): boolean;
						public constructor();
						public get(): com.nimbusds.jose.jwk.JWKSet;
						public getPutTimestamp(): number;
						public put(param0: com.nimbusds.jose.jwk.JWKSet): void;
						public getLifespan(param0: java.util.concurrent.TimeUnit): number;
						public constructor(param0: number, param1: java.util.concurrent.TimeUnit);
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class ImmutableJWKSet<C> extends com.nimbusds.jose.jwk.source.JWKSource<any> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.ImmutableJWKSet<any>>;
						public getJWKSet(): com.nimbusds.jose.jwk.JWKSet;
						public constructor(param0: com.nimbusds.jose.jwk.JWKSet);
						public get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: any): java.util.List<com.nimbusds.jose.jwk.JWK>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class ImmutableSecret<C> extends com.nimbusds.jose.jwk.source.ImmutableJWKSet<any> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.ImmutableSecret<any>>;
						public constructor(param0: javax.crypto.SecretKey);
						public constructor(param0: native.Array<number>);
						public getSecret(): native.Array<number>;
						public constructor(param0: com.nimbusds.jose.jwk.JWKSet);
						public get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: any): java.util.List<com.nimbusds.jose.jwk.JWK>;
						public getSecretKey(): javax.crypto.SecretKey;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class JWKSecurityContextJWKSet extends com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.JWKSecurityContext> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.JWKSecurityContextJWKSet>;
						public constructor();
						public get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: com.nimbusds.jose.proc.JWKSecurityContext): java.util.List<com.nimbusds.jose.jwk.JWK>;
						public get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: any): java.util.List<com.nimbusds.jose.jwk.JWK>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class JWKSetCache {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.JWKSetCache>;
						/**
						 * Constructs a new instance of the com.nimbusds.jose.jwk.source.JWKSetCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { put(param0: com.nimbusds.jose.jwk.JWKSet): void; get(): com.nimbusds.jose.jwk.JWKSet });
						public constructor();
						public get(): com.nimbusds.jose.jwk.JWKSet;
						public put(param0: com.nimbusds.jose.jwk.JWKSet): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class JWKSource<C> extends java.lang.Object {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.JWKSource<any>>;
						/**
						 * Constructs a new instance of the com.nimbusds.jose.jwk.source.JWKSource<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: { get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: C): java.util.List<com.nimbusds.jose.jwk.JWK> });
						public constructor();
						public get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: C): java.util.List<com.nimbusds.jose.jwk.JWK>;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module jwk {
				export module source {
					export class RemoteJWKSet<C> extends com.nimbusds.jose.jwk.source.JWKSource<any> {
						public static class: java.lang.Class<com.nimbusds.jose.jwk.source.RemoteJWKSet<any>>;
						public static DEFAULT_HTTP_CONNECT_TIMEOUT: number;
						public static DEFAULT_HTTP_READ_TIMEOUT: number;
						public static DEFAULT_HTTP_SIZE_LIMIT: number;
						public getJWKSetURL(): java.net.URL;
						public constructor(param0: java.net.URL, param1: com.nimbusds.jose.util.ResourceRetriever, param2: com.nimbusds.jose.jwk.source.JWKSetCache);
						public constructor(param0: java.net.URL);
						public get(param0: com.nimbusds.jose.jwk.JWKSelector, param1: any): java.util.List<com.nimbusds.jose.jwk.JWK>;
						public getCachedJWKSet(): com.nimbusds.jose.jwk.JWKSet;
						public constructor(param0: java.net.URL, param1: com.nimbusds.jose.util.ResourceRetriever);
						public getResourceRetriever(): com.nimbusds.jose.util.ResourceRetriever;
						public getJWKSetCache(): com.nimbusds.jose.jwk.source.JWKSetCache;
						public static getFirstSpecifiedKeyID(param0: com.nimbusds.jose.jwk.JWKMatcher): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export abstract class AbstractJWKSelectorWithSource<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.AbstractJWKSelectorWithSource<any>>;
					public getJWKSource(): com.nimbusds.jose.jwk.source.JWKSource<C>;
					public constructor(param0: com.nimbusds.jose.jwk.source.JWKSource<C>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class BadJOSEException {
					public static class: java.lang.Class<com.nimbusds.jose.proc.BadJOSEException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class BadJWEException extends com.nimbusds.jose.proc.BadJOSEException {
					public static class: java.lang.Class<com.nimbusds.jose.proc.BadJWEException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class BadJWSException extends com.nimbusds.jose.proc.BadJOSEException {
					public static class: java.lang.Class<com.nimbusds.jose.proc.BadJWSException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class ConfigurableJOSEProcessor<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.ConfigurableJOSEProcessor<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.ConfigurableJOSEProcessor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						process(param0: string, param1: C): com.nimbusds.jose.Payload;
						process(param0: com.nimbusds.jose.JOSEObject, param1: C): com.nimbusds.jose.Payload;
						process(param0: com.nimbusds.jose.PlainObject, param1: C): com.nimbusds.jose.Payload;
						process(param0: com.nimbusds.jose.JWSObject, param1: C): com.nimbusds.jose.Payload;
						process(param0: com.nimbusds.jose.JWEObject, param1: C): com.nimbusds.jose.Payload;
						getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
						setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
						getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<C>;
						setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<C>): void;
						getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
						setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
						getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<C>;
						setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<C>): void;
						getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
						setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
						getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
						setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					});
					public constructor();
					public getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<C>;
					public setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
					public getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
					public setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<C>): void;
					public getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
					public setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
					public process(param0: string, param1: C): com.nimbusds.jose.Payload;
					public setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
					public process(param0: com.nimbusds.jose.PlainObject, param1: C): com.nimbusds.jose.Payload;
					public process(param0: com.nimbusds.jose.JOSEObject, param1: C): com.nimbusds.jose.Payload;
					public getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<C>;
					public setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					public process(param0: com.nimbusds.jose.JWEObject, param1: C): com.nimbusds.jose.Payload;
					public process(param0: com.nimbusds.jose.JWSObject, param1: C): com.nimbusds.jose.Payload;
					public getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
					public setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<C>): void;
					public getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class DefaultJOSEObjectTypeVerifier<C> extends com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any> {
					public static class: java.lang.Class<com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier<any>>;
					public static JOSE: com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier<any>;
					public static JWT: com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier<any>;
					public constructor();
					public constructor(param0: java.util.Set<com.nimbusds.jose.JOSEObjectType>);
					public constructor(param0: native.Array<com.nimbusds.jose.JOSEObjectType>);
					public getAllowedTypes(): java.util.Set<com.nimbusds.jose.JOSEObjectType>;
					public verify(param0: com.nimbusds.jose.JOSEObjectType, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class DefaultJOSEProcessor<C> extends com.nimbusds.jose.proc.ConfigurableJOSEProcessor<any> {
					public static class: java.lang.Class<com.nimbusds.jose.proc.DefaultJOSEProcessor<any>>;
					public process(param0: com.nimbusds.jose.PlainObject, param1: any): com.nimbusds.jose.Payload;
					public setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
					public getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<any>;
					public getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
					public setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<any>): void;
					public getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
					public setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<any>): void;
					public process(param0: string, param1: any): com.nimbusds.jose.Payload;
					public setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
					public setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
					public process(param0: com.nimbusds.jose.JWSObject, param1: any): com.nimbusds.jose.Payload;
					public setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					public constructor();
					public getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<any>;
					public getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
					public process(param0: com.nimbusds.jose.JOSEObject, param1: any): com.nimbusds.jose.Payload;
					public getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
					public process(param0: com.nimbusds.jose.JWEObject, param1: any): com.nimbusds.jose.Payload;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JOSEMatcher {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JOSEMatcher>;
					public constructor(param0: java.util.Set<java.lang.Class<any>>, param1: java.util.Set<com.nimbusds.jose.Algorithm>, param2: java.util.Set<com.nimbusds.jose.EncryptionMethod>, param3: java.util.Set<java.net.URI>, param4: java.util.Set<string>);
					public getJOSEClasses(): java.util.Set<java.lang.Class<any>>;
					public getKeyIDs(): java.util.Set<string>;
					public getAlgorithms(): java.util.Set<com.nimbusds.jose.Algorithm>;
					public matches(param0: com.nimbusds.jose.JOSEObject): boolean;
					public getEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getJWKURLs(): java.util.Set<java.net.URI>;
				}
				export module JOSEMatcher {
					export class Builder {
						public static class: java.lang.Class<com.nimbusds.jose.proc.JOSEMatcher.Builder>;
						public constructor();
						public encryptionMethods(param0: java.util.Set<com.nimbusds.jose.EncryptionMethod>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public jwkURL(param0: java.net.URI): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public build(): com.nimbusds.jose.proc.JOSEMatcher;
						public encryptionMethods(param0: native.Array<com.nimbusds.jose.EncryptionMethod>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public joseClasses(param0: native.Array<java.lang.Class<any>>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public algorithm(param0: com.nimbusds.jose.Algorithm): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public encryptionMethod(param0: com.nimbusds.jose.EncryptionMethod): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public joseClass(param0: java.lang.Class<any>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public algorithms(param0: java.util.Set<com.nimbusds.jose.Algorithm>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public jwkURLs(param0: java.util.Set<java.net.URI>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public joseClasses(param0: java.util.Set<java.lang.Class<any>>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public jwkURLs(param0: native.Array<java.net.URI>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public keyID(param0: string): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public algorithms(param0: native.Array<com.nimbusds.jose.Algorithm>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public keyIDs(param0: java.util.Set<string>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
						public keyIDs(param0: native.Array<string>): com.nimbusds.jose.proc.JOSEMatcher.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JOSEObjectTypeVerifier<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { verify(param0: com.nimbusds.jose.JOSEObjectType, param1: C): void });
					public constructor();
					public verify(param0: com.nimbusds.jose.JOSEObjectType, param1: C): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JOSEProcessor<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JOSEProcessor<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JOSEProcessor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { process(param0: string, param1: C): com.nimbusds.jose.Payload; process(param0: com.nimbusds.jose.JOSEObject, param1: C): com.nimbusds.jose.Payload; process(param0: com.nimbusds.jose.PlainObject, param1: C): com.nimbusds.jose.Payload; process(param0: com.nimbusds.jose.JWSObject, param1: C): com.nimbusds.jose.Payload; process(param0: com.nimbusds.jose.JWEObject, param1: C): com.nimbusds.jose.Payload });
					public constructor();
					public process(param0: com.nimbusds.jose.PlainObject, param1: C): com.nimbusds.jose.Payload;
					public process(param0: com.nimbusds.jose.JOSEObject, param1: C): com.nimbusds.jose.Payload;
					public process(param0: com.nimbusds.jose.JWEObject, param1: C): com.nimbusds.jose.Payload;
					public process(param0: com.nimbusds.jose.JWSObject, param1: C): com.nimbusds.jose.Payload;
					public process(param0: string, param1: C): com.nimbusds.jose.Payload;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JOSEProcessorConfiguration<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JOSEProcessorConfiguration<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JOSEProcessorConfiguration<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
						setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
						getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<C>;
						setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<C>): void;
						getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
						setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
						getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<C>;
						setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<C>): void;
						getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
						setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
						getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
						setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					});
					public constructor();
					public getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<C>;
					public getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<C>;
					public setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
					public setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					public getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
					public setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<C>): void;
					public getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
					public setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
					public getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
					public setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
					public setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<C>): void;
					public getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWEDecrypterFactory extends com.nimbusds.jose.JWEProvider {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWEDecrypterFactory>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JWEDecrypterFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { createJWEDecrypter(param0: com.nimbusds.jose.JWEHeader, param1: java.security.Key): com.nimbusds.jose.JWEDecrypter; supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>; supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>; getJCAContext(): any });
					public constructor();
					public createJWEDecrypter(param0: com.nimbusds.jose.JWEHeader, param1: java.security.Key): com.nimbusds.jose.JWEDecrypter;
					public supportedJWEAlgorithms(): java.util.Set<com.nimbusds.jose.JWEAlgorithm>;
					public supportedEncryptionMethods(): java.util.Set<com.nimbusds.jose.EncryptionMethod>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWEDecryptionKeySelector<C> extends com.nimbusds.jose.proc.AbstractJWKSelectorWithSource<any> implements com.nimbusds.jose.proc.JWEKeySelector<any> {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWEDecryptionKeySelector<any>>;
					public getExpectedJWEAlgorithm(): com.nimbusds.jose.JWEAlgorithm;
					public selectJWEKeys(param0: com.nimbusds.jose.JWEHeader, param1: any): java.util.List<java.security.Key>;
					public selectJWEKeys(param0: com.nimbusds.jose.JWEHeader, param1: any): java.util.List<any>;
					public constructor(param0: com.nimbusds.jose.jwk.source.JWKSource<any>);
					public createJWKMatcher(param0: com.nimbusds.jose.JWEHeader): com.nimbusds.jose.jwk.JWKMatcher;
					public getExpectedJWEEncryptionMethod(): com.nimbusds.jose.EncryptionMethod;
					public constructor(param0: com.nimbusds.jose.JWEAlgorithm, param1: com.nimbusds.jose.EncryptionMethod, param2: com.nimbusds.jose.jwk.source.JWKSource<any>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWEKeySelector<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWEKeySelector<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JWEKeySelector<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { selectJWEKeys(param0: com.nimbusds.jose.JWEHeader, param1: C): java.util.List<any> });
					public constructor();
					public selectJWEKeys(param0: com.nimbusds.jose.JWEHeader, param1: C): java.util.List<any>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWKSecurityContext extends com.nimbusds.jose.proc.SecurityContext {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWKSecurityContext>;
					public getKeys(): java.util.List<com.nimbusds.jose.jwk.JWK>;
					public constructor(param0: java.util.List<com.nimbusds.jose.jwk.JWK>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWSAlgorithmFamilyJWSKeySelector<C> extends com.nimbusds.jose.proc.AbstractJWKSelectorWithSource<any> implements com.nimbusds.jose.proc.JWSKeySelector<any> {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWSAlgorithmFamilyJWSKeySelector<any>>;
					public static fromJWKSetURL(param0: java.net.URL): com.nimbusds.jose.proc.JWSAlgorithmFamilyJWSKeySelector<any>;
					public constructor(param0: com.nimbusds.jose.jwk.source.JWKSource<any>);
					public static fromJWKSource(param0: com.nimbusds.jose.jwk.source.JWKSource<any>): com.nimbusds.jose.proc.JWSAlgorithmFamilyJWSKeySelector<any>;
					public selectJWSKeys(param0: com.nimbusds.jose.JWSHeader, param1: any): java.util.List<any>;
					public constructor(param0: com.nimbusds.jose.JWSAlgorithm.Family, param1: com.nimbusds.jose.jwk.source.JWKSource<any>);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWSKeySelector<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWSKeySelector<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JWSKeySelector<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { selectJWSKeys(param0: com.nimbusds.jose.JWSHeader, param1: C): java.util.List<any> });
					public constructor();
					public selectJWSKeys(param0: com.nimbusds.jose.JWSHeader, param1: C): java.util.List<any>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWSVerificationKeySelector<C> extends com.nimbusds.jose.proc.AbstractJWKSelectorWithSource<any> implements com.nimbusds.jose.proc.JWSKeySelector<any> {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWSVerificationKeySelector<any>>;
					public createJWKMatcher(param0: com.nimbusds.jose.JWSHeader): com.nimbusds.jose.jwk.JWKMatcher;
					public constructor(param0: com.nimbusds.jose.JWSAlgorithm, param1: com.nimbusds.jose.jwk.source.JWKSource<any>);
					public constructor(param0: com.nimbusds.jose.jwk.source.JWKSource<any>);
					public getExpectedJWSAlgorithm(): com.nimbusds.jose.JWSAlgorithm;
					public selectJWSKeys(param0: com.nimbusds.jose.JWSHeader, param1: any): java.util.List<any>;
					public selectJWSKeys(param0: com.nimbusds.jose.JWSHeader, param1: any): java.util.List<java.security.Key>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class JWSVerifierFactory extends com.nimbusds.jose.JWSProvider {
					public static class: java.lang.Class<com.nimbusds.jose.proc.JWSVerifierFactory>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.JWSVerifierFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { createJWSVerifier(param0: com.nimbusds.jose.JWSHeader, param1: java.security.Key): com.nimbusds.jose.JWSVerifier; supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>; getJCAContext(): any });
					public constructor();
					public createJWSVerifier(param0: com.nimbusds.jose.JWSHeader, param1: java.security.Key): com.nimbusds.jose.JWSVerifier;
					public supportedJWSAlgorithms(): java.util.Set<com.nimbusds.jose.JWSAlgorithm>;
					public getJCAContext(): any;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class SecurityContext {
					public static class: java.lang.Class<com.nimbusds.jose.proc.SecurityContext>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.proc.SecurityContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class SimpleSecurityContext extends java.util.HashMap<string, any> implements com.nimbusds.jose.proc.SecurityContext {
					public static class: java.lang.Class<com.nimbusds.jose.proc.SimpleSecurityContext>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module proc {
				export class SingleKeyJWSKeySelector<C> extends com.nimbusds.jose.proc.JWSKeySelector<any> {
					public static class: java.lang.Class<com.nimbusds.jose.proc.SingleKeyJWSKeySelector<any>>;
					public constructor(param0: com.nimbusds.jose.JWSAlgorithm, param1: java.security.Key);
					public selectJWSKeys(param0: com.nimbusds.jose.JWSHeader, param1: any): java.util.List<any>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export abstract class AbstractRestrictedResourceRetriever extends com.nimbusds.jose.util.RestrictedResourceRetriever {
					public static class: java.lang.Class<com.nimbusds.jose.util.AbstractRestrictedResourceRetriever>;
					public getSizeLimit(): number;
					public setSizeLimit(param0: number): void;
					public constructor(param0: number, param1: number, param2: number);
					public getReadTimeout(): number;
					public retrieveResource(param0: java.net.URL): com.nimbusds.jose.util.Resource;
					public getConnectTimeout(): number;
					public setReadTimeout(param0: number): void;
					public setConnectTimeout(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class ArrayUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.ArrayUtils>;
					public static concat(param0: native.Array<any>, param1: native.Array<native.Array<any>>): native.Array<any>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class Base64 extends net.minidev.json.JSONAware {
					public static class: java.lang.Class<com.nimbusds.jose.util.Base64>;
					public equals(param0: any): boolean;
					public decodeToBigInteger(): java.math.BigInteger;
					public toJSONString(): string;
					public toString(): string;
					public static encode(param0: native.Array<number>): com.nimbusds.jose.util.Base64;
					public constructor(param0: string);
					public static from(param0: string): com.nimbusds.jose.util.Base64;
					public decodeToString(): string;
					public static encode(param0: string): com.nimbusds.jose.util.Base64;
					public hashCode(): number;
					public static encode(param0: java.math.BigInteger): com.nimbusds.jose.util.Base64;
					public decode(): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class Base64Codec {
					public static class: java.lang.Class<com.nimbusds.jose.util.Base64Codec>;
					public static encodeToString(param0: native.Array<number>, param1: boolean): string;
					public static decode(param0: string): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class Base64URL extends com.nimbusds.jose.util.Base64 {
					public static class: java.lang.Class<com.nimbusds.jose.util.Base64URL>;
					public equals(param0: any): boolean;
					public static encode(param0: string): com.nimbusds.jose.util.Base64URL;
					public static encode(param0: native.Array<number>): com.nimbusds.jose.util.Base64;
					public toJSONString(): string;
					public constructor(param0: string);
					public static from(param0: string): com.nimbusds.jose.util.Base64URL;
					public static encode(param0: native.Array<number>): com.nimbusds.jose.util.Base64URL;
					public static from(param0: string): com.nimbusds.jose.util.Base64;
					public static encode(param0: string): com.nimbusds.jose.util.Base64;
					public static encode(param0: java.math.BigInteger): com.nimbusds.jose.util.Base64;
					public static encode(param0: java.math.BigInteger): com.nimbusds.jose.util.Base64URL;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class BigIntegerUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.BigIntegerUtils>;
					public static toBytesUnsigned(param0: java.math.BigInteger): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class BoundedInputStream {
					public static class: java.lang.Class<com.nimbusds.jose.util.BoundedInputStream>;
					public read(): number;
					public read(param0: native.Array<number>, param1: number, param2: number): number;
					public reset(): void;
					public setPropagateClose(param0: boolean): void;
					public read(param0: native.Array<number>): number;
					public markSupported(): boolean;
					public skip(param0: number): number;
					public getLimitBytes(): number;
					public constructor(param0: java.io.InputStream, param1: number);
					public mark(param0: number): void;
					public available(): number;
					public toString(): string;
					public constructor(param0: java.io.InputStream);
					public close(): void;
					public isPropagateClose(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class ByteUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.ByteUtils>;
					public static bitLength(param0: native.Array<number>): number;
					public static concat(param0: native.Array<native.Array<number>>): native.Array<number>;
					public static bitLength(param0: number): number;
					public constructor();
					public static safeBitLength(param0: number): number;
					public static safeBitLength(param0: native.Array<number>): number;
					public static byteLength(param0: number): number;
					public static subArray(param0: native.Array<number>, param1: number, param2: number): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class Container<T> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jose.util.Container<any>>;
					public set(param0: T): void;
					public constructor();
					public constructor(param0: T);
					public get(): T;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class DateUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.DateUtils>;
					public static toSecondsSinceEpoch(param0: java.util.Date): number;
					public static isAfter(param0: java.util.Date, param1: java.util.Date, param2: number): boolean;
					public static fromSecondsSinceEpoch(param0: number): java.util.Date;
					public static isBefore(param0: java.util.Date, param1: java.util.Date, param2: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class DefaultResourceRetriever extends com.nimbusds.jose.util.AbstractRestrictedResourceRetriever implements com.nimbusds.jose.util.RestrictedResourceRetriever {
					public static class: java.lang.Class<com.nimbusds.jose.util.DefaultResourceRetriever>;
					public setDisconnectsAfterUse(param0: boolean): void;
					public disconnectsAfterUse(): boolean;
					public openConnection(param0: java.net.URL): java.net.HttpURLConnection;
					public setProxy(param0: java.net.Proxy): void;
					public setReadTimeout(param0: number): void;
					public getSizeLimit(): number;
					public setSizeLimit(param0: number): void;
					public getProxy(): java.net.Proxy;
					public constructor();
					public constructor(param0: number, param1: number, param2: number);
					public retrieveResource(param0: java.net.URL): com.nimbusds.jose.util.Resource;
					public getReadTimeout(): number;
					public constructor(param0: number, param1: number, param2: number, param3: boolean);
					public getConnectTimeout(): number;
					public constructor(param0: number, param1: number);
					public setConnectTimeout(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class DeflateUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.DeflateUtils>;
					public static decompress(param0: native.Array<number>): native.Array<number>;
					public static compress(param0: native.Array<number>): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class IOUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.IOUtils>;
					public static readInputStreamToString(param0: java.io.InputStream, param1: java.nio.charset.Charset): string;
					public static readFileToString(param0: java.io.File, param1: java.nio.charset.Charset): string;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class IntegerOverflowException extends com.nimbusds.jose.JOSEException {
					public static class: java.lang.Class<com.nimbusds.jose.util.IntegerOverflowException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class IntegerUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.IntegerUtils>;
					public static toBytes(param0: number): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class JSONObjectUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.JSONObjectUtils>;
					public static parse(param0: string): net.minidev.json.JSONObject;
					public static getBoolean(param0: net.minidev.json.JSONObject, param1: string): boolean;
					public static getStringList(param0: net.minidev.json.JSONObject, param1: string): java.util.List<string>;
					public static getInt(param0: net.minidev.json.JSONObject, param1: string): number;
					public static getDouble(param0: net.minidev.json.JSONObject, param1: string): number;
					public static getURI(param0: net.minidev.json.JSONObject, param1: string): java.net.URI;
					public static getJSONArray(param0: net.minidev.json.JSONObject, param1: string): net.minidev.json.JSONArray;
					public static getLong(param0: net.minidev.json.JSONObject, param1: string): number;
					/** @deprecated */
					public static parseJSONObject(param0: string): net.minidev.json.JSONObject;
					public static getStringArray(param0: net.minidev.json.JSONObject, param1: string): native.Array<string>;
					public static getFloat(param0: net.minidev.json.JSONObject, param1: string): number;
					public static getJSONObject(param0: net.minidev.json.JSONObject, param1: string): net.minidev.json.JSONObject;
					public static getString(param0: net.minidev.json.JSONObject, param1: string): string;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class KeyUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.KeyUtils>;
					public static toAESKey(param0: javax.crypto.SecretKey): javax.crypto.SecretKey;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class Resource {
					public static class: java.lang.Class<com.nimbusds.jose.util.Resource>;
					public constructor(param0: string, param1: string);
					public getContent(): string;
					public getContentType(): string;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class ResourceRetriever {
					public static class: java.lang.Class<com.nimbusds.jose.util.ResourceRetriever>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.util.ResourceRetriever interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { retrieveResource(param0: java.net.URL): com.nimbusds.jose.util.Resource });
					public constructor();
					public retrieveResource(param0: java.net.URL): com.nimbusds.jose.util.Resource;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class RestrictedResourceRetriever extends com.nimbusds.jose.util.ResourceRetriever {
					public static class: java.lang.Class<com.nimbusds.jose.util.RestrictedResourceRetriever>;
					/**
					 * Constructs a new instance of the com.nimbusds.jose.util.RestrictedResourceRetriever interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getConnectTimeout(): number; setConnectTimeout(param0: number): void; getReadTimeout(): number; setReadTimeout(param0: number): void; getSizeLimit(): number; setSizeLimit(param0: number): void; retrieveResource(param0: java.net.URL): com.nimbusds.jose.util.Resource });
					public constructor();
					public getSizeLimit(): number;
					public setSizeLimit(param0: number): void;
					public getReadTimeout(): number;
					public retrieveResource(param0: java.net.URL): com.nimbusds.jose.util.Resource;
					public getConnectTimeout(): number;
					public setReadTimeout(param0: number): void;
					public setConnectTimeout(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class StandardCharset {
					public static class: java.lang.Class<com.nimbusds.jose.util.StandardCharset>;
					public static UTF_8: java.nio.charset.Charset;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class X509CertChainUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.X509CertChainUtils>;
					public static toBase64List(param0: net.minidev.json.JSONArray): java.util.List<com.nimbusds.jose.util.Base64>;
					public static parse(param0: java.util.List<com.nimbusds.jose.util.Base64>): java.util.List<java.security.cert.X509Certificate>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jose {
			export module util {
				export class X509CertUtils {
					public static class: java.lang.Class<com.nimbusds.jose.util.X509CertUtils>;
					public static parseWithException(param0: native.Array<number>): java.security.cert.X509Certificate;
					public constructor();
					public static toPEMString(param0: java.security.cert.X509Certificate): string;
					public static computeSHA256Thumbprint(param0: java.security.cert.X509Certificate): com.nimbusds.jose.util.Base64URL;
					public static parse(param0: string): java.security.cert.X509Certificate;
					public static parse(param0: native.Array<number>): java.security.cert.X509Certificate;
					public static toPEMString(param0: java.security.cert.X509Certificate, param1: boolean): string;
					public static parseWithException(param0: string): java.security.cert.X509Certificate;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class EncryptedJWT extends com.nimbusds.jose.JWEObject implements com.nimbusds.jwt.JWT {
				public static class: java.lang.Class<com.nimbusds.jwt.EncryptedJWT>;
				public static parse(param0: string): com.nimbusds.jose.JWEObject;
				public static parse(param0: string): com.nimbusds.jwt.EncryptedJWT;
				public constructor(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jose.Payload);
				public constructor(param0: com.nimbusds.jose.JWEHeader, param1: com.nimbusds.jwt.JWTClaimsSet);
				public constructor();
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public getHeader(): com.nimbusds.jose.Header;
				public getJWTClaimsSet(): com.nimbusds.jwt.JWTClaimsSet;
				public constructor(param0: com.nimbusds.jose.Payload);
				public getHeader(): com.nimbusds.jose.JWEHeader;
				public getParsedParts(): native.Array<com.nimbusds.jose.util.Base64URL>;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL, param3: com.nimbusds.jose.util.Base64URL, param4: com.nimbusds.jose.util.Base64URL);
				public serialize(): string;
				public getParsedString(): string;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class JWT {
				public static class: java.lang.Class<com.nimbusds.jwt.JWT>;
				/**
				 * Constructs a new instance of the com.nimbusds.jwt.JWT interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { getHeader(): com.nimbusds.jose.Header; getJWTClaimsSet(): com.nimbusds.jwt.JWTClaimsSet; getParsedParts(): native.Array<com.nimbusds.jose.util.Base64URL>; getParsedString(): string; serialize(): string });
				public constructor();
				public getHeader(): com.nimbusds.jose.Header;
				public getJWTClaimsSet(): com.nimbusds.jwt.JWTClaimsSet;
				public getParsedParts(): native.Array<com.nimbusds.jose.util.Base64URL>;
				public serialize(): string;
				public getParsedString(): string;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class JWTClaimsSet {
				public static class: java.lang.Class<com.nimbusds.jwt.JWTClaimsSet>;
				public getAudience(): java.util.List<string>;
				public static parse(param0: net.minidev.json.JSONObject): com.nimbusds.jwt.JWTClaimsSet;
				public getStringListClaim(param0: string): java.util.List<string>;
				public toJSONObject(param0: boolean): net.minidev.json.JSONObject;
				public getDoubleClaim(param0: string): java.lang.Double;
				public getURIClaim(param0: string): java.net.URI;
				public static getRegisteredNames(): java.util.Set<string>;
				public toJSONObject(): net.minidev.json.JSONObject;
				public getJSONObjectClaim(param0: string): net.minidev.json.JSONObject;
				public toType(param0: com.nimbusds.jwt.JWTClaimsSetTransformer<any>): any;
				public getExpirationTime(): java.util.Date;
				public getNotBeforeTime(): java.util.Date;
				public hashCode(): number;
				public getStringArrayClaim(param0: string): native.Array<string>;
				public getFloatClaim(param0: string): java.lang.Float;
				public equals(param0: any): boolean;
				public getStringClaim(param0: string): string;
				public getIntegerClaim(param0: string): java.lang.Integer;
				public getClaim(param0: string): any;
				public getBooleanClaim(param0: string): java.lang.Boolean;
				public getLongClaim(param0: string): java.lang.Long;
				public getSubject(): string;
				public toString(): string;
				public static parse(param0: string): com.nimbusds.jwt.JWTClaimsSet;
				public getIssuer(): string;
				public getIssueTime(): java.util.Date;
				public getClaims(): java.util.Map<string, any>;
				public getJWTID(): string;
				public getDateClaim(param0: string): java.util.Date;
			}
			export module JWTClaimsSet {
				export class Builder {
					public static class: java.lang.Class<com.nimbusds.jwt.JWTClaimsSet.Builder>;
					public constructor(param0: com.nimbusds.jwt.JWTClaimsSet);
					public audience(param0: java.util.List<string>): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public issueTime(param0: java.util.Date): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public audience(param0: string): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public subject(param0: string): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public constructor();
					public notBeforeTime(param0: java.util.Date): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public issuer(param0: string): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public claim(param0: string, param1: any): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public jwtID(param0: string): com.nimbusds.jwt.JWTClaimsSet.Builder;
					public build(): com.nimbusds.jwt.JWTClaimsSet;
					public expirationTime(param0: java.util.Date): com.nimbusds.jwt.JWTClaimsSet.Builder;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class JWTClaimsSetTransformer<T> extends java.lang.Object {
				public static class: java.lang.Class<com.nimbusds.jwt.JWTClaimsSetTransformer<any>>;
				/**
				 * Constructs a new instance of the com.nimbusds.jwt.JWTClaimsSetTransformer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { transform(param0: com.nimbusds.jwt.JWTClaimsSet): T });
				public constructor();
				public transform(param0: com.nimbusds.jwt.JWTClaimsSet): T;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class JWTParser {
				public static class: java.lang.Class<com.nimbusds.jwt.JWTParser>;
				public static parse(param0: string): com.nimbusds.jwt.JWT;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class PlainJWT extends com.nimbusds.jose.PlainObject implements com.nimbusds.jwt.JWT {
				public static class: java.lang.Class<com.nimbusds.jwt.PlainJWT>;
				public constructor(param0: com.nimbusds.jose.PlainHeader, param1: com.nimbusds.jwt.JWTClaimsSet);
				public constructor();
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public static parse(param0: string): com.nimbusds.jwt.PlainJWT;
				public getHeader(): com.nimbusds.jose.Header;
				public constructor(param0: com.nimbusds.jose.PlainHeader, param1: com.nimbusds.jose.Payload);
				public constructor(param0: com.nimbusds.jwt.JWTClaimsSet);
				public static parse(param0: string): com.nimbusds.jose.PlainObject;
				public getHeader(): com.nimbusds.jose.PlainHeader;
				public getJWTClaimsSet(): com.nimbusds.jwt.JWTClaimsSet;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.Payload);
				public getParsedParts(): native.Array<com.nimbusds.jose.util.Base64URL>;
				public serialize(): string;
				public getParsedString(): string;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export class SignedJWT extends com.nimbusds.jose.JWSObject implements com.nimbusds.jwt.JWT {
				public static class: java.lang.Class<com.nimbusds.jwt.SignedJWT>;
				public static parse(param0: string): com.nimbusds.jose.JWSObject;
				public static parse(param0: string): com.nimbusds.jwt.SignedJWT;
				public constructor();
				public constructor(param0: com.nimbusds.jose.JWSHeader, param1: com.nimbusds.jose.Payload);
				public static parse(param0: string): com.nimbusds.jose.JOSEObject;
				public getHeader(): com.nimbusds.jose.Header;
				public getJWTClaimsSet(): com.nimbusds.jwt.JWTClaimsSet;
				public constructor(param0: com.nimbusds.jose.JWSHeader, param1: com.nimbusds.jwt.JWTClaimsSet);
				public getHeader(): com.nimbusds.jose.JWSHeader;
				public serialize(param0: boolean): string;
				public constructor(param0: com.nimbusds.jose.util.Base64URL, param1: com.nimbusds.jose.util.Base64URL, param2: com.nimbusds.jose.util.Base64URL);
				public constructor(param0: com.nimbusds.jose.Payload);
				public getParsedParts(): native.Array<com.nimbusds.jose.util.Base64URL>;
				public serialize(): string;
				public getParsedString(): string;
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class BadJWTException extends com.nimbusds.jose.proc.BadJOSEException {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.BadJWTException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class ClockSkewAware {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.ClockSkewAware>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.ClockSkewAware interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { getMaxClockSkew(): number; setMaxClockSkew(param0: number): void });
					public constructor();
					public getMaxClockSkew(): number;
					public setMaxClockSkew(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class ConfigurableJWTProcessor<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.ConfigurableJWTProcessor<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.ConfigurableJWTProcessor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						process(param0: string, param1: C): com.nimbusds.jwt.JWTClaimsSet;
						process(param0: com.nimbusds.jwt.JWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
						process(param0: com.nimbusds.jwt.PlainJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
						process(param0: com.nimbusds.jwt.SignedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
						process(param0: com.nimbusds.jwt.EncryptedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
						getJWTClaimsSetAwareJWSKeySelector(): com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<C>;
						setJWTClaimsSetAwareJWSKeySelector(param0: com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<C>): void;
						getJWTClaimsSetVerifier(): com.nimbusds.jwt.proc.JWTClaimsSetVerifier<C>;
						setJWTClaimsSetVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsSetVerifier<C>): void;
						getJWTClaimsVerifier(): com.nimbusds.jwt.proc.JWTClaimsVerifier;
						setJWTClaimsVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsVerifier): void;
						getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
						setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
						getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<C>;
						setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<C>): void;
						getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
						setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
						getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<C>;
						setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<C>): void;
						getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
						setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
						getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
						setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					});
					public constructor();
					/** @deprecated */
					public setJWTClaimsVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsVerifier): void;
					public process(param0: com.nimbusds.jwt.EncryptedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<C>;
					public setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
					public getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
					public setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<C>): void;
					public getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
					public process(param0: com.nimbusds.jwt.PlainJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
					public setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>): void;
					public process(param0: com.nimbusds.jwt.SignedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public setJWTClaimsSetAwareJWSKeySelector(param0: com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<C>): void;
					public getJWTClaimsSetVerifier(): com.nimbusds.jwt.proc.JWTClaimsSetVerifier<C>;
					public getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<C>;
					public process(param0: com.nimbusds.jwt.JWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					public getJWTClaimsSetAwareJWSKeySelector(): com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<C>;
					/** @deprecated */
					public getJWTClaimsVerifier(): com.nimbusds.jwt.proc.JWTClaimsVerifier;
					public getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<C>;
					public setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<C>): void;
					public process(param0: string, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
					public setJWTClaimsSetVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsSetVerifier<C>): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class DefaultJWTClaimsVerifier<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.DefaultJWTClaimsVerifier<any>>;
					public static DEFAULT_MAX_CLOCK_SKEW_SECONDS: number;
					public constructor(param0: string, param1: com.nimbusds.jwt.JWTClaimsSet, param2: java.util.Set<string>);
					public getRequiredClaims(): java.util.Set<string>;
					public getMaxClockSkew(): number;
					public getExactMatchClaims(): com.nimbusds.jwt.JWTClaimsSet;
					public constructor(param0: java.util.Set<string>, param1: com.nimbusds.jwt.JWTClaimsSet, param2: java.util.Set<string>, param3: java.util.Set<string>);
					public setMaxClockSkew(param0: number): void;
					public constructor(param0: com.nimbusds.jwt.JWTClaimsSet, param1: java.util.Set<string>);
					public verify(param0: com.nimbusds.jwt.JWTClaimsSet, param1: C): void;
					public constructor();
					public verify(param0: com.nimbusds.jwt.JWTClaimsSet): void;
					public getAcceptedAudienceValues(): java.util.Set<string>;
					public getProhibitedClaims(): java.util.Set<string>;
					/** @deprecated */
					public verify(param0: com.nimbusds.jwt.JWTClaimsSet): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class DefaultJWTProcessor<C> extends com.nimbusds.jwt.proc.ConfigurableJWTProcessor<any> {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.DefaultJWTProcessor<any>>;
					/** @deprecated */
					public setJWTClaimsVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsVerifier): void;
					public getJWTClaimsSetAwareJWSKeySelector(): com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>;
					public getJWTClaimsSetVerifier(): com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>;
					public setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
					public getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<any>;
					public setJWTClaimsSetVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>): void;
					public getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
					public process(param0: com.nimbusds.jwt.SignedJWT, param1: any): com.nimbusds.jwt.JWTClaimsSet;
					public setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<any>): void;
					public getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
					public setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<any>): void;
					public setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
					public setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
					public process(param0: string, param1: any): com.nimbusds.jwt.JWTClaimsSet;
					public setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					public constructor();
					public process(param0: com.nimbusds.jwt.JWT, param1: any): com.nimbusds.jwt.JWTClaimsSet;
					public getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<any>;
					public setJWTClaimsSetAwareJWSKeySelector(param0: com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>): void;
					public getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
					/** @deprecated */
					public getJWTClaimsVerifier(): com.nimbusds.jwt.proc.JWTClaimsVerifier;
					public process(param0: com.nimbusds.jwt.PlainJWT, param1: any): com.nimbusds.jwt.JWTClaimsSet;
					public getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
					public process(param0: com.nimbusds.jwt.EncryptedJWT, param1: any): com.nimbusds.jwt.JWTClaimsSet;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class JWTClaimsSetAwareJWSKeySelector<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { selectKeys(param0: com.nimbusds.jose.JWSHeader, param1: com.nimbusds.jwt.JWTClaimsSet, param2: C): java.util.List<any> });
					public constructor();
					public selectKeys(param0: com.nimbusds.jose.JWSHeader, param1: com.nimbusds.jwt.JWTClaimsSet, param2: C): java.util.List<any>;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class JWTClaimsSetVerifier<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { verify(param0: com.nimbusds.jwt.JWTClaimsSet, param1: C): void });
					public constructor();
					public verify(param0: com.nimbusds.jwt.JWTClaimsSet, param1: C): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class JWTClaimsVerifier {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.JWTClaimsVerifier>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.JWTClaimsVerifier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { verify(param0: com.nimbusds.jwt.JWTClaimsSet): void });
					public constructor();
					/** @deprecated */
					public verify(param0: com.nimbusds.jwt.JWTClaimsSet): void;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class JWTProcessor<C> extends java.lang.Object {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.JWTProcessor<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.JWTProcessor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { process(param0: string, param1: C): com.nimbusds.jwt.JWTClaimsSet; process(param0: com.nimbusds.jwt.JWT, param1: C): com.nimbusds.jwt.JWTClaimsSet; process(param0: com.nimbusds.jwt.PlainJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet; process(param0: com.nimbusds.jwt.SignedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet; process(param0: com.nimbusds.jwt.EncryptedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet });
					public constructor();
					public process(param0: com.nimbusds.jwt.SignedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public process(param0: com.nimbusds.jwt.JWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public process(param0: com.nimbusds.jwt.EncryptedJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public process(param0: com.nimbusds.jwt.PlainJWT, param1: C): com.nimbusds.jwt.JWTClaimsSet;
					public process(param0: string, param1: C): com.nimbusds.jwt.JWTClaimsSet;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module proc {
				export class JWTProcessorConfiguration<C> extends com.nimbusds.jose.proc.JOSEProcessorConfiguration<any> {
					public static class: java.lang.Class<com.nimbusds.jwt.proc.JWTProcessorConfiguration<any>>;
					/**
					 * Constructs a new instance of the com.nimbusds.jwt.proc.JWTProcessorConfiguration<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getJWTClaimsSetAwareJWSKeySelector(): com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>;
						setJWTClaimsSetAwareJWSKeySelector(param0: com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>): void;
						getJWTClaimsSetVerifier(): com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>;
						setJWTClaimsSetVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>): void;
						getJWTClaimsVerifier(): com.nimbusds.jwt.proc.JWTClaimsVerifier;
						setJWTClaimsVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsVerifier): void;
						getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
						setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
						getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<any>;
						setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<any>): void;
						getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
						setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
						getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<any>;
						setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<any>): void;
						getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
						setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
						getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
						setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					});
					public constructor();
					/** @deprecated */
					public setJWTClaimsVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsVerifier): void;
					public getJWTClaimsSetAwareJWSKeySelector(): com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>;
					public getJWTClaimsSetVerifier(): com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>;
					public setJWSVerifierFactory(param0: com.nimbusds.jose.proc.JWSVerifierFactory): void;
					public setJWTClaimsSetVerifier(param0: com.nimbusds.jwt.proc.JWTClaimsSetVerifier<any>): void;
					public getJWSKeySelector(): com.nimbusds.jose.proc.JWSKeySelector<any>;
					public getJWSVerifierFactory(): com.nimbusds.jose.proc.JWSVerifierFactory;
					public setJWEKeySelector(param0: com.nimbusds.jose.proc.JWEKeySelector<any>): void;
					public getJWSTypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
					public setJWSKeySelector(param0: com.nimbusds.jose.proc.JWSKeySelector<any>): void;
					public setJWETypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
					public setJWSTypeVerifier(param0: com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>): void;
					public setJWEDecrypterFactory(param0: com.nimbusds.jose.proc.JWEDecrypterFactory): void;
					public getJWEKeySelector(): com.nimbusds.jose.proc.JWEKeySelector<any>;
					public setJWTClaimsSetAwareJWSKeySelector(param0: com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector<any>): void;
					/** @deprecated */
					public getJWTClaimsVerifier(): com.nimbusds.jwt.proc.JWTClaimsVerifier;
					public getJWETypeVerifier(): com.nimbusds.jose.proc.JOSEObjectTypeVerifier<any>;
					public getJWEDecrypterFactory(): com.nimbusds.jose.proc.JWEDecrypterFactory;
				}
			}
		}
	}
}

declare module com {
	export module nimbusds {
		export module jwt {
			export module util {
				export class DateUtils {
					public static class: java.lang.Class<com.nimbusds.jwt.util.DateUtils>;
					public static toSecondsSinceEpoch(param0: java.util.Date): number;
					public static isAfter(param0: java.util.Date, param1: java.util.Date, param2: number): boolean;
					public static fromSecondsSinceEpoch(param0: number): java.util.Date;
					public static isBefore(param0: java.util.Date, param1: java.util.Date, param2: number): boolean;
				}
			}
		}
	}
}

declare module net {
	export module jcip {
		export module annotations {
			export class GuardedBy {
				public static class: java.lang.Class<net.jcip.annotations.GuardedBy>;
				/**
				 * Constructs a new instance of the net.jcip.annotations.GuardedBy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { value(): string });
				public constructor();
				public value(): string;
			}
		}
	}
}

declare module net {
	export module jcip {
		export module annotations {
			export class Immutable {
				public static class: java.lang.Class<net.jcip.annotations.Immutable>;
				/**
				 * Constructs a new instance of the net.jcip.annotations.Immutable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {});
				public constructor();
			}
		}
	}
}

declare module net {
	export module jcip {
		export module annotations {
			export class NotThreadSafe {
				public static class: java.lang.Class<net.jcip.annotations.NotThreadSafe>;
				/**
				 * Constructs a new instance of the net.jcip.annotations.NotThreadSafe interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {});
				public constructor();
			}
		}
	}
}

declare module net {
	export module jcip {
		export module annotations {
			export class ThreadSafe {
				public static class: java.lang.Class<net.jcip.annotations.ThreadSafe>;
				/**
				 * Constructs a new instance of the net.jcip.annotations.ThreadSafe interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {});
				public constructor();
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class ASMUtil {
				public static class: java.lang.Class<net.minidev.asm.ASMUtil>;
				public static newLabels(param0: number): native.Array<org.objectweb.asm.Label>;
				public static getGetterName(param0: string): string;
				public static getAccessors(param0: java.lang.Class<any>, param1: net.minidev.asm.FieldFilter): native.Array<net.minidev.asm.Accessor>;
				public static autoUnBoxing2(param0: org.objectweb.asm.MethodVisitor, param1: org.objectweb.asm.Type): void;
				public static autoBoxing(param0: org.objectweb.asm.MethodVisitor, param1: java.lang.Class<any>): void;
				public static autoBoxing(param0: org.objectweb.asm.MethodVisitor, param1: org.objectweb.asm.Type): void;
				public static autoUnBoxing1(param0: org.objectweb.asm.MethodVisitor, param1: org.objectweb.asm.Type): void;
				public static getIsName(param0: string): string;
				public static getSetterName(param0: string): string;
				public constructor();
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class Accessor {
				public static class: java.lang.Class<net.minidev.asm.Accessor>;
				public field: java.lang.reflect.Field;
				public setter: java.lang.reflect.Method;
				public getter: java.lang.reflect.Method;
				public index: number;
				public type: java.lang.Class<any>;
				public genericType: java.lang.reflect.Type;
				public fieldName: string;
				public getType(): java.lang.Class<any>;
				public constructor(param0: java.lang.Class<any>, param1: java.lang.reflect.Field, param2: net.minidev.asm.FieldFilter);
				public isEnum(): boolean;
				public getGenericType(): java.lang.reflect.Type;
				public isPublic(): boolean;
				public isWritable(): boolean;
				public getIndex(): number;
				public getName(): string;
				public isReadable(): boolean;
				public isUsable(): boolean;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class BasicFiledFilter extends net.minidev.asm.FieldFilter {
				public static class: java.lang.Class<net.minidev.asm.BasicFiledFilter>;
				public static SINGLETON: net.minidev.asm.BasicFiledFilter;
				public canRead(param0: java.lang.reflect.Field): boolean;
				public canUse(param0: java.lang.reflect.Field): boolean;
				public canUse(param0: java.lang.reflect.Field, param1: java.lang.reflect.Method): boolean;
				public canWrite(param0: java.lang.reflect.Field): boolean;
				public constructor();
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export abstract class BeansAccess<T> extends java.lang.Object {
				public static class: java.lang.Class<net.minidev.asm.BeansAccess<any>>;
				public static get(param0: java.lang.Class, param1: net.minidev.asm.FieldFilter): net.minidev.asm.BeansAccess<any>;
				public get(param0: T, param1: string): any;
				public getIndex(param0: string): number;
				public getMap(): java.util.HashMap<string, net.minidev.asm.Accessor>;
				public static get(param0: java.lang.Class): net.minidev.asm.BeansAccess<any>;
				public set(param0: T, param1: number, param2: any): void;
				public set(param0: T, param1: string, param2: any): void;
				public setAccessor(param0: native.Array<net.minidev.asm.Accessor>): void;
				public get(param0: T, param1: number): any;
				public getAccessors(): native.Array<net.minidev.asm.Accessor>;
				public newInstance(): T;
				public constructor();
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class BeansAccessBuilder {
				public static class: java.lang.Class<net.minidev.asm.BeansAccessBuilder>;
				public constructor(param0: java.lang.Class<any>, param1: native.Array<net.minidev.asm.Accessor>, param2: net.minidev.asm.DynamicClassLoader);
				public addConversion(param0: java.lang.Class<any>): void;
				public bulid(): java.lang.Class<any>;
				public addConversion(param0: java.lang.Iterable<java.lang.Class<any>>): void;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class BeansAccessConfig {
				public static class: java.lang.Class<net.minidev.asm.BeansAccessConfig>;
				public static classMapper: java.util.HashMap<java.lang.Class<any>, java.util.LinkedHashSet<java.lang.Class<any>>>;
				public static classFiledNameMapper: java.util.HashMap<java.lang.Class<any>, java.util.HashMap<string, string>>;
				public static addTypeMapper(param0: java.lang.Class<any>, param1: java.lang.Class<any>): void;
				public constructor();
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class ConvertDate {
				public static class: java.lang.Class<net.minidev.asm.ConvertDate>;
				public static convertToDate(param0: any): java.util.Date;
				public static getMonth(param0: string): java.lang.Integer;
				public constructor();
			}
			export module ConvertDate {
				export class StringCmpNS extends java.util.Comparator<string> {
					public static class: java.lang.Class<net.minidev.asm.ConvertDate.StringCmpNS>;
					public compare(param0: string, param1: string): number;
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class DefaultConverter {
				public static class: java.lang.Class<net.minidev.asm.DefaultConverter>;
				public static convertToDouble(param0: any): java.lang.Double;
				public static convertToInt(param0: any): java.lang.Integer;
				public static convertTofloat(param0: any): number;
				public static convertTochar(param0: any): string;
				public static convertTobyte(param0: any): number;
				public static convertToLong(param0: any): java.lang.Long;
				public static convertToint(param0: any): number;
				public static convertTodouble(param0: any): number;
				public constructor();
				public static convertToBool(param0: any): java.lang.Boolean;
				public static convertTobool(param0: any): boolean;
				public static convertToFloat(param0: any): java.lang.Float;
				public static convertToShort(param0: any): java.lang.Short;
				public static convertToChar(param0: any): java.lang.Character;
				public static convertTolong(param0: any): number;
				public static convertToshort(param0: any): number;
				public static convertToByte(param0: any): java.lang.Byte;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class DynamicClassLoader {
				public static class: java.lang.Class<net.minidev.asm.DynamicClassLoader>;
				public static directInstance(param0: java.lang.Class, param1: string, param2: native.Array<number>): any;
				public static directLoad(param0: java.lang.Class, param1: string, param2: native.Array<number>): java.lang.Class;
				public loadClass(param0: string, param1: boolean): java.lang.Class<any>;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export class FieldFilter {
				public static class: java.lang.Class<net.minidev.asm.FieldFilter>;
				/**
				 * Constructs a new instance of the net.minidev.asm.FieldFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { canUse(param0: java.lang.reflect.Field): boolean; canUse(param0: java.lang.reflect.Field, param1: java.lang.reflect.Method): boolean; canRead(param0: java.lang.reflect.Field): boolean; canWrite(param0: java.lang.reflect.Field): boolean });
				public constructor();
				public canRead(param0: java.lang.reflect.Field): boolean;
				public canUse(param0: java.lang.reflect.Field): boolean;
				public canUse(param0: java.lang.reflect.Field, param1: java.lang.reflect.Method): boolean;
				public canWrite(param0: java.lang.reflect.Field): boolean;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export module ex {
				export class ConvertException {
					public static class: java.lang.Class<net.minidev.asm.ex.ConvertException>;
					public constructor(param0: string);
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module asm {
			export module ex {
				export class NoSuchFieldException {
					public static class: java.lang.Class<net.minidev.asm.ex.NoSuchFieldException>;
					public constructor(param0: string);
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONArray extends java.util.ArrayList<any> {
				public static class: java.lang.Class<net.minidev.json.JSONArray>;
				public static writeJSONString(param0: java.util.List<any>, param1: java.lang.Appendable): void;
				public static toJSONString(param0: java.util.List<any>, param1: net.minidev.json.JSONStyle): string;
				public toJSONString(param0: net.minidev.json.JSONStyle): string;
				public writeJSONString(param0: java.lang.Appendable): void;
				public toString(): string;
				public writeJSONString(param0: java.lang.Appendable, param1: net.minidev.json.JSONStyle): void;
				public constructor();
				public merge(param0: any): void;
				public static toJSONString(param0: java.util.List<any>): string;
				public static writeJSONString(param0: java.lang.Iterable<any>, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
				public appendElement(param0: any): net.minidev.json.JSONArray;
				public toString(param0: net.minidev.json.JSONStyle): string;
				public toJSONString(): string;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONAware {
				public static class: java.lang.Class<net.minidev.json.JSONAware>;
				/**
				 * Constructs a new instance of the net.minidev.json.JSONAware interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { toJSONString(): string });
				public constructor();
				public toJSONString(): string;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONAwareEx extends net.minidev.json.JSONAware {
				public static class: java.lang.Class<net.minidev.json.JSONAwareEx>;
				/**
				 * Constructs a new instance of the net.minidev.json.JSONAwareEx interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { toJSONString(param0: net.minidev.json.JSONStyle): string; toJSONString(): string });
				public constructor();
				public toJSONString(param0: net.minidev.json.JSONStyle): string;
				public toJSONString(): string;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONNavi<T> extends java.lang.Object {
				public static class: java.lang.Class<net.minidev.json.JSONNavi<any>>;
				public asBooleanObj(): java.lang.Boolean;
				public get(param0: string): any;
				public getRoot(): T;
				public asIntegerObj(): java.lang.Integer;
				public set(param0: string): net.minidev.json.JSONNavi<T>;
				public getSize(): number;
				public up(param0: number): net.minidev.json.JSONNavi<any>;
				public toString(param0: net.minidev.json.JSONStyle): string;
				public isArray(): boolean;
				public getInteger(param0: string): java.lang.Integer;
				public isObject(): boolean;
				public root(): net.minidev.json.JSONNavi<T>;
				public set(param0: java.lang.Number): net.minidev.json.JSONNavi<T>;
				public getJPath(): string;
				public hasFailure(): boolean;
				public set(param0: string, param1: string): net.minidev.json.JSONNavi<T>;
				public hasKey(param0: string): boolean;
				public asBoolean(): boolean;
				public toString(): string;
				public asDouble(): number;
				public constructor(param0: net.minidev.json.writer.JsonReaderI<any>);
				public object(): net.minidev.json.JSONNavi<T>;
				public static newInstanceObject(): net.minidev.json.JSONNavi<net.minidev.json.JSONObject>;
				public up(): net.minidev.json.JSONNavi<any>;
				public constructor(param0: string, param1: java.lang.Class<T>);
				public constructor(param0: string, param1: net.minidev.json.writer.JsonReaderI<T>);
				public static newInstance(): net.minidev.json.JSONNavi<net.minidev.json.JSONAwareEx>;
				public constructor(param0: string);
				public getCurrentObject(): any;
				public at(param0: string): net.minidev.json.JSONNavi<any>;
				public asInt(): number;
				public atNext(): net.minidev.json.JSONNavi<any>;
				public set(param0: java.lang.Boolean): net.minidev.json.JSONNavi<T>;
				public at(param0: number): net.minidev.json.JSONNavi<any>;
				public getString(param0: string): string;
				public static newInstanceArray(): net.minidev.json.JSONNavi<net.minidev.json.JSONArray>;
				public asFloat(): number;
				public getKeys(): java.util.Collection<string>;
				public asLongObj(): java.lang.Long;
				public asString(): string;
				public add(param0: native.Array<any>): net.minidev.json.JSONNavi<T>;
				public set(param0: string, param1: number): net.minidev.json.JSONNavi<T>;
				public get(param0: number): any;
				public asDoubleObj(): java.lang.Double;
				public array(): net.minidev.json.JSONNavi<T>;
				public set(param0: string, param1: java.lang.Number): net.minidev.json.JSONNavi<T>;
				public getDouble(param0: string): number;
				public asFloatObj(): java.lang.Float;
				public asLong(): number;
				public getInt(param0: string): number;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONObject extends java.util.HashMap<string, any> {
				public static class: java.lang.Class<net.minidev.json.JSONObject>;
				public toJSONString(param0: net.minidev.json.JSONStyle): string;
				public writeJSONString(param0: java.lang.Appendable): void;
				public static writeJSON(param0: java.util.Map<string, any>, param1: java.lang.Appendable): void;
				public static writeJSONKV(param0: string, param1: any, param2: java.lang.Appendable, param3: net.minidev.json.JSONStyle): void;
				public toString(): string;
				public static toJSONString(param0: java.util.Map<string, any>): string;
				public writeJSONString(param0: java.lang.Appendable, param1: net.minidev.json.JSONStyle): void;
				public constructor();
				public merge(param0: any): void;
				public static merge(param0: net.minidev.json.JSONObject, param1: any): net.minidev.json.JSONObject;
				public constructor(param0: java.util.Map<string, any>);
				public getAsString(param0: string): string;
				public static merge(param0: net.minidev.json.JSONArray, param1: any): net.minidev.json.JSONArray;
				public getAsNumber(param0: string): java.lang.Number;
				public static escape(param0: string): string;
				public appendField(param0: string, param1: any): net.minidev.json.JSONObject;
				public toString(param0: net.minidev.json.JSONStyle): string;
				public static writeJSON(param0: java.util.Map<string, any>, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
				public toJSONString(): string;
				public static toJSONString(param0: java.util.Map<string, any>, param1: net.minidev.json.JSONStyle): string;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONStreamAware {
				public static class: java.lang.Class<net.minidev.json.JSONStreamAware>;
				/**
				 * Constructs a new instance of the net.minidev.json.JSONStreamAware interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { writeJSONString(param0: java.lang.Appendable): void });
				public constructor();
				public writeJSONString(param0: java.lang.Appendable): void;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONStreamAwareEx extends net.minidev.json.JSONStreamAware {
				public static class: java.lang.Class<net.minidev.json.JSONStreamAwareEx>;
				/**
				 * Constructs a new instance of the net.minidev.json.JSONStreamAwareEx interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { writeJSONString(param0: java.lang.Appendable, param1: net.minidev.json.JSONStyle): void; writeJSONString(param0: java.lang.Appendable): void });
				public constructor();
				public writeJSONString(param0: java.lang.Appendable): void;
				public writeJSONString(param0: java.lang.Appendable, param1: net.minidev.json.JSONStyle): void;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONStyle {
				public static class: java.lang.Class<net.minidev.json.JSONStyle>;
				public static FLAG_PROTECT_KEYS: number;
				public static FLAG_PROTECT_4WEB: number;
				public static FLAG_PROTECT_VALUES: number;
				public static FLAG_AGRESSIVE: number;
				public static FLAG_IGNORE_NULL: number;
				public static NO_COMPRESS: net.minidev.json.JSONStyle;
				public static MAX_COMPRESS: net.minidev.json.JSONStyle;
				public static LT_COMPRESS: net.minidev.json.JSONStyle;
				public protectKeys(): boolean;
				public arrayStart(param0: java.lang.Appendable): void;
				public indent(): boolean;
				public constructor();
				public protectValues(): boolean;
				public writeString(param0: java.lang.Appendable, param1: string): void;
				public objectElmStop(param0: java.lang.Appendable): void;
				public arrayNextElm(param0: java.lang.Appendable): void;
				public protect4Web(): boolean;
				public ignoreNull(): boolean;
				public objectFirstStart(param0: java.lang.Appendable): void;
				public arrayfirstObject(param0: java.lang.Appendable): void;
				public mustProtectValue(param0: string): boolean;
				public objectEndOfKey(param0: java.lang.Appendable): void;
				public constructor(param0: number);
				public arrayObjectEnd(param0: java.lang.Appendable): void;
				public escape(param0: string, param1: java.lang.Appendable): void;
				public mustProtectKey(param0: string): boolean;
				public objectStart(param0: java.lang.Appendable): void;
				public arrayStop(param0: java.lang.Appendable): void;
				public objectStop(param0: java.lang.Appendable): void;
				public objectNext(param0: java.lang.Appendable): void;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONUtil {
				public static class: java.lang.Class<net.minidev.json.JSONUtil>;
				public static JSON_SMART_FIELD_FILTER: net.minidev.json.JSONUtil.JsonSmartFieldFilter;
				public static convertToStrict(param0: any, param1: java.lang.Class<any>): any;
				public static convertToX(param0: any, param1: java.lang.Class<any>): any;
				public static getGetterName(param0: string): string;
				public static getIsName(param0: string): string;
				public static getSetterName(param0: string): string;
				public constructor();
			}
			export module JSONUtil {
				export class JsonSmartFieldFilter extends net.minidev.asm.FieldFilter {
					public static class: java.lang.Class<net.minidev.json.JSONUtil.JsonSmartFieldFilter>;
					public canWrite(param0: java.lang.reflect.Field): boolean;
					public canUse(param0: java.lang.reflect.Field): boolean;
					public constructor();
					public canRead(param0: java.lang.reflect.Field): boolean;
					public canUse(param0: java.lang.reflect.Field, param1: java.lang.reflect.Method): boolean;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JSONValue {
				public static class: java.lang.Class<net.minidev.json.JSONValue>;
				public static COMPRESSION: net.minidev.json.JSONStyle;
				public static defaultWriter: net.minidev.json.reader.JsonWriter;
				public static defaultReader: net.minidev.json.writer.JsonReader;
				public static parse(param0: java.io.InputStream, param1: any): any;
				public static parse(param0: string, param1: any): any;
				public static parseStrict(param0: string): any;
				public static writeJSONString(param0: any, param1: java.lang.Appendable): void;
				public static registerWriter(param0: java.lang.Class, param1: net.minidev.json.reader.JsonWriterI<any>): void;
				public static writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
				public static toJSONString(param0: any): string;
				public constructor();
				public static parse(param0: java.io.InputStream): any;
				public static parseWithException(param0: java.io.InputStream): any;
				public static parse(param0: string, param1: java.lang.Class): any;
				public static registerReader(param0: java.lang.Class, param1: net.minidev.json.writer.JsonReaderI<any>): void;
				public static parse(param0: java.io.InputStream, param1: java.lang.Class): any;
				public static parse(param0: java.io.Reader, param1: java.lang.Class): any;
				public static parse(param0: java.io.Reader, param1: net.minidev.json.writer.JsonReaderI<any>): any;
				public static isValidJsonStrict(param0: java.io.Reader): boolean;
				public static compress(param0: string, param1: net.minidev.json.JSONStyle): string;
				public static isValidJson(param0: java.io.Reader): boolean;
				public static uncompress(param0: string): string;
				public static parseKeepingOrder(param0: java.io.Reader): any;
				public static parseWithException(param0: java.io.Reader): any;
				public static escape(param0: string, param1: java.lang.Appendable): void;
				public static parse(param0: native.Array<number>, param1: java.lang.Class): any;
				public static parse(param0: native.Array<number>, param1: net.minidev.json.writer.JsonReaderI<any>): any;
				public static parseKeepingOrder(param0: string): any;
				public static escape(param0: string, param1: net.minidev.json.JSONStyle): string;
				public static parse(param0: native.Array<number>): any;
				public static parseWithException(param0: native.Array<number>): any;
				public static escape(param0: string, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
				public static parseStrict(param0: java.io.Reader): any;
				public static parseWithException(param0: string, param1: java.lang.Class): any;
				public static toJSONString(param0: any, param1: net.minidev.json.JSONStyle): string;
				public static parse(param0: string, param1: net.minidev.json.writer.JsonReaderI<any>): any;
				public static parseWithException(param0: string): any;
				public static isValidJsonStrict(param0: string): boolean;
				public static isValidJson(param0: string): boolean;
				public static parse(param0: java.io.Reader, param1: any): any;
				public static compress(param0: string): string;
				public static parse(param0: string): any;
				public static parse(param0: java.io.Reader): any;
				public static remapField(param0: java.lang.Class, param1: string, param2: string): void;
				public static escape(param0: string): string;
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export class JStylerObj {
				public static class: java.lang.Class<net.minidev.json.JStylerObj>;
				public static MP_SIMPLE: net.minidev.json.JStylerObj.MPSimple;
				public static MP_TRUE: net.minidev.json.JStylerObj.MPTrue;
				public static MP_AGGRESIVE: net.minidev.json.JStylerObj.MPAgressive;
				public static ESCAPE_LT: net.minidev.json.JStylerObj.EscapeLT;
				public static ESCAPE4Web: net.minidev.json.JStylerObj.Escape4Web;
				public static isSpace(param0: string): boolean;
				public static isSpecial(param0: string): boolean;
				public static isSpecialChar(param0: string): boolean;
				public static isSpecialOpen(param0: string): boolean;
				public static isKeyword(param0: string): boolean;
				public static isSpecialClose(param0: string): boolean;
				public static isUnicode(param0: string): boolean;
			}
			export module JStylerObj {
				export class Escape4Web extends net.minidev.json.JStylerObj.StringProtector {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.Escape4Web>;
					public escape(param0: string, param1: java.lang.Appendable): void;
				}
				export class EscapeLT extends net.minidev.json.JStylerObj.StringProtector {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.EscapeLT>;
					public escape(param0: string, param1: java.lang.Appendable): void;
				}
				export class MPAgressive extends net.minidev.json.JStylerObj.MustProtect {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.MPAgressive>;
					public mustBeProtect(param0: string): boolean;
				}
				export class MPSimple extends net.minidev.json.JStylerObj.MustProtect {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.MPSimple>;
					public mustBeProtect(param0: string): boolean;
				}
				export class MPTrue extends net.minidev.json.JStylerObj.MustProtect {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.MPTrue>;
					public mustBeProtect(param0: string): boolean;
				}
				export class MustProtect {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.MustProtect>;
					/**
					 * Constructs a new instance of the net.minidev.json.JStylerObj$MustProtect interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { mustBeProtect(param0: string): boolean });
					public constructor();
					public mustBeProtect(param0: string): boolean;
				}
				export class StringProtector {
					public static class: java.lang.Class<net.minidev.json.JStylerObj.StringProtector>;
					/**
					 * Constructs a new instance of the net.minidev.json.JStylerObj$StringProtector interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { escape(param0: string, param1: java.lang.Appendable): void });
					public constructor();
					public escape(param0: string, param1: java.lang.Appendable): void;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module annotate {
				export class JsonIgnore {
					public static class: java.lang.Class<net.minidev.json.annotate.JsonIgnore>;
					/**
					 * Constructs a new instance of the net.minidev.json.annotate.JsonIgnore interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { value(): boolean });
					public constructor();
					public value(): boolean;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module annotate {
				export class JsonSmartAnnotation {
					public static class: java.lang.Class<net.minidev.json.annotate.JsonSmartAnnotation>;
					/**
					 * Constructs a new instance of the net.minidev.json.annotate.JsonSmartAnnotation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {});
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export class JSONParser {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParser>;
					public static ACCEPT_SIMPLE_QUOTE: number;
					public static ACCEPT_NON_QUOTE: number;
					public static ACCEPT_NAN: number;
					public static IGNORE_CONTROL_CHAR: number;
					public static USE_INTEGER_STORAGE: number;
					public static ACCEPT_LEADING_ZERO: number;
					public static ACCEPT_USELESS_COMMA: number;
					public static USE_HI_PRECISION_FLOAT: number;
					public static ACCEPT_TAILLING_DATA: number;
					public static ACCEPT_TAILLING_SPACE: number;
					public static REJECT_127_CHAR: number;
					public static MODE_PERMISSIVE: number;
					public static MODE_RFC4627: number;
					public static MODE_JSON_SIMPLE: number;
					public static MODE_STRICTEST: number;
					public static DEFAULT_PERMISSIVE_MODE: number;
					public parse(param0: java.io.InputStream, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: native.Array<number>): any;
					public parse(param0: native.Array<number>, param1: java.lang.Class): any;
					public parse(param0: java.io.InputStream): any;
					public parse(param0: java.io.Reader, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: string): any;
					public parse(param0: java.io.InputStream, param1: java.lang.Class): any;
					/** @deprecated */
					public constructor();
					public parse(param0: java.io.Reader): any;
					public parse(param0: native.Array<number>, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: string, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: java.io.Reader, param1: java.lang.Class): any;
					public parse(param0: string, param1: java.lang.Class): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export abstract class JSONParserBase {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserBase>;
					public c: string;
					public static EOI: number;
					public static MAX_STOP: string;
					public static stopAll: native.Array<boolean>;
					public static stopArray: native.Array<boolean>;
					public static stopKey: native.Array<boolean>;
					public static stopValue: native.Array<boolean>;
					public static stopX: native.Array<boolean>;
					public sb: net.minidev.json.parser.JSONParserBase.MSB;
					public xo: any;
					public xs: string;
					public pos: number;
					public acceptLeadinZero: boolean;
					public acceptNaN: boolean;
					public acceptNonQuote: boolean;
					public acceptSimpleQuote: boolean;
					public acceptUselessComma: boolean;
					public checkTaillingData: boolean;
					public checkTaillingSpace: boolean;
					public ignoreControlChar: boolean;
					public useHiPrecisionFloat: boolean;
					public useIntegerStorage: boolean;
					public reject127: boolean;
					public readMain(param0: net.minidev.json.writer.JsonReaderI<any>, param1: native.Array<boolean>): any;
					public checkLeadinZero(): void;
					public extractFloat(): java.lang.Number;
					public readString2(): void;
					public readArray(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public readObject(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public skipNQString(param0: native.Array<boolean>): void;
					public checkControleChar(): void;
					public readFirst(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public readNQString(param0: native.Array<boolean>): void;
					public parse(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public readNoEnd(): void;
					public readUnicode(param0: number): string;
					public read(): void;
					public readString(): void;
					public skipSpace(): void;
					public parseNumber(param0: string): java.lang.Number;
					public readNumber(param0: native.Array<boolean>): any;
					public skipDigits(): void;
					public constructor(param0: number);
				}
				export module JSONParserBase {
					export class MSB {
						public static class: java.lang.Class<net.minidev.json.parser.JSONParserBase.MSB>;
						public append(param0: string): void;
						public constructor(param0: number);
						public append(param0: number): void;
						public clear(): void;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export class JSONParserByteArray extends net.minidev.json.parser.JSONParserMemory {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserByteArray>;
					public extractString(param0: number, param1: number): void;
					public extractStringTrim(param0: number, param1: number): void;
					public indexOf(param0: string, param1: number): number;
					public readS(): void;
					public parse(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: native.Array<number>): any;
					public readNoEnd(): void;
					public read(): void;
					public parse(param0: native.Array<number>, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export class JSONParserInputStream extends net.minidev.json.parser.JSONParserReader {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserInputStream>;
					public parse(param0: java.io.InputStream, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: java.io.Reader): any;
					public parse(param0: java.io.InputStream): any;
					public parse(param0: java.io.Reader, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export abstract class JSONParserMemory extends net.minidev.json.parser.JSONParserBase {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserMemory>;
					public len: number;
					public readNQString(param0: native.Array<boolean>): void;
					public extractString(param0: number, param1: number): void;
					public extractStringTrim(param0: number, param1: number): void;
					public indexOf(param0: string, param1: number): number;
					public readString(): void;
					public readNumber(param0: native.Array<boolean>): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export class JSONParserReader extends net.minidev.json.parser.JSONParserStream {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserReader>;
					public readS(): void;
					public parse(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: java.io.Reader): any;
					public readNoEnd(): void;
					public read(): void;
					public parse(param0: java.io.Reader, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export abstract class JSONParserStream extends net.minidev.json.parser.JSONParserBase {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserStream>;
					public readNQString(param0: native.Array<boolean>): void;
					public readString(): void;
					public readNumber(param0: native.Array<boolean>): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export class JSONParserString extends net.minidev.json.parser.JSONParserMemory {
					public static class: java.lang.Class<net.minidev.json.parser.JSONParserString>;
					public extractString(param0: number, param1: number): void;
					public extractStringTrim(param0: number, param1: number): void;
					public indexOf(param0: string, param1: number): number;
					public readS(): void;
					public parse(param0: net.minidev.json.writer.JsonReaderI<any>): any;
					public readNoEnd(): void;
					public read(): void;
					public parse(param0: string, param1: net.minidev.json.writer.JsonReaderI<any>): any;
					public parse(param0: string): any;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module parser {
				export class ParseException {
					public static class: java.lang.Class<net.minidev.json.parser.ParseException>;
					public static ERROR_UNEXPECTED_CHAR: number;
					public static ERROR_UNEXPECTED_TOKEN: number;
					public static ERROR_UNEXPECTED_EXCEPTION: number;
					public static ERROR_UNEXPECTED_EOF: number;
					public static ERROR_UNEXPECTED_UNICODE: number;
					public static ERROR_UNEXPECTED_DUPLICATE_KEY: number;
					public static ERROR_UNEXPECTED_LEADING_0: number;
					public getUnexpectedObject(): any;
					public constructor(param0: number, param1: java.lang.Throwable);
					public constructor(param0: number, param1: number, param2: any);
					public getErrorType(): number;
					public getPosition(): number;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module reader {
				export class ArrayWriter extends net.minidev.json.reader.JsonWriterI<any> {
					public static class: java.lang.Class<net.minidev.json.reader.ArrayWriter>;
					public writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module reader {
				export class BeansWriter extends net.minidev.json.reader.JsonWriterI<any> {
					public static class: java.lang.Class<net.minidev.json.reader.BeansWriter>;
					public writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module reader {
				export class BeansWriterASM extends net.minidev.json.reader.JsonWriterI<any> {
					public static class: java.lang.Class<net.minidev.json.reader.BeansWriterASM>;
					public writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
					public constructor();
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module reader {
				export class BeansWriterASMRemap extends net.minidev.json.reader.JsonWriterI<any> {
					public static class: java.lang.Class<net.minidev.json.reader.BeansWriterASMRemap>;
					public writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
					public constructor();
					public renameField(param0: string, param1: string): void;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module reader {
				export class JsonWriter {
					public static class: java.lang.Class<net.minidev.json.reader.JsonWriter>;
					public static JSONStreamAwareWriter: net.minidev.json.reader.JsonWriterI<net.minidev.json.JSONStreamAwareEx>;
					public static JSONStreamAwareExWriter: net.minidev.json.reader.JsonWriterI<net.minidev.json.JSONStreamAwareEx>;
					public static JSONJSONAwareExWriter: net.minidev.json.reader.JsonWriterI<net.minidev.json.JSONAwareEx>;
					public static JSONJSONAwareWriter: net.minidev.json.reader.JsonWriterI<net.minidev.json.JSONAware>;
					public static JSONIterableWriter: net.minidev.json.reader.JsonWriterI<java.lang.Iterable<any>>;
					public static EnumWriter: net.minidev.json.reader.JsonWriterI<java.lang.Enum<any>>;
					public static JSONMapWriter: net.minidev.json.reader.JsonWriterI<java.util.Map<string, any>>;
					public static beansWriterASM: net.minidev.json.reader.JsonWriterI<any>;
					public static beansWriter: net.minidev.json.reader.JsonWriterI<any>;
					public static arrayWriter: net.minidev.json.reader.JsonWriterI<any>;
					public static toStringWriter: net.minidev.json.reader.JsonWriterI<any>;
					public registerWriterInterfaceLast(param0: java.lang.Class<any>, param1: net.minidev.json.reader.JsonWriterI<any>): void;
					public remapField(param0: java.lang.Class, param1: string, param2: string): void;
					/** @deprecated */
					public addInterfaceWriterFirst(param0: java.lang.Class<any>, param1: net.minidev.json.reader.JsonWriterI<any>): void;
					public constructor();
					/** @deprecated */
					public addInterfaceWriterLast(param0: java.lang.Class<any>, param1: net.minidev.json.reader.JsonWriterI<any>): void;
					public registerWriterInterface(param0: java.lang.Class<any>, param1: net.minidev.json.reader.JsonWriterI<any>): void;
					public init(): void;
					public registerWriterInterfaceFirst(param0: java.lang.Class<any>, param1: net.minidev.json.reader.JsonWriterI<any>): void;
					public registerWriter(param0: net.minidev.json.reader.JsonWriterI<any>, param1: native.Array<java.lang.Class>): void;
					public getWriterByInterface(param0: java.lang.Class<any>): net.minidev.json.reader.JsonWriterI<any>;
					public getWrite(param0: java.lang.Class): net.minidev.json.reader.JsonWriterI<any>;
					public static writeJSONKV(param0: string, param1: any, param2: java.lang.Appendable, param3: net.minidev.json.JSONStyle): void;
				}
				export module JsonWriter {
					export class WriterByInterface {
						public static class: java.lang.Class<net.minidev.json.reader.JsonWriter.WriterByInterface>;
						public _interface: java.lang.Class<any>;
						public _writer: net.minidev.json.reader.JsonWriterI<any>;
						public constructor(param0: java.lang.Class<any>, param1: net.minidev.json.reader.JsonWriterI<any>);
					}
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module reader {
				export class JsonWriterI<T> extends java.lang.Object {
					public static class: java.lang.Class<net.minidev.json.reader.JsonWriterI<any>>;
					/**
					 * Constructs a new instance of the net.minidev.json.reader.JsonWriterI<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: { writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void });
					public constructor();
					public writeJSONString(param0: any, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle): void;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class ArraysMapper<T> extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.ArraysMapper<any>>;
					public static MAPPER_PRIM_INT: net.minidev.json.writer.JsonReaderI<native.Array<number>>;
					public static MAPPER_INT: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Integer>>;
					public static MAPPER_PRIM_SHORT: net.minidev.json.writer.JsonReaderI<native.Array<number>>;
					public static MAPPER_SHORT: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Short>>;
					public static MAPPER_PRIM_BYTE: net.minidev.json.writer.JsonReaderI<native.Array<number>>;
					public static MAPPER_BYTE: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Byte>>;
					public static MAPPER_PRIM_CHAR: net.minidev.json.writer.JsonReaderI<native.Array<string>>;
					public static MAPPER_CHAR: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Character>>;
					public static MAPPER_PRIM_LONG: net.minidev.json.writer.JsonReaderI<native.Array<number>>;
					public static MAPPER_LONG: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Long>>;
					public static MAPPER_PRIM_FLOAT: net.minidev.json.writer.JsonReaderI<native.Array<number>>;
					public static MAPPER_FLOAT: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Float>>;
					public static MAPPER_PRIM_DOUBLE: net.minidev.json.writer.JsonReaderI<native.Array<number>>;
					public static MAPPER_DOUBLE: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Double>>;
					public static MAPPER_PRIM_BOOL: net.minidev.json.writer.JsonReaderI<native.Array<boolean>>;
					public static MAPPER_BOOL: net.minidev.json.writer.JsonReaderI<native.Array<java.lang.Boolean>>;
					public convert(param0: any): any;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public createArray(): any;
				}
				export module ArraysMapper {
					export class GenericMapper<T> extends net.minidev.json.writer.ArraysMapper<any> {
						public static class: java.lang.Class<net.minidev.json.writer.ArraysMapper.GenericMapper<any>>;
						public convert(param0: any): any;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public constructor(param0: net.minidev.json.writer.JsonReader);
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Class<any>);
					}
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export abstract class BeansMapper<T> extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.BeansMapper<any>>;
					public static MAPPER_DATE: net.minidev.json.writer.JsonReaderI<java.util.Date>;
					public getValue(param0: any, param1: string): any;
					public constructor(param0: net.minidev.json.writer.JsonReader);
				}
				export module BeansMapper {
					export class Bean<T> extends net.minidev.json.writer.JsonReaderI<any> {
						public static class: java.lang.Class<net.minidev.json.writer.BeansMapper.Bean<any>>;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public getValue(param0: any, param1: string): any;
						public setValue(param0: any, param1: string, param2: any): void;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public createObject(): any;
						public getType(param0: string): java.lang.reflect.Type;
						public constructor(param0: net.minidev.json.writer.JsonReader);
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Class<any>);
					}
					export class BeanNoConv<T> extends net.minidev.json.writer.JsonReaderI<any> {
						public static class: java.lang.Class<net.minidev.json.writer.BeansMapper.BeanNoConv<any>>;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public getValue(param0: any, param1: string): any;
						public setValue(param0: any, param1: string, param2: any): void;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public createObject(): any;
						public getType(param0: string): java.lang.reflect.Type;
						public constructor(param0: net.minidev.json.writer.JsonReader);
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Class<any>);
					}
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class CollectionMapper {
					public static class: java.lang.Class<net.minidev.json.writer.CollectionMapper>;
					public constructor();
				}
				export module CollectionMapper {
					export class ListClass<T> extends net.minidev.json.writer.JsonReaderI<any> {
						public static class: java.lang.Class<net.minidev.json.writer.CollectionMapper.ListClass<any>>;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public addValue(param0: any, param1: any): void;
						public createArray(): any;
						public constructor(param0: net.minidev.json.writer.JsonReader);
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Class<any>);
					}
					export class ListType<T> extends net.minidev.json.writer.JsonReaderI<any> {
						public static class: java.lang.Class<net.minidev.json.writer.CollectionMapper.ListType<any>>;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public addValue(param0: any, param1: any): void;
						public createArray(): any;
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.reflect.ParameterizedType);
						public constructor(param0: net.minidev.json.writer.JsonReader);
					}
					export class MapClass<T> extends net.minidev.json.writer.JsonReaderI<any> {
						public static class: java.lang.Class<net.minidev.json.writer.CollectionMapper.MapClass<any>>;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public getValue(param0: any, param1: string): any;
						public setValue(param0: any, param1: string, param2: any): void;
						public createObject(): any;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public getType(param0: string): java.lang.reflect.Type;
						public constructor(param0: net.minidev.json.writer.JsonReader);
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Class<any>);
					}
					export class MapType<T> extends net.minidev.json.writer.JsonReaderI<any> {
						public static class: java.lang.Class<net.minidev.json.writer.CollectionMapper.MapType<any>>;
						public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public getValue(param0: any, param1: string): any;
						public setValue(param0: any, param1: string, param2: any): void;
						public createObject(): any;
						public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
						public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.reflect.ParameterizedType);
						public getType(param0: string): java.lang.reflect.Type;
						public constructor(param0: net.minidev.json.writer.JsonReader);
					}
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class CompessorMapper extends net.minidev.json.writer.JsonReaderI<net.minidev.json.writer.CompessorMapper> {
					public static class: java.lang.Class<net.minidev.json.writer.CompessorMapper>;
					public convert(param0: any): any;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle, param3: java.lang.Boolean);
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Appendable, param2: net.minidev.json.JSONStyle);
					public convert(param0: any): net.minidev.json.writer.CompessorMapper;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class DefaultMapper<T> extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.DefaultMapper<any>>;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx>;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx>;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class DefaultMapperCollection<T> extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.DefaultMapperCollection<any>>;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public createObject(): any;
					public constructor(param0: net.minidev.json.writer.JsonReader, param1: java.lang.Class<any>);
					public setValue(param0: any, param1: string, param2: any): void;
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class DefaultMapperOrdered extends net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx> {
					public static class: java.lang.Class<net.minidev.json.writer.DefaultMapperOrdered>;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx>;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx>;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class FakeMapper extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.FakeMapper>;
					public static DEFAULT: net.minidev.json.writer.JsonReaderI<any>;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class JsonReader {
					public static class: java.lang.Class<net.minidev.json.writer.JsonReader>;
					public DEFAULT: net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx>;
					public DEFAULT_ORDERED: net.minidev.json.writer.JsonReaderI<net.minidev.json.JSONAwareEx>;
					public remapField(param0: java.lang.Class, param1: string, param2: string): void;
					public registerReader(param0: java.lang.Class, param1: net.minidev.json.writer.JsonReaderI<any>): void;
					public constructor();
					public getMapper(param0: java.lang.Class): net.minidev.json.writer.JsonReaderI<any>;
					public getMapper(param0: java.lang.reflect.Type): net.minidev.json.writer.JsonReaderI<any>;
					public getMapper(param0: java.lang.reflect.ParameterizedType): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export abstract class JsonReaderI<T> extends java.lang.Object {
					public static class: java.lang.Class<net.minidev.json.writer.JsonReaderI<any>>;
					public base: net.minidev.json.writer.JsonReader;
					public getValue(param0: any, param1: string): any;
					public convert(param0: any): T;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public getType(param0: string): java.lang.reflect.Type;
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class MapperRemapped<T> extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.MapperRemapped<any>>;
					public getValue(param0: any, param1: string): any;
					public constructor(param0: net.minidev.json.writer.JsonReaderI<any>);
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public renameField(param0: string, param1: string): void;
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public getType(param0: string): java.lang.reflect.Type;
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
				}
			}
		}
	}
}

declare module net {
	export module minidev {
		export module json {
			export module writer {
				export class UpdaterMapper<T> extends net.minidev.json.writer.JsonReaderI<any> {
					public static class: java.lang.Class<net.minidev.json.writer.UpdaterMapper<any>>;
					public convert(param0: any): any;
					public startObject(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public addValue(param0: any, param1: any): void;
					public constructor(param0: net.minidev.json.writer.JsonReader, param1: any, param2: java.lang.reflect.Type);
					public constructor(param0: net.minidev.json.writer.JsonReader);
					public createObject(): any;
					public setValue(param0: any, param1: string, param2: any): void;
					public createArray(): any;
					public startArray(param0: string): net.minidev.json.writer.JsonReaderI<any>;
					public constructor(param0: net.minidev.json.writer.JsonReader, param1: any);
				}
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export abstract class AnnotationVisitor {
				public static class: java.lang.Class<org.objectweb.asm.AnnotationVisitor>;
				public api: number;
				public av: org.objectweb.asm.AnnotationVisitor;
				public constructor(param0: number, param1: org.objectweb.asm.AnnotationVisitor);
				public constructor(param0: number);
				public visitEnum(param0: string, param1: string, param2: string): void;
				public visitAnnotation(param0: string, param1: string): org.objectweb.asm.AnnotationVisitor;
				public visitEnd(): void;
				public visit(param0: string, param1: any): void;
				public visitArray(param0: string): org.objectweb.asm.AnnotationVisitor;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class AnnotationWriter extends org.objectweb.asm.AnnotationVisitor {
				public static class: java.lang.Class<org.objectweb.asm.AnnotationWriter>;
				public visitEnum(param0: string, param1: string, param2: string): void;
				public visitAnnotation(param0: string, param1: string): org.objectweb.asm.AnnotationVisitor;
				public visitEnd(): void;
				public visit(param0: string, param1: any): void;
				public visitArray(param0: string): org.objectweb.asm.AnnotationVisitor;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Attribute {
				public static class: java.lang.Class<org.objectweb.asm.Attribute>;
				public type: string;
				public write(param0: org.objectweb.asm.ClassWriter, param1: native.Array<number>, param2: number, param3: number, param4: number): org.objectweb.asm.ByteVector;
				public getLabels(): native.Array<org.objectweb.asm.Label>;
				public isUnknown(): boolean;
				public read(param0: org.objectweb.asm.ClassReader, param1: number, param2: number, param3: native.Array<string>, param4: number, param5: native.Array<org.objectweb.asm.Label>): org.objectweb.asm.Attribute;
				public isCodeAttribute(): boolean;
				public constructor(param0: string);
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class ByteVector {
				public static class: java.lang.Class<org.objectweb.asm.ByteVector>;
				public putByteArray(param0: native.Array<number>, param1: number, param2: number): org.objectweb.asm.ByteVector;
				public putByte(param0: number): org.objectweb.asm.ByteVector;
				public putShort(param0: number): org.objectweb.asm.ByteVector;
				public putUTF8(param0: string): org.objectweb.asm.ByteVector;
				public constructor(param0: number);
				public putInt(param0: number): org.objectweb.asm.ByteVector;
				public constructor();
				public putLong(param0: number): org.objectweb.asm.ByteVector;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class ClassReader {
				public static class: java.lang.Class<org.objectweb.asm.ClassReader>;
				public static SKIP_CODE: number;
				public static SKIP_DEBUG: number;
				public static SKIP_FRAMES: number;
				public static EXPAND_FRAMES: number;
				public b: native.Array<number>;
				public header: number;
				public readInt(param0: number): number;
				public getClassName(): string;
				public readLabel(param0: number, param1: native.Array<org.objectweb.asm.Label>): org.objectweb.asm.Label;
				public readLong(param0: number): number;
				public constructor(param0: native.Array<number>, param1: number, param2: number);
				public getAccess(): number;
				public readConst(param0: number, param1: native.Array<string>): any;
				public accept(param0: org.objectweb.asm.ClassVisitor, param1: native.Array<org.objectweb.asm.Attribute>, param2: number): void;
				public readByte(param0: number): number;
				public readUTF8(param0: number, param1: native.Array<string>): string;
				public getInterfaces(): native.Array<string>;
				public constructor(param0: java.io.InputStream);
				public constructor(param0: string);
				public getItemCount(): number;
				public readClass(param0: number, param1: native.Array<string>): string;
				public readShort(param0: number): number;
				public constructor(param0: native.Array<number>);
				public readUnsignedShort(param0: number): number;
				public getSuperName(): string;
				public getItem(param0: number): number;
				public accept(param0: org.objectweb.asm.ClassVisitor, param1: number): void;
				public getMaxStringLength(): number;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export abstract class ClassVisitor {
				public static class: java.lang.Class<org.objectweb.asm.ClassVisitor>;
				public api: number;
				public cv: org.objectweb.asm.ClassVisitor;
				public visitInnerClass(param0: string, param1: string, param2: string, param3: number): void;
				public constructor(param0: number, param1: org.objectweb.asm.ClassVisitor);
				public visit(param0: number, param1: number, param2: string, param3: string, param4: string, param5: native.Array<string>): void;
				public visitTypeAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAnnotation(param0: string, param1: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAttribute(param0: org.objectweb.asm.Attribute): void;
				public visitField(param0: number, param1: string, param2: string, param3: string, param4: any): org.objectweb.asm.FieldVisitor;
				public constructor(param0: number);
				public visitMethod(param0: number, param1: string, param2: string, param3: string, param4: native.Array<string>): org.objectweb.asm.MethodVisitor;
				public visitOuterClass(param0: string, param1: string, param2: string): void;
				public visitEnd(): void;
				public visitSource(param0: string, param1: string): void;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class ClassWriter extends org.objectweb.asm.ClassVisitor {
				public static class: java.lang.Class<org.objectweb.asm.ClassWriter>;
				public static COMPUTE_MAXS: number;
				public static COMPUTE_FRAMES: number;
				public newClass(param0: string): number;
				public getCommonSuperClass(param0: string, param1: string): string;
				public visitTypeAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAnnotation(param0: string, param1: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAttribute(param0: org.objectweb.asm.Attribute): void;
				public newMethodType(param0: string): number;
				public visitMethod(param0: number, param1: string, param2: string, param3: string, param4: native.Array<string>): org.objectweb.asm.MethodVisitor;
				public newConst(param0: any): number;
				public newMethod(param0: string, param1: string, param2: string, param3: boolean): number;
				public newNameType(param0: string, param1: string): number;
				public visitEnd(): void;
				public visitInnerClass(param0: string, param1: string, param2: string, param3: number): void;
				public constructor(param0: number, param1: org.objectweb.asm.ClassVisitor);
				public constructor(param0: org.objectweb.asm.ClassReader, param1: number);
				public newInvokeDynamic(param0: string, param1: string, param2: org.objectweb.asm.Handle, param3: native.Array<any>): number;
				public visit(param0: number, param1: number, param2: string, param3: string, param4: string, param5: native.Array<string>): void;
				public newHandle(param0: number, param1: string, param2: string, param3: string): number;
				public visitField(param0: number, param1: string, param2: string, param3: string, param4: any): org.objectweb.asm.FieldVisitor;
				public constructor(param0: number);
				public toByteArray(): native.Array<number>;
				public newUTF8(param0: string): number;
				public newField(param0: string, param1: string, param2: string): number;
				public visitOuterClass(param0: string, param1: string, param2: string): void;
				public visitSource(param0: string, param1: string): void;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Context {
				public static class: java.lang.Class<org.objectweb.asm.Context>;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Edge {
				public static class: java.lang.Class<org.objectweb.asm.Edge>;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export abstract class FieldVisitor {
				public static class: java.lang.Class<org.objectweb.asm.FieldVisitor>;
				public api: number;
				public fv: org.objectweb.asm.FieldVisitor;
				public visitTypeAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAnnotation(param0: string, param1: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAttribute(param0: org.objectweb.asm.Attribute): void;
				public constructor(param0: number, param1: org.objectweb.asm.FieldVisitor);
				public constructor(param0: number);
				public visitEnd(): void;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class FieldWriter extends org.objectweb.asm.FieldVisitor {
				public static class: java.lang.Class<org.objectweb.asm.FieldWriter>;
				public visitTypeAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAnnotation(param0: string, param1: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAttribute(param0: org.objectweb.asm.Attribute): void;
				public visitEnd(): void;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Frame {
				public static class: java.lang.Class<org.objectweb.asm.Frame>;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Handle {
				public static class: java.lang.Class<org.objectweb.asm.Handle>;
				public getDesc(): string;
				public hashCode(): number;
				public getOwner(): string;
				public equals(param0: any): boolean;
				public getName(): string;
				public getTag(): number;
				public toString(): string;
				public constructor(param0: number, param1: string, param2: string, param3: string);
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Handler {
				public static class: java.lang.Class<org.objectweb.asm.Handler>;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Item {
				public static class: java.lang.Class<org.objectweb.asm.Item>;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Label {
				public static class: java.lang.Class<org.objectweb.asm.Label>;
				public info: any;
				public getOffset(): number;
				public toString(): string;
				public constructor();
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export abstract class MethodVisitor {
				public static class: java.lang.Class<org.objectweb.asm.MethodVisitor>;
				public api: number;
				public mv: org.objectweb.asm.MethodVisitor;
				public visitTryCatchAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitLocalVariableAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: native.Array<org.objectweb.asm.Label>, param3: native.Array<org.objectweb.asm.Label>, param4: native.Array<number>, param5: string, param6: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitTypeAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAnnotation(param0: string, param1: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAttribute(param0: org.objectweb.asm.Attribute): void;
				/** @deprecated */
				public visitMethodInsn(param0: number, param1: string, param2: string, param3: string): void;
				public visitInvokeDynamicInsn(param0: string, param1: string, param2: org.objectweb.asm.Handle, param3: native.Array<any>): void;
				public visitAnnotationDefault(): org.objectweb.asm.AnnotationVisitor;
				public visitFrame(param0: number, param1: number, param2: native.Array<any>, param3: number, param4: native.Array<any>): void;
				public visitLabel(param0: org.objectweb.asm.Label): void;
				public visitLdcInsn(param0: any): void;
				public visitFieldInsn(param0: number, param1: string, param2: string, param3: string): void;
				public visitTryCatchBlock(param0: org.objectweb.asm.Label, param1: org.objectweb.asm.Label, param2: org.objectweb.asm.Label, param3: string): void;
				public visitMethodInsn(param0: number, param1: string, param2: string, param3: string, param4: boolean): void;
				public visitLookupSwitchInsn(param0: org.objectweb.asm.Label, param1: native.Array<number>, param2: native.Array<org.objectweb.asm.Label>): void;
				public visitCode(): void;
				public visitInsn(param0: number): void;
				public visitJumpInsn(param0: number, param1: org.objectweb.asm.Label): void;
				public constructor(param0: number, param1: org.objectweb.asm.MethodVisitor);
				public visitInsnAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitMaxs(param0: number, param1: number): void;
				public visitIincInsn(param0: number, param1: number): void;
				public visitTypeInsn(param0: number, param1: string): void;
				public visitVarInsn(param0: number, param1: number): void;
				public visitMultiANewArrayInsn(param0: string, param1: number): void;
				public visitLineNumber(param0: number, param1: org.objectweb.asm.Label): void;
				public visitEnd(): void;
				public visitIntInsn(param0: number, param1: number): void;
				public visitParameter(param0: string, param1: number): void;
				public visitTableSwitchInsn(param0: number, param1: number, param2: org.objectweb.asm.Label, param3: native.Array<org.objectweb.asm.Label>): void;
				public visitParameterAnnotation(param0: number, param1: string, param2: boolean): org.objectweb.asm.AnnotationVisitor;
				public constructor(param0: number);
				public visitLocalVariable(param0: string, param1: string, param2: string, param3: org.objectweb.asm.Label, param4: org.objectweb.asm.Label, param5: number): void;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class MethodWriter extends org.objectweb.asm.MethodVisitor {
				public static class: java.lang.Class<org.objectweb.asm.MethodWriter>;
				public visitTryCatchAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitLocalVariableAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: native.Array<org.objectweb.asm.Label>, param3: native.Array<org.objectweb.asm.Label>, param4: native.Array<number>, param5: string, param6: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitTypeAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAnnotation(param0: string, param1: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitAttribute(param0: org.objectweb.asm.Attribute): void;
				/** @deprecated */
				public visitMethodInsn(param0: number, param1: string, param2: string, param3: string): void;
				public visitInvokeDynamicInsn(param0: string, param1: string, param2: org.objectweb.asm.Handle, param3: native.Array<any>): void;
				public visitAnnotationDefault(): org.objectweb.asm.AnnotationVisitor;
				public visitFrame(param0: number, param1: number, param2: native.Array<any>, param3: number, param4: native.Array<any>): void;
				public visitLabel(param0: org.objectweb.asm.Label): void;
				public visitLdcInsn(param0: any): void;
				public visitFieldInsn(param0: number, param1: string, param2: string, param3: string): void;
				public visitTryCatchBlock(param0: org.objectweb.asm.Label, param1: org.objectweb.asm.Label, param2: org.objectweb.asm.Label, param3: string): void;
				public visitMethodInsn(param0: number, param1: string, param2: string, param3: string, param4: boolean): void;
				public visitLookupSwitchInsn(param0: org.objectweb.asm.Label, param1: native.Array<number>, param2: native.Array<org.objectweb.asm.Label>): void;
				public visitCode(): void;
				public visitInsn(param0: number): void;
				public visitJumpInsn(param0: number, param1: org.objectweb.asm.Label): void;
				public visitInsnAnnotation(param0: number, param1: org.objectweb.asm.TypePath, param2: string, param3: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitMaxs(param0: number, param1: number): void;
				public visitIincInsn(param0: number, param1: number): void;
				public visitTypeInsn(param0: number, param1: string): void;
				public visitVarInsn(param0: number, param1: number): void;
				public visitMultiANewArrayInsn(param0: string, param1: number): void;
				public visitLineNumber(param0: number, param1: org.objectweb.asm.Label): void;
				public visitEnd(): void;
				public visitIntInsn(param0: number, param1: number): void;
				public visitParameter(param0: string, param1: number): void;
				public visitTableSwitchInsn(param0: number, param1: number, param2: org.objectweb.asm.Label, param3: native.Array<org.objectweb.asm.Label>): void;
				public visitParameterAnnotation(param0: number, param1: string, param2: boolean): org.objectweb.asm.AnnotationVisitor;
				public visitLocalVariable(param0: string, param1: string, param2: string, param3: org.objectweb.asm.Label, param4: org.objectweb.asm.Label, param5: number): void;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Opcodes {
				public static class: java.lang.Class<org.objectweb.asm.Opcodes>;
				/**
				 * Constructs a new instance of the org.objectweb.asm.Opcodes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: { <clinit>(): void });
				public constructor();
				public static FLOAT: java.lang.Integer;
				public static CALOAD: number;
				public static FDIV: number;
				public static ACC_PRIVATE: number;
				public static LXOR: number;
				public static H_PUTSTATIC: number;
				public static ACC_STATIC: number;
				public static LRETURN: number;
				public static I2B: number;
				public static ACONST_NULL: number;
				public static FADD: number;
				public static I2C: number;
				public static IF_ACMPNE: number;
				public static I2D: number;
				public static I2F: number;
				public static ACC_FINAL: number;
				public static FREM: number;
				public static H_NEWINVOKESPECIAL: number;
				public static F_SAME: number;
				public static I2S: number;
				public static INVOKESTATIC: number;
				public static NEWARRAY: number;
				public static I2L: number;
				public static FASTORE: number;
				public static INVOKEINTERFACE: number;
				public static LSUB: number;
				public static MONITORENTER: number;
				public static F_NEW: number;
				public static ACC_ENUM: number;
				public static POP2: number;
				public static DUP2: number;
				public static ACC_BRIDGE: number;
				public static FSTORE: number;
				public static NULL: java.lang.Integer;
				public static JSR: number;
				public static ACC_SYNTHETIC: number;
				public static ACC_VARARGS: number;
				public static DCONST_1: number;
				public static FRETURN: number;
				public static DCONST_0: number;
				public static LUSHR: number;
				public static FCONST_2: number;
				public static F_FULL: number;
				public static FCONST_1: number;
				public static FSUB: number;
				public static FCONST_0: number;
				public static DSTORE: number;
				public static INVOKEVIRTUAL: number;
				public static POP: number;
				public static LCONST_0: number;
				public static ACC_STRICT: number;
				public static LCONST_1: number;
				public static DLOAD: number;
				public static DMUL: number;
				public static ACC_ABSTRACT: number;
				public static CASTORE: number;
				public static FCMPG: number;
				public static DOUBLE: java.lang.Integer;
				public static RETURN: number;
				public static T_CHAR: number;
				public static DUP2_X2: number;
				public static DUP2_X1: number;
				public static FCMPL: number;
				public static LSHL: number;
				public static IFGT: number;
				public static T_SHORT: number;
				public static IAND: number;
				public static INVOKESPECIAL: number;
				public static ACC_SYNCHRONIZED: number;
				public static UNINITIALIZED_THIS: java.lang.Integer;
				public static ARETURN: number;
				public static H_INVOKESTATIC: number;
				public static IF_ICMPNE: number;
				public static LSHR: number;
				public static IINC: number;
				public static ATHROW: number;
				public static LREM: number;
				public static DNEG: number;
				public static INVOKEDYNAMIC: number;
				public static ACC_PROTECTED: number;
				public static RET: number;
				public static ASTORE: number;
				public static ILOAD: number;
				public static LDIV: number;
				public static IMUL: number;
				public static IFGE: number;
				public static F_SAME1: number;
				public static LADD: number;
				public static TABLESWITCH: number;
				public static IFEQ: number;
				public static DASTORE: number;
				public static NOP: number;
				public static T_BYTE: number;
				public static INEG: number;
				public static AASTORE: number;
				public static ACC_TRANSIENT: number;
				public static TOP: java.lang.Integer;
				public static LALOAD: number;
				public static IFNULL: number;
				public static T_BOOLEAN: number;
				public static F_APPEND: number;
				public static FNEG: number;
				public static GOTO: number;
				public static IFLT: number;
				public static H_PUTFIELD: number;
				public static ISTORE: number;
				public static ACC_INTERFACE: number;
				public static IF_ACMPEQ: number;
				public static ICONST_5: number;
				public static PUTFIELD: number;
				public static SALOAD: number;
				public static LLOAD: number;
				public static LOOKUPSWITCH: number;
				public static LCMP: number;
				public static SASTORE: number;
				public static DSUB: number;
				public static DRETURN: number;
				public static IXOR: number;
				public static ICONST_0: number;
				public static ICONST_2: number;
				public static ICONST_1: number;
				public static IFLE: number;
				public static ACC_NATIVE: number;
				public static ICONST_4: number;
				public static ICONST_3: number;
				public static FALOAD: number;
				public static IF_ICMPLT: number;
				public static ACC_VOLATILE: number;
				public static PUTSTATIC: number;
				public static ARRAYLENGTH: number;
				public static F2D: number;
				public static ICONST_M1: number;
				public static BASTORE: number;
				public static F2I: number;
				public static ALOAD: number;
				public static INTEGER: java.lang.Integer;
				public static ISUB: number;
				public static H_INVOKEINTERFACE: number;
				public static MULTIANEWARRAY: number;
				public static BIPUSH: number;
				public static LOR: number;
				public static F2L: number;
				public static DALOAD: number;
				public static ASM5: number;
				public static ASM4: number;
				public static ACC_PUBLIC: number;
				public static IRETURN: number;
				public static T_LONG: number;
				public static T_FLOAT: number;
				public static IF_ICMPLE: number;
				public static LAND: number;
				public static LDC: number;
				public static T_DOUBLE: number;
				public static ACC_MANDATED: number;
				public static ANEWARRAY: number;
				public static ACC_DEPRECATED: number;
				public static CHECKCAST: number;
				public static H_GETSTATIC: number;
				public static MONITOREXIT: number;
				public static IUSHR: number;
				public static DUP: number;
				public static IF_ICMPGE: number;
				public static FLOAD: number;
				public static LONG: java.lang.Integer;
				public static H_INVOKEVIRTUAL: number;
				public static IOR: number;
				public static IASTORE: number;
				public static DUP_X1: number;
				public static DUP_X2: number;
				public static IF_ICMPEQ: number;
				public static DCMPG: number;
				public static LMUL: number;
				public static ACC_ANNOTATION: number;
				public static BALOAD: number;
				public static DCMPL: number;
				public static IFNONNULL: number;
				public static ISHL: number;
				public static NEW: number;
				public static INSTANCEOF: number;
				public static LNEG: number;
				public static H_GETFIELD: number;
				public static D2F: number;
				public static ACC_SUPER: number;
				public static D2I: number;
				public static LSTORE: number;
				public static L2D: number;
				public static D2L: number;
				public static LASTORE: number;
				public static F_CHOP: number;
				public static DREM: number;
				public static ISHR: number;
				public static V1_2: number;
				public static V1_3: number;
				public static T_INT: number;
				public static V1_1: number;
				public static IDIV: number;
				public static L2F: number;
				public static IF_ICMPGT: number;
				public static DADD: number;
				public static L2I: number;
				public static AALOAD: number;
				public static H_INVOKESPECIAL: number;
				public static IADD: number;
				public static SIPUSH: number;
				public static GETSTATIC: number;
				public static FMUL: number;
				public static GETFIELD: number;
				public static V1_8: number;
				public static IREM: number;
				public static DDIV: number;
				public static V1_6: number;
				public static V1_7: number;
				public static SWAP: number;
				public static V1_4: number;
				public static IALOAD: number;
				public static V1_5: number;
				public static IFNE: number;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class Type {
				public static class: java.lang.Class<org.objectweb.asm.Type>;
				public static VOID: number;
				public static BOOLEAN: number;
				public static CHAR: number;
				public static BYTE: number;
				public static SHORT: number;
				public static INT: number;
				public static FLOAT: number;
				public static LONG: number;
				public static DOUBLE: number;
				public static ARRAY: number;
				public static OBJECT: number;
				public static METHOD: number;
				public static VOID_TYPE: org.objectweb.asm.Type;
				public static BOOLEAN_TYPE: org.objectweb.asm.Type;
				public static CHAR_TYPE: org.objectweb.asm.Type;
				public static BYTE_TYPE: org.objectweb.asm.Type;
				public static SHORT_TYPE: org.objectweb.asm.Type;
				public static INT_TYPE: org.objectweb.asm.Type;
				public static FLOAT_TYPE: org.objectweb.asm.Type;
				public static LONG_TYPE: org.objectweb.asm.Type;
				public static DOUBLE_TYPE: org.objectweb.asm.Type;
				public getClassName(): string;
				public getOpcode(param0: number): number;
				public static getArgumentTypes(param0: string): native.Array<org.objectweb.asm.Type>;
				public getArgumentTypes(): native.Array<org.objectweb.asm.Type>;
				public static getMethodType(param0: string): org.objectweb.asm.Type;
				public getDimensions(): number;
				public static getMethodDescriptor(param0: org.objectweb.asm.Type, param1: native.Array<org.objectweb.asm.Type>): string;
				public static getObjectType(param0: string): org.objectweb.asm.Type;
				public getArgumentsAndReturnSizes(): number;
				public static getArgumentsAndReturnSizes(param0: string): number;
				public static getType(param0: java.lang.Class): org.objectweb.asm.Type;
				public getInternalName(): string;
				public getSize(): number;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public static getArgumentTypes(param0: java.lang.reflect.Method): native.Array<org.objectweb.asm.Type>;
				public static getMethodDescriptor(param0: java.lang.reflect.Method): string;
				public static getDescriptor(param0: java.lang.Class): string;
				public getReturnType(): org.objectweb.asm.Type;
				public static getType(param0: java.lang.reflect.Method): org.objectweb.asm.Type;
				public static getInternalName(param0: java.lang.Class): string;
				public static getType(param0: string): org.objectweb.asm.Type;
				public toString(): string;
				public getDescriptor(): string;
				public static getConstructorDescriptor(param0: java.lang.reflect.Constructor): string;
				public getSort(): number;
				public static getMethodType(param0: org.objectweb.asm.Type, param1: native.Array<org.objectweb.asm.Type>): org.objectweb.asm.Type;
				public static getType(param0: java.lang.reflect.Constructor): org.objectweb.asm.Type;
				public static getReturnType(param0: string): org.objectweb.asm.Type;
				public getElementType(): org.objectweb.asm.Type;
				public static getReturnType(param0: java.lang.reflect.Method): org.objectweb.asm.Type;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class TypePath {
				public static class: java.lang.Class<org.objectweb.asm.TypePath>;
				public static ARRAY_ELEMENT: number;
				public static INNER_TYPE: number;
				public static WILDCARD_BOUND: number;
				public static TYPE_ARGUMENT: number;
				public static fromString(param0: string): org.objectweb.asm.TypePath;
				public getStepArgument(param0: number): number;
				public getStep(param0: number): number;
				public toString(): string;
				public getLength(): number;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export class TypeReference {
				public static class: java.lang.Class<org.objectweb.asm.TypeReference>;
				public static CLASS_TYPE_PARAMETER: number;
				public static METHOD_TYPE_PARAMETER: number;
				public static CLASS_EXTENDS: number;
				public static CLASS_TYPE_PARAMETER_BOUND: number;
				public static METHOD_TYPE_PARAMETER_BOUND: number;
				public static FIELD: number;
				public static METHOD_RETURN: number;
				public static METHOD_RECEIVER: number;
				public static METHOD_FORMAL_PARAMETER: number;
				public static THROWS: number;
				public static LOCAL_VARIABLE: number;
				public static RESOURCE_VARIABLE: number;
				public static EXCEPTION_PARAMETER: number;
				public static INSTANCEOF: number;
				public static NEW: number;
				public static CONSTRUCTOR_REFERENCE: number;
				public static METHOD_REFERENCE: number;
				public static CAST: number;
				public static CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT: number;
				public static METHOD_INVOCATION_TYPE_ARGUMENT: number;
				public static CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT: number;
				public static METHOD_REFERENCE_TYPE_ARGUMENT: number;
				public getTypeParameterBoundIndex(): number;
				public static newTypeReference(param0: number): org.objectweb.asm.TypeReference;
				public getTryCatchBlockIndex(): number;
				public getTypeArgumentIndex(): number;
				public static newExceptionReference(param0: number): org.objectweb.asm.TypeReference;
				public getSort(): number;
				public getExceptionIndex(): number;
				public static newFormalParameterReference(param0: number): org.objectweb.asm.TypeReference;
				public static newTypeArgumentReference(param0: number, param1: number): org.objectweb.asm.TypeReference;
				public getFormalParameterIndex(): number;
				public constructor(param0: number);
				public static newTypeParameterReference(param0: number, param1: number): org.objectweb.asm.TypeReference;
				public static newTypeParameterBoundReference(param0: number, param1: number, param2: number): org.objectweb.asm.TypeReference;
				public static newTryCatchReference(param0: number): org.objectweb.asm.TypeReference;
				public getSuperTypeIndex(): number;
				public getValue(): number;
				public static newSuperTypeReference(param0: number): org.objectweb.asm.TypeReference;
				public getTypeParameterIndex(): number;
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export module signature {
				export class SignatureReader {
					public static class: java.lang.Class<org.objectweb.asm.signature.SignatureReader>;
					public accept(param0: org.objectweb.asm.signature.SignatureVisitor): void;
					public constructor(param0: string);
					public acceptType(param0: org.objectweb.asm.signature.SignatureVisitor): void;
				}
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export module signature {
				export abstract class SignatureVisitor {
					public static class: java.lang.Class<org.objectweb.asm.signature.SignatureVisitor>;
					public static EXTENDS: string;
					public static SUPER: string;
					public static INSTANCEOF: string;
					public api: number;
					public visitTypeArgument(): void;
					public visitEnd(): void;
					public visitBaseType(param0: string): void;
					public visitFormalTypeParameter(param0: string): void;
					public visitReturnType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitInterface(): org.objectweb.asm.signature.SignatureVisitor;
					public visitParameterType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitInterfaceBound(): org.objectweb.asm.signature.SignatureVisitor;
					public visitTypeVariable(param0: string): void;
					public visitSuperclass(): org.objectweb.asm.signature.SignatureVisitor;
					public visitClassBound(): org.objectweb.asm.signature.SignatureVisitor;
					public visitExceptionType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitInnerClassType(param0: string): void;
					public visitTypeArgument(param0: string): org.objectweb.asm.signature.SignatureVisitor;
					public constructor(param0: number);
					public visitArrayType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitClassType(param0: string): void;
				}
			}
		}
	}
}

declare module org {
	export module objectweb {
		export module asm {
			export module signature {
				export class SignatureWriter extends org.objectweb.asm.signature.SignatureVisitor {
					public static class: java.lang.Class<org.objectweb.asm.signature.SignatureWriter>;
					public visitTypeArgument(): void;
					public visitEnd(): void;
					public visitBaseType(param0: string): void;
					public visitFormalTypeParameter(param0: string): void;
					public visitReturnType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitInterface(): org.objectweb.asm.signature.SignatureVisitor;
					public visitParameterType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitInterfaceBound(): org.objectweb.asm.signature.SignatureVisitor;
					public visitTypeVariable(param0: string): void;
					public toString(): string;
					public constructor();
					public visitSuperclass(): org.objectweb.asm.signature.SignatureVisitor;
					public visitClassBound(): org.objectweb.asm.signature.SignatureVisitor;
					public visitExceptionType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitInnerClassType(param0: string): void;
					public visitTypeArgument(param0: string): org.objectweb.asm.signature.SignatureVisitor;
					public constructor(param0: number);
					public visitArrayType(): org.objectweb.asm.signature.SignatureVisitor;
					public visitClassType(param0: string): void;
				}
			}
		}
	}
}

//Generics information:
//androidx.appcompat.view.menu.BaseMenuWrapper:1
//androidx.appcompat.view.menu.BaseWrapper:1
//androidx.arch.core.internal.FastSafeIterableMap:2
//androidx.arch.core.internal.SafeIterableMap:2
//androidx.arch.core.internal.SafeIterableMap.AscendingIterator:2
//androidx.arch.core.internal.SafeIterableMap.DescendingIterator:2
//androidx.arch.core.internal.SafeIterableMap.Entry:2
//androidx.arch.core.internal.SafeIterableMap.ListIterator:2
//androidx.arch.core.internal.SafeIterableMap.SupportRemove:2
//androidx.arch.core.util.Function:2
//androidx.collection.ArrayMap:2
//androidx.collection.ArraySet:1
//androidx.collection.CircularArray:1
//androidx.collection.LongSparseArray:1
//androidx.collection.LruCache:2
//androidx.collection.MapCollections:2
//androidx.collection.MapCollections.ArrayIterator:1
//androidx.collection.SimpleArrayMap:2
//androidx.collection.SparseArrayCompat:1
//androidx.constraintlayout.solver.Pools.Pool:1
//androidx.constraintlayout.solver.Pools.SimplePool:1
//androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior:1
//androidx.coordinatorlayout.widget.DirectedAcyclicGraph:1
//androidx.core.graphics.TypefaceCompatBaseImpl.StyleExtractor:1
//androidx.core.os.ParcelableCompat.ParcelableCompatCreatorHoneycombMR2:1
//androidx.core.os.ParcelableCompatCreatorCallbacks:1
//androidx.core.provider.SelfDestructiveThread.ReplyCallback:1
//androidx.core.util.Consumer:1
//androidx.core.util.Pair:2
//androidx.core.util.Pools.Pool:1
//androidx.core.util.Pools.SimplePool:1
//androidx.core.util.Pools.SynchronizedPool:1
//androidx.customview.widget.FocusStrategy.BoundsAdapter:1
//androidx.customview.widget.FocusStrategy.CollectionAdapter:2
//androidx.customview.widget.FocusStrategy.SequentialComparator:1
//androidx.fragment.app.FragmentHostCallback:1
//androidx.lifecycle.ComputableLiveData:1
//androidx.lifecycle.LiveData:1
//androidx.lifecycle.MediatorLiveData:1
//androidx.lifecycle.MediatorLiveData.Source:1
//androidx.lifecycle.MutableLiveData:1
//androidx.lifecycle.Observer:1
//androidx.loader.app.LoaderManager.LoaderCallbacks:1
//androidx.loader.app.LoaderManagerImpl.LoaderInfo:1
//androidx.loader.app.LoaderManagerImpl.LoaderObserver:1
//androidx.loader.content.AsyncTaskLoader:1
//androidx.loader.content.Loader:1
//androidx.loader.content.Loader.OnLoadCanceledListener:1
//androidx.loader.content.Loader.OnLoadCompleteListener:1
//androidx.loader.content.ModernAsyncTask:3
//androidx.loader.content.ModernAsyncTask.AsyncTaskResult:1
//androidx.loader.content.ModernAsyncTask.WorkerRunnable:2
//com.google.gson.Gson.FutureTypeAdapter:1
//com.google.gson.InstanceCreator:1
//com.google.gson.JsonDeserializer:1
//com.google.gson.JsonSerializer:1
//com.google.gson.TypeAdapter:1
//com.google.gson.internal.LinkedHashTreeMap:2
//com.google.gson.internal.LinkedHashTreeMap.AvlBuilder:2
//com.google.gson.internal.LinkedHashTreeMap.AvlIterator:2
//com.google.gson.internal.LinkedHashTreeMap.LinkedTreeMapIterator:1
//com.google.gson.internal.LinkedHashTreeMap.Node:2
//com.google.gson.internal.LinkedTreeMap:2
//com.google.gson.internal.LinkedTreeMap.LinkedTreeMapIterator:1
//com.google.gson.internal.LinkedTreeMap.Node:2
//com.google.gson.internal.ObjectConstructor:1
//com.google.gson.internal.bind.ArrayTypeAdapter:1
//com.google.gson.internal.bind.CollectionTypeAdapterFactory.Adapter:1
//com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter:2
//com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter:1
//com.google.gson.internal.bind.TreeTypeAdapter:1
//com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:1
//com.google.gson.internal.bind.TypeAdapters.EnumTypeAdapter:1
//com.google.gson.reflect.TypeToken:1
//com.microsoft.identity.client.TokenParameters.Builder:1
//com.microsoft.identity.client.internal.AsyncResult:1
//com.microsoft.identity.client.internal.controllers.BrokerAccountManagerStrategy.OperationInfo:2
//com.microsoft.identity.client.internal.controllers.BrokerAuthServiceStrategy.AuthServiceOperation:1
//com.microsoft.identity.client.internal.controllers.BrokerContentProviderStrategy.ContentProviderOperation:2
//com.microsoft.identity.client.internal.controllers.BrokerMsalController.BrokerOperationInfo:2
//com.microsoft.identity.common.internal.cache.BrokerOAuth2TokenCache:5
//com.microsoft.identity.common.internal.cache.IAccountCredentialAdapter:5
//com.microsoft.identity.common.internal.cache.IShareSingleSignOnState:2
//com.microsoft.identity.common.internal.cache.ISimpleCache:1
//com.microsoft.identity.common.internal.cache.MicrosoftFamilyOAuth2TokenCache:5
//com.microsoft.identity.common.internal.cache.MsalCppOAuth2TokenCache:5
//com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache:5
//com.microsoft.identity.common.internal.cache.SharedPreferencesSimpleCacheImpl:1
//com.microsoft.identity.common.internal.commands.BaseCommand:1
//com.microsoft.identity.common.internal.commands.Command:1
//com.microsoft.identity.common.internal.commands.CommandCallback:2
//com.microsoft.identity.common.internal.commands.parameters.BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder:2
//com.microsoft.identity.common.internal.commands.parameters.BrokerSilentTokenCommandParameters.BrokerSilentTokenCommandParametersBuilder:2
//com.microsoft.identity.common.internal.commands.parameters.CommandParameters.CommandParametersBuilder:2
//com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters.InteractiveTokenCommandParametersBuilder:2
//com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters.RemoveAccountCommandParametersBuilder:2
//com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters.SilentTokenCommandParametersBuilder:2
//com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters.TokenCommandParametersBuilder:2
//com.microsoft.identity.common.internal.controllers.TaskCompletedCallback:1
//com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError:2
//com.microsoft.identity.common.internal.migration.IMigrationAdapter:2
//com.microsoft.identity.common.internal.migration.TokenMigrationUtility:2
//com.microsoft.identity.common.internal.net.RetryPolicy:1
//com.microsoft.identity.common.internal.net.UrlConnectionHttpClient.Supplier:1
//com.microsoft.identity.common.internal.providers.IdentityProvider:2
//com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest:1
//com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationRequest.Builder:1
//com.microsoft.identity.common.internal.providers.microsoft.MicrosoftAuthorizationResult:2
//com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest:1
//com.microsoft.identity.common.internal.providers.oauth2.AuthorizationRequest.Builder:1
//com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult:2
//com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResultFactory:2
//com.microsoft.identity.common.internal.providers.oauth2.AuthorizationStrategy:2
//com.microsoft.identity.common.internal.providers.oauth2.OAuth2Strategy:13
//com.microsoft.identity.common.internal.providers.oauth2.OAuth2TokenCache:3
//com.microsoft.identity.common.internal.result.ResultFuture:1
//com.microsoft.identity.common.internal.telemetry.adapter.ITelemetryAdapter:1
//com.microsoft.identity.common.internal.telemetry.observers.ITelemetryObserver:1
//com.microsoft.identity.common.internal.ui.AuthorizationStrategyFactory:1
//com.microsoft.identity.common.internal.ui.browser.BrowserAuthorizationStrategy:2
//com.microsoft.identity.common.internal.ui.webview.EmbeddedWebViewAuthorizationStrategy:2
//com.microsoft.identity.common.internal.ui.webview.challengehandlers.IChallengeHandler:2
//com.nimbusds.jose.AlgorithmFamily:1
//com.nimbusds.jose.PayloadTransformer:1
//com.nimbusds.jose.jca.JCAAware:1
//com.nimbusds.jose.jwk.gen.JWKGenerator:1
//com.nimbusds.jose.jwk.source.ImmutableJWKSet:1
//com.nimbusds.jose.jwk.source.ImmutableSecret:1
//com.nimbusds.jose.jwk.source.JWKSource:1
//com.nimbusds.jose.jwk.source.RemoteJWKSet:1
//com.nimbusds.jose.proc.AbstractJWKSelectorWithSource:1
//com.nimbusds.jose.proc.ConfigurableJOSEProcessor:1
//com.nimbusds.jose.proc.DefaultJOSEObjectTypeVerifier:1
//com.nimbusds.jose.proc.DefaultJOSEProcessor:1
//com.nimbusds.jose.proc.JOSEObjectTypeVerifier:1
//com.nimbusds.jose.proc.JOSEProcessor:1
//com.nimbusds.jose.proc.JOSEProcessorConfiguration:1
//com.nimbusds.jose.proc.JWEDecryptionKeySelector:1
//com.nimbusds.jose.proc.JWEKeySelector:1
//com.nimbusds.jose.proc.JWSAlgorithmFamilyJWSKeySelector:1
//com.nimbusds.jose.proc.JWSKeySelector:1
//com.nimbusds.jose.proc.JWSVerificationKeySelector:1
//com.nimbusds.jose.proc.SingleKeyJWSKeySelector:1
//com.nimbusds.jose.util.Container:1
//com.nimbusds.jwt.JWTClaimsSetTransformer:1
//com.nimbusds.jwt.proc.ConfigurableJWTProcessor:1
//com.nimbusds.jwt.proc.DefaultJWTClaimsVerifier:1
//com.nimbusds.jwt.proc.DefaultJWTProcessor:1
//com.nimbusds.jwt.proc.JWTClaimsSetAwareJWSKeySelector:1
//com.nimbusds.jwt.proc.JWTClaimsSetVerifier:1
//com.nimbusds.jwt.proc.JWTProcessor:1
//com.nimbusds.jwt.proc.JWTProcessorConfiguration:1
//net.minidev.asm.BeansAccess:1
//net.minidev.json.JSONNavi:1
//net.minidev.json.reader.JsonWriterI:1
//net.minidev.json.writer.ArraysMapper:1
//net.minidev.json.writer.ArraysMapper.GenericMapper:1
//net.minidev.json.writer.BeansMapper:1
//net.minidev.json.writer.BeansMapper.Bean:1
//net.minidev.json.writer.BeansMapper.BeanNoConv:1
//net.minidev.json.writer.CollectionMapper.ListClass:1
//net.minidev.json.writer.CollectionMapper.ListType:1
//net.minidev.json.writer.CollectionMapper.MapClass:1
//net.minidev.json.writer.CollectionMapper.MapType:1
//net.minidev.json.writer.DefaultMapper:1
//net.minidev.json.writer.DefaultMapperCollection:1
//net.minidev.json.writer.JsonReaderI:1
//net.minidev.json.writer.MapperRemapped:1
//net.minidev.json.writer.UpdaterMapper:1
